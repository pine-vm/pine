module CompilationInterface.ElmMake.Generated_ElmMake exposing (..)

elm_make_output_src_Frontend_Main_elm_javascript =
    { base64 = "(function(scope){
'use strict';

function F(arity, fun, wrapper) {
  wrapper.a = arity;
  wrapper.f = fun;
  return wrapper;
}

function F2(fun) {
  return F(2, fun, function(a) { return function(b) { return fun(a,b); }; })
}
function F3(fun) {
  return F(3, fun, function(a) {
    return function(b) { return function(c) { return fun(a, b, c); }; };
  });
}
function F4(fun) {
  return F(4, fun, function(a) { return function(b) { return function(c) {
    return function(d) { return fun(a, b, c, d); }; }; };
  });
}
function F5(fun) {
  return F(5, fun, function(a) { return function(b) { return function(c) {
    return function(d) { return function(e) { return fun(a, b, c, d, e); }; }; }; };
  });
}
function F6(fun) {
  return F(6, fun, function(a) { return function(b) { return function(c) {
    return function(d) { return function(e) { return function(f) {
    return fun(a, b, c, d, e, f); }; }; }; }; };
  });
}
function F7(fun) {
  return F(7, fun, function(a) { return function(b) { return function(c) {
    return function(d) { return function(e) { return function(f) {
    return function(g) { return fun(a, b, c, d, e, f, g); }; }; }; }; }; };
  });
}
function F8(fun) {
  return F(8, fun, function(a) { return function(b) { return function(c) {
    return function(d) { return function(e) { return function(f) {
    return function(g) { return function(h) {
    return fun(a, b, c, d, e, f, g, h); }; }; }; }; }; }; };
  });
}
function F9(fun) {
  return F(9, fun, function(a) { return function(b) { return function(c) {
    return function(d) { return function(e) { return function(f) {
    return function(g) { return function(h) { return function(i) {
    return fun(a, b, c, d, e, f, g, h, i); }; }; }; }; }; }; }; };
  });
}

function A2(fun, a, b) {
  return fun.a === 2 ? fun.f(a, b) : fun(a)(b);
}
function A3(fun, a, b, c) {
  return fun.a === 3 ? fun.f(a, b, c) : fun(a)(b)(c);
}
function A4(fun, a, b, c, d) {
  return fun.a === 4 ? fun.f(a, b, c, d) : fun(a)(b)(c)(d);
}
function A5(fun, a, b, c, d, e) {
  return fun.a === 5 ? fun.f(a, b, c, d, e) : fun(a)(b)(c)(d)(e);
}
function A6(fun, a, b, c, d, e, f) {
  return fun.a === 6 ? fun.f(a, b, c, d, e, f) : fun(a)(b)(c)(d)(e)(f);
}
function A7(fun, a, b, c, d, e, f, g) {
  return fun.a === 7 ? fun.f(a, b, c, d, e, f, g) : fun(a)(b)(c)(d)(e)(f)(g);
}
function A8(fun, a, b, c, d, e, f, g, h) {
  return fun.a === 8 ? fun.f(a, b, c, d, e, f, g, h) : fun(a)(b)(c)(d)(e)(f)(g)(h);
}
function A9(fun, a, b, c, d, e, f, g, h, i) {
  return fun.a === 9 ? fun.f(a, b, c, d, e, f, g, h, i) : fun(a)(b)(c)(d)(e)(f)(g)(h)(i);
}

console.warn('Compiled in DEV mode. Follow the advice at https://elm-lang.org/0.19.1/optimize for better performance and smaller assets.');


var _JsArray_empty = [];

function _JsArray_singleton(value)
{
    return [value];
}

function _JsArray_length(array)
{
    return array.length;
}

var _JsArray_initialize = F3(function(size, offset, func)
{
    var result = new Array(size);

    for (var i = 0; i < size; i++)
    {
        result[i] = func(offset + i);
    }

    return result;
});

var _JsArray_initializeFromList = F2(function (max, ls)
{
    var result = new Array(max);

    for (var i = 0; i < max && ls.b; i++)
    {
        result[i] = ls.a;
        ls = ls.b;
    }

    result.length = i;
    return _Utils_Tuple2(result, ls);
});

var _JsArray_unsafeGet = F2(function(index, array)
{
    return array[index];
});

var _JsArray_unsafeSet = F3(function(index, value, array)
{
    var length = array.length;
    var result = new Array(length);

    for (var i = 0; i < length; i++)
    {
        result[i] = array[i];
    }

    result[index] = value;
    return result;
});

var _JsArray_push = F2(function(value, array)
{
    var length = array.length;
    var result = new Array(length + 1);

    for (var i = 0; i < length; i++)
    {
        result[i] = array[i];
    }

    result[length] = value;
    return result;
});

var _JsArray_foldl = F3(function(func, acc, array)
{
    var length = array.length;

    for (var i = 0; i < length; i++)
    {
        acc = A2(func, array[i], acc);
    }

    return acc;
});

var _JsArray_foldr = F3(function(func, acc, array)
{
    for (var i = array.length - 1; i >= 0; i--)
    {
        acc = A2(func, array[i], acc);
    }

    return acc;
});

var _JsArray_map = F2(function(func, array)
{
    var length = array.length;
    var result = new Array(length);

    for (var i = 0; i < length; i++)
    {
        result[i] = func(array[i]);
    }

    return result;
});

var _JsArray_indexedMap = F3(function(func, offset, array)
{
    var length = array.length;
    var result = new Array(length);

    for (var i = 0; i < length; i++)
    {
        result[i] = A2(func, offset + i, array[i]);
    }

    return result;
});

var _JsArray_slice = F3(function(from, to, array)
{
    return array.slice(from, to);
});

var _JsArray_appendN = F3(function(n, dest, source)
{
    var destLen = dest.length;
    var itemsToCopy = n - destLen;

    if (itemsToCopy > source.length)
    {
        itemsToCopy = source.length;
    }

    var size = destLen + itemsToCopy;
    var result = new Array(size);

    for (var i = 0; i < destLen; i++)
    {
        result[i] = dest[i];
    }

    for (var i = 0; i < itemsToCopy; i++)
    {
        result[i + destLen] = source[i];
    }

    return result;
});



// LOG

var _Debug_log_UNUSED = F2(function(tag, value)
{
	return value;
});

var _Debug_log = F2(function(tag, value)
{
	console.log(tag + ': ' + _Debug_toString(value));
	return value;
});


// TODOS

function _Debug_todo(moduleName, region)
{
	return function(message) {
		_Debug_crash(8, moduleName, region, message);
	};
}

function _Debug_todoCase(moduleName, region, value)
{
	return function(message) {
		_Debug_crash(9, moduleName, region, value, message);
	};
}


// TO STRING

function _Debug_toString_UNUSED(value)
{
	return '<internals>';
}

function _Debug_toString(value)
{
	return _Debug_toAnsiString(false, value);
}

function _Debug_toAnsiString(ansi, value)
{
	if (typeof value === 'function')
	{
		return _Debug_internalColor(ansi, '<function>');
	}

	if (typeof value === 'boolean')
	{
		return _Debug_ctorColor(ansi, value ? 'True' : 'False');
	}

	if (typeof value === 'number')
	{
		return _Debug_numberColor(ansi, value + '');
	}

	if (value instanceof String)
	{
		return _Debug_charColor(ansi, "'" + _Debug_addSlashes(value, true) + "'");
	}

	if (typeof value === 'string')
	{
		return _Debug_stringColor(ansi, '"' + _Debug_addSlashes(value, false) + '"');
	}

	if (typeof value === 'object' && '$' in value)
	{
		var tag = value.$;

		if (typeof tag === 'number')
		{
			return _Debug_internalColor(ansi, '<internals>');
		}

		if (tag[0] === '#')
		{
			var output = [];
			for (var k in value)
			{
				if (k === '$') continue;
				output.push(_Debug_toAnsiString(ansi, value[k]));
			}
			return '(' + output.join(',') + ')';
		}

		if (tag === 'Set_elm_builtin')
		{
			return _Debug_ctorColor(ansi, 'Set')
				+ _Debug_fadeColor(ansi, '.fromList') + ' '
				+ _Debug_toAnsiString(ansi, $elm$core$Set$toList(value));
		}

		if (tag === 'RBNode_elm_builtin' || tag === 'RBEmpty_elm_builtin')
		{
			return _Debug_ctorColor(ansi, 'Dict')
				+ _Debug_fadeColor(ansi, '.fromList') + ' '
				+ _Debug_toAnsiString(ansi, $elm$core$Dict$toList(value));
		}

		if (tag === 'Array_elm_builtin')
		{
			return _Debug_ctorColor(ansi, 'Array')
				+ _Debug_fadeColor(ansi, '.fromList') + ' '
				+ _Debug_toAnsiString(ansi, $elm$core$Array$toList(value));
		}

		if (tag === '::' || tag === '[]')
		{
			var output = '[';

			value.b && (output += _Debug_toAnsiString(ansi, value.a), value = value.b)

			for (; value.b; value = value.b) // WHILE_CONS
			{
				output += ',' + _Debug_toAnsiString(ansi, value.a);
			}
			return output + ']';
		}

		var output = '';
		for (var i in value)
		{
			if (i === '$') continue;
			var str = _Debug_toAnsiString(ansi, value[i]);
			var c0 = str[0];
			var parenless = c0 === '{' || c0 === '(' || c0 === '[' || c0 === '<' || c0 === '"' || str.indexOf(' ') < 0;
			output += ' ' + (parenless ? str : '(' + str + ')');
		}
		return _Debug_ctorColor(ansi, tag) + output;
	}

	if (typeof DataView === 'function' && value instanceof DataView)
	{
		return _Debug_stringColor(ansi, '<' + value.byteLength + ' bytes>');
	}

	if (typeof File !== 'undefined' && value instanceof File)
	{
		return _Debug_internalColor(ansi, '<' + value.name + '>');
	}

	if (typeof value === 'object')
	{
		var output = [];
		for (var key in value)
		{
			var field = key[0] === '_' ? key.slice(1) : key;
			output.push(_Debug_fadeColor(ansi, field) + ' = ' + _Debug_toAnsiString(ansi, value[key]));
		}
		if (output.length === 0)
		{
			return '{}';
		}
		return '{ ' + output.join(', ') + ' }';
	}

	return _Debug_internalColor(ansi, '<internals>');
}

function _Debug_addSlashes(str, isChar)
{
	var s = str
		.replace(/\\/g, '\\\\')
		.replace(/\n/g, '\\n')
		.replace(/\t/g, '\\t')
		.replace(/\r/g, '\\r')
		.replace(/\v/g, '\\v')
		.replace(/\0/g, '\\0');

	if (isChar)
	{
		return s.replace(/\'/g, '\\\'');
	}
	else
	{
		return s.replace(/\"/g, '\\"');
	}
}

function _Debug_ctorColor(ansi, string)
{
	return ansi ? '\x1b[96m' + string + '\x1b[0m' : string;
}

function _Debug_numberColor(ansi, string)
{
	return ansi ? '\x1b[95m' + string + '\x1b[0m' : string;
}

function _Debug_stringColor(ansi, string)
{
	return ansi ? '\x1b[93m' + string + '\x1b[0m' : string;
}

function _Debug_charColor(ansi, string)
{
	return ansi ? '\x1b[92m' + string + '\x1b[0m' : string;
}

function _Debug_fadeColor(ansi, string)
{
	return ansi ? '\x1b[37m' + string + '\x1b[0m' : string;
}

function _Debug_internalColor(ansi, string)
{
	return ansi ? '\x1b[36m' + string + '\x1b[0m' : string;
}

function _Debug_toHexDigit(n)
{
	return String.fromCharCode(n < 10 ? 48 + n : 55 + n);
}


// CRASH


function _Debug_crash_UNUSED(identifier)
{
	throw new Error('https://github.com/elm/core/blob/1.0.0/hints/' + identifier + '.md');
}


function _Debug_crash(identifier, fact1, fact2, fact3, fact4)
{
	switch(identifier)
	{
		case 0:
			throw new Error('What node should I take over? In JavaScript I need something like:\n\n    Elm.Main.init({\n        node: document.getElementById("elm-node")\n    })\n\nYou need to do this with any Browser.sandbox or Browser.element program.');

		case 1:
			throw new Error('Browser.application programs cannot handle URLs like this:\n\n    ' + document.location.href + '\n\nWhat is the root? The root of your file system? Try looking at this program with `elm reactor` or some other server.');

		case 2:
			var jsonErrorString = fact1;
			throw new Error('Problem with the flags given to your Elm program on initialization.\n\n' + jsonErrorString);

		case 3:
			var portName = fact1;
			throw new Error('There can only be one port named `' + portName + '`, but your program has multiple.');

		case 4:
			var portName = fact1;
			var problem = fact2;
			throw new Error('Trying to send an unexpected type of value through port `' + portName + '`:\n' + problem);

		case 5:
			throw new Error('Trying to use `(==)` on functions.\nThere is no way to know if functions are "the same" in the Elm sense.\nRead more about this at https://package.elm-lang.org/packages/elm/core/latest/Basics#== which describes why it is this way and what the better version will look like.');

		case 6:
			var moduleName = fact1;
			throw new Error('Your page is loading multiple Elm scripts with a module named ' + moduleName + '. Maybe a duplicate script is getting loaded accidentally? If not, rename one of them so I know which is which!');

		case 8:
			var moduleName = fact1;
			var region = fact2;
			var message = fact3;
			throw new Error('TODO in module `' + moduleName + '` ' + _Debug_regionToString(region) + '\n\n' + message);

		case 9:
			var moduleName = fact1;
			var region = fact2;
			var value = fact3;
			var message = fact4;
			throw new Error(
				'TODO in module `' + moduleName + '` from the `case` expression '
				+ _Debug_regionToString(region) + '\n\nIt received the following value:\n\n    '
				+ _Debug_toString(value).replace('\n', '\n    ')
				+ '\n\nBut the branch that handles it says:\n\n    ' + message.replace('\n', '\n    ')
			);

		case 10:
			throw new Error('Bug in https://github.com/elm/virtual-dom/issues');

		case 11:
			throw new Error('Cannot perform mod 0. Division by zero error.');
	}
}

function _Debug_regionToString(region)
{
	if (region.start.line === region.end.line)
	{
		return 'on line ' + region.start.line;
	}
	return 'on lines ' + region.start.line + ' through ' + region.end.line;
}



// EQUALITY

function _Utils_eq(x, y)
{
	for (
		var pair, stack = [], isEqual = _Utils_eqHelp(x, y, 0, stack);
		isEqual && (pair = stack.pop());
		isEqual = _Utils_eqHelp(pair.a, pair.b, 0, stack)
		)
	{}

	return isEqual;
}

function _Utils_eqHelp(x, y, depth, stack)
{
	if (x === y)
	{
		return true;
	}

	if (typeof x !== 'object' || x === null || y === null)
	{
		typeof x === 'function' && _Debug_crash(5);
		return false;
	}

	if (depth > 100)
	{
		stack.push(_Utils_Tuple2(x,y));
		return true;
	}

	/**/
	if (x.$ === 'Set_elm_builtin')
	{
		x = $elm$core$Set$toList(x);
		y = $elm$core$Set$toList(y);
	}
	if (x.$ === 'RBNode_elm_builtin' || x.$ === 'RBEmpty_elm_builtin')
	{
		x = $elm$core$Dict$toList(x);
		y = $elm$core$Dict$toList(y);
	}
	//*/

	/**_UNUSED/
	if (x.$ < 0)
	{
		x = $elm$core$Dict$toList(x);
		y = $elm$core$Dict$toList(y);
	}
	//*/

	for (var key in x)
	{
		if (!_Utils_eqHelp(x[key], y[key], depth + 1, stack))
		{
			return false;
		}
	}
	return true;
}

var _Utils_equal = F2(_Utils_eq);
var _Utils_notEqual = F2(function(a, b) { return !_Utils_eq(a,b); });



// COMPARISONS

// Code in Generate/JavaScript.hs, Basics.js, and List.js depends on
// the particular integer values assigned to LT, EQ, and GT.

function _Utils_cmp(x, y, ord)
{
	if (typeof x !== 'object')
	{
		return x === y ? /*EQ*/ 0 : x < y ? /*LT*/ -1 : /*GT*/ 1;
	}

	/**/
	if (x instanceof String)
	{
		var a = x.valueOf();
		var b = y.valueOf();
		return a === b ? 0 : a < b ? -1 : 1;
	}
	//*/

	/**_UNUSED/
	if (typeof x.$ === 'undefined')
	//*/
	/**/
	if (x.$[0] === '#')
	//*/
	{
		return (ord = _Utils_cmp(x.a, y.a))
			? ord
			: (ord = _Utils_cmp(x.b, y.b))
				? ord
				: _Utils_cmp(x.c, y.c);
	}

	// traverse conses until end of a list or a mismatch
	for (; x.b && y.b && !(ord = _Utils_cmp(x.a, y.a)); x = x.b, y = y.b) {} // WHILE_CONSES
	return ord || (x.b ? /*GT*/ 1 : y.b ? /*LT*/ -1 : /*EQ*/ 0);
}

var _Utils_lt = F2(function(a, b) { return _Utils_cmp(a, b) < 0; });
var _Utils_le = F2(function(a, b) { return _Utils_cmp(a, b) < 1; });
var _Utils_gt = F2(function(a, b) { return _Utils_cmp(a, b) > 0; });
var _Utils_ge = F2(function(a, b) { return _Utils_cmp(a, b) >= 0; });

var _Utils_compare = F2(function(x, y)
{
	var n = _Utils_cmp(x, y);
	return n < 0 ? $elm$core$Basics$LT : n ? $elm$core$Basics$GT : $elm$core$Basics$EQ;
});


// COMMON VALUES

var _Utils_Tuple0_UNUSED = 0;
var _Utils_Tuple0 = { $: '#0' };

function _Utils_Tuple2_UNUSED(a, b) { return { a: a, b: b }; }
function _Utils_Tuple2(a, b) { return { $: '#2', a: a, b: b }; }

function _Utils_Tuple3_UNUSED(a, b, c) { return { a: a, b: b, c: c }; }
function _Utils_Tuple3(a, b, c) { return { $: '#3', a: a, b: b, c: c }; }

function _Utils_chr_UNUSED(c) { return c; }
function _Utils_chr(c) { return new String(c); }


// RECORDS

function _Utils_update(oldRecord, updatedFields)
{
	var newRecord = {};

	for (var key in oldRecord)
	{
		newRecord[key] = oldRecord[key];
	}

	for (var key in updatedFields)
	{
		newRecord[key] = updatedFields[key];
	}

	return newRecord;
}


// APPEND

var _Utils_append = F2(_Utils_ap);

function _Utils_ap(xs, ys)
{
	// append Strings
	if (typeof xs === 'string')
	{
		return xs + ys;
	}

	// append Lists
	if (!xs.b)
	{
		return ys;
	}
	var root = _List_Cons(xs.a, ys);
	xs = xs.b
	for (var curr = root; xs.b; xs = xs.b) // WHILE_CONS
	{
		curr = curr.b = _List_Cons(xs.a, ys);
	}
	return root;
}



var _List_Nil_UNUSED = { $: 0 };
var _List_Nil = { $: '[]' };

function _List_Cons_UNUSED(hd, tl) { return { $: 1, a: hd, b: tl }; }
function _List_Cons(hd, tl) { return { $: '::', a: hd, b: tl }; }


var _List_cons = F2(_List_Cons);

function _List_fromArray(arr)
{
	var out = _List_Nil;
	for (var i = arr.length; i--; )
	{
		out = _List_Cons(arr[i], out);
	}
	return out;
}

function _List_toArray(xs)
{
	for (var out = []; xs.b; xs = xs.b) // WHILE_CONS
	{
		out.push(xs.a);
	}
	return out;
}

var _List_map2 = F3(function(f, xs, ys)
{
	for (var arr = []; xs.b && ys.b; xs = xs.b, ys = ys.b) // WHILE_CONSES
	{
		arr.push(A2(f, xs.a, ys.a));
	}
	return _List_fromArray(arr);
});

var _List_map3 = F4(function(f, xs, ys, zs)
{
	for (var arr = []; xs.b && ys.b && zs.b; xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES
	{
		arr.push(A3(f, xs.a, ys.a, zs.a));
	}
	return _List_fromArray(arr);
});

var _List_map4 = F5(function(f, ws, xs, ys, zs)
{
	for (var arr = []; ws.b && xs.b && ys.b && zs.b; ws = ws.b, xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES
	{
		arr.push(A4(f, ws.a, xs.a, ys.a, zs.a));
	}
	return _List_fromArray(arr);
});

var _List_map5 = F6(function(f, vs, ws, xs, ys, zs)
{
	for (var arr = []; vs.b && ws.b && xs.b && ys.b && zs.b; vs = vs.b, ws = ws.b, xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES
	{
		arr.push(A5(f, vs.a, ws.a, xs.a, ys.a, zs.a));
	}
	return _List_fromArray(arr);
});

var _List_sortBy = F2(function(f, xs)
{
	return _List_fromArray(_List_toArray(xs).sort(function(a, b) {
		return _Utils_cmp(f(a), f(b));
	}));
});

var _List_sortWith = F2(function(f, xs)
{
	return _List_fromArray(_List_toArray(xs).sort(function(a, b) {
		var ord = A2(f, a, b);
		return ord === $elm$core$Basics$EQ ? 0 : ord === $elm$core$Basics$LT ? -1 : 1;
	}));
});



// MATH

var _Basics_add = F2(function(a, b) { return a + b; });
var _Basics_sub = F2(function(a, b) { return a - b; });
var _Basics_mul = F2(function(a, b) { return a * b; });
var _Basics_fdiv = F2(function(a, b) { return a / b; });
var _Basics_idiv = F2(function(a, b) { return (a / b) | 0; });
var _Basics_pow = F2(Math.pow);

var _Basics_remainderBy = F2(function(b, a) { return a % b; });

// https://www.microsoft.com/en-us/research/wp-content/uploads/2016/02/divmodnote-letter.pdf
var _Basics_modBy = F2(function(modulus, x)
{
	var answer = x % modulus;
	return modulus === 0
		? _Debug_crash(11)
		:
	((answer > 0 && modulus < 0) || (answer < 0 && modulus > 0))
		? answer + modulus
		: answer;
});


// TRIGONOMETRY

var _Basics_pi = Math.PI;
var _Basics_e = Math.E;
var _Basics_cos = Math.cos;
var _Basics_sin = Math.sin;
var _Basics_tan = Math.tan;
var _Basics_acos = Math.acos;
var _Basics_asin = Math.asin;
var _Basics_atan = Math.atan;
var _Basics_atan2 = F2(Math.atan2);


// MORE MATH

function _Basics_toFloat(x) { return x; }
function _Basics_truncate(n) { return n | 0; }
function _Basics_isInfinite(n) { return n === Infinity || n === -Infinity; }

var _Basics_ceiling = Math.ceil;
var _Basics_floor = Math.floor;
var _Basics_round = Math.round;
var _Basics_sqrt = Math.sqrt;
var _Basics_log = Math.log;
var _Basics_isNaN = isNaN;


// BOOLEANS

function _Basics_not(bool) { return !bool; }
var _Basics_and = F2(function(a, b) { return a && b; });
var _Basics_or  = F2(function(a, b) { return a || b; });
var _Basics_xor = F2(function(a, b) { return a !== b; });



var _String_cons = F2(function(chr, str)
{
	return chr + str;
});

function _String_uncons(string)
{
	var word = string.charCodeAt(0);
	return !isNaN(word)
		? $elm$core$Maybe$Just(
			0xD800 <= word && word <= 0xDBFF
				? _Utils_Tuple2(_Utils_chr(string[0] + string[1]), string.slice(2))
				: _Utils_Tuple2(_Utils_chr(string[0]), string.slice(1))
		)
		: $elm$core$Maybe$Nothing;
}

var _String_append = F2(function(a, b)
{
	return a + b;
});

function _String_length(str)
{
	return str.length;
}

var _String_map = F2(function(func, string)
{
	var len = string.length;
	var array = new Array(len);
	var i = 0;
	while (i < len)
	{
		var word = string.charCodeAt(i);
		if (0xD800 <= word && word <= 0xDBFF)
		{
			array[i] = func(_Utils_chr(string[i] + string[i+1]));
			i += 2;
			continue;
		}
		array[i] = func(_Utils_chr(string[i]));
		i++;
	}
	return array.join('');
});

var _String_filter = F2(function(isGood, str)
{
	var arr = [];
	var len = str.length;
	var i = 0;
	while (i < len)
	{
		var char = str[i];
		var word = str.charCodeAt(i);
		i++;
		if (0xD800 <= word && word <= 0xDBFF)
		{
			char += str[i];
			i++;
		}

		if (isGood(_Utils_chr(char)))
		{
			arr.push(char);
		}
	}
	return arr.join('');
});

function _String_reverse(str)
{
	var len = str.length;
	var arr = new Array(len);
	var i = 0;
	while (i < len)
	{
		var word = str.charCodeAt(i);
		if (0xD800 <= word && word <= 0xDBFF)
		{
			arr[len - i] = str[i + 1];
			i++;
			arr[len - i] = str[i - 1];
			i++;
		}
		else
		{
			arr[len - i] = str[i];
			i++;
		}
	}
	return arr.join('');
}

var _String_foldl = F3(function(func, state, string)
{
	var len = string.length;
	var i = 0;
	while (i < len)
	{
		var char = string[i];
		var word = string.charCodeAt(i);
		i++;
		if (0xD800 <= word && word <= 0xDBFF)
		{
			char += string[i];
			i++;
		}
		state = A2(func, _Utils_chr(char), state);
	}
	return state;
});

var _String_foldr = F3(function(func, state, string)
{
	var i = string.length;
	while (i--)
	{
		var char = string[i];
		var word = string.charCodeAt(i);
		if (0xDC00 <= word && word <= 0xDFFF)
		{
			i--;
			char = string[i] + char;
		}
		state = A2(func, _Utils_chr(char), state);
	}
	return state;
});

var _String_split = F2(function(sep, str)
{
	return str.split(sep);
});

var _String_join = F2(function(sep, strs)
{
	return strs.join(sep);
});

var _String_slice = F3(function(start, end, str) {
	return str.slice(start, end);
});

function _String_trim(str)
{
	return str.trim();
}

function _String_trimLeft(str)
{
	return str.replace(/^\s+/, '');
}

function _String_trimRight(str)
{
	return str.replace(/\s+$/, '');
}

function _String_words(str)
{
	return _List_fromArray(str.trim().split(/\s+/g));
}

function _String_lines(str)
{
	return _List_fromArray(str.split(/\r\n|\r|\n/g));
}

function _String_toUpper(str)
{
	return str.toUpperCase();
}

function _String_toLower(str)
{
	return str.toLowerCase();
}

var _String_any = F2(function(isGood, string)
{
	var i = string.length;
	while (i--)
	{
		var char = string[i];
		var word = string.charCodeAt(i);
		if (0xDC00 <= word && word <= 0xDFFF)
		{
			i--;
			char = string[i] + char;
		}
		if (isGood(_Utils_chr(char)))
		{
			return true;
		}
	}
	return false;
});

var _String_all = F2(function(isGood, string)
{
	var i = string.length;
	while (i--)
	{
		var char = string[i];
		var word = string.charCodeAt(i);
		if (0xDC00 <= word && word <= 0xDFFF)
		{
			i--;
			char = string[i] + char;
		}
		if (!isGood(_Utils_chr(char)))
		{
			return false;
		}
	}
	return true;
});

var _String_contains = F2(function(sub, str)
{
	return str.indexOf(sub) > -1;
});

var _String_startsWith = F2(function(sub, str)
{
	return str.indexOf(sub) === 0;
});

var _String_endsWith = F2(function(sub, str)
{
	return str.length >= sub.length &&
		str.lastIndexOf(sub) === str.length - sub.length;
});

var _String_indexes = F2(function(sub, str)
{
	var subLen = sub.length;

	if (subLen < 1)
	{
		return _List_Nil;
	}

	var i = 0;
	var is = [];

	while ((i = str.indexOf(sub, i)) > -1)
	{
		is.push(i);
		i = i + subLen;
	}

	return _List_fromArray(is);
});


// TO STRING

function _String_fromNumber(number)
{
	return number + '';
}


// INT CONVERSIONS

function _String_toInt(str)
{
	var total = 0;
	var code0 = str.charCodeAt(0);
	var start = code0 == 0x2B /* + */ || code0 == 0x2D /* - */ ? 1 : 0;

	for (var i = start; i < str.length; ++i)
	{
		var code = str.charCodeAt(i);
		if (code < 0x30 || 0x39 < code)
		{
			return $elm$core$Maybe$Nothing;
		}
		total = 10 * total + code - 0x30;
	}

	return i == start
		? $elm$core$Maybe$Nothing
		: $elm$core$Maybe$Just(code0 == 0x2D ? -total : total);
}


// FLOAT CONVERSIONS

function _String_toFloat(s)
{
	// check if it is a hex, octal, or binary number
	if (s.length === 0 || /[\sxbo]/.test(s))
	{
		return $elm$core$Maybe$Nothing;
	}
	var n = +s;
	// faster isNaN check
	return n === n ? $elm$core$Maybe$Just(n) : $elm$core$Maybe$Nothing;
}

function _String_fromList(chars)
{
	return _List_toArray(chars).join('');
}




function _Char_toCode(char)
{
	var code = char.charCodeAt(0);
	if (0xD800 <= code && code <= 0xDBFF)
	{
		return (code - 0xD800) * 0x400 + char.charCodeAt(1) - 0xDC00 + 0x10000
	}
	return code;
}

function _Char_fromCode(code)
{
	return _Utils_chr(
		(code < 0 || 0x10FFFF < code)
			? '\uFFFD'
			:
		(code <= 0xFFFF)
			? String.fromCharCode(code)
			:
		(code -= 0x10000,
			String.fromCharCode(Math.floor(code / 0x400) + 0xD800, code % 0x400 + 0xDC00)
		)
	);
}

function _Char_toUpper(char)
{
	return _Utils_chr(char.toUpperCase());
}

function _Char_toLower(char)
{
	return _Utils_chr(char.toLowerCase());
}

function _Char_toLocaleUpper(char)
{
	return _Utils_chr(char.toLocaleUpperCase());
}

function _Char_toLocaleLower(char)
{
	return _Utils_chr(char.toLocaleLowerCase());
}



/**/
function _Json_errorToString(error)
{
	return $elm$json$Json$Decode$errorToString(error);
}
//*/


// CORE DECODERS

function _Json_succeed(msg)
{
	return {
		$: 0,
		a: msg
	};
}

function _Json_fail(msg)
{
	return {
		$: 1,
		a: msg
	};
}

function _Json_decodePrim(decoder)
{
	return { $: 2, b: decoder };
}

var _Json_decodeInt = _Json_decodePrim(function(value) {
	return (typeof value !== 'number')
		? _Json_expecting('an INT', value)
		:
	(-2147483647 < value && value < 2147483647 && (value | 0) === value)
		? $elm$core$Result$Ok(value)
		:
	(isFinite(value) && !(value % 1))
		? $elm$core$Result$Ok(value)
		: _Json_expecting('an INT', value);
});

var _Json_decodeBool = _Json_decodePrim(function(value) {
	return (typeof value === 'boolean')
		? $elm$core$Result$Ok(value)
		: _Json_expecting('a BOOL', value);
});

var _Json_decodeFloat = _Json_decodePrim(function(value) {
	return (typeof value === 'number')
		? $elm$core$Result$Ok(value)
		: _Json_expecting('a FLOAT', value);
});

var _Json_decodeValue = _Json_decodePrim(function(value) {
	return $elm$core$Result$Ok(_Json_wrap(value));
});

var _Json_decodeString = _Json_decodePrim(function(value) {
	return (typeof value === 'string')
		? $elm$core$Result$Ok(value)
		: (value instanceof String)
			? $elm$core$Result$Ok(value + '')
			: _Json_expecting('a STRING', value);
});

function _Json_decodeList(decoder) { return { $: 3, b: decoder }; }
function _Json_decodeArray(decoder) { return { $: 4, b: decoder }; }

function _Json_decodeNull(value) { return { $: 5, c: value }; }

var _Json_decodeField = F2(function(field, decoder)
{
	return {
		$: 6,
		d: field,
		b: decoder
	};
});

var _Json_decodeIndex = F2(function(index, decoder)
{
	return {
		$: 7,
		e: index,
		b: decoder
	};
});

function _Json_decodeKeyValuePairs(decoder)
{
	return {
		$: 8,
		b: decoder
	};
}

function _Json_mapMany(f, decoders)
{
	return {
		$: 9,
		f: f,
		g: decoders
	};
}

var _Json_andThen = F2(function(callback, decoder)
{
	return {
		$: 10,
		b: decoder,
		h: callback
	};
});

function _Json_oneOf(decoders)
{
	return {
		$: 11,
		g: decoders
	};
}


// DECODING OBJECTS

var _Json_map1 = F2(function(f, d1)
{
	return _Json_mapMany(f, [d1]);
});

var _Json_map2 = F3(function(f, d1, d2)
{
	return _Json_mapMany(f, [d1, d2]);
});

var _Json_map3 = F4(function(f, d1, d2, d3)
{
	return _Json_mapMany(f, [d1, d2, d3]);
});

var _Json_map4 = F5(function(f, d1, d2, d3, d4)
{
	return _Json_mapMany(f, [d1, d2, d3, d4]);
});

var _Json_map5 = F6(function(f, d1, d2, d3, d4, d5)
{
	return _Json_mapMany(f, [d1, d2, d3, d4, d5]);
});

var _Json_map6 = F7(function(f, d1, d2, d3, d4, d5, d6)
{
	return _Json_mapMany(f, [d1, d2, d3, d4, d5, d6]);
});

var _Json_map7 = F8(function(f, d1, d2, d3, d4, d5, d6, d7)
{
	return _Json_mapMany(f, [d1, d2, d3, d4, d5, d6, d7]);
});

var _Json_map8 = F9(function(f, d1, d2, d3, d4, d5, d6, d7, d8)
{
	return _Json_mapMany(f, [d1, d2, d3, d4, d5, d6, d7, d8]);
});


// DECODE

var _Json_runOnString = F2(function(decoder, string)
{
	try
	{
		var value = JSON.parse(string);
		return _Json_runHelp(decoder, value);
	}
	catch (e)
	{
		return $elm$core$Result$Err(A2($elm$json$Json$Decode$Failure, 'This is not valid JSON! ' + e.message, _Json_wrap(string)));
	}
});

var _Json_run = F2(function(decoder, value)
{
	return _Json_runHelp(decoder, _Json_unwrap(value));
});

function _Json_runHelp(decoder, value)
{
	switch (decoder.$)
	{
		case 2:
			return decoder.b(value);

		case 5:
			return (value === null)
				? $elm$core$Result$Ok(decoder.c)
				: _Json_expecting('null', value);

		case 3:
			if (!_Json_isArray(value))
			{
				return _Json_expecting('a LIST', value);
			}
			return _Json_runArrayDecoder(decoder.b, value, _List_fromArray);

		case 4:
			if (!_Json_isArray(value))
			{
				return _Json_expecting('an ARRAY', value);
			}
			return _Json_runArrayDecoder(decoder.b, value, _Json_toElmArray);

		case 6:
			var field = decoder.d;
			if (typeof value !== 'object' || value === null || !(field in value))
			{
				return _Json_expecting('an OBJECT with a field named `' + field + '`', value);
			}
			var result = _Json_runHelp(decoder.b, value[field]);
			return ($elm$core$Result$isOk(result)) ? result : $elm$core$Result$Err(A2($elm$json$Json$Decode$Field, field, result.a));

		case 7:
			var index = decoder.e;
			if (!_Json_isArray(value))
			{
				return _Json_expecting('an ARRAY', value);
			}
			if (index >= value.length)
			{
				return _Json_expecting('a LONGER array. Need index ' + index + ' but only see ' + value.length + ' entries', value);
			}
			var result = _Json_runHelp(decoder.b, value[index]);
			return ($elm$core$Result$isOk(result)) ? result : $elm$core$Result$Err(A2($elm$json$Json$Decode$Index, index, result.a));

		case 8:
			if (typeof value !== 'object' || value === null || _Json_isArray(value))
			{
				return _Json_expecting('an OBJECT', value);
			}

			var keyValuePairs = _List_Nil;
			// TODO test perf of Object.keys and switch when support is good enough
			for (var key in value)
			{
				if (value.hasOwnProperty(key))
				{
					var result = _Json_runHelp(decoder.b, value[key]);
					if (!$elm$core$Result$isOk(result))
					{
						return $elm$core$Result$Err(A2($elm$json$Json$Decode$Field, key, result.a));
					}
					keyValuePairs = _List_Cons(_Utils_Tuple2(key, result.a), keyValuePairs);
				}
			}
			return $elm$core$Result$Ok($elm$core$List$reverse(keyValuePairs));

		case 9:
			var answer = decoder.f;
			var decoders = decoder.g;
			for (var i = 0; i < decoders.length; i++)
			{
				var result = _Json_runHelp(decoders[i], value);
				if (!$elm$core$Result$isOk(result))
				{
					return result;
				}
				answer = answer(result.a);
			}
			return $elm$core$Result$Ok(answer);

		case 10:
			var result = _Json_runHelp(decoder.b, value);
			return (!$elm$core$Result$isOk(result))
				? result
				: _Json_runHelp(decoder.h(result.a), value);

		case 11:
			var errors = _List_Nil;
			for (var temp = decoder.g; temp.b; temp = temp.b) // WHILE_CONS
			{
				var result = _Json_runHelp(temp.a, value);
				if ($elm$core$Result$isOk(result))
				{
					return result;
				}
				errors = _List_Cons(result.a, errors);
			}
			return $elm$core$Result$Err($elm$json$Json$Decode$OneOf($elm$core$List$reverse(errors)));

		case 1:
			return $elm$core$Result$Err(A2($elm$json$Json$Decode$Failure, decoder.a, _Json_wrap(value)));

		case 0:
			return $elm$core$Result$Ok(decoder.a);
	}
}

function _Json_runArrayDecoder(decoder, value, toElmValue)
{
	var len = value.length;
	var array = new Array(len);
	for (var i = 0; i < len; i++)
	{
		var result = _Json_runHelp(decoder, value[i]);
		if (!$elm$core$Result$isOk(result))
		{
			return $elm$core$Result$Err(A2($elm$json$Json$Decode$Index, i, result.a));
		}
		array[i] = result.a;
	}
	return $elm$core$Result$Ok(toElmValue(array));
}

function _Json_isArray(value)
{
	return Array.isArray(value) || (typeof FileList !== 'undefined' && value instanceof FileList);
}

function _Json_toElmArray(array)
{
	return A2($elm$core$Array$initialize, array.length, function(i) { return array[i]; });
}

function _Json_expecting(type, value)
{
	return $elm$core$Result$Err(A2($elm$json$Json$Decode$Failure, 'Expecting ' + type, _Json_wrap(value)));
}


// EQUALITY

function _Json_equality(x, y)
{
	if (x === y)
	{
		return true;
	}

	if (x.$ !== y.$)
	{
		return false;
	}

	switch (x.$)
	{
		case 0:
		case 1:
			return x.a === y.a;

		case 2:
			return x.b === y.b;

		case 5:
			return x.c === y.c;

		case 3:
		case 4:
		case 8:
			return _Json_equality(x.b, y.b);

		case 6:
			return x.d === y.d && _Json_equality(x.b, y.b);

		case 7:
			return x.e === y.e && _Json_equality(x.b, y.b);

		case 9:
			return x.f === y.f && _Json_listEquality(x.g, y.g);

		case 10:
			return x.h === y.h && _Json_equality(x.b, y.b);

		case 11:
			return _Json_listEquality(x.g, y.g);
	}
}

function _Json_listEquality(aDecoders, bDecoders)
{
	var len = aDecoders.length;
	if (len !== bDecoders.length)
	{
		return false;
	}
	for (var i = 0; i < len; i++)
	{
		if (!_Json_equality(aDecoders[i], bDecoders[i]))
		{
			return false;
		}
	}
	return true;
}


// ENCODE

var _Json_encode = F2(function(indentLevel, value)
{
	return JSON.stringify(_Json_unwrap(value), null, indentLevel) + '';
});

function _Json_wrap(value) { return { $: 0, a: value }; }
function _Json_unwrap(value) { return value.a; }

function _Json_wrap_UNUSED(value) { return value; }
function _Json_unwrap_UNUSED(value) { return value; }

function _Json_emptyArray() { return []; }
function _Json_emptyObject() { return {}; }

var _Json_addField = F3(function(key, value, object)
{
	object[key] = _Json_unwrap(value);
	return object;
});

function _Json_addEntry(func)
{
	return F2(function(entry, array)
	{
		array.push(_Json_unwrap(func(entry)));
		return array;
	});
}

var _Json_encodeNull = _Json_wrap(null);



// TASKS

function _Scheduler_succeed(value)
{
	return {
		$: 0,
		a: value
	};
}

function _Scheduler_fail(error)
{
	return {
		$: 1,
		a: error
	};
}

function _Scheduler_binding(callback)
{
	return {
		$: 2,
		b: callback,
		c: null
	};
}

var _Scheduler_andThen = F2(function(callback, task)
{
	return {
		$: 3,
		b: callback,
		d: task
	};
});

var _Scheduler_onError = F2(function(callback, task)
{
	return {
		$: 4,
		b: callback,
		d: task
	};
});

function _Scheduler_receive(callback)
{
	return {
		$: 5,
		b: callback
	};
}


// PROCESSES

var _Scheduler_guid = 0;

function _Scheduler_rawSpawn(task)
{
	var proc = {
		$: 0,
		e: _Scheduler_guid++,
		f: task,
		g: null,
		h: []
	};

	_Scheduler_enqueue(proc);

	return proc;
}

function _Scheduler_spawn(task)
{
	return _Scheduler_binding(function(callback) {
		callback(_Scheduler_succeed(_Scheduler_rawSpawn(task)));
	});
}

function _Scheduler_rawSend(proc, msg)
{
	proc.h.push(msg);
	_Scheduler_enqueue(proc);
}

var _Scheduler_send = F2(function(proc, msg)
{
	return _Scheduler_binding(function(callback) {
		_Scheduler_rawSend(proc, msg);
		callback(_Scheduler_succeed(_Utils_Tuple0));
	});
});

function _Scheduler_kill(proc)
{
	return _Scheduler_binding(function(callback) {
		var task = proc.f;
		if (task.$ === 2 && task.c)
		{
			task.c();
		}

		proc.f = null;

		callback(_Scheduler_succeed(_Utils_Tuple0));
	});
}


/* STEP PROCESSES

type alias Process =
  { $ : tag
  , id : unique_id
  , root : Task
  , stack : null | { $: SUCCEED | FAIL, a: callback, b: stack }
  , mailbox : [msg]
  }

*/


var _Scheduler_working = false;
var _Scheduler_queue = [];


function _Scheduler_enqueue(proc)
{
	_Scheduler_queue.push(proc);
	if (_Scheduler_working)
	{
		return;
	}
	_Scheduler_working = true;
	while (proc = _Scheduler_queue.shift())
	{
		_Scheduler_step(proc);
	}
	_Scheduler_working = false;
}


function _Scheduler_step(proc)
{
	while (proc.f)
	{
		var rootTag = proc.f.$;
		if (rootTag === 0 || rootTag === 1)
		{
			while (proc.g && proc.g.$ !== rootTag)
			{
				proc.g = proc.g.i;
			}
			if (!proc.g)
			{
				return;
			}
			proc.f = proc.g.b(proc.f.a);
			proc.g = proc.g.i;
		}
		else if (rootTag === 2)
		{
			proc.f.c = proc.f.b(function(newRoot) {
				proc.f = newRoot;
				_Scheduler_enqueue(proc);
			});
			return;
		}
		else if (rootTag === 5)
		{
			if (proc.h.length === 0)
			{
				return;
			}
			proc.f = proc.f.b(proc.h.shift());
		}
		else // if (rootTag === 3 || rootTag === 4)
		{
			proc.g = {
				$: rootTag === 3 ? 0 : 1,
				b: proc.f.b,
				i: proc.g
			};
			proc.f = proc.f.d;
		}
	}
}



function _Process_sleep(time)
{
	return _Scheduler_binding(function(callback) {
		var id = setTimeout(function() {
			callback(_Scheduler_succeed(_Utils_Tuple0));
		}, time);

		return function() { clearTimeout(id); };
	});
}




// PROGRAMS


var _Platform_worker = F4(function(impl, flagDecoder, debugMetadata, args)
{
	return _Platform_initialize(
		flagDecoder,
		args,
		impl.init,
		impl.update,
		impl.subscriptions,
		function() { return function() {} }
	);
});



// INITIALIZE A PROGRAM


function _Platform_initialize(flagDecoder, args, init, update, subscriptions, stepperBuilder)
{
	var result = A2(_Json_run, flagDecoder, _Json_wrap(args ? args['flags'] : undefined));
	$elm$core$Result$isOk(result) || _Debug_crash(2 /**/, _Json_errorToString(result.a) /**/);
	var managers = {};
	var initPair = init(result.a);
	var model = initPair.a;
	var stepper = stepperBuilder(sendToApp, model);
	var ports = _Platform_setupEffects(managers, sendToApp);

	function sendToApp(msg, viewMetadata)
	{
		var pair = A2(update, msg, model);
		stepper(model = pair.a, viewMetadata);
		_Platform_enqueueEffects(managers, pair.b, subscriptions(model));
	}

	_Platform_enqueueEffects(managers, initPair.b, subscriptions(model));

	return ports ? { ports: ports } : {};
}



// TRACK PRELOADS
//
// This is used by code in elm/browser and elm/http
// to register any HTTP requests that are triggered by init.
//


var _Platform_preload;


function _Platform_registerPreload(url)
{
	_Platform_preload.add(url);
}



// EFFECT MANAGERS


var _Platform_effectManagers = {};


function _Platform_setupEffects(managers, sendToApp)
{
	var ports;

	// setup all necessary effect managers
	for (var key in _Platform_effectManagers)
	{
		var manager = _Platform_effectManagers[key];

		if (manager.a)
		{
			ports = ports || {};
			ports[key] = manager.a(key, sendToApp);
		}

		managers[key] = _Platform_instantiateManager(manager, sendToApp);
	}

	return ports;
}


function _Platform_createManager(init, onEffects, onSelfMsg, cmdMap, subMap)
{
	return {
		b: init,
		c: onEffects,
		d: onSelfMsg,
		e: cmdMap,
		f: subMap
	};
}


function _Platform_instantiateManager(info, sendToApp)
{
	var router = {
		g: sendToApp,
		h: undefined
	};

	var onEffects = info.c;
	var onSelfMsg = info.d;
	var cmdMap = info.e;
	var subMap = info.f;

	function loop(state)
	{
		return A2(_Scheduler_andThen, loop, _Scheduler_receive(function(msg)
		{
			var value = msg.a;

			if (msg.$ === 0)
			{
				return A3(onSelfMsg, router, value, state);
			}

			return cmdMap && subMap
				? A4(onEffects, router, value.i, value.j, state)
				: A3(onEffects, router, cmdMap ? value.i : value.j, state);
		}));
	}

	return router.h = _Scheduler_rawSpawn(A2(_Scheduler_andThen, loop, info.b));
}



// ROUTING


var _Platform_sendToApp = F2(function(router, msg)
{
	return _Scheduler_binding(function(callback)
	{
		router.g(msg);
		callback(_Scheduler_succeed(_Utils_Tuple0));
	});
});


var _Platform_sendToSelf = F2(function(router, msg)
{
	return A2(_Scheduler_send, router.h, {
		$: 0,
		a: msg
	});
});



// BAGS


function _Platform_leaf(home)
{
	return function(value)
	{
		return {
			$: 1,
			k: home,
			l: value
		};
	};
}


function _Platform_batch(list)
{
	return {
		$: 2,
		m: list
	};
}


var _Platform_map = F2(function(tagger, bag)
{
	return {
		$: 3,
		n: tagger,
		o: bag
	}
});



// PIPE BAGS INTO EFFECT MANAGERS
//
// Effects must be queued!
//
// Say your init contains a synchronous command, like Time.now or Time.here
//
//   - This will produce a batch of effects (FX_1)
//   - The synchronous task triggers the subsequent `update` call
//   - This will produce a batch of effects (FX_2)
//
// If we just start dispatching FX_2, subscriptions from FX_2 can be processed
// before subscriptions from FX_1. No good! Earlier versions of this code had
// this problem, leading to these reports:
//
//   https://github.com/elm/core/issues/980
//   https://github.com/elm/core/pull/981
//   https://github.com/elm/compiler/issues/1776
//
// The queue is necessary to avoid ordering issues for synchronous commands.


// Why use true/false here? Why not just check the length of the queue?
// The goal is to detect "are we currently dispatching effects?" If we
// are, we need to bail and let the ongoing while loop handle things.
//
// Now say the queue has 1 element. When we dequeue the final element,
// the queue will be empty, but we are still actively dispatching effects.
// So you could get queue jumping in a really tricky category of cases.
//
var _Platform_effectsQueue = [];
var _Platform_effectsActive = false;


function _Platform_enqueueEffects(managers, cmdBag, subBag)
{
	_Platform_effectsQueue.push({ p: managers, q: cmdBag, r: subBag });

	if (_Platform_effectsActive) return;

	_Platform_effectsActive = true;
	for (var fx; fx = _Platform_effectsQueue.shift(); )
	{
		_Platform_dispatchEffects(fx.p, fx.q, fx.r);
	}
	_Platform_effectsActive = false;
}


function _Platform_dispatchEffects(managers, cmdBag, subBag)
{
	var effectsDict = {};
	_Platform_gatherEffects(true, cmdBag, effectsDict, null);
	_Platform_gatherEffects(false, subBag, effectsDict, null);

	for (var home in managers)
	{
		_Scheduler_rawSend(managers[home], {
			$: 'fx',
			a: effectsDict[home] || { i: _List_Nil, j: _List_Nil }
		});
	}
}


function _Platform_gatherEffects(isCmd, bag, effectsDict, taggers)
{
	switch (bag.$)
	{
		case 1:
			var home = bag.k;
			var effect = _Platform_toEffect(isCmd, home, taggers, bag.l);
			effectsDict[home] = _Platform_insert(isCmd, effect, effectsDict[home]);
			return;

		case 2:
			for (var list = bag.m; list.b; list = list.b) // WHILE_CONS
			{
				_Platform_gatherEffects(isCmd, list.a, effectsDict, taggers);
			}
			return;

		case 3:
			_Platform_gatherEffects(isCmd, bag.o, effectsDict, {
				s: bag.n,
				t: taggers
			});
			return;
	}
}


function _Platform_toEffect(isCmd, home, taggers, value)
{
	function applyTaggers(x)
	{
		for (var temp = taggers; temp; temp = temp.t)
		{
			x = temp.s(x);
		}
		return x;
	}

	var map = isCmd
		? _Platform_effectManagers[home].e
		: _Platform_effectManagers[home].f;

	return A2(map, applyTaggers, value)
}


function _Platform_insert(isCmd, newEffect, effects)
{
	effects = effects || { i: _List_Nil, j: _List_Nil };

	isCmd
		? (effects.i = _List_Cons(newEffect, effects.i))
		: (effects.j = _List_Cons(newEffect, effects.j));

	return effects;
}



// PORTS


function _Platform_checkPortName(name)
{
	if (_Platform_effectManagers[name])
	{
		_Debug_crash(3, name)
	}
}



// OUTGOING PORTS


function _Platform_outgoingPort(name, converter)
{
	_Platform_checkPortName(name);
	_Platform_effectManagers[name] = {
		e: _Platform_outgoingPortMap,
		u: converter,
		a: _Platform_setupOutgoingPort
	};
	return _Platform_leaf(name);
}


var _Platform_outgoingPortMap = F2(function(tagger, value) { return value; });


function _Platform_setupOutgoingPort(name)
{
	var subs = [];
	var converter = _Platform_effectManagers[name].u;

	// CREATE MANAGER

	var init = _Process_sleep(0);

	_Platform_effectManagers[name].b = init;
	_Platform_effectManagers[name].c = F3(function(router, cmdList, state)
	{
		for ( ; cmdList.b; cmdList = cmdList.b) // WHILE_CONS
		{
			// grab a separate reference to subs in case unsubscribe is called
			var currentSubs = subs;
			var value = _Json_unwrap(converter(cmdList.a));
			for (var i = 0; i < currentSubs.length; i++)
			{
				currentSubs[i](value);
			}
		}
		return init;
	});

	// PUBLIC API

	function subscribe(callback)
	{
		subs.push(callback);
	}

	function unsubscribe(callback)
	{
		// copy subs into a new array in case unsubscribe is called within a
		// subscribed callback
		subs = subs.slice();
		var index = subs.indexOf(callback);
		if (index >= 0)
		{
			subs.splice(index, 1);
		}
	}

	return {
		subscribe: subscribe,
		unsubscribe: unsubscribe
	};
}



// INCOMING PORTS


function _Platform_incomingPort(name, converter)
{
	_Platform_checkPortName(name);
	_Platform_effectManagers[name] = {
		f: _Platform_incomingPortMap,
		u: converter,
		a: _Platform_setupIncomingPort
	};
	return _Platform_leaf(name);
}


var _Platform_incomingPortMap = F2(function(tagger, finalTagger)
{
	return function(value)
	{
		return tagger(finalTagger(value));
	};
});


function _Platform_setupIncomingPort(name, sendToApp)
{
	var subs = _List_Nil;
	var converter = _Platform_effectManagers[name].u;

	// CREATE MANAGER

	var init = _Scheduler_succeed(null);

	_Platform_effectManagers[name].b = init;
	_Platform_effectManagers[name].c = F3(function(router, subList, state)
	{
		subs = subList;
		return init;
	});

	// PUBLIC API

	function send(incomingValue)
	{
		var result = A2(_Json_run, converter, _Json_wrap(incomingValue));

		$elm$core$Result$isOk(result) || _Debug_crash(4, name, result.a);

		var value = result.a;
		for (var temp = subs; temp.b; temp = temp.b) // WHILE_CONS
		{
			sendToApp(temp.a(value));
		}
	}

	return { send: send };
}



// EXPORT ELM MODULES
//
// Have DEBUG and PROD versions so that we can (1) give nicer errors in
// debug mode and (2) not pay for the bits needed for that in prod mode.
//


function _Platform_export_UNUSED(exports)
{
	scope['Elm']
		? _Platform_mergeExportsProd(scope['Elm'], exports)
		: scope['Elm'] = exports;
}


function _Platform_mergeExportsProd(obj, exports)
{
	for (var name in exports)
	{
		(name in obj)
			? (name == 'init')
				? _Debug_crash(6)
				: _Platform_mergeExportsProd(obj[name], exports[name])
			: (obj[name] = exports[name]);
	}
}


function _Platform_export(exports)
{
	scope['Elm']
		? _Platform_mergeExportsDebug('Elm', scope['Elm'], exports)
		: scope['Elm'] = exports;
}


function _Platform_mergeExportsDebug(moduleName, obj, exports)
{
	for (var name in exports)
	{
		(name in obj)
			? (name == 'init')
				? _Debug_crash(6, moduleName)
				: _Platform_mergeExportsDebug(moduleName + '.' + name, obj[name], exports[name])
			: (obj[name] = exports[name]);
	}
}




// HELPERS


var _VirtualDom_divertHrefToApp;

var _VirtualDom_doc = typeof document !== 'undefined' ? document : {};


function _VirtualDom_appendChild(parent, child)
{
	parent.appendChild(child);
}

var _VirtualDom_init = F4(function(virtualNode, flagDecoder, debugMetadata, args)
{
	// NOTE: this function needs _Platform_export available to work

	/**_UNUSED/
	var node = args['node'];
	//*/
	/**/
	var node = args && args['node'] ? args['node'] : _Debug_crash(0);
	//*/

	node.parentNode.replaceChild(
		_VirtualDom_render(virtualNode, function() {}),
		node
	);

	return {};
});



// TEXT


function _VirtualDom_text(string)
{
	return {
		$: 0,
		a: string
	};
}



// NODE


var _VirtualDom_nodeNS = F2(function(namespace, tag)
{
	return F2(function(factList, kidList)
	{
		for (var kids = [], descendantsCount = 0; kidList.b; kidList = kidList.b) // WHILE_CONS
		{
			var kid = kidList.a;
			descendantsCount += (kid.b || 0);
			kids.push(kid);
		}
		descendantsCount += kids.length;

		return {
			$: 1,
			c: tag,
			d: _VirtualDom_organizeFacts(factList),
			e: kids,
			f: namespace,
			b: descendantsCount
		};
	});
});


var _VirtualDom_node = _VirtualDom_nodeNS(undefined);



// KEYED NODE


var _VirtualDom_keyedNodeNS = F2(function(namespace, tag)
{
	return F2(function(factList, kidList)
	{
		for (var kids = [], descendantsCount = 0; kidList.b; kidList = kidList.b) // WHILE_CONS
		{
			var kid = kidList.a;
			descendantsCount += (kid.b.b || 0);
			kids.push(kid);
		}
		descendantsCount += kids.length;

		return {
			$: 2,
			c: tag,
			d: _VirtualDom_organizeFacts(factList),
			e: kids,
			f: namespace,
			b: descendantsCount
		};
	});
});


var _VirtualDom_keyedNode = _VirtualDom_keyedNodeNS(undefined);



// CUSTOM


function _VirtualDom_custom(factList, model, render, diff)
{
	return {
		$: 3,
		d: _VirtualDom_organizeFacts(factList),
		g: model,
		h: render,
		i: diff
	};
}



// MAP


var _VirtualDom_map = F2(function(tagger, node)
{
	return {
		$: 4,
		j: tagger,
		k: node,
		b: 1 + (node.b || 0)
	};
});



// LAZY


function _VirtualDom_thunk(refs, thunk)
{
	return {
		$: 5,
		l: refs,
		m: thunk,
		k: undefined
	};
}

var _VirtualDom_lazy = F2(function(func, a)
{
	return _VirtualDom_thunk([func, a], function() {
		return func(a);
	});
});

var _VirtualDom_lazy2 = F3(function(func, a, b)
{
	return _VirtualDom_thunk([func, a, b], function() {
		return A2(func, a, b);
	});
});

var _VirtualDom_lazy3 = F4(function(func, a, b, c)
{
	return _VirtualDom_thunk([func, a, b, c], function() {
		return A3(func, a, b, c);
	});
});

var _VirtualDom_lazy4 = F5(function(func, a, b, c, d)
{
	return _VirtualDom_thunk([func, a, b, c, d], function() {
		return A4(func, a, b, c, d);
	});
});

var _VirtualDom_lazy5 = F6(function(func, a, b, c, d, e)
{
	return _VirtualDom_thunk([func, a, b, c, d, e], function() {
		return A5(func, a, b, c, d, e);
	});
});

var _VirtualDom_lazy6 = F7(function(func, a, b, c, d, e, f)
{
	return _VirtualDom_thunk([func, a, b, c, d, e, f], function() {
		return A6(func, a, b, c, d, e, f);
	});
});

var _VirtualDom_lazy7 = F8(function(func, a, b, c, d, e, f, g)
{
	return _VirtualDom_thunk([func, a, b, c, d, e, f, g], function() {
		return A7(func, a, b, c, d, e, f, g);
	});
});

var _VirtualDom_lazy8 = F9(function(func, a, b, c, d, e, f, g, h)
{
	return _VirtualDom_thunk([func, a, b, c, d, e, f, g, h], function() {
		return A8(func, a, b, c, d, e, f, g, h);
	});
});



// FACTS


var _VirtualDom_on = F2(function(key, handler)
{
	return {
		$: 'a0',
		n: key,
		o: handler
	};
});
var _VirtualDom_style = F2(function(key, value)
{
	return {
		$: 'a1',
		n: key,
		o: value
	};
});
var _VirtualDom_property = F2(function(key, value)
{
	return {
		$: 'a2',
		n: key,
		o: value
	};
});
var _VirtualDom_attribute = F2(function(key, value)
{
	return {
		$: 'a3',
		n: key,
		o: value
	};
});
var _VirtualDom_attributeNS = F3(function(namespace, key, value)
{
	return {
		$: 'a4',
		n: key,
		o: { f: namespace, o: value }
	};
});



// XSS ATTACK VECTOR CHECKS
//
// For some reason, tabs can appear in href protocols and it still works.
// So '\tjava\tSCRIPT:alert("!!!")' and 'javascript:alert("!!!")' are the same
// in practice. That is why _VirtualDom_RE_js and _VirtualDom_RE_js_html look
// so freaky.
//
// Pulling the regular expressions out to the top level gives a slight speed
// boost in small benchmarks (4-10%) but hoisting values to reduce allocation
// can be unpredictable in large programs where JIT may have a harder time with
// functions are not fully self-contained. The benefit is more that the js and
// js_html ones are so weird that I prefer to see them near each other.


var _VirtualDom_RE_script = /^script$/i;
var _VirtualDom_RE_on_formAction = /^(on|formAction$)/i;
var _VirtualDom_RE_js = /^\s*j\s*a\s*v\s*a\s*s\s*c\s*r\s*i\s*p\s*t\s*:/i;
var _VirtualDom_RE_js_html = /^\s*(j\s*a\s*v\s*a\s*s\s*c\s*r\s*i\s*p\s*t\s*:|d\s*a\s*t\s*a\s*:\s*t\s*e\s*x\s*t\s*\/\s*h\s*t\s*m\s*l\s*(,|;))/i;


function _VirtualDom_noScript(tag)
{
	return _VirtualDom_RE_script.test(tag) ? 'p' : tag;
}

function _VirtualDom_noOnOrFormAction(key)
{
	return _VirtualDom_RE_on_formAction.test(key) ? 'data-' + key : key;
}

function _VirtualDom_noInnerHtmlOrFormAction(key)
{
	return key == 'innerHTML' || key == 'formAction' ? 'data-' + key : key;
}

function _VirtualDom_noJavaScriptUri(value)
{
	return _VirtualDom_RE_js.test(value)
		? /**_UNUSED/''//*//**/'javascript:alert("This is an XSS vector. Please use ports or web components instead.")'//*/
		: value;
}

function _VirtualDom_noJavaScriptOrHtmlUri(value)
{
	return _VirtualDom_RE_js_html.test(value)
		? /**_UNUSED/''//*//**/'javascript:alert("This is an XSS vector. Please use ports or web components instead.")'//*/
		: value;
}

function _VirtualDom_noJavaScriptOrHtmlJson(value)
{
	return (typeof _Json_unwrap(value) === 'string' && _VirtualDom_RE_js_html.test(_Json_unwrap(value)))
		? _Json_wrap(
			/**_UNUSED/''//*//**/'javascript:alert("This is an XSS vector. Please use ports or web components instead.")'//*/
		) : value;
}



// MAP FACTS


var _VirtualDom_mapAttribute = F2(function(func, attr)
{
	return (attr.$ === 'a0')
		? A2(_VirtualDom_on, attr.n, _VirtualDom_mapHandler(func, attr.o))
		: attr;
});

function _VirtualDom_mapHandler(func, handler)
{
	var tag = $elm$virtual_dom$VirtualDom$toHandlerInt(handler);

	// 0 = Normal
	// 1 = MayStopPropagation
	// 2 = MayPreventDefault
	// 3 = Custom

	return {
		$: handler.$,
		a:
			!tag
				? A2($elm$json$Json$Decode$map, func, handler.a)
				:
			A3($elm$json$Json$Decode$map2,
				tag < 3
					? _VirtualDom_mapEventTuple
					: _VirtualDom_mapEventRecord,
				$elm$json$Json$Decode$succeed(func),
				handler.a
			)
	};
}

var _VirtualDom_mapEventTuple = F2(function(func, tuple)
{
	return _Utils_Tuple2(func(tuple.a), tuple.b);
});

var _VirtualDom_mapEventRecord = F2(function(func, record)
{
	return {
		message: func(record.message),
		stopPropagation: record.stopPropagation,
		preventDefault: record.preventDefault
	}
});



// ORGANIZE FACTS


function _VirtualDom_organizeFacts(factList)
{
	for (var facts = {}; factList.b; factList = factList.b) // WHILE_CONS
	{
		var entry = factList.a;

		var tag = entry.$;
		var key = entry.n;
		var value = entry.o;

		if (tag === 'a2')
		{
			(key === 'className')
				? _VirtualDom_addClass(facts, key, _Json_unwrap(value))
				: facts[key] = _Json_unwrap(value);

			continue;
		}

		var subFacts = facts[tag] || (facts[tag] = {});
		(tag === 'a3' && key === 'class')
			? _VirtualDom_addClass(subFacts, key, value)
			: subFacts[key] = value;
	}

	return facts;
}

function _VirtualDom_addClass(object, key, newClass)
{
	var classes = object[key];
	object[key] = classes ? classes + ' ' + newClass : newClass;
}



// RENDER


function _VirtualDom_render(vNode, eventNode)
{
	var tag = vNode.$;

	if (tag === 5)
	{
		return _VirtualDom_render(vNode.k || (vNode.k = vNode.m()), eventNode);
	}

	if (tag === 0)
	{
		return _VirtualDom_doc.createTextNode(vNode.a);
	}

	if (tag === 4)
	{
		var subNode = vNode.k;
		var tagger = vNode.j;

		while (subNode.$ === 4)
		{
			typeof tagger !== 'object'
				? tagger = [tagger, subNode.j]
				: tagger.push(subNode.j);

			subNode = subNode.k;
		}

		var subEventRoot = { j: tagger, p: eventNode };
		var domNode = _VirtualDom_render(subNode, subEventRoot);
		domNode.elm_event_node_ref = subEventRoot;
		return domNode;
	}

	if (tag === 3)
	{
		var domNode = vNode.h(vNode.g);
		_VirtualDom_applyFacts(domNode, eventNode, vNode.d);
		return domNode;
	}

	// at this point `tag` must be 1 or 2

	var domNode = vNode.f
		? _VirtualDom_doc.createElementNS(vNode.f, vNode.c)
		: _VirtualDom_doc.createElement(vNode.c);

	if (_VirtualDom_divertHrefToApp && vNode.c == 'a')
	{
		domNode.addEventListener('click', _VirtualDom_divertHrefToApp(domNode));
	}

	_VirtualDom_applyFacts(domNode, eventNode, vNode.d);

	for (var kids = vNode.e, i = 0; i < kids.length; i++)
	{
		_VirtualDom_appendChild(domNode, _VirtualDom_render(tag === 1 ? kids[i] : kids[i].b, eventNode));
	}

	return domNode;
}



// APPLY FACTS


function _VirtualDom_applyFacts(domNode, eventNode, facts)
{
	for (var key in facts)
	{
		var value = facts[key];

		key === 'a1'
			? _VirtualDom_applyStyles(domNode, value)
			:
		key === 'a0'
			? _VirtualDom_applyEvents(domNode, eventNode, value)
			:
		key === 'a3'
			? _VirtualDom_applyAttrs(domNode, value)
			:
		key === 'a4'
			? _VirtualDom_applyAttrsNS(domNode, value)
			:
		((key !== 'value' && key !== 'checked') || domNode[key] !== value) && (domNode[key] = value);
	}
}



// APPLY STYLES


function _VirtualDom_applyStyles(domNode, styles)
{
	var domNodeStyle = domNode.style;

	for (var key in styles)
	{
		domNodeStyle[key] = styles[key];
	}
}



// APPLY ATTRS


function _VirtualDom_applyAttrs(domNode, attrs)
{
	for (var key in attrs)
	{
		var value = attrs[key];
		typeof value !== 'undefined'
			? domNode.setAttribute(key, value)
			: domNode.removeAttribute(key);
	}
}



// APPLY NAMESPACED ATTRS


function _VirtualDom_applyAttrsNS(domNode, nsAttrs)
{
	for (var key in nsAttrs)
	{
		var pair = nsAttrs[key];
		var namespace = pair.f;
		var value = pair.o;

		typeof value !== 'undefined'
			? domNode.setAttributeNS(namespace, key, value)
			: domNode.removeAttributeNS(namespace, key);
	}
}



// APPLY EVENTS


function _VirtualDom_applyEvents(domNode, eventNode, events)
{
	var allCallbacks = domNode.elmFs || (domNode.elmFs = {});

	for (var key in events)
	{
		var newHandler = events[key];
		var oldCallback = allCallbacks[key];

		if (!newHandler)
		{
			domNode.removeEventListener(key, oldCallback);
			allCallbacks[key] = undefined;
			continue;
		}

		if (oldCallback)
		{
			var oldHandler = oldCallback.q;
			if (oldHandler.$ === newHandler.$)
			{
				oldCallback.q = newHandler;
				continue;
			}
			domNode.removeEventListener(key, oldCallback);
		}

		oldCallback = _VirtualDom_makeCallback(eventNode, newHandler);
		domNode.addEventListener(key, oldCallback,
			_VirtualDom_passiveSupported
			&& { passive: $elm$virtual_dom$VirtualDom$toHandlerInt(newHandler) < 2 }
		);
		allCallbacks[key] = oldCallback;
	}
}



// PASSIVE EVENTS


var _VirtualDom_passiveSupported;

try
{
	window.addEventListener('t', null, Object.defineProperty({}, 'passive', {
		get: function() { _VirtualDom_passiveSupported = true; }
	}));
}
catch(e) {}



// EVENT HANDLERS


function _VirtualDom_makeCallback(eventNode, initialHandler)
{
	function callback(event)
	{
		var handler = callback.q;
		var result = _Json_runHelp(handler.a, event);

		if (!$elm$core$Result$isOk(result))
		{
			return;
		}

		var tag = $elm$virtual_dom$VirtualDom$toHandlerInt(handler);

		// 0 = Normal
		// 1 = MayStopPropagation
		// 2 = MayPreventDefault
		// 3 = Custom

		var value = result.a;
		var message = !tag ? value : tag < 3 ? value.a : value.message;
		var stopPropagation = tag == 1 ? value.b : tag == 3 && value.stopPropagation;
		var currentEventNode = (
			stopPropagation && event.stopPropagation(),
			(tag == 2 ? value.b : tag == 3 && value.preventDefault) && event.preventDefault(),
			eventNode
		);
		var tagger;
		var i;
		while (tagger = currentEventNode.j)
		{
			if (typeof tagger == 'function')
			{
				message = tagger(message);
			}
			else
			{
				for (var i = tagger.length; i--; )
				{
					message = tagger[i](message);
				}
			}
			currentEventNode = currentEventNode.p;
		}
		currentEventNode(message, stopPropagation); // stopPropagation implies isSync
	}

	callback.q = initialHandler;

	return callback;
}

function _VirtualDom_equalEvents(x, y)
{
	return x.$ == y.$ && _Json_equality(x.a, y.a);
}



// DIFF


// TODO: Should we do patches like in iOS?
//
// type Patch
//   = At Int Patch
//   | Batch (List Patch)
//   | Change ...
//
// How could it not be better?
//
function _VirtualDom_diff(x, y)
{
	var patches = [];
	_VirtualDom_diffHelp(x, y, patches, 0);
	return patches;
}


function _VirtualDom_pushPatch(patches, type, index, data)
{
	var patch = {
		$: type,
		r: index,
		s: data,
		t: undefined,
		u: undefined
	};
	patches.push(patch);
	return patch;
}


function _VirtualDom_diffHelp(x, y, patches, index)
{
	if (x === y)
	{
		return;
	}

	var xType = x.$;
	var yType = y.$;

	// Bail if you run into different types of nodes. Implies that the
	// structure has changed significantly and it's not worth a diff.
	if (xType !== yType)
	{
		if (xType === 1 && yType === 2)
		{
			y = _VirtualDom_dekey(y);
			yType = 1;
		}
		else
		{
			_VirtualDom_pushPatch(patches, 0, index, y);
			return;
		}
	}

	// Now we know that both nodes are the same $.
	switch (yType)
	{
		case 5:
			var xRefs = x.l;
			var yRefs = y.l;
			var i = xRefs.length;
			var same = i === yRefs.length;
			while (same && i--)
			{
				same = xRefs[i] === yRefs[i];
			}
			if (same)
			{
				y.k = x.k;
				return;
			}
			y.k = y.m();
			var subPatches = [];
			_VirtualDom_diffHelp(x.k, y.k, subPatches, 0);
			subPatches.length > 0 && _VirtualDom_pushPatch(patches, 1, index, subPatches);
			return;

		case 4:
			// gather nested taggers
			var xTaggers = x.j;
			var yTaggers = y.j;
			var nesting = false;

			var xSubNode = x.k;
			while (xSubNode.$ === 4)
			{
				nesting = true;

				typeof xTaggers !== 'object'
					? xTaggers = [xTaggers, xSubNode.j]
					: xTaggers.push(xSubNode.j);

				xSubNode = xSubNode.k;
			}

			var ySubNode = y.k;
			while (ySubNode.$ === 4)
			{
				nesting = true;

				typeof yTaggers !== 'object'
					? yTaggers = [yTaggers, ySubNode.j]
					: yTaggers.push(ySubNode.j);

				ySubNode = ySubNode.k;
			}

			// Just bail if different numbers of taggers. This implies the
			// structure of the virtual DOM has changed.
			if (nesting && xTaggers.length !== yTaggers.length)
			{
				_VirtualDom_pushPatch(patches, 0, index, y);
				return;
			}

			// check if taggers are "the same"
			if (nesting ? !_VirtualDom_pairwiseRefEqual(xTaggers, yTaggers) : xTaggers !== yTaggers)
			{
				_VirtualDom_pushPatch(patches, 2, index, yTaggers);
			}

			// diff everything below the taggers
			_VirtualDom_diffHelp(xSubNode, ySubNode, patches, index + 1);
			return;

		case 0:
			if (x.a !== y.a)
			{
				_VirtualDom_pushPatch(patches, 3, index, y.a);
			}
			return;

		case 1:
			_VirtualDom_diffNodes(x, y, patches, index, _VirtualDom_diffKids);
			return;

		case 2:
			_VirtualDom_diffNodes(x, y, patches, index, _VirtualDom_diffKeyedKids);
			return;

		case 3:
			if (x.h !== y.h)
			{
				_VirtualDom_pushPatch(patches, 0, index, y);
				return;
			}

			var factsDiff = _VirtualDom_diffFacts(x.d, y.d);
			factsDiff && _VirtualDom_pushPatch(patches, 4, index, factsDiff);

			var patch = y.i(x.g, y.g);
			patch && _VirtualDom_pushPatch(patches, 5, index, patch);

			return;
	}
}

// assumes the incoming arrays are the same length
function _VirtualDom_pairwiseRefEqual(as, bs)
{
	for (var i = 0; i < as.length; i++)
	{
		if (as[i] !== bs[i])
		{
			return false;
		}
	}

	return true;
}

function _VirtualDom_diffNodes(x, y, patches, index, diffKids)
{
	// Bail if obvious indicators have changed. Implies more serious
	// structural changes such that it's not worth it to diff.
	if (x.c !== y.c || x.f !== y.f)
	{
		_VirtualDom_pushPatch(patches, 0, index, y);
		return;
	}

	var factsDiff = _VirtualDom_diffFacts(x.d, y.d);
	factsDiff && _VirtualDom_pushPatch(patches, 4, index, factsDiff);

	diffKids(x, y, patches, index);
}



// DIFF FACTS


// TODO Instead of creating a new diff object, it's possible to just test if
// there *is* a diff. During the actual patch, do the diff again and make the
// modifications directly. This way, there's no new allocations. Worth it?
function _VirtualDom_diffFacts(x, y, category)
{
	var diff;

	// look for changes and removals
	for (var xKey in x)
	{
		if (xKey === 'a1' || xKey === 'a0' || xKey === 'a3' || xKey === 'a4')
		{
			var subDiff = _VirtualDom_diffFacts(x[xKey], y[xKey] || {}, xKey);
			if (subDiff)
			{
				diff = diff || {};
				diff[xKey] = subDiff;
			}
			continue;
		}

		// remove if not in the new facts
		if (!(xKey in y))
		{
			diff = diff || {};
			diff[xKey] =
				!category
					? (typeof x[xKey] === 'string' ? '' : null)
					:
				(category === 'a1')
					? ''
					:
				(category === 'a0' || category === 'a3')
					? undefined
					:
				{ f: x[xKey].f, o: undefined };

			continue;
		}

		var xValue = x[xKey];
		var yValue = y[xKey];

		// reference equal, so don't worry about it
		if (xValue === yValue && xKey !== 'value' && xKey !== 'checked'
			|| category === 'a0' && _VirtualDom_equalEvents(xValue, yValue))
		{
			continue;
		}

		diff = diff || {};
		diff[xKey] = yValue;
	}

	// add new stuff
	for (var yKey in y)
	{
		if (!(yKey in x))
		{
			diff = diff || {};
			diff[yKey] = y[yKey];
		}
	}

	return diff;
}



// DIFF KIDS


function _VirtualDom_diffKids(xParent, yParent, patches, index)
{
	var xKids = xParent.e;
	var yKids = yParent.e;

	var xLen = xKids.length;
	var yLen = yKids.length;

	// FIGURE OUT IF THERE ARE INSERTS OR REMOVALS

	if (xLen > yLen)
	{
		_VirtualDom_pushPatch(patches, 6, index, {
			v: yLen,
			i: xLen - yLen
		});
	}
	else if (xLen < yLen)
	{
		_VirtualDom_pushPatch(patches, 7, index, {
			v: xLen,
			e: yKids
		});
	}

	// PAIRWISE DIFF EVERYTHING ELSE

	for (var minLen = xLen < yLen ? xLen : yLen, i = 0; i < minLen; i++)
	{
		var xKid = xKids[i];
		_VirtualDom_diffHelp(xKid, yKids[i], patches, ++index);
		index += xKid.b || 0;
	}
}



// KEYED DIFF


function _VirtualDom_diffKeyedKids(xParent, yParent, patches, rootIndex)
{
	var localPatches = [];

	var changes = {}; // Dict String Entry
	var inserts = []; // Array { index : Int, entry : Entry }
	// type Entry = { tag : String, vnode : VNode, index : Int, data : _ }

	var xKids = xParent.e;
	var yKids = yParent.e;
	var xLen = xKids.length;
	var yLen = yKids.length;
	var xIndex = 0;
	var yIndex = 0;

	var index = rootIndex;

	while (xIndex < xLen && yIndex < yLen)
	{
		var x = xKids[xIndex];
		var y = yKids[yIndex];

		var xKey = x.a;
		var yKey = y.a;
		var xNode = x.b;
		var yNode = y.b;

		var newMatch = undefined;
		var oldMatch = undefined;

		// check if keys match

		if (xKey === yKey)
		{
			index++;
			_VirtualDom_diffHelp(xNode, yNode, localPatches, index);
			index += xNode.b || 0;

			xIndex++;
			yIndex++;
			continue;
		}

		// look ahead 1 to detect insertions and removals.

		var xNext = xKids[xIndex + 1];
		var yNext = yKids[yIndex + 1];

		if (xNext)
		{
			var xNextKey = xNext.a;
			var xNextNode = xNext.b;
			oldMatch = yKey === xNextKey;
		}

		if (yNext)
		{
			var yNextKey = yNext.a;
			var yNextNode = yNext.b;
			newMatch = xKey === yNextKey;
		}


		// swap x and y
		if (newMatch && oldMatch)
		{
			index++;
			_VirtualDom_diffHelp(xNode, yNextNode, localPatches, index);
			_VirtualDom_insertNode(changes, localPatches, xKey, yNode, yIndex, inserts);
			index += xNode.b || 0;

			index++;
			_VirtualDom_removeNode(changes, localPatches, xKey, xNextNode, index);
			index += xNextNode.b || 0;

			xIndex += 2;
			yIndex += 2;
			continue;
		}

		// insert y
		if (newMatch)
		{
			index++;
			_VirtualDom_insertNode(changes, localPatches, yKey, yNode, yIndex, inserts);
			_VirtualDom_diffHelp(xNode, yNextNode, localPatches, index);
			index += xNode.b || 0;

			xIndex += 1;
			yIndex += 2;
			continue;
		}

		// remove x
		if (oldMatch)
		{
			index++;
			_VirtualDom_removeNode(changes, localPatches, xKey, xNode, index);
			index += xNode.b || 0;

			index++;
			_VirtualDom_diffHelp(xNextNode, yNode, localPatches, index);
			index += xNextNode.b || 0;

			xIndex += 2;
			yIndex += 1;
			continue;
		}

		// remove x, insert y
		if (xNext && xNextKey === yNextKey)
		{
			index++;
			_VirtualDom_removeNode(changes, localPatches, xKey, xNode, index);
			_VirtualDom_insertNode(changes, localPatches, yKey, yNode, yIndex, inserts);
			index += xNode.b || 0;

			index++;
			_VirtualDom_diffHelp(xNextNode, yNextNode, localPatches, index);
			index += xNextNode.b || 0;

			xIndex += 2;
			yIndex += 2;
			continue;
		}

		break;
	}

	// eat up any remaining nodes with removeNode and insertNode

	while (xIndex < xLen)
	{
		index++;
		var x = xKids[xIndex];
		var xNode = x.b;
		_VirtualDom_removeNode(changes, localPatches, x.a, xNode, index);
		index += xNode.b || 0;
		xIndex++;
	}

	while (yIndex < yLen)
	{
		var endInserts = endInserts || [];
		var y = yKids[yIndex];
		_VirtualDom_insertNode(changes, localPatches, y.a, y.b, undefined, endInserts);
		yIndex++;
	}

	if (localPatches.length > 0 || inserts.length > 0 || endInserts)
	{
		_VirtualDom_pushPatch(patches, 8, rootIndex, {
			w: localPatches,
			x: inserts,
			y: endInserts
		});
	}
}



// CHANGES FROM KEYED DIFF


var _VirtualDom_POSTFIX = '_elmW6BL';


function _VirtualDom_insertNode(changes, localPatches, key, vnode, yIndex, inserts)
{
	var entry = changes[key];

	// never seen this key before
	if (!entry)
	{
		entry = {
			c: 0,
			z: vnode,
			r: yIndex,
			s: undefined
		};

		inserts.push({ r: yIndex, A: entry });
		changes[key] = entry;

		return;
	}

	// this key was removed earlier, a match!
	if (entry.c === 1)
	{
		inserts.push({ r: yIndex, A: entry });

		entry.c = 2;
		var subPatches = [];
		_VirtualDom_diffHelp(entry.z, vnode, subPatches, entry.r);
		entry.r = yIndex;
		entry.s.s = {
			w: subPatches,
			A: entry
		};

		return;
	}

	// this key has already been inserted or moved, a duplicate!
	_VirtualDom_insertNode(changes, localPatches, key + _VirtualDom_POSTFIX, vnode, yIndex, inserts);
}


function _VirtualDom_removeNode(changes, localPatches, key, vnode, index)
{
	var entry = changes[key];

	// never seen this key before
	if (!entry)
	{
		var patch = _VirtualDom_pushPatch(localPatches, 9, index, undefined);

		changes[key] = {
			c: 1,
			z: vnode,
			r: index,
			s: patch
		};

		return;
	}

	// this key was inserted earlier, a match!
	if (entry.c === 0)
	{
		entry.c = 2;
		var subPatches = [];
		_VirtualDom_diffHelp(vnode, entry.z, subPatches, index);

		_VirtualDom_pushPatch(localPatches, 9, index, {
			w: subPatches,
			A: entry
		});

		return;
	}

	// this key has already been removed or moved, a duplicate!
	_VirtualDom_removeNode(changes, localPatches, key + _VirtualDom_POSTFIX, vnode, index);
}



// ADD DOM NODES
//
// Each DOM node has an "index" assigned in order of traversal. It is important
// to minimize our crawl over the actual DOM, so these indexes (along with the
// descendantsCount of virtual nodes) let us skip touching entire subtrees of
// the DOM if we know there are no patches there.


function _VirtualDom_addDomNodes(domNode, vNode, patches, eventNode)
{
	_VirtualDom_addDomNodesHelp(domNode, vNode, patches, 0, 0, vNode.b, eventNode);
}


// assumes `patches` is non-empty and indexes increase monotonically.
function _VirtualDom_addDomNodesHelp(domNode, vNode, patches, i, low, high, eventNode)
{
	var patch = patches[i];
	var index = patch.r;

	while (index === low)
	{
		var patchType = patch.$;

		if (patchType === 1)
		{
			_VirtualDom_addDomNodes(domNode, vNode.k, patch.s, eventNode);
		}
		else if (patchType === 8)
		{
			patch.t = domNode;
			patch.u = eventNode;

			var subPatches = patch.s.w;
			if (subPatches.length > 0)
			{
				_VirtualDom_addDomNodesHelp(domNode, vNode, subPatches, 0, low, high, eventNode);
			}
		}
		else if (patchType === 9)
		{
			patch.t = domNode;
			patch.u = eventNode;

			var data = patch.s;
			if (data)
			{
				data.A.s = domNode;
				var subPatches = data.w;
				if (subPatches.length > 0)
				{
					_VirtualDom_addDomNodesHelp(domNode, vNode, subPatches, 0, low, high, eventNode);
				}
			}
		}
		else
		{
			patch.t = domNode;
			patch.u = eventNode;
		}

		i++;

		if (!(patch = patches[i]) || (index = patch.r) > high)
		{
			return i;
		}
	}

	var tag = vNode.$;

	if (tag === 4)
	{
		var subNode = vNode.k;

		while (subNode.$ === 4)
		{
			subNode = subNode.k;
		}

		return _VirtualDom_addDomNodesHelp(domNode, subNode, patches, i, low + 1, high, domNode.elm_event_node_ref);
	}

	// tag must be 1 or 2 at this point

	var vKids = vNode.e;
	var childNodes = domNode.childNodes;
	for (var j = 0; j < vKids.length; j++)
	{
		low++;
		var vKid = tag === 1 ? vKids[j] : vKids[j].b;
		var nextLow = low + (vKid.b || 0);
		if (low <= index && index <= nextLow)
		{
			i = _VirtualDom_addDomNodesHelp(childNodes[j], vKid, patches, i, low, nextLow, eventNode);
			if (!(patch = patches[i]) || (index = patch.r) > high)
			{
				return i;
			}
		}
		low = nextLow;
	}
	return i;
}



// APPLY PATCHES


function _VirtualDom_applyPatches(rootDomNode, oldVirtualNode, patches, eventNode)
{
	if (patches.length === 0)
	{
		return rootDomNode;
	}

	_VirtualDom_addDomNodes(rootDomNode, oldVirtualNode, patches, eventNode);
	return _VirtualDom_applyPatchesHelp(rootDomNode, patches);
}

function _VirtualDom_applyPatchesHelp(rootDomNode, patches)
{
	for (var i = 0; i < patches.length; i++)
	{
		var patch = patches[i];
		var localDomNode = patch.t
		var newNode = _VirtualDom_applyPatch(localDomNode, patch);
		if (localDomNode === rootDomNode)
		{
			rootDomNode = newNode;
		}
	}
	return rootDomNode;
}

function _VirtualDom_applyPatch(domNode, patch)
{
	switch (patch.$)
	{
		case 0:
			return _VirtualDom_applyPatchRedraw(domNode, patch.s, patch.u);

		case 4:
			_VirtualDom_applyFacts(domNode, patch.u, patch.s);
			return domNode;

		case 3:
			domNode.replaceData(0, domNode.length, patch.s);
			return domNode;

		case 1:
			return _VirtualDom_applyPatchesHelp(domNode, patch.s);

		case 2:
			if (domNode.elm_event_node_ref)
			{
				domNode.elm_event_node_ref.j = patch.s;
			}
			else
			{
				domNode.elm_event_node_ref = { j: patch.s, p: patch.u };
			}
			return domNode;

		case 6:
			var data = patch.s;
			for (var i = 0; i < data.i; i++)
			{
				domNode.removeChild(domNode.childNodes[data.v]);
			}
			return domNode;

		case 7:
			var data = patch.s;
			var kids = data.e;
			var i = data.v;
			var theEnd = domNode.childNodes[i];
			for (; i < kids.length; i++)
			{
				domNode.insertBefore(_VirtualDom_render(kids[i], patch.u), theEnd);
			}
			return domNode;

		case 9:
			var data = patch.s;
			if (!data)
			{
				domNode.parentNode.removeChild(domNode);
				return domNode;
			}
			var entry = data.A;
			if (typeof entry.r !== 'undefined')
			{
				domNode.parentNode.removeChild(domNode);
			}
			entry.s = _VirtualDom_applyPatchesHelp(domNode, data.w);
			return domNode;

		case 8:
			return _VirtualDom_applyPatchReorder(domNode, patch);

		case 5:
			return patch.s(domNode);

		default:
			_Debug_crash(10); // 'Ran into an unknown patch!'
	}
}


function _VirtualDom_applyPatchRedraw(domNode, vNode, eventNode)
{
	var parentNode = domNode.parentNode;
	var newNode = _VirtualDom_render(vNode, eventNode);

	if (!newNode.elm_event_node_ref)
	{
		newNode.elm_event_node_ref = domNode.elm_event_node_ref;
	}

	if (parentNode && newNode !== domNode)
	{
		parentNode.replaceChild(newNode, domNode);
	}
	return newNode;
}


function _VirtualDom_applyPatchReorder(domNode, patch)
{
	var data = patch.s;

	// remove end inserts
	var frag = _VirtualDom_applyPatchReorderEndInsertsHelp(data.y, patch);

	// removals
	domNode = _VirtualDom_applyPatchesHelp(domNode, data.w);

	// inserts
	var inserts = data.x;
	for (var i = 0; i < inserts.length; i++)
	{
		var insert = inserts[i];
		var entry = insert.A;
		var node = entry.c === 2
			? entry.s
			: _VirtualDom_render(entry.z, patch.u);
		domNode.insertBefore(node, domNode.childNodes[insert.r]);
	}

	// add end inserts
	if (frag)
	{
		_VirtualDom_appendChild(domNode, frag);
	}

	return domNode;
}


function _VirtualDom_applyPatchReorderEndInsertsHelp(endInserts, patch)
{
	if (!endInserts)
	{
		return;
	}

	var frag = _VirtualDom_doc.createDocumentFragment();
	for (var i = 0; i < endInserts.length; i++)
	{
		var insert = endInserts[i];
		var entry = insert.A;
		_VirtualDom_appendChild(frag, entry.c === 2
			? entry.s
			: _VirtualDom_render(entry.z, patch.u)
		);
	}
	return frag;
}


function _VirtualDom_virtualize(node)
{
	// TEXT NODES

	if (node.nodeType === 3)
	{
		return _VirtualDom_text(node.textContent);
	}


	// WEIRD NODES

	if (node.nodeType !== 1)
	{
		return _VirtualDom_text('');
	}


	// ELEMENT NODES

	var attrList = _List_Nil;
	var attrs = node.attributes;
	for (var i = attrs.length; i--; )
	{
		var attr = attrs[i];
		var name = attr.name;
		var value = attr.value;
		attrList = _List_Cons( A2(_VirtualDom_attribute, name, value), attrList );
	}

	var tag = node.tagName.toLowerCase();
	var kidList = _List_Nil;
	var kids = node.childNodes;

	for (var i = kids.length; i--; )
	{
		kidList = _List_Cons(_VirtualDom_virtualize(kids[i]), kidList);
	}
	return A3(_VirtualDom_node, tag, attrList, kidList);
}

function _VirtualDom_dekey(keyedNode)
{
	var keyedKids = keyedNode.e;
	var len = keyedKids.length;
	var kids = new Array(len);
	for (var i = 0; i < len; i++)
	{
		kids[i] = keyedKids[i].b;
	}

	return {
		$: 1,
		c: keyedNode.c,
		d: keyedNode.d,
		e: kids,
		f: keyedNode.f,
		b: keyedNode.b
	};
}




// ELEMENT


var _Debugger_element;

var _Browser_element = _Debugger_element || F4(function(impl, flagDecoder, debugMetadata, args)
{
	return _Platform_initialize(
		flagDecoder,
		args,
		impl.init,
		impl.update,
		impl.subscriptions,
		function(sendToApp, initialModel) {
			var view = impl.view;
			/**_UNUSED/
			var domNode = args['node'];
			//*/
			/**/
			var domNode = args && args['node'] ? args['node'] : _Debug_crash(0);
			//*/
			var currNode = _VirtualDom_virtualize(domNode);

			return _Browser_makeAnimator(initialModel, function(model)
			{
				var nextNode = view(model);
				var patches = _VirtualDom_diff(currNode, nextNode);
				domNode = _VirtualDom_applyPatches(domNode, currNode, patches, sendToApp);
				currNode = nextNode;
			});
		}
	);
});



// DOCUMENT


var _Debugger_document;

var _Browser_document = _Debugger_document || F4(function(impl, flagDecoder, debugMetadata, args)
{
	return _Platform_initialize(
		flagDecoder,
		args,
		impl.init,
		impl.update,
		impl.subscriptions,
		function(sendToApp, initialModel) {
			var divertHrefToApp = impl.setup && impl.setup(sendToApp)
			var view = impl.view;
			var title = _VirtualDom_doc.title;
			var bodyNode = _VirtualDom_doc.body;
			var currNode = _VirtualDom_virtualize(bodyNode);
			return _Browser_makeAnimator(initialModel, function(model)
			{
				_VirtualDom_divertHrefToApp = divertHrefToApp;
				var doc = view(model);
				var nextNode = _VirtualDom_node('body')(_List_Nil)(doc.body);
				var patches = _VirtualDom_diff(currNode, nextNode);
				bodyNode = _VirtualDom_applyPatches(bodyNode, currNode, patches, sendToApp);
				currNode = nextNode;
				_VirtualDom_divertHrefToApp = 0;
				(title !== doc.title) && (_VirtualDom_doc.title = title = doc.title);
			});
		}
	);
});



// ANIMATION


var _Browser_cancelAnimationFrame =
	typeof cancelAnimationFrame !== 'undefined'
		? cancelAnimationFrame
		: function(id) { clearTimeout(id); };

var _Browser_requestAnimationFrame =
	typeof requestAnimationFrame !== 'undefined'
		? requestAnimationFrame
		: function(callback) { return setTimeout(callback, 1000 / 60); };


function _Browser_makeAnimator(model, draw)
{
	draw(model);

	var state = 0;

	function updateIfNeeded()
	{
		state = state === 1
			? 0
			: ( _Browser_requestAnimationFrame(updateIfNeeded), draw(model), 1 );
	}

	return function(nextModel, isSync)
	{
		model = nextModel;

		isSync
			? ( draw(model),
				state === 2 && (state = 1)
				)
			: ( state === 0 && _Browser_requestAnimationFrame(updateIfNeeded),
				state = 2
				);
	};
}



// APPLICATION


function _Browser_application(impl)
{
	var onUrlChange = impl.onUrlChange;
	var onUrlRequest = impl.onUrlRequest;
	var key = function() { key.a(onUrlChange(_Browser_getUrl())); };

	return _Browser_document({
		setup: function(sendToApp)
		{
			key.a = sendToApp;
			_Browser_window.addEventListener('popstate', key);
			_Browser_window.navigator.userAgent.indexOf('Trident') < 0 || _Browser_window.addEventListener('hashchange', key);

			return F2(function(domNode, event)
			{
				if (!event.ctrlKey && !event.metaKey && !event.shiftKey && event.button < 1 && !domNode.target && !domNode.hasAttribute('download'))
				{
					event.preventDefault();
					var href = domNode.href;
					var curr = _Browser_getUrl();
					var next = $elm$url$Url$fromString(href).a;
					sendToApp(onUrlRequest(
						(next
							&& curr.protocol === next.protocol
							&& curr.host === next.host
							&& curr.port_.a === next.port_.a
						)
							? $elm$browser$Browser$Internal(next)
							: $elm$browser$Browser$External(href)
					));
				}
			});
		},
		init: function(flags)
		{
			return A3(impl.init, flags, _Browser_getUrl(), key);
		},
		view: impl.view,
		update: impl.update,
		subscriptions: impl.subscriptions
	});
}

function _Browser_getUrl()
{
	return $elm$url$Url$fromString(_VirtualDom_doc.location.href).a || _Debug_crash(1);
}

var _Browser_go = F2(function(key, n)
{
	return A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function() {
		n && history.go(n);
		key();
	}));
});

var _Browser_pushUrl = F2(function(key, url)
{
	return A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function() {
		history.pushState({}, '', url);
		key();
	}));
});

var _Browser_replaceUrl = F2(function(key, url)
{
	return A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function() {
		history.replaceState({}, '', url);
		key();
	}));
});



// GLOBAL EVENTS


var _Browser_fakeNode = { addEventListener: function() {}, removeEventListener: function() {} };
var _Browser_doc = typeof document !== 'undefined' ? document : _Browser_fakeNode;
var _Browser_window = typeof window !== 'undefined' ? window : _Browser_fakeNode;

var _Browser_on = F3(function(node, eventName, sendToSelf)
{
	return _Scheduler_spawn(_Scheduler_binding(function(callback)
	{
		function handler(event)	{ _Scheduler_rawSpawn(sendToSelf(event)); }
		node.addEventListener(eventName, handler, _VirtualDom_passiveSupported && { passive: true });
		return function() { node.removeEventListener(eventName, handler); };
	}));
});

var _Browser_decodeEvent = F2(function(decoder, event)
{
	var result = _Json_runHelp(decoder, event);
	return $elm$core$Result$isOk(result) ? $elm$core$Maybe$Just(result.a) : $elm$core$Maybe$Nothing;
});



// PAGE VISIBILITY


function _Browser_visibilityInfo()
{
	return (typeof _VirtualDom_doc.hidden !== 'undefined')
		? { hidden: 'hidden', change: 'visibilitychange' }
		:
	(typeof _VirtualDom_doc.mozHidden !== 'undefined')
		? { hidden: 'mozHidden', change: 'mozvisibilitychange' }
		:
	(typeof _VirtualDom_doc.msHidden !== 'undefined')
		? { hidden: 'msHidden', change: 'msvisibilitychange' }
		:
	(typeof _VirtualDom_doc.webkitHidden !== 'undefined')
		? { hidden: 'webkitHidden', change: 'webkitvisibilitychange' }
		: { hidden: 'hidden', change: 'visibilitychange' };
}



// ANIMATION FRAMES


function _Browser_rAF()
{
	return _Scheduler_binding(function(callback)
	{
		var id = _Browser_requestAnimationFrame(function() {
			callback(_Scheduler_succeed(Date.now()));
		});

		return function() {
			_Browser_cancelAnimationFrame(id);
		};
	});
}


function _Browser_now()
{
	return _Scheduler_binding(function(callback)
	{
		callback(_Scheduler_succeed(Date.now()));
	});
}



// DOM STUFF


function _Browser_withNode(id, doStuff)
{
	return _Scheduler_binding(function(callback)
	{
		_Browser_requestAnimationFrame(function() {
			var node = document.getElementById(id);
			callback(node
				? _Scheduler_succeed(doStuff(node))
				: _Scheduler_fail($elm$browser$Browser$Dom$NotFound(id))
			);
		});
	});
}


function _Browser_withWindow(doStuff)
{
	return _Scheduler_binding(function(callback)
	{
		_Browser_requestAnimationFrame(function() {
			callback(_Scheduler_succeed(doStuff()));
		});
	});
}


// FOCUS and BLUR


var _Browser_call = F2(function(functionName, id)
{
	return _Browser_withNode(id, function(node) {
		node[functionName]();
		return _Utils_Tuple0;
	});
});



// WINDOW VIEWPORT


function _Browser_getViewport()
{
	return {
		scene: _Browser_getScene(),
		viewport: {
			x: _Browser_window.pageXOffset,
			y: _Browser_window.pageYOffset,
			width: _Browser_doc.documentElement.clientWidth,
			height: _Browser_doc.documentElement.clientHeight
		}
	};
}

function _Browser_getScene()
{
	var body = _Browser_doc.body;
	var elem = _Browser_doc.documentElement;
	return {
		width: Math.max(body.scrollWidth, body.offsetWidth, elem.scrollWidth, elem.offsetWidth, elem.clientWidth),
		height: Math.max(body.scrollHeight, body.offsetHeight, elem.scrollHeight, elem.offsetHeight, elem.clientHeight)
	};
}

var _Browser_setViewport = F2(function(x, y)
{
	return _Browser_withWindow(function()
	{
		_Browser_window.scroll(x, y);
		return _Utils_Tuple0;
	});
});



// ELEMENT VIEWPORT


function _Browser_getViewportOf(id)
{
	return _Browser_withNode(id, function(node)
	{
		return {
			scene: {
				width: node.scrollWidth,
				height: node.scrollHeight
			},
			viewport: {
				x: node.scrollLeft,
				y: node.scrollTop,
				width: node.clientWidth,
				height: node.clientHeight
			}
		};
	});
}


var _Browser_setViewportOf = F3(function(id, x, y)
{
	return _Browser_withNode(id, function(node)
	{
		node.scrollLeft = x;
		node.scrollTop = y;
		return _Utils_Tuple0;
	});
});



// ELEMENT


function _Browser_getElement(id)
{
	return _Browser_withNode(id, function(node)
	{
		var rect = node.getBoundingClientRect();
		var x = _Browser_window.pageXOffset;
		var y = _Browser_window.pageYOffset;
		return {
			scene: _Browser_getScene(),
			viewport: {
				x: x,
				y: y,
				width: _Browser_doc.documentElement.clientWidth,
				height: _Browser_doc.documentElement.clientHeight
			},
			element: {
				x: x + rect.left,
				y: y + rect.top,
				width: rect.width,
				height: rect.height
			}
		};
	});
}



// LOAD and RELOAD


function _Browser_reload(skipCache)
{
	return A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function(callback)
	{
		_VirtualDom_doc.location.reload(skipCache);
	}));
}

function _Browser_load(url)
{
	return A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function(callback)
	{
		try
		{
			_Browser_window.location = url;
		}
		catch(err)
		{
			// Only Firefox can throw a NS_ERROR_MALFORMED_URI exception here.
			// Other browsers reload the page, so let's be consistent about that.
			_VirtualDom_doc.location.reload(false);
		}
	}));
}



function _Time_now(millisToPosix)
{
	return _Scheduler_binding(function(callback)
	{
		callback(_Scheduler_succeed(millisToPosix(Date.now())));
	});
}

var _Time_setInterval = F2(function(interval, task)
{
	return _Scheduler_binding(function(callback)
	{
		var id = setInterval(function() { _Scheduler_rawSpawn(task); }, interval);
		return function() { clearInterval(id); };
	});
});

function _Time_here()
{
	return _Scheduler_binding(function(callback)
	{
		callback(_Scheduler_succeed(
			A2($elm$time$Time$customZone, -(new Date().getTimezoneOffset()), _List_Nil)
		));
	});
}


function _Time_getZoneName()
{
	return _Scheduler_binding(function(callback)
	{
		try
		{
			var name = $elm$time$Time$Name(Intl.DateTimeFormat().resolvedOptions().timeZone);
		}
		catch (e)
		{
			var name = $elm$time$Time$Offset(new Date().getTimezoneOffset());
		}
		callback(_Scheduler_succeed(name));
	});
}



var _Bitwise_and = F2(function(a, b)
{
	return a & b;
});

var _Bitwise_or = F2(function(a, b)
{
	return a | b;
});

var _Bitwise_xor = F2(function(a, b)
{
	return a ^ b;
});

function _Bitwise_complement(a)
{
	return ~a;
};

var _Bitwise_shiftLeftBy = F2(function(offset, a)
{
	return a << offset;
});

var _Bitwise_shiftRightBy = F2(function(offset, a)
{
	return a >> offset;
});

var _Bitwise_shiftRightZfBy = F2(function(offset, a)
{
	return a >>> offset;
});


// BYTES

function _Bytes_width(bytes)
{
	return bytes.byteLength;
}

var _Bytes_getHostEndianness = F2(function(le, be)
{
	return _Scheduler_binding(function(callback)
	{
		callback(_Scheduler_succeed(new Uint8Array(new Uint32Array([1]))[0] === 1 ? le : be));
	});
});


// ENCODERS

function _Bytes_encode(encoder)
{
	var mutableBytes = new DataView(new ArrayBuffer($elm$bytes$Bytes$Encode$getWidth(encoder)));
	$elm$bytes$Bytes$Encode$write(encoder)(mutableBytes)(0);
	return mutableBytes;
}


// SIGNED INTEGERS

var _Bytes_write_i8  = F3(function(mb, i, n) { mb.setInt8(i, n); return i + 1; });
var _Bytes_write_i16 = F4(function(mb, i, n, isLE) { mb.setInt16(i, n, isLE); return i + 2; });
var _Bytes_write_i32 = F4(function(mb, i, n, isLE) { mb.setInt32(i, n, isLE); return i + 4; });


// UNSIGNED INTEGERS

var _Bytes_write_u8  = F3(function(mb, i, n) { mb.setUint8(i, n); return i + 1 ;});
var _Bytes_write_u16 = F4(function(mb, i, n, isLE) { mb.setUint16(i, n, isLE); return i + 2; });
var _Bytes_write_u32 = F4(function(mb, i, n, isLE) { mb.setUint32(i, n, isLE); return i + 4; });


// FLOATS

var _Bytes_write_f32 = F4(function(mb, i, n, isLE) { mb.setFloat32(i, n, isLE); return i + 4; });
var _Bytes_write_f64 = F4(function(mb, i, n, isLE) { mb.setFloat64(i, n, isLE); return i + 8; });


// BYTES

var _Bytes_write_bytes = F3(function(mb, offset, bytes)
{
	for (var i = 0, len = bytes.byteLength, limit = len - 4; i <= limit; i += 4)
	{
		mb.setUint32(offset + i, bytes.getUint32(i));
	}
	for (; i < len; i++)
	{
		mb.setUint8(offset + i, bytes.getUint8(i));
	}
	return offset + len;
});


// STRINGS

function _Bytes_getStringWidth(string)
{
	for (var width = 0, i = 0; i < string.length; i++)
	{
		var code = string.charCodeAt(i);
		width +=
			(code < 0x80) ? 1 :
			(code < 0x800) ? 2 :
			(code < 0xD800 || 0xDBFF < code) ? 3 : (i++, 4);
	}
	return width;
}

var _Bytes_write_string = F3(function(mb, offset, string)
{
	for (var i = 0; i < string.length; i++)
	{
		var code = string.charCodeAt(i);
		offset +=
			(code < 0x80)
				? (mb.setUint8(offset, code)
				, 1
				)
				:
			(code < 0x800)
				? (mb.setUint16(offset, 0xC080 /* 0b1100000010000000 */
					| (code >>> 6 & 0x1F /* 0b00011111 */) << 8
					| code & 0x3F /* 0b00111111 */)
				, 2
				)
				:
			(code < 0xD800 || 0xDBFF < code)
				? (mb.setUint16(offset, 0xE080 /* 0b1110000010000000 */
					| (code >>> 12 & 0xF /* 0b00001111 */) << 8
					| code >>> 6 & 0x3F /* 0b00111111 */)
				, mb.setUint8(offset + 2, 0x80 /* 0b10000000 */
					| code & 0x3F /* 0b00111111 */)
				, 3
				)
				:
			(code = (code - 0xD800) * 0x400 + string.charCodeAt(++i) - 0xDC00 + 0x10000
			, mb.setUint32(offset, 0xF0808080 /* 0b11110000100000001000000010000000 */
				| (code >>> 18 & 0x7 /* 0b00000111 */) << 24
				| (code >>> 12 & 0x3F /* 0b00111111 */) << 16
				| (code >>> 6 & 0x3F /* 0b00111111 */) << 8
				| code & 0x3F /* 0b00111111 */)
			, 4
			);
	}
	return offset;
});


// DECODER

var _Bytes_decode = F2(function(decoder, bytes)
{
	try {
		return $elm$core$Maybe$Just(A2(decoder, bytes, 0).b);
	} catch(e) {
		return $elm$core$Maybe$Nothing;
	}
});

var _Bytes_read_i8  = F2(function(      bytes, offset) { return _Utils_Tuple2(offset + 1, bytes.getInt8(offset)); });
var _Bytes_read_i16 = F3(function(isLE, bytes, offset) { return _Utils_Tuple2(offset + 2, bytes.getInt16(offset, isLE)); });
var _Bytes_read_i32 = F3(function(isLE, bytes, offset) { return _Utils_Tuple2(offset + 4, bytes.getInt32(offset, isLE)); });
var _Bytes_read_u8  = F2(function(      bytes, offset) { return _Utils_Tuple2(offset + 1, bytes.getUint8(offset)); });
var _Bytes_read_u16 = F3(function(isLE, bytes, offset) { return _Utils_Tuple2(offset + 2, bytes.getUint16(offset, isLE)); });
var _Bytes_read_u32 = F3(function(isLE, bytes, offset) { return _Utils_Tuple2(offset + 4, bytes.getUint32(offset, isLE)); });
var _Bytes_read_f32 = F3(function(isLE, bytes, offset) { return _Utils_Tuple2(offset + 4, bytes.getFloat32(offset, isLE)); });
var _Bytes_read_f64 = F3(function(isLE, bytes, offset) { return _Utils_Tuple2(offset + 8, bytes.getFloat64(offset, isLE)); });

var _Bytes_read_bytes = F3(function(len, bytes, offset)
{
	return _Utils_Tuple2(offset + len, new DataView(bytes.buffer, bytes.byteOffset + offset, len));
});

var _Bytes_read_string = F3(function(len, bytes, offset)
{
	var string = '';
	var end = offset + len;
	for (; offset < end;)
	{
		var byte = bytes.getUint8(offset++);
		string +=
			(byte < 128)
				? String.fromCharCode(byte)
				:
			((byte & 0xE0 /* 0b11100000 */) === 0xC0 /* 0b11000000 */)
				? String.fromCharCode((byte & 0x1F /* 0b00011111 */) << 6 | bytes.getUint8(offset++) & 0x3F /* 0b00111111 */)
				:
			((byte & 0xF0 /* 0b11110000 */) === 0xE0 /* 0b11100000 */)
				? String.fromCharCode(
					(byte & 0xF /* 0b00001111 */) << 12
					| (bytes.getUint8(offset++) & 0x3F /* 0b00111111 */) << 6
					| bytes.getUint8(offset++) & 0x3F /* 0b00111111 */
				)
				:
				(byte =
					((byte & 0x7 /* 0b00000111 */) << 18
						| (bytes.getUint8(offset++) & 0x3F /* 0b00111111 */) << 12
						| (bytes.getUint8(offset++) & 0x3F /* 0b00111111 */) << 6
						| bytes.getUint8(offset++) & 0x3F /* 0b00111111 */
					) - 0x10000
				, String.fromCharCode(Math.floor(byte / 0x400) + 0xD800, byte % 0x400 + 0xDC00)
				);
	}
	return _Utils_Tuple2(offset, string);
});

var _Bytes_decodeFailure = F2(function() { throw 0; });



// DECODER

var _File_decoder = _Json_decodePrim(function(value) {
	// NOTE: checks if `File` exists in case this is run on node
	return (typeof File !== 'undefined' && value instanceof File)
		? $elm$core$Result$Ok(value)
		: _Json_expecting('a FILE', value);
});


// METADATA

function _File_name(file) { return file.name; }
function _File_mime(file) { return file.type; }
function _File_size(file) { return file.size; }

function _File_lastModified(file)
{
	return $elm$time$Time$millisToPosix(file.lastModified);
}


// DOWNLOAD

var _File_downloadNode;

function _File_getDownloadNode()
{
	return _File_downloadNode || (_File_downloadNode = document.createElement('a'));
}

var _File_download = F3(function(name, mime, content)
{
	return _Scheduler_binding(function(callback)
	{
		var blob = new Blob([content], {type: mime});

		// for IE10+
		if (navigator.msSaveOrOpenBlob)
		{
			navigator.msSaveOrOpenBlob(blob, name);
			return;
		}

		// for HTML5
		var node = _File_getDownloadNode();
		var objectUrl = URL.createObjectURL(blob);
		node.href = objectUrl;
		node.download = name;
		_File_click(node);
		URL.revokeObjectURL(objectUrl);
	});
});

function _File_downloadUrl(href)
{
	return _Scheduler_binding(function(callback)
	{
		var node = _File_getDownloadNode();
		node.href = href;
		node.download = '';
		node.origin === location.origin || (node.target = '_blank');
		_File_click(node);
	});
}


// IE COMPATIBILITY

function _File_makeBytesSafeForInternetExplorer(bytes)
{
	// only needed by IE10 and IE11 to fix https://github.com/elm/file/issues/10
	// all other browsers can just run `new Blob([bytes])` directly with no problem
	//
	return new Uint8Array(bytes.buffer, bytes.byteOffset, bytes.byteLength);
}

function _File_click(node)
{
	// only needed by IE10 and IE11 to fix https://github.com/elm/file/issues/11
	// all other browsers have MouseEvent and do not need this conditional stuff
	//
	if (typeof MouseEvent === 'function')
	{
		node.dispatchEvent(new MouseEvent('click'));
	}
	else
	{
		var event = document.createEvent('MouseEvents');
		event.initMouseEvent('click', true, true, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null);
		document.body.appendChild(node);
		node.dispatchEvent(event);
		document.body.removeChild(node);
	}
}


// UPLOAD

var _File_node;

function _File_uploadOne(mimes)
{
	return _Scheduler_binding(function(callback)
	{
		_File_node = document.createElement('input');
		_File_node.type = 'file';
		_File_node.accept = A2($elm$core$String$join, ',', mimes);
		_File_node.addEventListener('change', function(event)
		{
			callback(_Scheduler_succeed(event.target.files[0]));
		});
		_File_click(_File_node);
	});
}

function _File_uploadOneOrMore(mimes)
{
	return _Scheduler_binding(function(callback)
	{
		_File_node = document.createElement('input');
		_File_node.type = 'file';
		_File_node.multiple = true;
		_File_node.accept = A2($elm$core$String$join, ',', mimes);
		_File_node.addEventListener('change', function(event)
		{
			var elmFiles = _List_fromArray(event.target.files);
			callback(_Scheduler_succeed(_Utils_Tuple2(elmFiles.a, elmFiles.b)));
		});
		_File_click(_File_node);
	});
}


// CONTENT

function _File_toString(blob)
{
	return _Scheduler_binding(function(callback)
	{
		var reader = new FileReader();
		reader.addEventListener('loadend', function() {
			callback(_Scheduler_succeed(reader.result));
		});
		reader.readAsText(blob);
		return function() { reader.abort(); };
	});
}

function _File_toBytes(blob)
{
	return _Scheduler_binding(function(callback)
	{
		var reader = new FileReader();
		reader.addEventListener('loadend', function() {
			callback(_Scheduler_succeed(new DataView(reader.result)));
		});
		reader.readAsArrayBuffer(blob);
		return function() { reader.abort(); };
	});
}

function _File_toUrl(blob)
{
	return _Scheduler_binding(function(callback)
	{
		var reader = new FileReader();
		reader.addEventListener('loadend', function() {
			callback(_Scheduler_succeed(reader.result));
		});
		reader.readAsDataURL(blob);
		return function() { reader.abort(); };
	});
}



function _Url_percentEncode(string)
{
	return encodeURIComponent(string);
}

function _Url_percentDecode(string)
{
	try
	{
		return $elm$core$Maybe$Just(decodeURIComponent(string));
	}
	catch (e)
	{
		return $elm$core$Maybe$Nothing;
	}
}


// SEND REQUEST

var _Http_toTask = F3(function(router, toTask, request)
{
	return _Scheduler_binding(function(callback)
	{
		function done(response) {
			callback(toTask(request.expect.a(response)));
		}

		var xhr = new XMLHttpRequest();
		xhr.addEventListener('error', function() { done($elm$http$Http$NetworkError_); });
		xhr.addEventListener('timeout', function() { done($elm$http$Http$Timeout_); });
		xhr.addEventListener('load', function() { done(_Http_toResponse(request.expect.b, xhr)); });
		$elm$core$Maybe$isJust(request.tracker) && _Http_track(router, xhr, request.tracker.a);

		try {
			xhr.open(request.method, request.url, true);
		} catch (e) {
			return done($elm$http$Http$BadUrl_(request.url));
		}

		_Http_configureRequest(xhr, request);

		request.body.a && xhr.setRequestHeader('Content-Type', request.body.a);
		xhr.send(request.body.b);

		return function() { xhr.c = true; xhr.abort(); };
	});
});


// CONFIGURE

function _Http_configureRequest(xhr, request)
{
	for (var headers = request.headers; headers.b; headers = headers.b) // WHILE_CONS
	{
		xhr.setRequestHeader(headers.a.a, headers.a.b);
	}
	xhr.timeout = request.timeout.a || 0;
	xhr.responseType = request.expect.d;
	xhr.withCredentials = request.allowCookiesFromOtherDomains;
}


// RESPONSES

function _Http_toResponse(toBody, xhr)
{
	return A2(
		200 <= xhr.status && xhr.status < 300 ? $elm$http$Http$GoodStatus_ : $elm$http$Http$BadStatus_,
		_Http_toMetadata(xhr),
		toBody(xhr.response)
	);
}


// METADATA

function _Http_toMetadata(xhr)
{
	return {
		url: xhr.responseURL,
		statusCode: xhr.status,
		statusText: xhr.statusText,
		headers: _Http_parseHeaders(xhr.getAllResponseHeaders())
	};
}


// HEADERS

function _Http_parseHeaders(rawHeaders)
{
	if (!rawHeaders)
	{
		return $elm$core$Dict$empty;
	}

	var headers = $elm$core$Dict$empty;
	var headerPairs = rawHeaders.split('\r\n');
	for (var i = headerPairs.length; i--; )
	{
		var headerPair = headerPairs[i];
		var index = headerPair.indexOf(': ');
		if (index > 0)
		{
			var key = headerPair.substring(0, index);
			var value = headerPair.substring(index + 2);

			headers = A3($elm$core$Dict$update, key, function(oldValue) {
				return $elm$core$Maybe$Just($elm$core$Maybe$isJust(oldValue)
					? value + ', ' + oldValue.a
					: value
				);
			}, headers);
		}
	}
	return headers;
}


// EXPECT

var _Http_expect = F3(function(type, toBody, toValue)
{
	return {
		$: 0,
		d: type,
		b: toBody,
		a: toValue
	};
});

var _Http_mapExpect = F2(function(func, expect)
{
	return {
		$: 0,
		d: expect.d,
		b: expect.b,
		a: function(x) { return func(expect.a(x)); }
	};
});

function _Http_toDataView(arrayBuffer)
{
	return new DataView(arrayBuffer);
}


// BODY and PARTS

var _Http_emptyBody = { $: 0 };
var _Http_pair = F2(function(a, b) { return { $: 0, a: a, b: b }; });

function _Http_toFormData(parts)
{
	for (var formData = new FormData(); parts.b; parts = parts.b) // WHILE_CONS
	{
		var part = parts.a;
		formData.append(part.a, part.b);
	}
	return formData;
}

var _Http_bytesToBlob = F2(function(mime, bytes)
{
	return new Blob([bytes], { type: mime });
});


// PROGRESS

function _Http_track(router, xhr, tracker)
{
	// TODO check out lengthComputable on loadstart event

	xhr.upload.addEventListener('progress', function(event) {
		if (xhr.c) { return; }
		_Scheduler_rawSpawn(A2($elm$core$Platform$sendToSelf, router, _Utils_Tuple2(tracker, $elm$http$Http$Sending({
			sent: event.loaded,
			size: event.total
		}))));
	});
	xhr.addEventListener('progress', function(event) {
		if (xhr.c) { return; }
		_Scheduler_rawSpawn(A2($elm$core$Platform$sendToSelf, router, _Utils_Tuple2(tracker, $elm$http$Http$Receiving({
			received: event.loaded,
			size: event.lengthComputable ? $elm$core$Maybe$Just(event.total) : $elm$core$Maybe$Nothing
		}))));
	});
}

// CREATE

var _Regex_never = /.^/;

var _Regex_fromStringWith = F2(function(options, string)
{
	var flags = 'g';
	if (options.multiline) { flags += 'm'; }
	if (options.caseInsensitive) { flags += 'i'; }

	try
	{
		return $elm$core$Maybe$Just(new RegExp(string, flags));
	}
	catch(error)
	{
		return $elm$core$Maybe$Nothing;
	}
});


// USE

var _Regex_contains = F2(function(re, string)
{
	return string.match(re) !== null;
});


var _Regex_findAtMost = F3(function(n, re, str)
{
	var out = [];
	var number = 0;
	var string = str;
	var lastIndex = re.lastIndex;
	var prevLastIndex = -1;
	var result;
	while (number++ < n && (result = re.exec(string)))
	{
		if (prevLastIndex == re.lastIndex) break;
		var i = result.length - 1;
		var subs = new Array(i);
		while (i > 0)
		{
			var submatch = result[i];
			subs[--i] = submatch
				? $elm$core$Maybe$Just(submatch)
				: $elm$core$Maybe$Nothing;
		}
		out.push(A4($elm$regex$Regex$Match, result[0], result.index, number, _List_fromArray(subs)));
		prevLastIndex = re.lastIndex;
	}
	re.lastIndex = lastIndex;
	return _List_fromArray(out);
});


var _Regex_replaceAtMost = F4(function(n, re, replacer, string)
{
	var count = 0;
	function jsReplacer(match)
	{
		if (count++ >= n)
		{
			return match;
		}
		var i = arguments.length - 3;
		var submatches = new Array(i);
		while (i > 0)
		{
			var submatch = arguments[i];
			submatches[--i] = submatch
				? $elm$core$Maybe$Just(submatch)
				: $elm$core$Maybe$Nothing;
		}
		return replacer(A4($elm$regex$Regex$Match, match, arguments[arguments.length - 2], count, _List_fromArray(submatches)));
	}
	return string.replace(re, jsReplacer);
});

var _Regex_splitAtMost = F3(function(n, re, str)
{
	var string = str;
	var out = [];
	var start = re.lastIndex;
	var restoreLastIndex = re.lastIndex;
	while (n--)
	{
		var result = re.exec(string);
		if (!result) break;
		out.push(string.slice(start, result.index));
		start = re.lastIndex;
	}
	out.push(string.slice(start));
	re.lastIndex = restoreLastIndex;
	return _List_fromArray(out);
});

var _Regex_infinity = Infinity;
var $elm$core$List$cons = _List_cons;
var $elm$core$Elm$JsArray$foldr = _JsArray_foldr;
var $elm$core$Array$foldr = F3(
	function (func, baseCase, _v0) {
		var tree = _v0.c;
		var tail = _v0.d;
		var helper = F2(
			function (node, acc) {
				if (node.$ === 'SubTree') {
					var subTree = node.a;
					return A3($elm$core$Elm$JsArray$foldr, helper, acc, subTree);
				} else {
					var values = node.a;
					return A3($elm$core$Elm$JsArray$foldr, func, acc, values);
				}
			});
		return A3(
			$elm$core$Elm$JsArray$foldr,
			helper,
			A3($elm$core$Elm$JsArray$foldr, func, baseCase, tail),
			tree);
	});
var $elm$core$Array$toList = function (array) {
	return A3($elm$core$Array$foldr, $elm$core$List$cons, _List_Nil, array);
};
var $elm$core$Dict$foldr = F3(
	function (func, acc, t) {
		foldr:
		while (true) {
			if (t.$ === 'RBEmpty_elm_builtin') {
				return acc;
			} else {
				var key = t.b;
				var value = t.c;
				var left = t.d;
				var right = t.e;
				var $temp$func = func,
					$temp$acc = A3(
					func,
					key,
					value,
					A3($elm$core$Dict$foldr, func, acc, right)),
					$temp$t = left;
				func = $temp$func;
				acc = $temp$acc;
				t = $temp$t;
				continue foldr;
			}
		}
	});
var $elm$core$Dict$toList = function (dict) {
	return A3(
		$elm$core$Dict$foldr,
		F3(
			function (key, value, list) {
				return A2(
					$elm$core$List$cons,
					_Utils_Tuple2(key, value),
					list);
			}),
		_List_Nil,
		dict);
};
var $elm$core$Dict$keys = function (dict) {
	return A3(
		$elm$core$Dict$foldr,
		F3(
			function (key, value, keyList) {
				return A2($elm$core$List$cons, key, keyList);
			}),
		_List_Nil,
		dict);
};
var $elm$core$Set$toList = function (_v0) {
	var dict = _v0.a;
	return $elm$core$Dict$keys(dict);
};
var $elm$core$Basics$EQ = {$: 'EQ'};
var $elm$core$Basics$GT = {$: 'GT'};
var $elm$core$Basics$LT = {$: 'LT'};
var $author$project$Frontend$Main$UrlChange = function (a) {
	return {$: 'UrlChange', a: a};
};
var $author$project$Frontend$Main$UrlRequest = function (a) {
	return {$: 'UrlRequest', a: a};
};
var $author$project$Frontend$BrowserApplicationInitWithTime$InitializedEvent = function (a) {
	return {$: 'InitializedEvent', a: a};
};
var $elm$core$Result$Err = function (a) {
	return {$: 'Err', a: a};
};
var $elm$json$Json$Decode$Failure = F2(
	function (a, b) {
		return {$: 'Failure', a: a, b: b};
	});
var $elm$json$Json$Decode$Field = F2(
	function (a, b) {
		return {$: 'Field', a: a, b: b};
	});
var $elm$json$Json$Decode$Index = F2(
	function (a, b) {
		return {$: 'Index', a: a, b: b};
	});
var $elm$core$Result$Ok = function (a) {
	return {$: 'Ok', a: a};
};
var $elm$json$Json$Decode$OneOf = function (a) {
	return {$: 'OneOf', a: a};
};
var $elm$core$Basics$False = {$: 'False'};
var $elm$core$Basics$add = _Basics_add;
var $elm$core$Maybe$Just = function (a) {
	return {$: 'Just', a: a};
};
var $elm$core$Maybe$Nothing = {$: 'Nothing'};
var $elm$core$String$all = _String_all;
var $elm$core$Basics$and = _Basics_and;
var $elm$core$Basics$append = _Utils_append;
var $elm$json$Json$Encode$encode = _Json_encode;
var $elm$core$String$fromInt = _String_fromNumber;
var $elm$core$String$join = F2(
	function (sep, chunks) {
		return A2(
			_String_join,
			sep,
			_List_toArray(chunks));
	});
var $elm$core$String$split = F2(
	function (sep, string) {
		return _List_fromArray(
			A2(_String_split, sep, string));
	});
var $elm$json$Json$Decode$indent = function (str) {
	return A2(
		$elm$core$String$join,
		'\n    ',
		A2($elm$core$String$split, '\n', str));
};
var $elm$core$List$foldl = F3(
	function (func, acc, list) {
		foldl:
		while (true) {
			if (!list.b) {
				return acc;
			} else {
				var x = list.a;
				var xs = list.b;
				var $temp$func = func,
					$temp$acc = A2(func, x, acc),
					$temp$list = xs;
				func = $temp$func;
				acc = $temp$acc;
				list = $temp$list;
				continue foldl;
			}
		}
	});
var $elm$core$List$length = function (xs) {
	return A3(
		$elm$core$List$foldl,
		F2(
			function (_v0, i) {
				return i + 1;
			}),
		0,
		xs);
};
var $elm$core$List$map2 = _List_map2;
var $elm$core$Basics$le = _Utils_le;
var $elm$core$Basics$sub = _Basics_sub;
var $elm$core$List$rangeHelp = F3(
	function (lo, hi, list) {
		rangeHelp:
		while (true) {
			if (_Utils_cmp(lo, hi) < 1) {
				var $temp$lo = lo,
					$temp$hi = hi - 1,
					$temp$list = A2($elm$core$List$cons, hi, list);
				lo = $temp$lo;
				hi = $temp$hi;
				list = $temp$list;
				continue rangeHelp;
			} else {
				return list;
			}
		}
	});
var $elm$core$List$range = F2(
	function (lo, hi) {
		return A3($elm$core$List$rangeHelp, lo, hi, _List_Nil);
	});
var $elm$core$List$indexedMap = F2(
	function (f, xs) {
		return A3(
			$elm$core$List$map2,
			f,
			A2(
				$elm$core$List$range,
				0,
				$elm$core$List$length(xs) - 1),
			xs);
	});
var $elm$core$Char$toCode = _Char_toCode;
var $elm$core$Char$isLower = function (_char) {
	var code = $elm$core$Char$toCode(_char);
	return (97 <= code) && (code <= 122);
};
var $elm$core$Char$isUpper = function (_char) {
	var code = $elm$core$Char$toCode(_char);
	return (code <= 90) && (65 <= code);
};
var $elm$core$Basics$or = _Basics_or;
var $elm$core$Char$isAlpha = function (_char) {
	return $elm$core$Char$isLower(_char) || $elm$core$Char$isUpper(_char);
};
var $elm$core$Char$isDigit = function (_char) {
	var code = $elm$core$Char$toCode(_char);
	return (code <= 57) && (48 <= code);
};
var $elm$core$Char$isAlphaNum = function (_char) {
	return $elm$core$Char$isLower(_char) || ($elm$core$Char$isUpper(_char) || $elm$core$Char$isDigit(_char));
};
var $elm$core$List$reverse = function (list) {
	return A3($elm$core$List$foldl, $elm$core$List$cons, _List_Nil, list);
};
var $elm$core$String$uncons = _String_uncons;
var $elm$json$Json$Decode$errorOneOf = F2(
	function (i, error) {
		return '\n\n(' + ($elm$core$String$fromInt(i + 1) + (') ' + $elm$json$Json$Decode$indent(
			$elm$json$Json$Decode$errorToString(error))));
	});
var $elm$json$Json$Decode$errorToString = function (error) {
	return A2($elm$json$Json$Decode$errorToStringHelp, error, _List_Nil);
};
var $elm$json$Json$Decode$errorToStringHelp = F2(
	function (error, context) {
		errorToStringHelp:
		while (true) {
			switch (error.$) {
				case 'Field':
					var f = error.a;
					var err = error.b;
					var isSimple = function () {
						var _v1 = $elm$core$String$uncons(f);
						if (_v1.$ === 'Nothing') {
							return false;
						} else {
							var _v2 = _v1.a;
							var _char = _v2.a;
							var rest = _v2.b;
							return $elm$core$Char$isAlpha(_char) && A2($elm$core$String$all, $elm$core$Char$isAlphaNum, rest);
						}
					}();
					var fieldName = isSimple ? ('.' + f) : ('[\'' + (f + '\']'));
					var $temp$error = err,
						$temp$context = A2($elm$core$List$cons, fieldName, context);
					error = $temp$error;
					context = $temp$context;
					continue errorToStringHelp;
				case 'Index':
					var i = error.a;
					var err = error.b;
					var indexName = '[' + ($elm$core$String$fromInt(i) + ']');
					var $temp$error = err,
						$temp$context = A2($elm$core$List$cons, indexName, context);
					error = $temp$error;
					context = $temp$context;
					continue errorToStringHelp;
				case 'OneOf':
					var errors = error.a;
					if (!errors.b) {
						return 'Ran into a Json.Decode.oneOf with no possibilities' + function () {
							if (!context.b) {
								return '!';
							} else {
								return ' at json' + A2(
									$elm$core$String$join,
									'',
									$elm$core$List$reverse(context));
							}
						}();
					} else {
						if (!errors.b.b) {
							var err = errors.a;
							var $temp$error = err,
								$temp$context = context;
							error = $temp$error;
							context = $temp$context;
							continue errorToStringHelp;
						} else {
							var starter = function () {
								if (!context.b) {
									return 'Json.Decode.oneOf';
								} else {
									return 'The Json.Decode.oneOf at json' + A2(
										$elm$core$String$join,
										'',
										$elm$core$List$reverse(context));
								}
							}();
							var introduction = starter + (' failed in the following ' + ($elm$core$String$fromInt(
								$elm$core$List$length(errors)) + ' ways:'));
							return A2(
								$elm$core$String$join,
								'\n\n',
								A2(
									$elm$core$List$cons,
									introduction,
									A2($elm$core$List$indexedMap, $elm$json$Json$Decode$errorOneOf, errors)));
						}
					}
				default:
					var msg = error.a;
					var json = error.b;
					var introduction = function () {
						if (!context.b) {
							return 'Problem with the given value:\n\n';
						} else {
							return 'Problem with the value at json' + (A2(
								$elm$core$String$join,
								'',
								$elm$core$List$reverse(context)) + ':\n\n    ');
						}
					}();
					return introduction + ($elm$json$Json$Decode$indent(
						A2($elm$json$Json$Encode$encode, 4, json)) + ('\n\n' + msg));
			}
		}
	});
var $elm$core$Array$branchFactor = 32;
var $elm$core$Array$Array_elm_builtin = F4(
	function (a, b, c, d) {
		return {$: 'Array_elm_builtin', a: a, b: b, c: c, d: d};
	});
var $elm$core$Elm$JsArray$empty = _JsArray_empty;
var $elm$core$Basics$ceiling = _Basics_ceiling;
var $elm$core$Basics$fdiv = _Basics_fdiv;
var $elm$core$Basics$logBase = F2(
	function (base, number) {
		return _Basics_log(number) / _Basics_log(base);
	});
var $elm$core$Basics$toFloat = _Basics_toFloat;
var $elm$core$Array$shiftStep = $elm$core$Basics$ceiling(
	A2($elm$core$Basics$logBase, 2, $elm$core$Array$branchFactor));
var $elm$core$Array$empty = A4($elm$core$Array$Array_elm_builtin, 0, $elm$core$Array$shiftStep, $elm$core$Elm$JsArray$empty, $elm$core$Elm$JsArray$empty);
var $elm$core$Elm$JsArray$initialize = _JsArray_initialize;
var $elm$core$Array$Leaf = function (a) {
	return {$: 'Leaf', a: a};
};
var $elm$core$Basics$apL = F2(
	function (f, x) {
		return f(x);
	});
var $elm$core$Basics$apR = F2(
	function (x, f) {
		return f(x);
	});
var $elm$core$Basics$eq = _Utils_equal;
var $elm$core$Basics$floor = _Basics_floor;
var $elm$core$Elm$JsArray$length = _JsArray_length;
var $elm$core$Basics$gt = _Utils_gt;
var $elm$core$Basics$max = F2(
	function (x, y) {
		return (_Utils_cmp(x, y) > 0) ? x : y;
	});
var $elm$core$Basics$mul = _Basics_mul;
var $elm$core$Array$SubTree = function (a) {
	return {$: 'SubTree', a: a};
};
var $elm$core$Elm$JsArray$initializeFromList = _JsArray_initializeFromList;
var $elm$core$Array$compressNodes = F2(
	function (nodes, acc) {
		compressNodes:
		while (true) {
			var _v0 = A2($elm$core$Elm$JsArray$initializeFromList, $elm$core$Array$branchFactor, nodes);
			var node = _v0.a;
			var remainingNodes = _v0.b;
			var newAcc = A2(
				$elm$core$List$cons,
				$elm$core$Array$SubTree(node),
				acc);
			if (!remainingNodes.b) {
				return $elm$core$List$reverse(newAcc);
			} else {
				var $temp$nodes = remainingNodes,
					$temp$acc = newAcc;
				nodes = $temp$nodes;
				acc = $temp$acc;
				continue compressNodes;
			}
		}
	});
var $elm$core$Tuple$first = function (_v0) {
	var x = _v0.a;
	return x;
};
var $elm$core$Array$treeFromBuilder = F2(
	function (nodeList, nodeListSize) {
		treeFromBuilder:
		while (true) {
			var newNodeSize = $elm$core$Basics$ceiling(nodeListSize / $elm$core$Array$branchFactor);
			if (newNodeSize === 1) {
				return A2($elm$core$Elm$JsArray$initializeFromList, $elm$core$Array$branchFactor, nodeList).a;
			} else {
				var $temp$nodeList = A2($elm$core$Array$compressNodes, nodeList, _List_Nil),
					$temp$nodeListSize = newNodeSize;
				nodeList = $temp$nodeList;
				nodeListSize = $temp$nodeListSize;
				continue treeFromBuilder;
			}
		}
	});
var $elm$core$Array$builderToArray = F2(
	function (reverseNodeList, builder) {
		if (!builder.nodeListSize) {
			return A4(
				$elm$core$Array$Array_elm_builtin,
				$elm$core$Elm$JsArray$length(builder.tail),
				$elm$core$Array$shiftStep,
				$elm$core$Elm$JsArray$empty,
				builder.tail);
		} else {
			var treeLen = builder.nodeListSize * $elm$core$Array$branchFactor;
			var depth = $elm$core$Basics$floor(
				A2($elm$core$Basics$logBase, $elm$core$Array$branchFactor, treeLen - 1));
			var correctNodeList = reverseNodeList ? $elm$core$List$reverse(builder.nodeList) : builder.nodeList;
			var tree = A2($elm$core$Array$treeFromBuilder, correctNodeList, builder.nodeListSize);
			return A4(
				$elm$core$Array$Array_elm_builtin,
				$elm$core$Elm$JsArray$length(builder.tail) + treeLen,
				A2($elm$core$Basics$max, 5, depth * $elm$core$Array$shiftStep),
				tree,
				builder.tail);
		}
	});
var $elm$core$Basics$idiv = _Basics_idiv;
var $elm$core$Basics$lt = _Utils_lt;
var $elm$core$Array$initializeHelp = F5(
	function (fn, fromIndex, len, nodeList, tail) {
		initializeHelp:
		while (true) {
			if (fromIndex < 0) {
				return A2(
					$elm$core$Array$builderToArray,
					false,
					{nodeList: nodeList, nodeListSize: (len / $elm$core$Array$branchFactor) | 0, tail: tail});
			} else {
				var leaf = $elm$core$Array$Leaf(
					A3($elm$core$Elm$JsArray$initialize, $elm$core$Array$branchFactor, fromIndex, fn));
				var $temp$fn = fn,
					$temp$fromIndex = fromIndex - $elm$core$Array$branchFactor,
					$temp$len = len,
					$temp$nodeList = A2($elm$core$List$cons, leaf, nodeList),
					$temp$tail = tail;
				fn = $temp$fn;
				fromIndex = $temp$fromIndex;
				len = $temp$len;
				nodeList = $temp$nodeList;
				tail = $temp$tail;
				continue initializeHelp;
			}
		}
	});
var $elm$core$Basics$remainderBy = _Basics_remainderBy;
var $elm$core$Array$initialize = F2(
	function (len, fn) {
		if (len <= 0) {
			return $elm$core$Array$empty;
		} else {
			var tailLen = len % $elm$core$Array$branchFactor;
			var tail = A3($elm$core$Elm$JsArray$initialize, tailLen, len - tailLen, fn);
			var initialFromIndex = (len - tailLen) - $elm$core$Array$branchFactor;
			return A5($elm$core$Array$initializeHelp, fn, initialFromIndex, len, _List_Nil, tail);
		}
	});
var $elm$core$Basics$True = {$: 'True'};
var $elm$core$Result$isOk = function (result) {
	if (result.$ === 'Ok') {
		return true;
	} else {
		return false;
	}
};
var $elm$json$Json$Decode$map = _Json_map1;
var $elm$json$Json$Decode$map2 = _Json_map2;
var $elm$json$Json$Decode$succeed = _Json_succeed;
var $elm$virtual_dom$VirtualDom$toHandlerInt = function (handler) {
	switch (handler.$) {
		case 'Normal':
			return 0;
		case 'MayStopPropagation':
			return 1;
		case 'MayPreventDefault':
			return 2;
		default:
			return 3;
	}
};
var $elm$browser$Browser$External = function (a) {
	return {$: 'External', a: a};
};
var $elm$browser$Browser$Internal = function (a) {
	return {$: 'Internal', a: a};
};
var $elm$core$Basics$identity = function (x) {
	return x;
};
var $elm$browser$Browser$Dom$NotFound = function (a) {
	return {$: 'NotFound', a: a};
};
var $elm$url$Url$Http = {$: 'Http'};
var $elm$url$Url$Https = {$: 'Https'};
var $elm$url$Url$Url = F6(
	function (protocol, host, port_, path, query, fragment) {
		return {fragment: fragment, host: host, path: path, port_: port_, protocol: protocol, query: query};
	});
var $elm$core$String$contains = _String_contains;
var $elm$core$String$length = _String_length;
var $elm$core$String$slice = _String_slice;
var $elm$core$String$dropLeft = F2(
	function (n, string) {
		return (n < 1) ? string : A3(
			$elm$core$String$slice,
			n,
			$elm$core$String$length(string),
			string);
	});
var $elm$core$String$indexes = _String_indexes;
var $elm$core$String$isEmpty = function (string) {
	return string === '';
};
var $elm$core$String$left = F2(
	function (n, string) {
		return (n < 1) ? '' : A3($elm$core$String$slice, 0, n, string);
	});
var $elm$core$String$toInt = _String_toInt;
var $elm$url$Url$chompBeforePath = F5(
	function (protocol, path, params, frag, str) {
		if ($elm$core$String$isEmpty(str) || A2($elm$core$String$contains, '@', str)) {
			return $elm$core$Maybe$Nothing;
		} else {
			var _v0 = A2($elm$core$String$indexes, ':', str);
			if (!_v0.b) {
				return $elm$core$Maybe$Just(
					A6($elm$url$Url$Url, protocol, str, $elm$core$Maybe$Nothing, path, params, frag));
			} else {
				if (!_v0.b.b) {
					var i = _v0.a;
					var _v1 = $elm$core$String$toInt(
						A2($elm$core$String$dropLeft, i + 1, str));
					if (_v1.$ === 'Nothing') {
						return $elm$core$Maybe$Nothing;
					} else {
						var port_ = _v1;
						return $elm$core$Maybe$Just(
							A6(
								$elm$url$Url$Url,
								protocol,
								A2($elm$core$String$left, i, str),
								port_,
								path,
								params,
								frag));
					}
				} else {
					return $elm$core$Maybe$Nothing;
				}
			}
		}
	});
var $elm$url$Url$chompBeforeQuery = F4(
	function (protocol, params, frag, str) {
		if ($elm$core$String$isEmpty(str)) {
			return $elm$core$Maybe$Nothing;
		} else {
			var _v0 = A2($elm$core$String$indexes, '/', str);
			if (!_v0.b) {
				return A5($elm$url$Url$chompBeforePath, protocol, '/', params, frag, str);
			} else {
				var i = _v0.a;
				return A5(
					$elm$url$Url$chompBeforePath,
					protocol,
					A2($elm$core$String$dropLeft, i, str),
					params,
					frag,
					A2($elm$core$String$left, i, str));
			}
		}
	});
var $elm$url$Url$chompBeforeFragment = F3(
	function (protocol, frag, str) {
		if ($elm$core$String$isEmpty(str)) {
			return $elm$core$Maybe$Nothing;
		} else {
			var _v0 = A2($elm$core$String$indexes, '?', str);
			if (!_v0.b) {
				return A4($elm$url$Url$chompBeforeQuery, protocol, $elm$core$Maybe$Nothing, frag, str);
			} else {
				var i = _v0.a;
				return A4(
					$elm$url$Url$chompBeforeQuery,
					protocol,
					$elm$core$Maybe$Just(
						A2($elm$core$String$dropLeft, i + 1, str)),
					frag,
					A2($elm$core$String$left, i, str));
			}
		}
	});
var $elm$url$Url$chompAfterProtocol = F2(
	function (protocol, str) {
		if ($elm$core$String$isEmpty(str)) {
			return $elm$core$Maybe$Nothing;
		} else {
			var _v0 = A2($elm$core$String$indexes, '#', str);
			if (!_v0.b) {
				return A3($elm$url$Url$chompBeforeFragment, protocol, $elm$core$Maybe$Nothing, str);
			} else {
				var i = _v0.a;
				return A3(
					$elm$url$Url$chompBeforeFragment,
					protocol,
					$elm$core$Maybe$Just(
						A2($elm$core$String$dropLeft, i + 1, str)),
					A2($elm$core$String$left, i, str));
			}
		}
	});
var $elm$core$String$startsWith = _String_startsWith;
var $elm$url$Url$fromString = function (str) {
	return A2($elm$core$String$startsWith, 'http://', str) ? A2(
		$elm$url$Url$chompAfterProtocol,
		$elm$url$Url$Http,
		A2($elm$core$String$dropLeft, 7, str)) : (A2($elm$core$String$startsWith, 'https://', str) ? A2(
		$elm$url$Url$chompAfterProtocol,
		$elm$url$Url$Https,
		A2($elm$core$String$dropLeft, 8, str)) : $elm$core$Maybe$Nothing);
};
var $elm$core$Basics$never = function (_v0) {
	never:
	while (true) {
		var nvr = _v0.a;
		var $temp$_v0 = nvr;
		_v0 = $temp$_v0;
		continue never;
	}
};
var $elm$core$Task$Perform = function (a) {
	return {$: 'Perform', a: a};
};
var $elm$core$Task$succeed = _Scheduler_succeed;
var $elm$core$Task$init = $elm$core$Task$succeed(_Utils_Tuple0);
var $elm$core$List$foldrHelper = F4(
	function (fn, acc, ctr, ls) {
		if (!ls.b) {
			return acc;
		} else {
			var a = ls.a;
			var r1 = ls.b;
			if (!r1.b) {
				return A2(fn, a, acc);
			} else {
				var b = r1.a;
				var r2 = r1.b;
				if (!r2.b) {
					return A2(
						fn,
						a,
						A2(fn, b, acc));
				} else {
					var c = r2.a;
					var r3 = r2.b;
					if (!r3.b) {
						return A2(
							fn,
							a,
							A2(
								fn,
								b,
								A2(fn, c, acc)));
					} else {
						var d = r3.a;
						var r4 = r3.b;
						var res = (ctr > 500) ? A3(
							$elm$core$List$foldl,
							fn,
							acc,
							$elm$core$List$reverse(r4)) : A4($elm$core$List$foldrHelper, fn, acc, ctr + 1, r4);
						return A2(
							fn,
							a,
							A2(
								fn,
								b,
								A2(
									fn,
									c,
									A2(fn, d, res))));
					}
				}
			}
		}
	});
var $elm$core$List$foldr = F3(
	function (fn, acc, ls) {
		return A4($elm$core$List$foldrHelper, fn, acc, 0, ls);
	});
var $elm$core$List$map = F2(
	function (f, xs) {
		return A3(
			$elm$core$List$foldr,
			F2(
				function (x, acc) {
					return A2(
						$elm$core$List$cons,
						f(x),
						acc);
				}),
			_List_Nil,
			xs);
	});
var $elm$core$Task$andThen = _Scheduler_andThen;
var $elm$core$Task$map = F2(
	function (func, taskA) {
		return A2(
			$elm$core$Task$andThen,
			function (a) {
				return $elm$core$Task$succeed(
					func(a));
			},
			taskA);
	});
var $elm$core$Task$map2 = F3(
	function (func, taskA, taskB) {
		return A2(
			$elm$core$Task$andThen,
			function (a) {
				return A2(
					$elm$core$Task$andThen,
					function (b) {
						return $elm$core$Task$succeed(
							A2(func, a, b));
					},
					taskB);
			},
			taskA);
	});
var $elm$core$Task$sequence = function (tasks) {
	return A3(
		$elm$core$List$foldr,
		$elm$core$Task$map2($elm$core$List$cons),
		$elm$core$Task$succeed(_List_Nil),
		tasks);
};
var $elm$core$Platform$sendToApp = _Platform_sendToApp;
var $elm$core$Task$spawnCmd = F2(
	function (router, _v0) {
		var task = _v0.a;
		return _Scheduler_spawn(
			A2(
				$elm$core$Task$andThen,
				$elm$core$Platform$sendToApp(router),
				task));
	});
var $elm$core$Task$onEffects = F3(
	function (router, commands, state) {
		return A2(
			$elm$core$Task$map,
			function (_v0) {
				return _Utils_Tuple0;
			},
			$elm$core$Task$sequence(
				A2(
					$elm$core$List$map,
					$elm$core$Task$spawnCmd(router),
					commands)));
	});
var $elm$core$Task$onSelfMsg = F3(
	function (_v0, _v1, _v2) {
		return $elm$core$Task$succeed(_Utils_Tuple0);
	});
var $elm$core$Task$cmdMap = F2(
	function (tagger, _v0) {
		var task = _v0.a;
		return $elm$core$Task$Perform(
			A2($elm$core$Task$map, tagger, task));
	});
_Platform_effectManagers['Task'] = _Platform_createManager($elm$core$Task$init, $elm$core$Task$onEffects, $elm$core$Task$onSelfMsg, $elm$core$Task$cmdMap);
var $elm$core$Task$command = _Platform_leaf('Task');
var $elm$core$Task$perform = F2(
	function (toMessage, task) {
		return $elm$core$Task$command(
			$elm$core$Task$Perform(
				A2($elm$core$Task$map, toMessage, task)));
	});
var $elm$browser$Browser$application = _Browser_application;
var $elm$core$Basics$composeR = F3(
	function (f, g, x) {
		return g(
			f(x));
	});
var $author$project$Frontend$BrowserApplicationInitWithTime$TimeHasArrivedEvent = function (a) {
	return {$: 'TimeHasArrivedEvent', a: a};
};
var $author$project$Frontend$BrowserApplicationInitWithTime$WaitingForTimeState = function (a) {
	return {$: 'WaitingForTimeState', a: a};
};
var $elm$time$Time$Name = function (a) {
	return {$: 'Name', a: a};
};
var $elm$time$Time$Offset = function (a) {
	return {$: 'Offset', a: a};
};
var $elm$time$Time$Zone = F2(
	function (a, b) {
		return {$: 'Zone', a: a, b: b};
	});
var $elm$time$Time$customZone = $elm$time$Time$Zone;
var $elm$time$Time$Posix = function (a) {
	return {$: 'Posix', a: a};
};
var $elm$time$Time$millisToPosix = $elm$time$Time$Posix;
var $elm$time$Time$now = _Time_now($elm$time$Time$millisToPosix);
var $author$project$Frontend$BrowserApplicationInitWithTime$init = F3(
	function (flags, url, navigationKey) {
		return _Utils_Tuple2(
			$author$project$Frontend$BrowserApplicationInitWithTime$WaitingForTimeState(
				{flags: flags, navigationKey: navigationKey, queuedEvents: _List_Nil, url: url}),
			A2($elm$core$Task$perform, $author$project$Frontend$BrowserApplicationInitWithTime$TimeHasArrivedEvent, $elm$time$Time$now));
	});
var $elm$time$Time$Every = F2(
	function (a, b) {
		return {$: 'Every', a: a, b: b};
	});
var $elm$time$Time$State = F2(
	function (taggers, processes) {
		return {processes: processes, taggers: taggers};
	});
var $elm$core$Dict$RBEmpty_elm_builtin = {$: 'RBEmpty_elm_builtin'};
var $elm$core$Dict$empty = $elm$core$Dict$RBEmpty_elm_builtin;
var $elm$time$Time$init = $elm$core$Task$succeed(
	A2($elm$time$Time$State, $elm$core$Dict$empty, $elm$core$Dict$empty));
var $elm$core$Basics$compare = _Utils_compare;
var $elm$core$Dict$get = F2(
	function (targetKey, dict) {
		get:
		while (true) {
			if (dict.$ === 'RBEmpty_elm_builtin') {
				return $elm$core$Maybe$Nothing;
			} else {
				var key = dict.b;
				var value = dict.c;
				var left = dict.d;
				var right = dict.e;
				var _v1 = A2($elm$core$Basics$compare, targetKey, key);
				switch (_v1.$) {
					case 'LT':
						var $temp$targetKey = targetKey,
							$temp$dict = left;
						targetKey = $temp$targetKey;
						dict = $temp$dict;
						continue get;
					case 'EQ':
						return $elm$core$Maybe$Just(value);
					default:
						var $temp$targetKey = targetKey,
							$temp$dict = right;
						targetKey = $temp$targetKey;
						dict = $temp$dict;
						continue get;
				}
			}
		}
	});
var $elm$core$Dict$Black = {$: 'Black'};
var $elm$core$Dict$RBNode_elm_builtin = F5(
	function (a, b, c, d, e) {
		return {$: 'RBNode_elm_builtin', a: a, b: b, c: c, d: d, e: e};
	});
var $elm$core$Dict$Red = {$: 'Red'};
var $elm$core$Dict$balance = F5(
	function (color, key, value, left, right) {
		if ((right.$ === 'RBNode_elm_builtin') && (right.a.$ === 'Red')) {
			var _v1 = right.a;
			var rK = right.b;
			var rV = right.c;
			var rLeft = right.d;
			var rRight = right.e;
			if ((left.$ === 'RBNode_elm_builtin') && (left.a.$ === 'Red')) {
				var _v3 = left.a;
				var lK = left.b;
				var lV = left.c;
				var lLeft = left.d;
				var lRight = left.e;
				return A5(
					$elm$core$Dict$RBNode_elm_builtin,
					$elm$core$Dict$Red,
					key,
					value,
					A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Black, lK, lV, lLeft, lRight),
					A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Black, rK, rV, rLeft, rRight));
			} else {
				return A5(
					$elm$core$Dict$RBNode_elm_builtin,
					color,
					rK,
					rV,
					A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, key, value, left, rLeft),
					rRight);
			}
		} else {
			if ((((left.$ === 'RBNode_elm_builtin') && (left.a.$ === 'Red')) && (left.d.$ === 'RBNode_elm_builtin')) && (left.d.a.$ === 'Red')) {
				var _v5 = left.a;
				var lK = left.b;
				var lV = left.c;
				var _v6 = left.d;
				var _v7 = _v6.a;
				var llK = _v6.b;
				var llV = _v6.c;
				var llLeft = _v6.d;
				var llRight = _v6.e;
				var lRight = left.e;
				return A5(
					$elm$core$Dict$RBNode_elm_builtin,
					$elm$core$Dict$Red,
					lK,
					lV,
					A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Black, llK, llV, llLeft, llRight),
					A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Black, key, value, lRight, right));
			} else {
				return A5($elm$core$Dict$RBNode_elm_builtin, color, key, value, left, right);
			}
		}
	});
var $elm$core$Dict$insertHelp = F3(
	function (key, value, dict) {
		if (dict.$ === 'RBEmpty_elm_builtin') {
			return A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, key, value, $elm$core$Dict$RBEmpty_elm_builtin, $elm$core$Dict$RBEmpty_elm_builtin);
		} else {
			var nColor = dict.a;
			var nKey = dict.b;
			var nValue = dict.c;
			var nLeft = dict.d;
			var nRight = dict.e;
			var _v1 = A2($elm$core$Basics$compare, key, nKey);
			switch (_v1.$) {
				case 'LT':
					return A5(
						$elm$core$Dict$balance,
						nColor,
						nKey,
						nValue,
						A3($elm$core$Dict$insertHelp, key, value, nLeft),
						nRight);
				case 'EQ':
					return A5($elm$core$Dict$RBNode_elm_builtin, nColor, nKey, value, nLeft, nRight);
				default:
					return A5(
						$elm$core$Dict$balance,
						nColor,
						nKey,
						nValue,
						nLeft,
						A3($elm$core$Dict$insertHelp, key, value, nRight));
			}
		}
	});
var $elm$core$Dict$insert = F3(
	function (key, value, dict) {
		var _v0 = A3($elm$core$Dict$insertHelp, key, value, dict);
		if ((_v0.$ === 'RBNode_elm_builtin') && (_v0.a.$ === 'Red')) {
			var _v1 = _v0.a;
			var k = _v0.b;
			var v = _v0.c;
			var l = _v0.d;
			var r = _v0.e;
			return A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Black, k, v, l, r);
		} else {
			var x = _v0;
			return x;
		}
	});
var $elm$time$Time$addMySub = F2(
	function (_v0, state) {
		var interval = _v0.a;
		var tagger = _v0.b;
		var _v1 = A2($elm$core$Dict$get, interval, state);
		if (_v1.$ === 'Nothing') {
			return A3(
				$elm$core$Dict$insert,
				interval,
				_List_fromArray(
					[tagger]),
				state);
		} else {
			var taggers = _v1.a;
			return A3(
				$elm$core$Dict$insert,
				interval,
				A2($elm$core$List$cons, tagger, taggers),
				state);
		}
	});
var $elm$core$Process$kill = _Scheduler_kill;
var $elm$core$Dict$foldl = F3(
	function (func, acc, dict) {
		foldl:
		while (true) {
			if (dict.$ === 'RBEmpty_elm_builtin') {
				return acc;
			} else {
				var key = dict.b;
				var value = dict.c;
				var left = dict.d;
				var right = dict.e;
				var $temp$func = func,
					$temp$acc = A3(
					func,
					key,
					value,
					A3($elm$core$Dict$foldl, func, acc, left)),
					$temp$dict = right;
				func = $temp$func;
				acc = $temp$acc;
				dict = $temp$dict;
				continue foldl;
			}
		}
	});
var $elm$core$Dict$merge = F6(
	function (leftStep, bothStep, rightStep, leftDict, rightDict, initialResult) {
		var stepState = F3(
			function (rKey, rValue, _v0) {
				stepState:
				while (true) {
					var list = _v0.a;
					var result = _v0.b;
					if (!list.b) {
						return _Utils_Tuple2(
							list,
							A3(rightStep, rKey, rValue, result));
					} else {
						var _v2 = list.a;
						var lKey = _v2.a;
						var lValue = _v2.b;
						var rest = list.b;
						if (_Utils_cmp(lKey, rKey) < 0) {
							var $temp$rKey = rKey,
								$temp$rValue = rValue,
								$temp$_v0 = _Utils_Tuple2(
								rest,
								A3(leftStep, lKey, lValue, result));
							rKey = $temp$rKey;
							rValue = $temp$rValue;
							_v0 = $temp$_v0;
							continue stepState;
						} else {
							if (_Utils_cmp(lKey, rKey) > 0) {
								return _Utils_Tuple2(
									list,
									A3(rightStep, rKey, rValue, result));
							} else {
								return _Utils_Tuple2(
									rest,
									A4(bothStep, lKey, lValue, rValue, result));
							}
						}
					}
				}
			});
		var _v3 = A3(
			$elm$core$Dict$foldl,
			stepState,
			_Utils_Tuple2(
				$elm$core$Dict$toList(leftDict),
				initialResult),
			rightDict);
		var leftovers = _v3.a;
		var intermediateResult = _v3.b;
		return A3(
			$elm$core$List$foldl,
			F2(
				function (_v4, result) {
					var k = _v4.a;
					var v = _v4.b;
					return A3(leftStep, k, v, result);
				}),
			intermediateResult,
			leftovers);
	});
var $elm$core$Platform$sendToSelf = _Platform_sendToSelf;
var $elm$time$Time$setInterval = _Time_setInterval;
var $elm$core$Process$spawn = _Scheduler_spawn;
var $elm$time$Time$spawnHelp = F3(
	function (router, intervals, processes) {
		if (!intervals.b) {
			return $elm$core$Task$succeed(processes);
		} else {
			var interval = intervals.a;
			var rest = intervals.b;
			var spawnTimer = $elm$core$Process$spawn(
				A2(
					$elm$time$Time$setInterval,
					interval,
					A2($elm$core$Platform$sendToSelf, router, interval)));
			var spawnRest = function (id) {
				return A3(
					$elm$time$Time$spawnHelp,
					router,
					rest,
					A3($elm$core$Dict$insert, interval, id, processes));
			};
			return A2($elm$core$Task$andThen, spawnRest, spawnTimer);
		}
	});
var $elm$time$Time$onEffects = F3(
	function (router, subs, _v0) {
		var processes = _v0.processes;
		var rightStep = F3(
			function (_v6, id, _v7) {
				var spawns = _v7.a;
				var existing = _v7.b;
				var kills = _v7.c;
				return _Utils_Tuple3(
					spawns,
					existing,
					A2(
						$elm$core$Task$andThen,
						function (_v5) {
							return kills;
						},
						$elm$core$Process$kill(id)));
			});
		var newTaggers = A3($elm$core$List$foldl, $elm$time$Time$addMySub, $elm$core$Dict$empty, subs);
		var leftStep = F3(
			function (interval, taggers, _v4) {
				var spawns = _v4.a;
				var existing = _v4.b;
				var kills = _v4.c;
				return _Utils_Tuple3(
					A2($elm$core$List$cons, interval, spawns),
					existing,
					kills);
			});
		var bothStep = F4(
			function (interval, taggers, id, _v3) {
				var spawns = _v3.a;
				var existing = _v3.b;
				var kills = _v3.c;
				return _Utils_Tuple3(
					spawns,
					A3($elm$core$Dict$insert, interval, id, existing),
					kills);
			});
		var _v1 = A6(
			$elm$core$Dict$merge,
			leftStep,
			bothStep,
			rightStep,
			newTaggers,
			processes,
			_Utils_Tuple3(
				_List_Nil,
				$elm$core$Dict$empty,
				$elm$core$Task$succeed(_Utils_Tuple0)));
		var spawnList = _v1.a;
		var existingDict = _v1.b;
		var killTask = _v1.c;
		return A2(
			$elm$core$Task$andThen,
			function (newProcesses) {
				return $elm$core$Task$succeed(
					A2($elm$time$Time$State, newTaggers, newProcesses));
			},
			A2(
				$elm$core$Task$andThen,
				function (_v2) {
					return A3($elm$time$Time$spawnHelp, router, spawnList, existingDict);
				},
				killTask));
	});
var $elm$time$Time$onSelfMsg = F3(
	function (router, interval, state) {
		var _v0 = A2($elm$core$Dict$get, interval, state.taggers);
		if (_v0.$ === 'Nothing') {
			return $elm$core$Task$succeed(state);
		} else {
			var taggers = _v0.a;
			var tellTaggers = function (time) {
				return $elm$core$Task$sequence(
					A2(
						$elm$core$List$map,
						function (tagger) {
							return A2(
								$elm$core$Platform$sendToApp,
								router,
								tagger(time));
						},
						taggers));
			};
			return A2(
				$elm$core$Task$andThen,
				function (_v1) {
					return $elm$core$Task$succeed(state);
				},
				A2($elm$core$Task$andThen, tellTaggers, $elm$time$Time$now));
		}
	});
var $elm$core$Basics$composeL = F3(
	function (g, f, x) {
		return g(
			f(x));
	});
var $elm$time$Time$subMap = F2(
	function (f, _v0) {
		var interval = _v0.a;
		var tagger = _v0.b;
		return A2(
			$elm$time$Time$Every,
			interval,
			A2($elm$core$Basics$composeL, f, tagger));
	});
_Platform_effectManagers['Time'] = _Platform_createManager($elm$time$Time$init, $elm$time$Time$onEffects, $elm$time$Time$onSelfMsg, 0, $elm$time$Time$subMap);
var $elm$time$Time$subscription = _Platform_leaf('Time');
var $elm$time$Time$every = F2(
	function (interval, tagger) {
		return $elm$time$Time$subscription(
			A2($elm$time$Time$Every, interval, tagger));
	});
var $elm$core$Platform$Sub$map = _Platform_map;
var $author$project$Frontend$BrowserApplicationInitWithTime$subscriptions = F2(
	function (configuration, state) {
		if (state.$ === 'WaitingForTimeState') {
			return A2($elm$time$Time$every, 500, $author$project$Frontend$BrowserApplicationInitWithTime$TimeHasArrivedEvent);
		} else {
			var initializedState = state.a;
			return A2(
				$elm$core$Platform$Sub$map,
				$author$project$Frontend$BrowserApplicationInitWithTime$InitializedEvent,
				configuration.subscriptions(initializedState));
		}
	});
var $author$project$Frontend$BrowserApplicationInitWithTime$InitializedState = function (a) {
	return {$: 'InitializedState', a: a};
};
var $elm$core$Platform$Cmd$batch = _Platform_batch;
var $author$project$Frontend$BrowserApplicationInitWithTime$completeInit = F3(
	function (configuration, time, stateBefore) {
		return A3(
			$elm$core$List$foldr,
			F2(
				function (event, _v0) {
					var state = _v0.a;
					var cmdBefore = _v0.b;
					var _v1 = A2(configuration.update, event, state);
					var nextState = _v1.a;
					var nextCmd = _v1.b;
					return _Utils_Tuple2(
						nextState,
						$elm$core$Platform$Cmd$batch(
							_List_fromArray(
								[cmdBefore, nextCmd])));
				}),
			A4(configuration.init, stateBefore.flags, stateBefore.url, stateBefore.navigationKey, time),
			stateBefore.queuedEvents);
	});
var $elm$core$Platform$Cmd$map = _Platform_map;
var $elm$core$Tuple$mapFirst = F2(
	function (func, _v0) {
		var x = _v0.a;
		var y = _v0.b;
		return _Utils_Tuple2(
			func(x),
			y);
	});
var $elm$core$Tuple$mapSecond = F2(
	function (func, _v0) {
		var x = _v0.a;
		var y = _v0.b;
		return _Utils_Tuple2(
			x,
			func(y));
	});
var $elm$core$Platform$Cmd$none = $elm$core$Platform$Cmd$batch(_List_Nil);
var $author$project$Frontend$BrowserApplicationInitWithTime$update = F3(
	function (configuration, event, state) {
		if (state.$ === 'WaitingForTimeState') {
			var initState = state.a;
			if (event.$ === 'TimeHasArrivedEvent') {
				var time = event.a;
				return A2(
					$elm$core$Tuple$mapSecond,
					$elm$core$Platform$Cmd$map($author$project$Frontend$BrowserApplicationInitWithTime$InitializedEvent),
					A2(
						$elm$core$Tuple$mapFirst,
						$author$project$Frontend$BrowserApplicationInitWithTime$InitializedState,
						A3($author$project$Frontend$BrowserApplicationInitWithTime$completeInit, configuration, time, initState)));
			} else {
				var initializedEvent = event.a;
				return _Utils_Tuple2(
					$author$project$Frontend$BrowserApplicationInitWithTime$WaitingForTimeState(
						_Utils_update(
							initState,
							{
								queuedEvents: A2($elm$core$List$cons, initializedEvent, initState.queuedEvents)
							})),
					$elm$core$Platform$Cmd$none);
			}
		} else {
			var initialized = state.a;
			if (event.$ === 'InitializedEvent') {
				var initializedEvent = event.a;
				return A2(
					$elm$core$Tuple$mapSecond,
					$elm$core$Platform$Cmd$map($author$project$Frontend$BrowserApplicationInitWithTime$InitializedEvent),
					A2(
						$elm$core$Tuple$mapFirst,
						$author$project$Frontend$BrowserApplicationInitWithTime$InitializedState,
						A2(configuration.update, initializedEvent, initialized)));
			} else {
				return _Utils_Tuple2(state, $elm$core$Platform$Cmd$none);
			}
		}
	});
var $elm$virtual_dom$VirtualDom$map = _VirtualDom_map;
var $elm$html$Html$map = $elm$virtual_dom$VirtualDom$map;
var $author$project$Frontend$BrowserApplicationInitWithTime$view = F2(
	function (configuration, state) {
		if (state.$ === 'WaitingForTimeState') {
			return {
				body: A2(
					$elm$core$List$map,
					$elm$html$Html$map($author$project$Frontend$BrowserApplicationInitWithTime$InitializedEvent),
					configuration.viewWhileWaitingForTime.body),
				title: configuration.viewWhileWaitingForTime.title
			};
		} else {
			var initializedState = state.a;
			var _v1 = configuration.view(initializedState);
			var title = _v1.title;
			var body = _v1.body;
			return {
				body: A2(
					$elm$core$List$map,
					$elm$html$Html$map($author$project$Frontend$BrowserApplicationInitWithTime$InitializedEvent),
					body),
				title: title
			};
		}
	});
var $author$project$Frontend$BrowserApplicationInitWithTime$application = function (configuration) {
	return $elm$browser$Browser$application(
		{
			init: $author$project$Frontend$BrowserApplicationInitWithTime$init,
			onUrlChange: A2($elm$core$Basics$composeR, configuration.onUrlChange, $author$project$Frontend$BrowserApplicationInitWithTime$InitializedEvent),
			onUrlRequest: A2($elm$core$Basics$composeR, configuration.onUrlRequest, $author$project$Frontend$BrowserApplicationInitWithTime$InitializedEvent),
			subscriptions: $author$project$Frontend$BrowserApplicationInitWithTime$subscriptions(configuration),
			update: $author$project$Frontend$BrowserApplicationInitWithTime$update(configuration),
			view: $author$project$Frontend$BrowserApplicationInitWithTime$view(configuration)
		});
};
var $author$project$Frontend$Main$WorkspaceErr = function (a) {
	return {$: 'WorkspaceErr', a: a};
};
var $author$project$Frontend$Main$foldUpdates = F2(
	function (events, stateBefore) {
		return A2(
			$elm$core$Tuple$mapSecond,
			$elm$core$Platform$Cmd$batch,
			A3(
				$elm$core$List$foldl,
				F2(
					function (event, _v0) {
						var state = _v0.a;
						var cmds = _v0.b;
						var _v1 = event(state);
						var nextState = _v1.a;
						var nextCmd = _v1.b;
						return _Utils_Tuple2(
							nextState,
							A2($elm$core$List$cons, nextCmd, cmds));
					}),
				_Utils_Tuple2(stateBefore, _List_Nil),
				events));
	});
var $author$project$Frontend$MonacoEditor$DidFocusEditorWidgetEvent = {$: 'DidFocusEditorWidgetEvent'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$Escape = {$: 'Escape'};
var $author$project$Frontend$Main$ExportToZipArchiveDialog = {$: 'ExportToZipArchiveDialog'};
var $author$project$Frontend$Main$GetLinkToWorkspaceDialog = function (a) {
	return {$: 'GetLinkToWorkspaceDialog', a: a};
};
var $author$project$Frontend$Main$ImportFromZipArchiveDialog = function (a) {
	return {$: 'ImportFromZipArchiveDialog', a: a};
};
var $author$project$Frontend$Main$LoadFromGitDialog = function (a) {
	return {$: 'LoadFromGitDialog', a: a};
};
var $author$project$Frontend$Main$ModalDialog = function (a) {
	return {$: 'ModalDialog', a: a};
};
var $author$project$Frontend$Main$TitlebarMenu = F2(
	function (a, b) {
		return {$: 'TitlebarMenu', a: a, b: b};
	});
var $author$project$Frontend$Main$UserInputClosePopup = {$: 'UserInputClosePopup'};
var $author$project$Frontend$Main$UserInputLoadedZipArchiveBytes = function (a) {
	return {$: 'UserInputLoadedZipArchiveBytes', a: a};
};
var $author$project$Frontend$Main$UserInputLoadedZipArchiveFile = function (a) {
	return {$: 'UserInputLoadedZipArchiveFile', a: a};
};
var $author$project$Frontend$Main$WorkspaceActive = function (a) {
	return {$: 'WorkspaceActive', a: a};
};
var $author$project$Frontend$Main$WorkspaceEvent = function (a) {
	return {$: 'WorkspaceEvent', a: a};
};
var $elm$url$Url$Builder$toQueryPair = function (_v0) {
	var key = _v0.a;
	var value = _v0.b;
	return key + ('=' + value);
};
var $elm$url$Url$Builder$toQuery = function (parameters) {
	if (!parameters.b) {
		return '';
	} else {
		return '?' + A2(
			$elm$core$String$join,
			'&',
			A2($elm$core$List$map, $elm$url$Url$Builder$toQueryPair, parameters));
	}
};
var $elm$url$Url$Builder$absolute = F2(
	function (pathSegments, parameters) {
		return '/' + (A2($elm$core$String$join, '/', pathSegments) + $elm$url$Url$Builder$toQuery(parameters));
	});
var $elm$core$List$append = F2(
	function (xs, ys) {
		if (!ys.b) {
			return xs;
		} else {
			return A3($elm$core$List$foldr, $elm$core$List$cons, ys, xs);
		}
	});
var $elm$core$List$concat = function (lists) {
	return A3($elm$core$List$foldr, $elm$core$List$append, _List_Nil, lists);
};
var $elm$core$List$concatMap = F2(
	function (f, list) {
		return $elm$core$List$concat(
			A2($elm$core$List$map, f, list));
	});
var $author$project$FileTree$flatListOfBlobsFromFileTreeNode = function (treeNode) {
	if (treeNode.$ === 'BlobNode') {
		var blob = treeNode.a;
		return _List_fromArray(
			[
				_Utils_Tuple2(_List_Nil, blob)
			]);
	} else {
		var treeEntries = treeNode.a;
		return A2(
			$elm$core$List$concatMap,
			function (_v1) {
				var childName = _v1.a;
				var childContent = _v1.b;
				return A2(
					$elm$core$List$map,
					$elm$core$Tuple$mapFirst(
						$elm$core$List$cons(childName)),
					$author$project$FileTree$flatListOfBlobsFromFileTreeNode(childContent));
			},
			treeEntries);
	}
};
var $agu_z$elm_zip$Zip$Zip = function (a) {
	return {$: 'Zip', a: a};
};
var $agu_z$elm_zip$Zip$fromEntries = $agu_z$elm_zip$Zip$Zip;
var $agu_z$elm_zip$Internal$Format$Entry = F2(
	function (a, b) {
		return {$: 'Entry', a: a, b: b};
	});
var $agu_z$elm_zip$Internal$Format$Exactly = function (a) {
	return {$: 'Exactly', a: a};
};
var $agu_z$elm_zip$Internal$Format$Stored = {$: 'Stored'};
var $elm$bytes$Bytes$BE = {$: 'BE'};
var $elm$bytes$Bytes$Decode$Done = function (a) {
	return {$: 'Done', a: a};
};
var $elm$bytes$Bytes$Decode$Loop = function (a) {
	return {$: 'Loop', a: a};
};
var $elm$core$Bitwise$and = _Bitwise_and;
var $elm$core$Basics$ge = _Utils_ge;
var $elm$bytes$Bytes$Decode$Decoder = function (a) {
	return {$: 'Decoder', a: a};
};
var $elm$bytes$Bytes$Decode$map = F2(
	function (func, _v0) {
		var decodeA = _v0.a;
		return $elm$bytes$Bytes$Decode$Decoder(
			F2(
				function (bites, offset) {
					var _v1 = A2(decodeA, bites, offset);
					var aOffset = _v1.a;
					var a = _v1.b;
					return _Utils_Tuple2(
						aOffset,
						func(a));
				}));
	});
var $elm$bytes$Bytes$Decode$map2 = F3(
	function (func, _v0, _v1) {
		var decodeA = _v0.a;
		var decodeB = _v1.a;
		return $elm$bytes$Bytes$Decode$Decoder(
			F2(
				function (bites, offset) {
					var _v2 = A2(decodeA, bites, offset);
					var aOffset = _v2.a;
					var a = _v2.b;
					var _v3 = A2(decodeB, bites, aOffset);
					var bOffset = _v3.a;
					var b = _v3.b;
					return _Utils_Tuple2(
						bOffset,
						A2(func, a, b));
				}));
	});
var $elm$core$Bitwise$shiftRightZfBy = _Bitwise_shiftRightZfBy;
var $folkertdev$elm_flate$Checksum$Crc32$tinf_crc32case = function (i) {
	switch (i) {
		case 0:
			return 0;
		case 1:
			return 498536548;
		case 2:
			return 997073096;
		case 3:
			return 651767980;
		case 4:
			return 1994146192;
		case 5:
			return 1802195444;
		case 6:
			return 1303535960;
		case 7:
			return 1342533948;
		case 8:
			return 3988292384;
		case 9:
			return 4027552580;
		case 10:
			return 3604390888;
		case 11:
			return 3412177804;
		case 12:
			return 2607071920;
		case 13:
			return 2262029012;
		case 14:
			return 2685067896;
		default:
			return 3183342108;
	}
};
var $elm$core$Bitwise$xor = _Bitwise_xor;
var $folkertdev$elm_flate$Checksum$Crc32$step = F2(
	function (_byte, crc) {
		var a = (crc ^ _byte) >>> 0;
		var b = ((a >>> 4) ^ $folkertdev$elm_flate$Checksum$Crc32$tinf_crc32case(a & 15)) >>> 0;
		var c = (b >>> 4) ^ $folkertdev$elm_flate$Checksum$Crc32$tinf_crc32case(b & 15);
		return c;
	});
var $elm$bytes$Bytes$Decode$succeed = function (a) {
	return $elm$bytes$Bytes$Decode$Decoder(
		F2(
			function (_v0, offset) {
				return _Utils_Tuple2(offset, a);
			}));
};
var $elm$bytes$Bytes$Encode$getWidth = function (builder) {
	switch (builder.$) {
		case 'I8':
			return 1;
		case 'I16':
			return 2;
		case 'I32':
			return 4;
		case 'U8':
			return 1;
		case 'U16':
			return 2;
		case 'U32':
			return 4;
		case 'F32':
			return 4;
		case 'F64':
			return 8;
		case 'Seq':
			var w = builder.a;
			return w;
		case 'Utf8':
			var w = builder.a;
			return w;
		default:
			var bs = builder.a;
			return _Bytes_width(bs);
	}
};
var $elm$bytes$Bytes$LE = {$: 'LE'};
var $elm$bytes$Bytes$Encode$write = F3(
	function (builder, mb, offset) {
		switch (builder.$) {
			case 'I8':
				var n = builder.a;
				return A3(_Bytes_write_i8, mb, offset, n);
			case 'I16':
				var e = builder.a;
				var n = builder.b;
				return A4(
					_Bytes_write_i16,
					mb,
					offset,
					n,
					_Utils_eq(e, $elm$bytes$Bytes$LE));
			case 'I32':
				var e = builder.a;
				var n = builder.b;
				return A4(
					_Bytes_write_i32,
					mb,
					offset,
					n,
					_Utils_eq(e, $elm$bytes$Bytes$LE));
			case 'U8':
				var n = builder.a;
				return A3(_Bytes_write_u8, mb, offset, n);
			case 'U16':
				var e = builder.a;
				var n = builder.b;
				return A4(
					_Bytes_write_u16,
					mb,
					offset,
					n,
					_Utils_eq(e, $elm$bytes$Bytes$LE));
			case 'U32':
				var e = builder.a;
				var n = builder.b;
				return A4(
					_Bytes_write_u32,
					mb,
					offset,
					n,
					_Utils_eq(e, $elm$bytes$Bytes$LE));
			case 'F32':
				var e = builder.a;
				var n = builder.b;
				return A4(
					_Bytes_write_f32,
					mb,
					offset,
					n,
					_Utils_eq(e, $elm$bytes$Bytes$LE));
			case 'F64':
				var e = builder.a;
				var n = builder.b;
				return A4(
					_Bytes_write_f64,
					mb,
					offset,
					n,
					_Utils_eq(e, $elm$bytes$Bytes$LE));
			case 'Seq':
				var bs = builder.b;
				return A3($elm$bytes$Bytes$Encode$writeSequence, bs, mb, offset);
			case 'Utf8':
				var s = builder.b;
				return A3(_Bytes_write_string, mb, offset, s);
			default:
				var bs = builder.a;
				return A3(_Bytes_write_bytes, mb, offset, bs);
		}
	});
var $elm$bytes$Bytes$Encode$writeSequence = F3(
	function (builders, mb, offset) {
		writeSequence:
		while (true) {
			if (!builders.b) {
				return offset;
			} else {
				var b = builders.a;
				var bs = builders.b;
				var $temp$builders = bs,
					$temp$mb = mb,
					$temp$offset = A3($elm$bytes$Bytes$Encode$write, b, mb, offset);
				builders = $temp$builders;
				mb = $temp$mb;
				offset = $temp$offset;
				continue writeSequence;
			}
		}
	});
var $elm$bytes$Bytes$Decode$unsignedInt32 = function (endianness) {
	return $elm$bytes$Bytes$Decode$Decoder(
		_Bytes_read_u32(
			_Utils_eq(endianness, $elm$bytes$Bytes$LE)));
};
var $elm$bytes$Bytes$Decode$unsignedInt8 = $elm$bytes$Bytes$Decode$Decoder(_Bytes_read_u8);
var $folkertdev$elm_flate$Checksum$Crc32$crc32Help = function (_v0) {
	var remaining = _v0.remaining;
	var crc = _v0.crc;
	return (remaining >= 8) ? A3(
		$elm$bytes$Bytes$Decode$map2,
		F2(
			function (word1, word2) {
				var byte8 = 255 & word2;
				var byte7 = 255 & (word2 >>> 8);
				var byte6 = 255 & (word2 >>> 16);
				var byte5 = 255 & (word2 >>> 24);
				var byte4 = 255 & word1;
				var byte3 = 255 & (word1 >>> 8);
				var byte2 = 255 & (word1 >>> 16);
				var byte1 = 255 & (word1 >>> 24);
				return $elm$bytes$Bytes$Decode$Loop(
					{
						crc: A2(
							$folkertdev$elm_flate$Checksum$Crc32$step,
							byte8,
							A2(
								$folkertdev$elm_flate$Checksum$Crc32$step,
								byte7,
								A2(
									$folkertdev$elm_flate$Checksum$Crc32$step,
									byte6,
									A2(
										$folkertdev$elm_flate$Checksum$Crc32$step,
										byte5,
										A2(
											$folkertdev$elm_flate$Checksum$Crc32$step,
											byte4,
											A2(
												$folkertdev$elm_flate$Checksum$Crc32$step,
												byte3,
												A2(
													$folkertdev$elm_flate$Checksum$Crc32$step,
													byte2,
													A2($folkertdev$elm_flate$Checksum$Crc32$step, byte1, crc)))))))),
						remaining: remaining - 8
					});
			}),
		$elm$bytes$Bytes$Decode$unsignedInt32($elm$bytes$Bytes$BE),
		$elm$bytes$Bytes$Decode$unsignedInt32($elm$bytes$Bytes$BE)) : ((remaining > 0) ? A2(
		$elm$bytes$Bytes$Decode$map,
		function (_byte) {
			return $elm$bytes$Bytes$Decode$Loop(
				{
					crc: A2($folkertdev$elm_flate$Checksum$Crc32$step, _byte, crc),
					remaining: remaining - 1
				});
		},
		$elm$bytes$Bytes$Decode$unsignedInt8) : $elm$bytes$Bytes$Decode$succeed(
		$elm$bytes$Bytes$Decode$Done((crc ^ 4294967295) >>> 0)));
};
var $elm$bytes$Bytes$Decode$decode = F2(
	function (_v0, bs) {
		var decoder = _v0.a;
		return A2(_Bytes_decode, decoder, bs);
	});
var $elm$bytes$Bytes$Decode$loopHelp = F4(
	function (state, callback, bites, offset) {
		loopHelp:
		while (true) {
			var _v0 = callback(state);
			var decoder = _v0.a;
			var _v1 = A2(decoder, bites, offset);
			var newOffset = _v1.a;
			var step = _v1.b;
			if (step.$ === 'Loop') {
				var newState = step.a;
				var $temp$state = newState,
					$temp$callback = callback,
					$temp$bites = bites,
					$temp$offset = newOffset;
				state = $temp$state;
				callback = $temp$callback;
				bites = $temp$bites;
				offset = $temp$offset;
				continue loopHelp;
			} else {
				var result = step.a;
				return _Utils_Tuple2(newOffset, result);
			}
		}
	});
var $elm$bytes$Bytes$Decode$loop = F2(
	function (state, callback) {
		return $elm$bytes$Bytes$Decode$Decoder(
			A2($elm$bytes$Bytes$Decode$loopHelp, state, callback));
	});
var $elm$bytes$Bytes$width = _Bytes_width;
var $elm$core$Maybe$withDefault = F2(
	function (_default, maybe) {
		if (maybe.$ === 'Just') {
			var value = maybe.a;
			return value;
		} else {
			return _default;
		}
	});
var $folkertdev$elm_flate$Checksum$Crc32$tinf_crc32 = function (buffer) {
	var length = $elm$bytes$Bytes$width(buffer);
	var initialCrc = 4294967295;
	return (!length) ? 0 : A2(
		$elm$core$Maybe$withDefault,
		0,
		A2(
			$elm$bytes$Bytes$Decode$decode,
			A2(
				$elm$bytes$Bytes$Decode$loop,
				{crc: initialCrc, remaining: length},
				$folkertdev$elm_flate$Checksum$Crc32$crc32Help),
			buffer));
};
var $folkertdev$elm_flate$Checksum$Crc32$crc32 = $folkertdev$elm_flate$Checksum$Crc32$tinf_crc32;
var $folkertdev$elm_flate$Flate$crc32 = $folkertdev$elm_flate$Checksum$Crc32$crc32;
var $elm$bytes$Bytes$Encode$encode = _Bytes_encode;
var $elm$bytes$Bytes$Encode$Seq = F2(
	function (a, b) {
		return {$: 'Seq', a: a, b: b};
	});
var $elm$bytes$Bytes$Encode$getWidths = F2(
	function (width, builders) {
		getWidths:
		while (true) {
			if (!builders.b) {
				return width;
			} else {
				var b = builders.a;
				var bs = builders.b;
				var $temp$width = width + $elm$bytes$Bytes$Encode$getWidth(b),
					$temp$builders = bs;
				width = $temp$width;
				builders = $temp$builders;
				continue getWidths;
			}
		}
	});
var $elm$bytes$Bytes$Encode$sequence = function (builders) {
	return A2(
		$elm$bytes$Bytes$Encode$Seq,
		A2($elm$bytes$Bytes$Encode$getWidths, 0, builders),
		builders);
};
var $agu_z$elm_zip$Internal$Encode$noBytes = $elm$bytes$Bytes$Encode$encode(
	$elm$bytes$Bytes$Encode$sequence(_List_Nil));
var $agu_z$elm_zip$Zip$Entry$monthToNumber = function (month) {
	switch (month.$) {
		case 'Jan':
			return 1;
		case 'Feb':
			return 2;
		case 'Mar':
			return 3;
		case 'Apr':
			return 4;
		case 'May':
			return 5;
		case 'Jun':
			return 6;
		case 'Jul':
			return 7;
		case 'Aug':
			return 8;
		case 'Sep':
			return 9;
		case 'Oct':
			return 10;
		case 'Nov':
			return 11;
		default:
			return 12;
	}
};
var $elm$core$Bitwise$or = _Bitwise_or;
var $elm$core$Bitwise$shiftLeftBy = _Bitwise_shiftLeftBy;
var $elm$time$Time$flooredDiv = F2(
	function (numerator, denominator) {
		return $elm$core$Basics$floor(numerator / denominator);
	});
var $elm$time$Time$posixToMillis = function (_v0) {
	var millis = _v0.a;
	return millis;
};
var $elm$time$Time$toAdjustedMinutesHelp = F3(
	function (defaultOffset, posixMinutes, eras) {
		toAdjustedMinutesHelp:
		while (true) {
			if (!eras.b) {
				return posixMinutes + defaultOffset;
			} else {
				var era = eras.a;
				var olderEras = eras.b;
				if (_Utils_cmp(era.start, posixMinutes) < 0) {
					return posixMinutes + era.offset;
				} else {
					var $temp$defaultOffset = defaultOffset,
						$temp$posixMinutes = posixMinutes,
						$temp$eras = olderEras;
					defaultOffset = $temp$defaultOffset;
					posixMinutes = $temp$posixMinutes;
					eras = $temp$eras;
					continue toAdjustedMinutesHelp;
				}
			}
		}
	});
var $elm$time$Time$toAdjustedMinutes = F2(
	function (_v0, time) {
		var defaultOffset = _v0.a;
		var eras = _v0.b;
		return A3(
			$elm$time$Time$toAdjustedMinutesHelp,
			defaultOffset,
			A2(
				$elm$time$Time$flooredDiv,
				$elm$time$Time$posixToMillis(time),
				60000),
			eras);
	});
var $elm$core$Basics$negate = function (n) {
	return -n;
};
var $elm$time$Time$toCivil = function (minutes) {
	var rawDay = A2($elm$time$Time$flooredDiv, minutes, 60 * 24) + 719468;
	var era = (((rawDay >= 0) ? rawDay : (rawDay - 146096)) / 146097) | 0;
	var dayOfEra = rawDay - (era * 146097);
	var yearOfEra = ((((dayOfEra - ((dayOfEra / 1460) | 0)) + ((dayOfEra / 36524) | 0)) - ((dayOfEra / 146096) | 0)) / 365) | 0;
	var dayOfYear = dayOfEra - (((365 * yearOfEra) + ((yearOfEra / 4) | 0)) - ((yearOfEra / 100) | 0));
	var mp = (((5 * dayOfYear) + 2) / 153) | 0;
	var month = mp + ((mp < 10) ? 3 : (-9));
	var year = yearOfEra + (era * 400);
	return {
		day: (dayOfYear - ((((153 * mp) + 2) / 5) | 0)) + 1,
		month: month,
		year: year + ((month <= 2) ? 1 : 0)
	};
};
var $elm$time$Time$toDay = F2(
	function (zone, time) {
		return $elm$time$Time$toCivil(
			A2($elm$time$Time$toAdjustedMinutes, zone, time)).day;
	});
var $elm$core$Basics$modBy = _Basics_modBy;
var $elm$time$Time$toHour = F2(
	function (zone, time) {
		return A2(
			$elm$core$Basics$modBy,
			24,
			A2(
				$elm$time$Time$flooredDiv,
				A2($elm$time$Time$toAdjustedMinutes, zone, time),
				60));
	});
var $elm$time$Time$toMinute = F2(
	function (zone, time) {
		return A2(
			$elm$core$Basics$modBy,
			60,
			A2($elm$time$Time$toAdjustedMinutes, zone, time));
	});
var $elm$time$Time$Apr = {$: 'Apr'};
var $elm$time$Time$Aug = {$: 'Aug'};
var $elm$time$Time$Dec = {$: 'Dec'};
var $elm$time$Time$Feb = {$: 'Feb'};
var $elm$time$Time$Jan = {$: 'Jan'};
var $elm$time$Time$Jul = {$: 'Jul'};
var $elm$time$Time$Jun = {$: 'Jun'};
var $elm$time$Time$Mar = {$: 'Mar'};
var $elm$time$Time$May = {$: 'May'};
var $elm$time$Time$Nov = {$: 'Nov'};
var $elm$time$Time$Oct = {$: 'Oct'};
var $elm$time$Time$Sep = {$: 'Sep'};
var $elm$time$Time$toMonth = F2(
	function (zone, time) {
		var _v0 = $elm$time$Time$toCivil(
			A2($elm$time$Time$toAdjustedMinutes, zone, time)).month;
		switch (_v0) {
			case 1:
				return $elm$time$Time$Jan;
			case 2:
				return $elm$time$Time$Feb;
			case 3:
				return $elm$time$Time$Mar;
			case 4:
				return $elm$time$Time$Apr;
			case 5:
				return $elm$time$Time$May;
			case 6:
				return $elm$time$Time$Jun;
			case 7:
				return $elm$time$Time$Jul;
			case 8:
				return $elm$time$Time$Aug;
			case 9:
				return $elm$time$Time$Sep;
			case 10:
				return $elm$time$Time$Oct;
			case 11:
				return $elm$time$Time$Nov;
			default:
				return $elm$time$Time$Dec;
		}
	});
var $elm$time$Time$toSecond = F2(
	function (_v0, time) {
		return A2(
			$elm$core$Basics$modBy,
			60,
			A2(
				$elm$time$Time$flooredDiv,
				$elm$time$Time$posixToMillis(time),
				1000));
	});
var $elm$time$Time$toYear = F2(
	function (zone, time) {
		return $elm$time$Time$toCivil(
			A2($elm$time$Time$toAdjustedMinutes, zone, time)).year;
	});
var $agu_z$elm_zip$Zip$Entry$posixToDos = function (_v0) {
	var zone = _v0.a;
	var time = _v0.b;
	var year = (A2($elm$time$Time$toYear, zone, time) - 1980) << 25;
	var second = (A2($elm$time$Time$toSecond, zone, time) / 2) | 0;
	var month = $agu_z$elm_zip$Zip$Entry$monthToNumber(
		A2($elm$time$Time$toMonth, zone, time)) << 21;
	var minute = A2($elm$time$Time$toMinute, zone, time) << 5;
	var hour = A2($elm$time$Time$toHour, zone, time) << 11;
	var day = A2($elm$time$Time$toDay, zone, time) << 16;
	return second | (minute | (hour | (day | (month | year))));
};
var $agu_z$elm_zip$Zip$Entry$entryMeta = function (meta) {
	return {
		comment: A2($elm$core$Maybe$withDefault, '', meta.comment),
		compressedSize: 0,
		compressionMethod: $agu_z$elm_zip$Internal$Format$Stored,
		crc32: 0,
		externalAttributes: 0,
		extraField: $agu_z$elm_zip$Internal$Encode$noBytes,
		extractMinVersion: 20,
		fileName: meta.path,
		flag: 0,
		internalAttributes: 0,
		lastModified: $agu_z$elm_zip$Zip$Entry$posixToDos(meta.lastModified),
		madeBy: 798,
		uncompressedSize: 0
	};
};
var $agu_z$elm_zip$Zip$Entry$unixMode = $elm$core$Bitwise$shiftLeftBy(16);
var $agu_z$elm_zip$Zip$Entry$fileMode = $agu_z$elm_zip$Zip$Entry$unixMode(33204);
var $agu_z$elm_zip$Zip$Entry$store = F2(
	function (meta, data) {
		var base = $agu_z$elm_zip$Zip$Entry$entryMeta(meta);
		return A2(
			$agu_z$elm_zip$Internal$Format$Entry,
			$agu_z$elm_zip$Internal$Format$Exactly(data),
			_Utils_update(
				base,
				{
					compressedSize: $elm$bytes$Bytes$width(data),
					compressionMethod: $agu_z$elm_zip$Internal$Format$Stored,
					crc32: $folkertdev$elm_flate$Flate$crc32(data),
					externalAttributes: $agu_z$elm_zip$Zip$Entry$fileMode,
					lastModified: $agu_z$elm_zip$Zip$Entry$posixToDos(meta.lastModified),
					uncompressedSize: $elm$bytes$Bytes$width(data)
				}));
	});
var $elm$time$Time$utc = A2($elm$time$Time$Zone, 0, _List_Nil);
var $author$project$Frontend$Main$buildZipArchiveFromFileTree = A2(
	$elm$core$Basics$composeR,
	$author$project$FileTree$flatListOfBlobsFromFileTreeNode,
	A2(
		$elm$core$Basics$composeR,
		$elm$core$List$map(
			function (_v0) {
				var path = _v0.a;
				var blobContent = _v0.b;
				return A2(
					$agu_z$elm_zip$Zip$Entry$store,
					{
						comment: $elm$core$Maybe$Nothing,
						lastModified: _Utils_Tuple2(
							$elm$time$Time$utc,
							$elm$time$Time$millisToPosix(0)),
						path: A2($elm$core$String$join, '/', path)
					},
					blobContent.asBytes);
			}),
		$agu_z$elm_zip$Zip$fromEntries));
var $elm$file$File$Download$bytes = F3(
	function (name, mime, content) {
		return A2(
			$elm$core$Task$perform,
			$elm$core$Basics$never,
			A3(
				_File_download,
				name,
				mime,
				_File_makeBytesSafeForInternetExplorer(content)));
	});
var $author$project$Pine$BlobValue = function (a) {
	return {$: 'BlobValue', a: a};
};
var $author$project$Pine$ListValue = function (a) {
	return {$: 'ListValue', a: a};
};
var $TSFoster$elm_bytes_extra$Bytes$Decode$Extra$listStep = F2(
	function (elementDecoder, _v0) {
		var n = _v0.a;
		var elements = _v0.b;
		return (n <= 0) ? $elm$bytes$Bytes$Decode$succeed(
			$elm$bytes$Bytes$Decode$Done(
				$elm$core$List$reverse(elements))) : A2(
			$elm$bytes$Bytes$Decode$map,
			function (element) {
				return $elm$bytes$Bytes$Decode$Loop(
					_Utils_Tuple2(
						n - 1,
						A2($elm$core$List$cons, element, elements)));
			},
			elementDecoder);
	});
var $TSFoster$elm_bytes_extra$Bytes$Decode$Extra$list = F2(
	function (length, aDecoder) {
		return A2(
			$elm$bytes$Bytes$Decode$loop,
			_Utils_Tuple2(length, _List_Nil),
			$TSFoster$elm_bytes_extra$Bytes$Decode$Extra$listStep(aDecoder));
	});
var $TSFoster$elm_bytes_extra$Bytes$Decode$Extra$byteValues = function (length) {
	return A2($TSFoster$elm_bytes_extra$Bytes$Decode$Extra$list, length, $elm$bytes$Bytes$Decode$unsignedInt8);
};
var $TSFoster$elm_bytes_extra$Bytes$Extra$toByteValues = function (bytes) {
	return A2(
		$elm$core$Maybe$withDefault,
		_List_Nil,
		A2(
			$elm$bytes$Bytes$Decode$decode,
			$TSFoster$elm_bytes_extra$Bytes$Decode$Extra$byteValues(
				$elm$bytes$Bytes$width(bytes)),
			bytes));
};
var $elm$core$String$foldr = _String_foldr;
var $elm$core$String$toList = function (string) {
	return A3($elm$core$String$foldr, $elm$core$List$cons, _List_Nil, string);
};
var $cmditch$elm_bigint$BigInt$BigIntNotNormalised = F2(
	function (a, b) {
		return {$: 'BigIntNotNormalised', a: a, b: b};
	});
var $cmditch$elm_bigint$BigInt$MagnitudeNotNormalised = function (a) {
	return {$: 'MagnitudeNotNormalised', a: a};
};
var $elm$core$Basics$abs = function (n) {
	return (n < 0) ? (-n) : n;
};
var $cmditch$elm_bigint$BigInt$Magnitude = function (a) {
	return {$: 'Magnitude', a: a};
};
var $elm_community$list_extra$List$Extra$last = function (items) {
	last:
	while (true) {
		if (!items.b) {
			return $elm$core$Maybe$Nothing;
		} else {
			if (!items.b.b) {
				var x = items.a;
				return $elm$core$Maybe$Just(x);
			} else {
				var rest = items.b;
				var $temp$items = rest;
				items = $temp$items;
				continue last;
			}
		}
	}
};
var $cmditch$elm_bigint$BigInt$isNegativeMagnitude = function (digits) {
	var _v0 = $elm_community$list_extra$List$Extra$last(digits);
	if (_v0.$ === 'Nothing') {
		return false;
	} else {
		var x = _v0.a;
		return x < 0;
	}
};
var $cmditch$elm_bigint$BigInt$Neg = function (a) {
	return {$: 'Neg', a: a};
};
var $cmditch$elm_bigint$BigInt$Pos = function (a) {
	return {$: 'Pos', a: a};
};
var $cmditch$elm_bigint$BigInt$Zer = {$: 'Zer'};
var $elm$core$List$isEmpty = function (xs) {
	if (!xs.b) {
		return true;
	} else {
		return false;
	}
};
var $cmditch$elm_bigint$BigInt$mkBigInt = F2(
	function (s, mag) {
		var digits = mag.a;
		if ($elm$core$List$isEmpty(digits)) {
			return $cmditch$elm_bigint$BigInt$Zer;
		} else {
			switch (s.$) {
				case 'Zero':
					return $cmditch$elm_bigint$BigInt$Zer;
				case 'Positive':
					return $cmditch$elm_bigint$BigInt$Pos(mag);
				default:
					return $cmditch$elm_bigint$BigInt$Neg(mag);
			}
		}
	});
var $cmditch$elm_bigint$BigInt$mkBigIntNotNormalised = F2(
	function (s, digits) {
		return A2(
			$cmditch$elm_bigint$BigInt$BigIntNotNormalised,
			s,
			$cmditch$elm_bigint$BigInt$MagnitudeNotNormalised(digits));
	});
var $elm_community$list_extra$List$Extra$dropWhileRight = function (p) {
	return A2(
		$elm$core$List$foldr,
		F2(
			function (x, xs) {
				return (p(x) && $elm$core$List$isEmpty(xs)) ? _List_Nil : A2($elm$core$List$cons, x, xs);
			}),
		_List_Nil);
};
var $cmditch$elm_bigint$BigInt$dropZeroes = $elm_community$list_extra$List$Extra$dropWhileRight(
	$elm$core$Basics$eq(0));
var $cmditch$elm_bigint$Constants$maxDigitMagnitude = 7;
var $elm$core$Basics$pow = _Basics_pow;
var $cmditch$elm_bigint$Constants$maxDigitValue = (-1) + A2($elm$core$Basics$pow, 10, $cmditch$elm_bigint$Constants$maxDigitMagnitude);
var $cmditch$elm_bigint$BigInt$baseDigit = $cmditch$elm_bigint$Constants$maxDigitValue + 1;
var $cmditch$elm_bigint$BigInt$normaliseDigit = function (x) {
	return (x < 0) ? A2(
		$elm$core$Tuple$mapFirst,
		$elm$core$Basics$add(-1),
		$cmditch$elm_bigint$BigInt$normaliseDigit(x + $cmditch$elm_bigint$BigInt$baseDigit)) : _Utils_Tuple2((x / $cmditch$elm_bigint$BigInt$baseDigit) | 0, x % $cmditch$elm_bigint$BigInt$baseDigit);
};
var $cmditch$elm_bigint$BigInt$normaliseDigitList = F2(
	function (carry, xs) {
		normaliseDigitList:
		while (true) {
			if (!xs.b) {
				if (_Utils_cmp(carry, $cmditch$elm_bigint$BigInt$baseDigit) > 0) {
					var $temp$carry = 0,
						$temp$xs = _List_fromArray(
						[carry]);
					carry = $temp$carry;
					xs = $temp$xs;
					continue normaliseDigitList;
				} else {
					return _List_fromArray(
						[carry]);
				}
			} else {
				var x = xs.a;
				var xs_ = xs.b;
				var _v1 = $cmditch$elm_bigint$BigInt$normaliseDigit(x + carry);
				var newCarry = _v1.a;
				var x_ = _v1.b;
				return A2(
					$elm$core$List$cons,
					x_,
					A2($cmditch$elm_bigint$BigInt$normaliseDigitList, newCarry, xs_));
			}
		}
	});
var $cmditch$elm_bigint$BigInt$normaliseMagnitude = function (_v0) {
	var xs = _v0.a;
	return $cmditch$elm_bigint$BigInt$Magnitude(
		$cmditch$elm_bigint$BigInt$dropZeroes(
			A2($cmditch$elm_bigint$BigInt$normaliseDigitList, 0, xs)));
};
var $cmditch$elm_bigint$BigInt$reverseMagnitude = $elm$core$List$map($elm$core$Basics$negate);
var $cmditch$elm_bigint$BigInt$Negative = {$: 'Negative'};
var $cmditch$elm_bigint$BigInt$Positive = {$: 'Positive'};
var $cmditch$elm_bigint$BigInt$Zero = {$: 'Zero'};
var $cmditch$elm_bigint$BigInt$signNegate = function (sign_) {
	switch (sign_.$) {
		case 'Positive':
			return $cmditch$elm_bigint$BigInt$Negative;
		case 'Negative':
			return $cmditch$elm_bigint$BigInt$Positive;
		default:
			return $cmditch$elm_bigint$BigInt$Zero;
	}
};
var $cmditch$elm_bigint$BigInt$normalise = function (_v0) {
	normalise:
	while (true) {
		var s = _v0.a;
		var digits = _v0.b;
		var _v1 = $cmditch$elm_bigint$BigInt$normaliseMagnitude(digits);
		var normalisedMag = _v1.a;
		if ($cmditch$elm_bigint$BigInt$isNegativeMagnitude(normalisedMag)) {
			var $temp$_v0 = A2(
				$cmditch$elm_bigint$BigInt$mkBigIntNotNormalised,
				$cmditch$elm_bigint$BigInt$signNegate(s),
				$cmditch$elm_bigint$BigInt$reverseMagnitude(normalisedMag));
			_v0 = $temp$_v0;
			continue normalise;
		} else {
			return A2(
				$cmditch$elm_bigint$BigInt$mkBigInt,
				s,
				$cmditch$elm_bigint$BigInt$Magnitude(normalisedMag));
		}
	}
};
var $cmditch$elm_bigint$BigInt$signFromInt = function (x) {
	var _v0 = A2($elm$core$Basics$compare, x, 0);
	switch (_v0.$) {
		case 'LT':
			return $cmditch$elm_bigint$BigInt$Negative;
		case 'GT':
			return $cmditch$elm_bigint$BigInt$Positive;
		default:
			return $cmditch$elm_bigint$BigInt$Zero;
	}
};
var $cmditch$elm_bigint$BigInt$fromInt = function (x) {
	return $cmditch$elm_bigint$BigInt$normalise(
		A2(
			$cmditch$elm_bigint$BigInt$BigIntNotNormalised,
			$cmditch$elm_bigint$BigInt$signFromInt(x),
			$cmditch$elm_bigint$BigInt$MagnitudeNotNormalised(
				_List_fromArray(
					[
						$elm$core$Basics$abs(x)
					]))));
};
var $cmditch$elm_bigint$BigInt$abs = function (bigInt) {
	switch (bigInt.$) {
		case 'Zer':
			return $cmditch$elm_bigint$BigInt$Zer;
		case 'Neg':
			var mag = bigInt.a;
			return $cmditch$elm_bigint$BigInt$Pos(mag);
		default:
			var i = bigInt;
			return i;
	}
};
var $cmditch$elm_bigint$BigInt$MagnitudePair = function (a) {
	return {$: 'MagnitudePair', a: a};
};
var $cmditch$elm_bigint$BigInt$sameSizeRaw = F2(
	function (xs, ys) {
		var _v0 = _Utils_Tuple2(xs, ys);
		if (!_v0.a.b) {
			if (!_v0.b.b) {
				return _List_Nil;
			} else {
				var _v2 = _v0.b;
				var y = _v2.a;
				var ys_ = _v2.b;
				return A2(
					$elm$core$List$cons,
					_Utils_Tuple2(0, y),
					A2($cmditch$elm_bigint$BigInt$sameSizeRaw, _List_Nil, ys_));
			}
		} else {
			if (!_v0.b.b) {
				var _v1 = _v0.a;
				var x = _v1.a;
				var xs_ = _v1.b;
				return A2(
					$elm$core$List$cons,
					_Utils_Tuple2(x, 0),
					A2($cmditch$elm_bigint$BigInt$sameSizeRaw, xs_, _List_Nil));
			} else {
				var _v3 = _v0.a;
				var x = _v3.a;
				var xs_ = _v3.b;
				var _v4 = _v0.b;
				var y = _v4.a;
				var ys_ = _v4.b;
				return A2(
					$elm$core$List$cons,
					_Utils_Tuple2(x, y),
					A2($cmditch$elm_bigint$BigInt$sameSizeRaw, xs_, ys_));
			}
		}
	});
var $cmditch$elm_bigint$BigInt$sameSizeNotNormalized = F2(
	function (_v0, _v1) {
		var xs = _v0.a;
		var ys = _v1.a;
		return $cmditch$elm_bigint$BigInt$MagnitudePair(
			A2($cmditch$elm_bigint$BigInt$sameSizeRaw, xs, ys));
	});
var $cmditch$elm_bigint$BigInt$toPositiveSign = function (bigInt) {
	switch (bigInt.$) {
		case 'Zer':
			return A2($cmditch$elm_bigint$BigInt$mkBigIntNotNormalised, $cmditch$elm_bigint$BigInt$Zero, _List_Nil);
		case 'Neg':
			var digits = bigInt.a.a;
			return A2(
				$cmditch$elm_bigint$BigInt$mkBigIntNotNormalised,
				$cmditch$elm_bigint$BigInt$Positive,
				$cmditch$elm_bigint$BigInt$reverseMagnitude(digits));
		default:
			var digits = bigInt.a.a;
			return A2($cmditch$elm_bigint$BigInt$mkBigIntNotNormalised, $cmditch$elm_bigint$BigInt$Positive, digits);
	}
};
var $cmditch$elm_bigint$BigInt$add = F2(
	function (a, b) {
		var _v0 = $cmditch$elm_bigint$BigInt$toPositiveSign(b);
		var mb = _v0.b;
		var _v1 = $cmditch$elm_bigint$BigInt$toPositiveSign(a);
		var ma = _v1.b;
		var _v2 = A2($cmditch$elm_bigint$BigInt$sameSizeNotNormalized, ma, mb);
		var pairs = _v2.a;
		var added = A2(
			$elm$core$List$map,
			function (_v3) {
				var a_ = _v3.a;
				var b_ = _v3.b;
				return a_ + b_;
			},
			pairs);
		return $cmditch$elm_bigint$BigInt$normalise(
			A2(
				$cmditch$elm_bigint$BigInt$BigIntNotNormalised,
				$cmditch$elm_bigint$BigInt$Positive,
				$cmditch$elm_bigint$BigInt$MagnitudeNotNormalised(added)));
	});
var $cmditch$elm_bigint$BigInt$compareMagnitude = F4(
	function (x, y, xs, ys) {
		compareMagnitude:
		while (true) {
			var _v0 = _Utils_Tuple2(xs, ys);
			if (!_v0.a.b) {
				if (!_v0.b.b) {
					return A2($elm$core$Basics$compare, x, y);
				} else {
					return $elm$core$Basics$LT;
				}
			} else {
				if (!_v0.b.b) {
					return $elm$core$Basics$GT;
				} else {
					var _v1 = _v0.a;
					var x_ = _v1.a;
					var xss = _v1.b;
					var _v2 = _v0.b;
					var y_ = _v2.a;
					var yss = _v2.b;
					if (_Utils_eq(x_, y_)) {
						var $temp$x = x,
							$temp$y = y,
							$temp$xs = xss,
							$temp$ys = yss;
						x = $temp$x;
						y = $temp$y;
						xs = $temp$xs;
						ys = $temp$ys;
						continue compareMagnitude;
					} else {
						var $temp$x = x_,
							$temp$y = y_,
							$temp$xs = xss,
							$temp$ys = yss;
						x = $temp$x;
						y = $temp$y;
						xs = $temp$xs;
						ys = $temp$ys;
						continue compareMagnitude;
					}
				}
			}
		}
	});
var $cmditch$elm_bigint$BigInt$orderNegate = function (x) {
	switch (x.$) {
		case 'LT':
			return $elm$core$Basics$GT;
		case 'EQ':
			return $elm$core$Basics$EQ;
		default:
			return $elm$core$Basics$LT;
	}
};
var $cmditch$elm_bigint$BigInt$compare = F2(
	function (int1, int2) {
		var _v0 = _Utils_Tuple2(int1, int2);
		switch (_v0.a.$) {
			case 'Pos':
				if (_v0.b.$ === 'Pos') {
					var mag1 = _v0.a.a.a;
					var mag2 = _v0.b.a.a;
					return A4($cmditch$elm_bigint$BigInt$compareMagnitude, 0, 0, mag1, mag2);
				} else {
					return $elm$core$Basics$GT;
				}
			case 'Neg':
				if (_v0.b.$ === 'Neg') {
					var mag1 = _v0.a.a.a;
					var mag2 = _v0.b.a.a;
					return $cmditch$elm_bigint$BigInt$orderNegate(
						A4($cmditch$elm_bigint$BigInt$compareMagnitude, 0, 0, mag1, mag2));
				} else {
					return $elm$core$Basics$LT;
				}
			default:
				switch (_v0.b.$) {
					case 'Pos':
						var _v1 = _v0.a;
						return $elm$core$Basics$LT;
					case 'Zer':
						var _v2 = _v0.a;
						var _v3 = _v0.b;
						return $elm$core$Basics$EQ;
					default:
						var _v4 = _v0.a;
						return $elm$core$Basics$GT;
				}
		}
	});
var $cmditch$elm_bigint$BigInt$gt = F2(
	function (x, y) {
		return _Utils_eq(
			A2($cmditch$elm_bigint$BigInt$compare, x, y),
			$elm$core$Basics$GT);
	});
var $elm$core$Basics$not = _Basics_not;
var $cmditch$elm_bigint$BigInt$lte = F2(
	function (x, y) {
		return !A2($cmditch$elm_bigint$BigInt$gt, x, y);
	});
var $cmditch$elm_bigint$BigInt$magnitude = function (bigInt) {
	switch (bigInt.$) {
		case 'Zer':
			return $cmditch$elm_bigint$BigInt$Magnitude(_List_Nil);
		case 'Pos':
			var mag = bigInt.a;
			return mag;
		default:
			var mag = bigInt.a;
			return mag;
	}
};
var $cmditch$elm_bigint$BigInt$mulSingleDigit = F2(
	function (_v0, d) {
		var xs = _v0.a;
		return $cmditch$elm_bigint$BigInt$normaliseMagnitude(
			$cmditch$elm_bigint$BigInt$MagnitudeNotNormalised(
				A2(
					$elm$core$List$map,
					$elm$core$Basics$mul(d),
					xs)));
	});
var $cmditch$elm_bigint$BigInt$mulMagnitudes = F2(
	function (_v0, _v1) {
		var mag1 = _v0.a;
		var mag2 = _v1.a;
		if (!mag1.b) {
			return $cmditch$elm_bigint$BigInt$Magnitude(_List_Nil);
		} else {
			if (!mag1.b.b) {
				var m = mag1.a;
				return A2(
					$cmditch$elm_bigint$BigInt$mulSingleDigit,
					$cmditch$elm_bigint$BigInt$Magnitude(mag2),
					m);
			} else {
				var m = mag1.a;
				var mx = mag1.b;
				var accum = A2(
					$cmditch$elm_bigint$BigInt$mulSingleDigit,
					$cmditch$elm_bigint$BigInt$Magnitude(mag2),
					m);
				var _v3 = A2(
					$cmditch$elm_bigint$BigInt$mulMagnitudes,
					$cmditch$elm_bigint$BigInt$Magnitude(mx),
					$cmditch$elm_bigint$BigInt$Magnitude(mag2));
				var rest = _v3.a;
				var bigInt = A2(
					$cmditch$elm_bigint$BigInt$add,
					A2($cmditch$elm_bigint$BigInt$mkBigInt, $cmditch$elm_bigint$BigInt$Positive, accum),
					A2(
						$cmditch$elm_bigint$BigInt$mkBigInt,
						$cmditch$elm_bigint$BigInt$Positive,
						$cmditch$elm_bigint$BigInt$Magnitude(
							A2($elm$core$List$cons, 0, rest))));
				return $cmditch$elm_bigint$BigInt$magnitude(bigInt);
			}
		}
	});
var $cmditch$elm_bigint$BigInt$sign = function (bigInt) {
	switch (bigInt.$) {
		case 'Zer':
			return $cmditch$elm_bigint$BigInt$Zero;
		case 'Pos':
			return $cmditch$elm_bigint$BigInt$Positive;
		default:
			return $cmditch$elm_bigint$BigInt$Negative;
	}
};
var $cmditch$elm_bigint$BigInt$signProduct = F2(
	function (x, y) {
		return (_Utils_eq(x, $cmditch$elm_bigint$BigInt$Zero) || _Utils_eq(y, $cmditch$elm_bigint$BigInt$Zero)) ? $cmditch$elm_bigint$BigInt$Zero : (_Utils_eq(x, y) ? $cmditch$elm_bigint$BigInt$Positive : $cmditch$elm_bigint$BigInt$Negative);
	});
var $cmditch$elm_bigint$BigInt$mul = F2(
	function (int1, int2) {
		return A2(
			$cmditch$elm_bigint$BigInt$mkBigInt,
			A2(
				$cmditch$elm_bigint$BigInt$signProduct,
				$cmditch$elm_bigint$BigInt$sign(int1),
				$cmditch$elm_bigint$BigInt$sign(int2)),
			A2(
				$cmditch$elm_bigint$BigInt$mulMagnitudes,
				$cmditch$elm_bigint$BigInt$magnitude(int1),
				$cmditch$elm_bigint$BigInt$magnitude(int2)));
	});
var $cmditch$elm_bigint$BigInt$negate = function (bigInt) {
	switch (bigInt.$) {
		case 'Zer':
			return $cmditch$elm_bigint$BigInt$Zer;
		case 'Pos':
			var mag = bigInt.a;
			return $cmditch$elm_bigint$BigInt$Neg(mag);
		default:
			var mag = bigInt.a;
			return $cmditch$elm_bigint$BigInt$Pos(mag);
	}
};
var $cmditch$elm_bigint$BigInt$sub = F2(
	function (a, b) {
		return A2(
			$cmditch$elm_bigint$BigInt$add,
			a,
			$cmditch$elm_bigint$BigInt$negate(b));
	});
var $cmditch$elm_bigint$BigInt$zero = $cmditch$elm_bigint$BigInt$fromInt(0);
var $cmditch$elm_bigint$BigInt$divmodDigit_ = F4(
	function (to_test, padding, num, den) {
		if (!to_test) {
			return _Utils_Tuple2($cmditch$elm_bigint$BigInt$zero, num);
		} else {
			var x = $cmditch$elm_bigint$BigInt$fromInt(to_test);
			var candidate = A2(
				$cmditch$elm_bigint$BigInt$mul,
				A2($cmditch$elm_bigint$BigInt$mul, x, den),
				padding);
			var _v0 = A2($cmditch$elm_bigint$BigInt$lte, candidate, num) ? _Utils_Tuple2(
				A2($cmditch$elm_bigint$BigInt$mul, x, padding),
				A2($cmditch$elm_bigint$BigInt$sub, num, candidate)) : _Utils_Tuple2($cmditch$elm_bigint$BigInt$zero, num);
			var newdiv = _v0.a;
			var newmod = _v0.b;
			var _v1 = A4($cmditch$elm_bigint$BigInt$divmodDigit_, (to_test / 2) | 0, padding, newmod, den);
			var restdiv = _v1.a;
			var restmod = _v1.b;
			return _Utils_Tuple2(
				A2($cmditch$elm_bigint$BigInt$add, newdiv, restdiv),
				restmod);
		}
	});
var $cmditch$elm_bigint$BigInt$maxDigitBits = $elm$core$Basics$ceiling(
	A2($elm$core$Basics$logBase, 2, $cmditch$elm_bigint$Constants$maxDigitValue));
var $cmditch$elm_bigint$BigInt$divmodDigit = F3(
	function (padding, x, y) {
		return A4(
			$cmditch$elm_bigint$BigInt$divmodDigit_,
			A2($elm$core$Basics$pow, 2, $cmditch$elm_bigint$BigInt$maxDigitBits),
			padding,
			x,
			y);
	});
var $cmditch$elm_bigint$BigInt$one = $cmditch$elm_bigint$BigInt$fromInt(1);
var $elm$core$Basics$always = F2(
	function (a, _v0) {
		return a;
	});
var $cmditch$elm_bigint$BigInt$repeatedly = F3(
	function (f, x, n) {
		return A3(
			$elm$core$List$foldl,
			$elm$core$Basics$always(f),
			x,
			A2($elm$core$List$range, 1, n));
	});
var $cmditch$elm_bigint$BigInt$padDigits = function (n) {
	return A3(
		$cmditch$elm_bigint$BigInt$repeatedly,
		$cmditch$elm_bigint$BigInt$mul(
			$cmditch$elm_bigint$BigInt$fromInt($cmditch$elm_bigint$BigInt$baseDigit)),
		$cmditch$elm_bigint$BigInt$one,
		n);
};
var $cmditch$elm_bigint$BigInt$divMod_ = F3(
	function (n, num, den) {
		if (!n) {
			return A3(
				$cmditch$elm_bigint$BigInt$divmodDigit,
				$cmditch$elm_bigint$BigInt$padDigits(n),
				num,
				den);
		} else {
			var _v0 = A3(
				$cmditch$elm_bigint$BigInt$divmodDigit,
				$cmditch$elm_bigint$BigInt$padDigits(n),
				num,
				den);
			var cdiv = _v0.a;
			var cmod = _v0.b;
			var _v1 = A3($cmditch$elm_bigint$BigInt$divMod_, n - 1, cmod, den);
			var rdiv = _v1.a;
			var rmod = _v1.b;
			return _Utils_Tuple2(
				A2($cmditch$elm_bigint$BigInt$add, cdiv, rdiv),
				rmod);
		}
	});
var $cmditch$elm_bigint$BigInt$toDigits = function (bigInt) {
	switch (bigInt.$) {
		case 'Zer':
			return _List_Nil;
		case 'Pos':
			var ds = bigInt.a.a;
			return ds;
		default:
			var ds = bigInt.a.a;
			return ds;
	}
};
var $cmditch$elm_bigint$BigInt$divmod = F2(
	function (num, den) {
		if (_Utils_eq(den, $cmditch$elm_bigint$BigInt$zero)) {
			return $elm$core$Maybe$Nothing;
		} else {
			var cand_l = ($elm$core$List$length(
				$cmditch$elm_bigint$BigInt$toDigits(num)) - $elm$core$List$length(
				$cmditch$elm_bigint$BigInt$toDigits(den))) + 1;
			var _v0 = A3(
				$cmditch$elm_bigint$BigInt$divMod_,
				A2($elm$core$Basics$max, 0, cand_l),
				$cmditch$elm_bigint$BigInt$abs(num),
				$cmditch$elm_bigint$BigInt$abs(den));
			var d = _v0.a;
			var m = _v0.b;
			return $elm$core$Maybe$Just(
				_Utils_Tuple2(
					A2(
						$cmditch$elm_bigint$BigInt$mkBigInt,
						A2(
							$cmditch$elm_bigint$BigInt$signProduct,
							$cmditch$elm_bigint$BigInt$sign(num),
							$cmditch$elm_bigint$BigInt$sign(den)),
						$cmditch$elm_bigint$BigInt$magnitude(d)),
					A2(
						$cmditch$elm_bigint$BigInt$mkBigInt,
						$cmditch$elm_bigint$BigInt$sign(num),
						$cmditch$elm_bigint$BigInt$magnitude(m))));
		}
	});
var $cmditch$elm_bigint$BigInt$lt = F2(
	function (x, y) {
		return _Utils_eq(
			A2($cmditch$elm_bigint$BigInt$compare, x, y),
			$elm$core$Basics$LT);
	});
var $elm$core$Maybe$map = F2(
	function (f, maybe) {
		if (maybe.$ === 'Just') {
			var value = maybe.a;
			return $elm$core$Maybe$Just(
				f(value));
		} else {
			return $elm$core$Maybe$Nothing;
		}
	});
var $elm$core$List$singleton = function (value) {
	return _List_fromArray(
		[value]);
};
var $elm$core$String$concat = function (strings) {
	return A2($elm$core$String$join, '', strings);
};
var $elm$core$String$cons = _String_cons;
var $elm$core$String$fromChar = function (_char) {
	return A2($elm$core$String$cons, _char, '');
};
var $elm$core$Bitwise$shiftRightBy = _Bitwise_shiftRightBy;
var $elm$core$String$repeatHelp = F3(
	function (n, chunk, result) {
		return (n <= 0) ? result : A3(
			$elm$core$String$repeatHelp,
			n >> 1,
			_Utils_ap(chunk, chunk),
			(!(n & 1)) ? result : _Utils_ap(result, chunk));
	});
var $elm$core$String$repeat = F2(
	function (n, chunk) {
		return A3($elm$core$String$repeatHelp, n, chunk, '');
	});
var $elm$core$String$padLeft = F3(
	function (n, _char, string) {
		return _Utils_ap(
			A2(
				$elm$core$String$repeat,
				n - $elm$core$String$length(string),
				$elm$core$String$fromChar(_char)),
			string);
	});
var $cmditch$elm_bigint$BigInt$fillZeroes = A2(
	$elm$core$Basics$composeL,
	A2(
		$elm$core$String$padLeft,
		$cmditch$elm_bigint$Constants$maxDigitMagnitude,
		_Utils_chr('0')),
	$elm$core$String$fromInt);
var $cmditch$elm_bigint$BigInt$revMagnitudeToString = function (_v0) {
	var digits = _v0.a;
	var _v1 = $elm$core$List$reverse(digits);
	if (!_v1.b) {
		return '0';
	} else {
		var x = _v1.a;
		var xs = _v1.b;
		return $elm$core$String$concat(
			A2(
				$elm$core$List$cons,
				$elm$core$String$fromInt(x),
				A2($elm$core$List$map, $cmditch$elm_bigint$BigInt$fillZeroes, xs)));
	}
};
var $cmditch$elm_bigint$BigInt$toString = function (bigInt) {
	switch (bigInt.$) {
		case 'Zer':
			return '0';
		case 'Pos':
			var mag = bigInt.a;
			return $cmditch$elm_bigint$BigInt$revMagnitudeToString(mag);
		default:
			var mag = bigInt.a;
			return '-' + $cmditch$elm_bigint$BigInt$revMagnitudeToString(mag);
	}
};
var $author$project$Pine$blobValueFromBigInt = function (bigint) {
	var value = $cmditch$elm_bigint$BigInt$abs(bigint);
	var unsignedBytesFromIntValue = function (intValue) {
		if (A2(
			$cmditch$elm_bigint$BigInt$lt,
			intValue,
			$cmditch$elm_bigint$BigInt$fromInt(256))) {
			return A2(
				$elm$core$Maybe$map,
				$elm$core$List$singleton,
				$elm$core$String$toInt(
					$cmditch$elm_bigint$BigInt$toString(intValue)));
		} else {
			var _v0 = A2(
				$cmditch$elm_bigint$BigInt$divmod,
				intValue,
				$cmditch$elm_bigint$BigInt$fromInt(256));
			if (_v0.$ === 'Nothing') {
				return $elm$core$Maybe$Nothing;
			} else {
				var _v1 = _v0.a;
				var upper = _v1.a;
				var lower = _v1.b;
				var _v2 = unsignedBytesFromIntValue(upper);
				if (_v2.$ === 'Nothing') {
					return $elm$core$Maybe$Nothing;
				} else {
					var upperBytes = _v2.a;
					var _v3 = $elm$core$String$toInt(
						$cmditch$elm_bigint$BigInt$toString(lower));
					if (_v3.$ === 'Nothing') {
						return $elm$core$Maybe$Nothing;
					} else {
						var lowerByte = _v3.a;
						return $elm$core$Maybe$Just(
							_Utils_ap(
								upperBytes,
								_List_fromArray(
									[lowerByte])));
					}
				}
			}
		}
	};
	var signByte = _Utils_eq(value, bigint) ? 0 : 128;
	return A2(
		$elm$core$List$cons,
		signByte,
		A2(
			$elm$core$Maybe$withDefault,
			_List_Nil,
			unsignedBytesFromIntValue(value)));
};
var $author$project$Pine$unsignedBlobValueFromBigInt = function (bigint) {
	var _v0 = $author$project$Pine$blobValueFromBigInt(bigint);
	if (!_v0.b) {
		return $elm$core$Maybe$Nothing;
	} else {
		var signByte = _v0.a;
		var unsignedBytes = _v0.b;
		return (!signByte) ? $elm$core$Maybe$Just(unsignedBytes) : $elm$core$Maybe$Nothing;
	}
};
var $author$project$Pine$valueFromChar = A2(
	$elm$core$Basics$composeR,
	$elm$core$Char$toCode,
	A2(
		$elm$core$Basics$composeR,
		$cmditch$elm_bigint$BigInt$fromInt,
		A2(
			$elm$core$Basics$composeR,
			$author$project$Pine$unsignedBlobValueFromBigInt,
			A2(
				$elm$core$Basics$composeR,
				$elm$core$Maybe$withDefault(_List_Nil),
				$author$project$Pine$BlobValue))));
var $author$project$Pine$valueFromString = A2(
	$elm$core$Basics$composeR,
	$elm$core$String$toList,
	A2(
		$elm$core$Basics$composeR,
		$elm$core$List$map($author$project$Pine$valueFromChar),
		$author$project$Pine$ListValue));
var $author$project$FileTreeInWorkspace$compositionPineValueFromFileTreeNode = function (treeNode) {
	if (treeNode.$ === 'BlobNode') {
		var asBytes = treeNode.a;
		return $author$project$Pine$BlobValue(
			$TSFoster$elm_bytes_extra$Bytes$Extra$toByteValues(asBytes));
	} else {
		var entries = treeNode.a;
		return $author$project$Pine$ListValue(
			A2(
				$elm$core$List$map,
				function (_v1) {
					var entryName = _v1.a;
					var entryValue = _v1.b;
					return $author$project$Pine$ListValue(
						_List_fromArray(
							[
								$author$project$Pine$valueFromString(entryName),
								$author$project$FileTreeInWorkspace$compositionPineValueFromFileTreeNode(entryValue)
							]));
				},
				entries));
	}
};
var $folkertdev$elm_sha2$Internal$SHA256$Digest = function (a) {
	return {$: 'Digest', a: a};
};
var $folkertdev$elm_sha2$Internal$SHA256$Tuple8 = F8(
	function (a, b, c, d, e, f, g, h) {
		return {$: 'Tuple8', a: a, b: b, c: c, d: d, e: e, f: f, g: g, h: h};
	});
var $folkertdev$elm_sha2$Internal$SHA256$loopHelp = F2(
	function (step, _v0) {
		var n = _v0.a;
		var state = _v0.b;
		return (n > 0) ? A2(
			$elm$bytes$Bytes$Decode$map,
			function (_new) {
				return $elm$bytes$Bytes$Decode$Loop(
					_Utils_Tuple2(n - 1, _new));
			},
			step(state)) : $elm$bytes$Bytes$Decode$succeed(
			$elm$bytes$Bytes$Decode$Done(state));
	});
var $folkertdev$elm_sha2$Internal$SHA256$iterate = F3(
	function (n, step, initial) {
		return A2(
			$elm$bytes$Bytes$Decode$loop,
			_Utils_Tuple2(n, initial),
			$folkertdev$elm_sha2$Internal$SHA256$loopHelp(step));
	});
var $elm$bytes$Bytes$Decode$map5 = F6(
	function (func, _v0, _v1, _v2, _v3, _v4) {
		var decodeA = _v0.a;
		var decodeB = _v1.a;
		var decodeC = _v2.a;
		var decodeD = _v3.a;
		var decodeE = _v4.a;
		return $elm$bytes$Bytes$Decode$Decoder(
			F2(
				function (bites, offset) {
					var _v5 = A2(decodeA, bites, offset);
					var aOffset = _v5.a;
					var a = _v5.b;
					var _v6 = A2(decodeB, bites, aOffset);
					var bOffset = _v6.a;
					var b = _v6.b;
					var _v7 = A2(decodeC, bites, bOffset);
					var cOffset = _v7.a;
					var c = _v7.b;
					var _v8 = A2(decodeD, bites, cOffset);
					var dOffset = _v8.a;
					var d = _v8.b;
					var _v9 = A2(decodeE, bites, dOffset);
					var eOffset = _v9.a;
					var e = _v9.b;
					return _Utils_Tuple2(
						eOffset,
						A5(func, a, b, c, d, e));
				}));
	});
var $folkertdev$elm_sha2$Internal$SHA256$map16 = function (f) {
	return function (b1) {
		return function (b2) {
			return function (b3) {
				return function (b4) {
					return function (b5) {
						return function (b6) {
							return function (b7) {
								return function (b8) {
									return function (b9) {
										return function (b10) {
											return function (b11) {
												return function (b12) {
													return function (b13) {
														return function (b14) {
															return function (b15) {
																return function (b16) {
																	return A6(
																		$elm$bytes$Bytes$Decode$map5,
																		F5(
																			function (a, b, c, d, e) {
																				return A4(e, d, c, b, a);
																			}),
																		b16,
																		b15,
																		b14,
																		b13,
																		A6(
																			$elm$bytes$Bytes$Decode$map5,
																			F5(
																				function (a, b, c, d, e) {
																					return A4(e, d, c, b, a);
																				}),
																			b12,
																			b11,
																			b10,
																			b9,
																			A6(
																				$elm$bytes$Bytes$Decode$map5,
																				F5(
																					function (a, b, c, d, e) {
																						return A4(e, d, c, b, a);
																					}),
																				b8,
																				b7,
																				b6,
																				b5,
																				A6(
																					$elm$bytes$Bytes$Decode$map5,
																					F5(
																						function (a, b, c, d, e) {
																							return A4(e, d, c, b, a);
																						}),
																					b4,
																					b3,
																					b2,
																					b1,
																					$elm$bytes$Bytes$Decode$succeed(f)))));
																};
															};
														};
													};
												};
											};
										};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var $folkertdev$elm_sha2$Internal$SHA256$DeltaState = function (a) {
	return {$: 'DeltaState', a: a};
};
var $folkertdev$elm_sha2$Internal$SHA256$State = function (a) {
	return {$: 'State', a: a};
};
var $elm$core$Bitwise$complement = _Bitwise_complement;
var $elm$core$Array$bitMask = 4294967295 >>> (32 - $elm$core$Array$shiftStep);
var $elm$core$Elm$JsArray$unsafeGet = _JsArray_unsafeGet;
var $elm$core$Array$getHelp = F3(
	function (shift, index, tree) {
		getHelp:
		while (true) {
			var pos = $elm$core$Array$bitMask & (index >>> shift);
			var _v0 = A2($elm$core$Elm$JsArray$unsafeGet, pos, tree);
			if (_v0.$ === 'SubTree') {
				var subTree = _v0.a;
				var $temp$shift = shift - $elm$core$Array$shiftStep,
					$temp$index = index,
					$temp$tree = subTree;
				shift = $temp$shift;
				index = $temp$index;
				tree = $temp$tree;
				continue getHelp;
			} else {
				var values = _v0.a;
				return A2($elm$core$Elm$JsArray$unsafeGet, $elm$core$Array$bitMask & index, values);
			}
		}
	});
var $elm$core$Array$tailIndex = function (len) {
	return (len >>> 5) << 5;
};
var $elm$core$Array$get = F2(
	function (index, _v0) {
		var len = _v0.a;
		var startShift = _v0.b;
		var tree = _v0.c;
		var tail = _v0.d;
		return ((index < 0) || (_Utils_cmp(index, len) > -1)) ? $elm$core$Maybe$Nothing : ((_Utils_cmp(
			index,
			$elm$core$Array$tailIndex(len)) > -1) ? $elm$core$Maybe$Just(
			A2($elm$core$Elm$JsArray$unsafeGet, $elm$core$Array$bitMask & index, tail)) : $elm$core$Maybe$Just(
			A3($elm$core$Array$getHelp, startShift, index, tree)));
	});
var $elm$core$Array$fromListHelp = F3(
	function (list, nodeList, nodeListSize) {
		fromListHelp:
		while (true) {
			var _v0 = A2($elm$core$Elm$JsArray$initializeFromList, $elm$core$Array$branchFactor, list);
			var jsArray = _v0.a;
			var remainingItems = _v0.b;
			if (_Utils_cmp(
				$elm$core$Elm$JsArray$length(jsArray),
				$elm$core$Array$branchFactor) < 0) {
				return A2(
					$elm$core$Array$builderToArray,
					true,
					{nodeList: nodeList, nodeListSize: nodeListSize, tail: jsArray});
			} else {
				var $temp$list = remainingItems,
					$temp$nodeList = A2(
					$elm$core$List$cons,
					$elm$core$Array$Leaf(jsArray),
					nodeList),
					$temp$nodeListSize = nodeListSize + 1;
				list = $temp$list;
				nodeList = $temp$nodeList;
				nodeListSize = $temp$nodeListSize;
				continue fromListHelp;
			}
		}
	});
var $elm$core$Array$fromList = function (list) {
	if (!list.b) {
		return $elm$core$Array$empty;
	} else {
		return A3($elm$core$Array$fromListHelp, list, _List_Nil, 0);
	}
};
var $folkertdev$elm_sha2$Internal$SHA256$ks = $elm$core$Array$fromList(
	_List_fromArray(
		[1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298]));
var $folkertdev$elm_sha2$Internal$SHA256$calculateDigestDeltas = F3(
	function (index, w, _v0) {
		var _v1 = _v0.a;
		var a = _v1.a;
		var b = _v1.b;
		var c = _v1.c;
		var d = _v1.d;
		var e = _v1.e;
		var f = _v1.f;
		var g = _v1.g;
		var h = _v1.h;
		var maj = (b & c) ^ (a & (b ^ c));
		var k = function () {
			var _v2 = A2($elm$core$Array$get, index, $folkertdev$elm_sha2$Internal$SHA256$ks);
			if (_v2.$ === 'Nothing') {
				return 0;
			} else {
				var v = _v2.a;
				return v;
			}
		}();
		var ch = (((~e) & g) ^ (e & f)) >>> 0;
		var bigSigma1 = ((e << (32 - 25)) | (e >>> 25)) ^ (((e << (32 - 11)) | (e >>> 11)) ^ ((e << (32 - 6)) | (e >>> 6)));
		var t1 = (((h + bigSigma1) + ch) + k) + w;
		var newE = (d + t1) >>> 0;
		var bigSigma0 = ((a << (32 - 22)) | (a >>> 22)) ^ (((a << (32 - 13)) | (a >>> 13)) ^ ((a << (32 - 2)) | (a >>> 2)));
		var t2 = bigSigma0 + maj;
		var newA = (t1 + t2) >>> 0;
		var result = A8($folkertdev$elm_sha2$Internal$SHA256$Tuple8, newA, a, b, c, newE, e, f, g);
		var alt = (e >>> 25) ^ ((e << (32 - 25)) ^ ((e >>> 11) ^ ((e << (32 - 11)) ^ ((e >>> 6) ^ (e << (32 - 6))))));
		return $folkertdev$elm_sha2$Internal$SHA256$DeltaState(result);
	});
var $folkertdev$elm_sha2$Internal$SHA256$numberOfWords = 16;
var $folkertdev$elm_sha2$Internal$SHA256$reduceWordsHelp = function (i) {
	return function (deltaState) {
		return function (b16) {
			return function (b15) {
				return function (b14) {
					return function (b13) {
						return function (b12) {
							return function (b11) {
								return function (b10) {
									return function (b9) {
										return function (b8) {
											return function (b7) {
												return function (b6) {
													return function (b5) {
														return function (b4) {
															return function (b3) {
																return function (b2) {
																	return function (b1) {
																		reduceWordsHelp:
																		while (true) {
																			if (i < 48) {
																				var smallSigma1 = (b2 >>> 10) ^ (((b2 << (32 - 19)) | (b2 >>> 19)) ^ ((b2 << (32 - 17)) | (b2 >>> 17)));
																				var smallSigma0 = (b15 >>> 3) ^ (((b15 << (32 - 18)) | (b15 >>> 18)) ^ ((b15 << (32 - 7)) | (b15 >>> 7)));
																				var w = (((smallSigma1 + b7) + smallSigma0) + b16) >>> 0;
																				var $temp$i = i + 1,
																					$temp$deltaState = A3($folkertdev$elm_sha2$Internal$SHA256$calculateDigestDeltas, i + $folkertdev$elm_sha2$Internal$SHA256$numberOfWords, w, deltaState),
																					$temp$b16 = b15,
																					$temp$b15 = b14,
																					$temp$b14 = b13,
																					$temp$b13 = b12,
																					$temp$b12 = b11,
																					$temp$b11 = b10,
																					$temp$b10 = b9,
																					$temp$b9 = b8,
																					$temp$b8 = b7,
																					$temp$b7 = b6,
																					$temp$b6 = b5,
																					$temp$b5 = b4,
																					$temp$b4 = b3,
																					$temp$b3 = b2,
																					$temp$b2 = b1,
																					$temp$b1 = w;
																				i = $temp$i;
																				deltaState = $temp$deltaState;
																				b16 = $temp$b16;
																				b15 = $temp$b15;
																				b14 = $temp$b14;
																				b13 = $temp$b13;
																				b12 = $temp$b12;
																				b11 = $temp$b11;
																				b10 = $temp$b10;
																				b9 = $temp$b9;
																				b8 = $temp$b8;
																				b7 = $temp$b7;
																				b6 = $temp$b6;
																				b5 = $temp$b5;
																				b4 = $temp$b4;
																				b3 = $temp$b3;
																				b2 = $temp$b2;
																				b1 = $temp$b1;
																				continue reduceWordsHelp;
																			} else {
																				return deltaState;
																			}
																		}
																	};
																};
															};
														};
													};
												};
											};
										};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var $folkertdev$elm_sha2$Internal$SHA256$reduceMessage = function (_v0) {
	return function (b16) {
		return function (b15) {
			return function (b14) {
				return function (b13) {
					return function (b12) {
						return function (b11) {
							return function (b10) {
								return function (b9) {
									return function (b8) {
										return function (b7) {
											return function (b6) {
												return function (b5) {
													return function (b4) {
														return function (b3) {
															return function (b2) {
																return function (b1) {
																	var initial = _v0.a;
																	var h0 = initial.a;
																	var h1 = initial.b;
																	var h2 = initial.c;
																	var h3 = initial.d;
																	var h4 = initial.e;
																	var h5 = initial.f;
																	var h6 = initial.g;
																	var h7 = initial.h;
																	var initialDeltaState = A3(
																		$folkertdev$elm_sha2$Internal$SHA256$calculateDigestDeltas,
																		15,
																		b16,
																		A3(
																			$folkertdev$elm_sha2$Internal$SHA256$calculateDigestDeltas,
																			14,
																			b15,
																			A3(
																				$folkertdev$elm_sha2$Internal$SHA256$calculateDigestDeltas,
																				13,
																				b14,
																				A3(
																					$folkertdev$elm_sha2$Internal$SHA256$calculateDigestDeltas,
																					12,
																					b13,
																					A3(
																						$folkertdev$elm_sha2$Internal$SHA256$calculateDigestDeltas,
																						11,
																						b12,
																						A3(
																							$folkertdev$elm_sha2$Internal$SHA256$calculateDigestDeltas,
																							10,
																							b11,
																							A3(
																								$folkertdev$elm_sha2$Internal$SHA256$calculateDigestDeltas,
																								9,
																								b10,
																								A3(
																									$folkertdev$elm_sha2$Internal$SHA256$calculateDigestDeltas,
																									8,
																									b9,
																									A3(
																										$folkertdev$elm_sha2$Internal$SHA256$calculateDigestDeltas,
																										7,
																										b8,
																										A3(
																											$folkertdev$elm_sha2$Internal$SHA256$calculateDigestDeltas,
																											6,
																											b7,
																											A3(
																												$folkertdev$elm_sha2$Internal$SHA256$calculateDigestDeltas,
																												5,
																												b6,
																												A3(
																													$folkertdev$elm_sha2$Internal$SHA256$calculateDigestDeltas,
																													4,
																													b5,
																													A3(
																														$folkertdev$elm_sha2$Internal$SHA256$calculateDigestDeltas,
																														3,
																														b4,
																														A3(
																															$folkertdev$elm_sha2$Internal$SHA256$calculateDigestDeltas,
																															2,
																															b3,
																															A3(
																																$folkertdev$elm_sha2$Internal$SHA256$calculateDigestDeltas,
																																1,
																																b2,
																																A3(
																																	$folkertdev$elm_sha2$Internal$SHA256$calculateDigestDeltas,
																																	0,
																																	b1,
																																	$folkertdev$elm_sha2$Internal$SHA256$DeltaState(initial)))))))))))))))));
																	var _v1 = $folkertdev$elm_sha2$Internal$SHA256$reduceWordsHelp(0)(initialDeltaState)(b1)(b2)(b3)(b4)(b5)(b6)(b7)(b8)(b9)(b10)(b11)(b12)(b13)(b14)(b15)(b16);
																	var _v2 = _v1.a;
																	var a = _v2.a;
																	var b = _v2.b;
																	var c = _v2.c;
																	var d = _v2.d;
																	var e = _v2.e;
																	var f = _v2.f;
																	var g = _v2.g;
																	var h = _v2.h;
																	return $folkertdev$elm_sha2$Internal$SHA256$State(
																		A8($folkertdev$elm_sha2$Internal$SHA256$Tuple8, h0 + a, h1 + b, h2 + c, h3 + d, h4 + e, h5 + f, h6 + g, h7 + h));
																};
															};
														};
													};
												};
											};
										};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var $folkertdev$elm_sha2$Internal$SHA256$u32 = $elm$bytes$Bytes$Decode$unsignedInt32($elm$bytes$Bytes$BE);
var $folkertdev$elm_sha2$Internal$SHA256$reduceBytesMessage = function (state) {
	return $folkertdev$elm_sha2$Internal$SHA256$map16(
		$folkertdev$elm_sha2$Internal$SHA256$reduceMessage(state))($folkertdev$elm_sha2$Internal$SHA256$u32)($folkertdev$elm_sha2$Internal$SHA256$u32)($folkertdev$elm_sha2$Internal$SHA256$u32)($folkertdev$elm_sha2$Internal$SHA256$u32)($folkertdev$elm_sha2$Internal$SHA256$u32)($folkertdev$elm_sha2$Internal$SHA256$u32)($folkertdev$elm_sha2$Internal$SHA256$u32)($folkertdev$elm_sha2$Internal$SHA256$u32)($folkertdev$elm_sha2$Internal$SHA256$u32)($folkertdev$elm_sha2$Internal$SHA256$u32)($folkertdev$elm_sha2$Internal$SHA256$u32)($folkertdev$elm_sha2$Internal$SHA256$u32)($folkertdev$elm_sha2$Internal$SHA256$u32)($folkertdev$elm_sha2$Internal$SHA256$u32)($folkertdev$elm_sha2$Internal$SHA256$u32)($folkertdev$elm_sha2$Internal$SHA256$u32);
};
var $folkertdev$elm_sha2$Internal$SHA256$hashChunks = F2(
	function (message, state) {
		var numberOfChunks = ($elm$bytes$Bytes$width(message) / 64) | 0;
		var hashState = A3($folkertdev$elm_sha2$Internal$SHA256$iterate, numberOfChunks, $folkertdev$elm_sha2$Internal$SHA256$reduceBytesMessage, state);
		var _v0 = A2($elm$bytes$Bytes$Decode$decode, hashState, message);
		if (_v0.$ === 'Just') {
			var newState = _v0.a;
			return newState;
		} else {
			return state;
		}
	});
var $folkertdev$elm_sha2$Internal$SHA256$maxSize = 2048 * 64;
var $elm$bytes$Bytes$Encode$Bytes = function (a) {
	return {$: 'Bytes', a: a};
};
var $elm$bytes$Bytes$Encode$bytes = $elm$bytes$Bytes$Encode$Bytes;
var $elm$core$List$repeatHelp = F3(
	function (result, n, value) {
		repeatHelp:
		while (true) {
			if (n <= 0) {
				return result;
			} else {
				var $temp$result = A2($elm$core$List$cons, value, result),
					$temp$n = n - 1,
					$temp$value = value;
				result = $temp$result;
				n = $temp$n;
				value = $temp$value;
				continue repeatHelp;
			}
		}
	});
var $elm$core$List$repeat = F2(
	function (n, value) {
		return A3($elm$core$List$repeatHelp, _List_Nil, n, value);
	});
var $elm$bytes$Bytes$Encode$U32 = F2(
	function (a, b) {
		return {$: 'U32', a: a, b: b};
	});
var $elm$bytes$Bytes$Encode$unsignedInt32 = $elm$bytes$Bytes$Encode$U32;
var $elm$bytes$Bytes$Encode$U8 = function (a) {
	return {$: 'U8', a: a};
};
var $elm$bytes$Bytes$Encode$unsignedInt8 = $elm$bytes$Bytes$Encode$U8;
var $folkertdev$elm_sha2$Internal$SHA256$padBuffer = F2(
	function (byteCount, bytes) {
		var finalBlockSize = byteCount & 63;
		var paddingSize = (finalBlockSize < 56) ? ((55 - finalBlockSize) + 4) : ((119 - finalBlockSize) + 4);
		var message = $elm$bytes$Bytes$Encode$encode(
			$elm$bytes$Bytes$Encode$sequence(
				_List_fromArray(
					[
						$elm$bytes$Bytes$Encode$bytes(bytes),
						$elm$bytes$Bytes$Encode$unsignedInt8(128),
						$elm$bytes$Bytes$Encode$sequence(
						A2(
							$elm$core$List$repeat,
							paddingSize,
							$elm$bytes$Bytes$Encode$unsignedInt8(0))),
						A2($elm$bytes$Bytes$Encode$unsignedInt32, $elm$bytes$Bytes$BE, byteCount << 3)
					])));
		return message;
	});
var $elm$bytes$Bytes$Decode$bytes = function (n) {
	return $elm$bytes$Bytes$Decode$Decoder(
		_Bytes_read_bytes(n));
};
var $elm$core$Tuple$pair = F2(
	function (a, b) {
		return _Utils_Tuple2(a, b);
	});
var $folkertdev$elm_sha2$Internal$SHA256$splitBytes = F2(
	function (n, buffer) {
		var decoder = A3(
			$elm$bytes$Bytes$Decode$map2,
			$elm$core$Tuple$pair,
			$elm$bytes$Bytes$Decode$bytes(n),
			$elm$bytes$Bytes$Decode$bytes(
				$elm$bytes$Bytes$width(buffer) - n));
		var _v0 = A2($elm$bytes$Bytes$Decode$decode, decoder, buffer);
		if (_v0.$ === 'Just') {
			var v = _v0.a;
			return v;
		} else {
			return _Utils_Tuple2(
				buffer,
				$elm$bytes$Bytes$Encode$encode(
					$elm$bytes$Bytes$Encode$sequence(_List_Nil)));
		}
	});
var $folkertdev$elm_sha2$Internal$SHA256$hashBytesHelp = F4(
	function (fullSize, isLast, bytes, state) {
		hashBytesHelp:
		while (true) {
			if (_Utils_cmp(
				$elm$bytes$Bytes$width(bytes),
				$folkertdev$elm_sha2$Internal$SHA256$maxSize) > 0) {
				var _v0 = A2($folkertdev$elm_sha2$Internal$SHA256$splitBytes, $folkertdev$elm_sha2$Internal$SHA256$maxSize, bytes);
				var first = _v0.a;
				var rest = _v0.b;
				var $temp$fullSize = fullSize,
					$temp$isLast = true,
					$temp$bytes = rest,
					$temp$state = A4($folkertdev$elm_sha2$Internal$SHA256$hashBytesHelp, fullSize, false, first, state);
				fullSize = $temp$fullSize;
				isLast = $temp$isLast;
				bytes = $temp$bytes;
				state = $temp$state;
				continue hashBytesHelp;
			} else {
				if (isLast) {
					return A2(
						$folkertdev$elm_sha2$Internal$SHA256$hashChunks,
						A2($folkertdev$elm_sha2$Internal$SHA256$padBuffer, fullSize, bytes),
						state);
				} else {
					return A2($folkertdev$elm_sha2$Internal$SHA256$hashChunks, bytes, state);
				}
			}
		}
	});
var $folkertdev$elm_sha2$Internal$SHA256$hashBytes = F2(
	function (state, bytes) {
		var _v0 = A4(
			$folkertdev$elm_sha2$Internal$SHA256$hashBytesHelp,
			$elm$bytes$Bytes$width(bytes),
			true,
			bytes,
			state);
		var _v1 = _v0.a;
		var a = _v1.a;
		var b = _v1.b;
		var c = _v1.c;
		var d = _v1.d;
		var e = _v1.e;
		var f = _v1.f;
		var g = _v1.g;
		var h = _v1.h;
		return $folkertdev$elm_sha2$Internal$SHA256$Digest(
			A8($folkertdev$elm_sha2$Internal$SHA256$Tuple8, a >>> 0, b >>> 0, c >>> 0, d >>> 0, e >>> 0, f >>> 0, g >>> 0, h >>> 0));
	});
var $folkertdev$elm_sha2$Internal$SHA256$fromByteValues = F2(
	function (state, input) {
		return A2(
			$folkertdev$elm_sha2$Internal$SHA256$hashBytes,
			state,
			$elm$bytes$Bytes$Encode$encode(
				$elm$bytes$Bytes$Encode$sequence(
					A2($elm$core$List$map, $elm$bytes$Bytes$Encode$unsignedInt8, input))));
	});
var $folkertdev$elm_sha2$SHA256$initialState = $folkertdev$elm_sha2$Internal$SHA256$State(
	A8($folkertdev$elm_sha2$Internal$SHA256$Tuple8, 1779033703, 3144134277, 1013904242, 2773480762, 1359893119, 2600822924, 528734635, 1541459225));
var $folkertdev$elm_sha2$SHA256$fromByteValues = $folkertdev$elm_sha2$Internal$SHA256$fromByteValues($folkertdev$elm_sha2$SHA256$initialState);
var $folkertdev$elm_sha2$SHA256$wordToBytes = function (_int) {
	return _List_fromArray(
		[255 & (_int >>> 24), 255 & (_int >>> 16), 255 & (_int >>> 8), 255 & _int]);
};
var $folkertdev$elm_sha2$SHA256$toByteValues = function (_v0) {
	var _v1 = _v0.a;
	var a = _v1.a;
	var b = _v1.b;
	var c = _v1.c;
	var d = _v1.d;
	var e = _v1.e;
	var f = _v1.f;
	var g = _v1.g;
	var h = _v1.h;
	return A2(
		$elm$core$List$concatMap,
		$folkertdev$elm_sha2$SHA256$wordToBytes,
		_List_fromArray(
			[a, b, c, d, e, f, g, h]));
};
var $author$project$Pine$hashDigestFromValue = function (value) {
	if (value.$ === 'BlobValue') {
		var bytes = value.a;
		var prefix = 'blob ' + $elm$core$String$fromInt(
			$elm$core$List$length(bytes));
		return $folkertdev$elm_sha2$SHA256$fromByteValues(
			_Utils_ap(
				A2(
					$elm$core$List$map,
					$elm$core$Char$toCode,
					$elm$core$String$toList(prefix)),
				_Utils_ap(
					_List_fromArray(
						[0]),
					bytes)));
	} else {
		var elements = value.a;
		var prefix = 'list ' + $elm$core$String$fromInt(
			$elm$core$List$length(elements));
		return $folkertdev$elm_sha2$SHA256$fromByteValues(
			_Utils_ap(
				A2(
					$elm$core$List$map,
					$elm$core$Char$toCode,
					$elm$core$String$toList(prefix)),
				_Utils_ap(
					_List_fromArray(
						[0]),
					A2(
						$elm$core$List$concatMap,
						A2($elm$core$Basics$composeR, $author$project$Pine$hashDigestFromValue, $folkertdev$elm_sha2$SHA256$toByteValues),
						elements))));
	}
};
var $author$project$FileTreeInWorkspace$compositionHashFromFileTreeNodeBytes = A2($elm$core$Basics$composeR, $author$project$FileTreeInWorkspace$compositionPineValueFromFileTreeNode, $author$project$Pine$hashDigestFromValue);
var $author$project$FileTree$BlobNode = function (a) {
	return {$: 'BlobNode', a: a};
};
var $author$project$FileTree$TreeNode = function (a) {
	return {$: 'TreeNode', a: a};
};
var $author$project$FileTree$mapBlobs = F2(
	function (mapBlob, node) {
		if (node.$ === 'TreeNode') {
			var tree = node.a;
			return $author$project$FileTree$TreeNode(
				A2(
					$elm$core$List$map,
					$elm$core$Tuple$mapSecond(
						$author$project$FileTree$mapBlobs(mapBlob)),
					tree));
		} else {
			var blob = node.a;
			return $author$project$FileTree$BlobNode(
				mapBlob(blob));
		}
	});
var $author$project$FileTreeInWorkspace$mapBlobsToBytes = $author$project$FileTree$mapBlobs(
	function ($) {
		return $.asBytes;
	});
var $author$project$FileTreeInWorkspace$compositionHashFromFileTreeNode = A2($elm$core$Basics$composeR, $author$project$FileTreeInWorkspace$mapBlobsToBytes, $author$project$FileTreeInWorkspace$compositionHashFromFileTreeNodeBytes);
var $elm$json$Json$Decode$decodeValue = _Json_run;
var $elm$core$Result$map2 = F3(
	function (func, ra, rb) {
		if (ra.$ === 'Err') {
			var x = ra.a;
			return $elm$core$Result$Err(x);
		} else {
			var a = ra.a;
			if (rb.$ === 'Err') {
				var x = rb.a;
				return $elm$core$Result$Err(x);
			} else {
				var b = rb.a;
				return $elm$core$Result$Ok(
					A2(func, a, b));
			}
		}
	});
var $elm_community$result_extra$Result$Extra$combine = A2(
	$elm$core$List$foldr,
	$elm$core$Result$map2($elm$core$List$cons),
	$elm$core$Result$Ok(_List_Nil));
var $agu_z$elm_zip$Zip$entries = function (_v0) {
	var allEntries = _v0.a;
	return allEntries;
};
var $elm$core$List$filter = F2(
	function (isGood, list) {
		return A3(
			$elm$core$List$foldr,
			F2(
				function (x, xs) {
					return isGood(x) ? A2($elm$core$List$cons, x, xs) : xs;
				}),
			_List_Nil,
			list);
	});
var $elm$core$String$endsWith = _String_endsWith;
var $elm$core$Basics$neq = _Utils_notEqual;
var $agu_z$elm_zip$Zip$Entry$isDirectory = function (_v0) {
	var record = _v0.b;
	return (!(!(record.externalAttributes & 16))) || A2($elm$core$String$endsWith, '/', record.fileName);
};
var $elm$core$Result$map = F2(
	function (func, ra) {
		if (ra.$ === 'Ok') {
			var a = ra.a;
			return $elm$core$Result$Ok(
				func(a));
		} else {
			var e = ra.a;
			return $elm$core$Result$Err(e);
		}
	});
var $agu_z$elm_zip$Zip$Entry$path = function (_v0) {
	var record = _v0.b;
	return record.fileName;
};
var $danfishgold$base64_bytes$Decode$lowest6BitsMask = 63;
var $elm$core$Char$fromCode = _Char_fromCode;
var $danfishgold$base64_bytes$Decode$unsafeToChar = function (n) {
	if (n <= 25) {
		return $elm$core$Char$fromCode(65 + n);
	} else {
		if (n <= 51) {
			return $elm$core$Char$fromCode(97 + (n - 26));
		} else {
			if (n <= 61) {
				return $elm$core$Char$fromCode(48 + (n - 52));
			} else {
				switch (n) {
					case 62:
						return _Utils_chr('+');
					case 63:
						return _Utils_chr('/');
					default:
						return _Utils_chr('\u0000');
				}
			}
		}
	}
};
var $danfishgold$base64_bytes$Decode$bitsToChars = F2(
	function (bits, missing) {
		var s = $danfishgold$base64_bytes$Decode$unsafeToChar(bits & $danfishgold$base64_bytes$Decode$lowest6BitsMask);
		var r = $danfishgold$base64_bytes$Decode$unsafeToChar((bits >>> 6) & $danfishgold$base64_bytes$Decode$lowest6BitsMask);
		var q = $danfishgold$base64_bytes$Decode$unsafeToChar((bits >>> 12) & $danfishgold$base64_bytes$Decode$lowest6BitsMask);
		var p = $danfishgold$base64_bytes$Decode$unsafeToChar(bits >>> 18);
		switch (missing) {
			case 0:
				return A2(
					$elm$core$String$cons,
					p,
					A2(
						$elm$core$String$cons,
						q,
						A2(
							$elm$core$String$cons,
							r,
							$elm$core$String$fromChar(s))));
			case 1:
				return A2(
					$elm$core$String$cons,
					p,
					A2(
						$elm$core$String$cons,
						q,
						A2($elm$core$String$cons, r, '=')));
			case 2:
				return A2(
					$elm$core$String$cons,
					p,
					A2($elm$core$String$cons, q, '=='));
			default:
				return '';
		}
	});
var $danfishgold$base64_bytes$Decode$bitsToCharSpecialized = F4(
	function (bits1, bits2, bits3, accum) {
		var z = $danfishgold$base64_bytes$Decode$unsafeToChar((bits3 >>> 6) & $danfishgold$base64_bytes$Decode$lowest6BitsMask);
		var y = $danfishgold$base64_bytes$Decode$unsafeToChar((bits3 >>> 12) & $danfishgold$base64_bytes$Decode$lowest6BitsMask);
		var x = $danfishgold$base64_bytes$Decode$unsafeToChar(bits3 >>> 18);
		var w = $danfishgold$base64_bytes$Decode$unsafeToChar(bits3 & $danfishgold$base64_bytes$Decode$lowest6BitsMask);
		var s = $danfishgold$base64_bytes$Decode$unsafeToChar(bits1 & $danfishgold$base64_bytes$Decode$lowest6BitsMask);
		var r = $danfishgold$base64_bytes$Decode$unsafeToChar((bits1 >>> 6) & $danfishgold$base64_bytes$Decode$lowest6BitsMask);
		var q = $danfishgold$base64_bytes$Decode$unsafeToChar((bits1 >>> 12) & $danfishgold$base64_bytes$Decode$lowest6BitsMask);
		var p = $danfishgold$base64_bytes$Decode$unsafeToChar(bits1 >>> 18);
		var d = $danfishgold$base64_bytes$Decode$unsafeToChar(bits2 & $danfishgold$base64_bytes$Decode$lowest6BitsMask);
		var c = $danfishgold$base64_bytes$Decode$unsafeToChar((bits2 >>> 6) & $danfishgold$base64_bytes$Decode$lowest6BitsMask);
		var b = $danfishgold$base64_bytes$Decode$unsafeToChar((bits2 >>> 12) & $danfishgold$base64_bytes$Decode$lowest6BitsMask);
		var a = $danfishgold$base64_bytes$Decode$unsafeToChar(bits2 >>> 18);
		return A2(
			$elm$core$String$cons,
			x,
			A2(
				$elm$core$String$cons,
				y,
				A2(
					$elm$core$String$cons,
					z,
					A2(
						$elm$core$String$cons,
						w,
						A2(
							$elm$core$String$cons,
							a,
							A2(
								$elm$core$String$cons,
								b,
								A2(
									$elm$core$String$cons,
									c,
									A2(
										$elm$core$String$cons,
										d,
										A2(
											$elm$core$String$cons,
											p,
											A2(
												$elm$core$String$cons,
												q,
												A2(
													$elm$core$String$cons,
													r,
													A2($elm$core$String$cons, s, accum))))))))))));
	});
var $danfishgold$base64_bytes$Decode$decode18Help = F5(
	function (a, b, c, d, e) {
		var combined6 = ((255 & d) << 16) | e;
		var combined5 = d >>> 8;
		var combined4 = 16777215 & c;
		var combined3 = ((65535 & b) << 8) | (c >>> 24);
		var combined2 = ((255 & a) << 16) | (b >>> 16);
		var combined1 = a >>> 8;
		return A4(
			$danfishgold$base64_bytes$Decode$bitsToCharSpecialized,
			combined3,
			combined2,
			combined1,
			A4($danfishgold$base64_bytes$Decode$bitsToCharSpecialized, combined6, combined5, combined4, ''));
	});
var $elm$bytes$Bytes$Decode$unsignedInt16 = function (endianness) {
	return $elm$bytes$Bytes$Decode$Decoder(
		_Bytes_read_u16(
			_Utils_eq(endianness, $elm$bytes$Bytes$LE)));
};
var $danfishgold$base64_bytes$Decode$u16BE = $elm$bytes$Bytes$Decode$unsignedInt16($elm$bytes$Bytes$BE);
var $danfishgold$base64_bytes$Decode$u32BE = $elm$bytes$Bytes$Decode$unsignedInt32($elm$bytes$Bytes$BE);
var $danfishgold$base64_bytes$Decode$decode18Bytes = A6($elm$bytes$Bytes$Decode$map5, $danfishgold$base64_bytes$Decode$decode18Help, $danfishgold$base64_bytes$Decode$u32BE, $danfishgold$base64_bytes$Decode$u32BE, $danfishgold$base64_bytes$Decode$u32BE, $danfishgold$base64_bytes$Decode$u32BE, $danfishgold$base64_bytes$Decode$u16BE);
var $elm$bytes$Bytes$Decode$map3 = F4(
	function (func, _v0, _v1, _v2) {
		var decodeA = _v0.a;
		var decodeB = _v1.a;
		var decodeC = _v2.a;
		return $elm$bytes$Bytes$Decode$Decoder(
			F2(
				function (bites, offset) {
					var _v3 = A2(decodeA, bites, offset);
					var aOffset = _v3.a;
					var a = _v3.b;
					var _v4 = A2(decodeB, bites, aOffset);
					var bOffset = _v4.a;
					var b = _v4.b;
					var _v5 = A2(decodeC, bites, bOffset);
					var cOffset = _v5.a;
					var c = _v5.b;
					return _Utils_Tuple2(
						cOffset,
						A3(func, a, b, c));
				}));
	});
var $danfishgold$base64_bytes$Decode$loopHelp = function (_v0) {
	var remaining = _v0.remaining;
	var string = _v0.string;
	if (remaining >= 18) {
		return A2(
			$elm$bytes$Bytes$Decode$map,
			function (result) {
				return $elm$bytes$Bytes$Decode$Loop(
					{
						remaining: remaining - 18,
						string: _Utils_ap(string, result)
					});
			},
			$danfishgold$base64_bytes$Decode$decode18Bytes);
	} else {
		if (remaining >= 3) {
			var helper = F3(
				function (a, b, c) {
					var combined = ((a << 16) | (b << 8)) | c;
					return $elm$bytes$Bytes$Decode$Loop(
						{
							remaining: remaining - 3,
							string: _Utils_ap(
								string,
								A2($danfishgold$base64_bytes$Decode$bitsToChars, combined, 0))
						});
				});
			return A4($elm$bytes$Bytes$Decode$map3, helper, $elm$bytes$Bytes$Decode$unsignedInt8, $elm$bytes$Bytes$Decode$unsignedInt8, $elm$bytes$Bytes$Decode$unsignedInt8);
		} else {
			if (!remaining) {
				return $elm$bytes$Bytes$Decode$succeed(
					$elm$bytes$Bytes$Decode$Done(string));
			} else {
				if (remaining === 2) {
					var helper = F2(
						function (a, b) {
							var combined = (a << 16) | (b << 8);
							return $elm$bytes$Bytes$Decode$Done(
								_Utils_ap(
									string,
									A2($danfishgold$base64_bytes$Decode$bitsToChars, combined, 1)));
						});
					return A3($elm$bytes$Bytes$Decode$map2, helper, $elm$bytes$Bytes$Decode$unsignedInt8, $elm$bytes$Bytes$Decode$unsignedInt8);
				} else {
					return A2(
						$elm$bytes$Bytes$Decode$map,
						function (a) {
							return $elm$bytes$Bytes$Decode$Done(
								_Utils_ap(
									string,
									A2($danfishgold$base64_bytes$Decode$bitsToChars, a << 16, 2)));
						},
						$elm$bytes$Bytes$Decode$unsignedInt8);
				}
			}
		}
	}
};
var $danfishgold$base64_bytes$Decode$decoder = function (width) {
	return A2(
		$elm$bytes$Bytes$Decode$loop,
		{remaining: width, string: ''},
		$danfishgold$base64_bytes$Decode$loopHelp);
};
var $danfishgold$base64_bytes$Decode$fromBytes = function (bytes) {
	return A2(
		$elm$bytes$Bytes$Decode$decode,
		$danfishgold$base64_bytes$Decode$decoder(
			$elm$bytes$Bytes$width(bytes)),
		bytes);
};
var $danfishgold$base64_bytes$Base64$fromBytes = $danfishgold$base64_bytes$Decode$fromBytes;
var $author$project$FileTreeInWorkspace$blobValueFromBytes = function (asBytes) {
	return {
		asBase64: A2(
			$elm$core$Maybe$withDefault,
			'Error encoding in base64',
			$danfishgold$base64_bytes$Base64$fromBytes(asBytes)),
		asBytes: asBytes
	};
};
var $author$project$FileTreeInWorkspace$blobNodeFromBytes = function (asBytes) {
	return $author$project$FileTree$BlobNode(
		$author$project$FileTreeInWorkspace$blobValueFromBytes(asBytes));
};
var $elm$core$Dict$fromList = function (assocs) {
	return A3(
		$elm$core$List$foldl,
		F2(
			function (_v0, dict) {
				var key = _v0.a;
				var value = _v0.b;
				return A3($elm$core$Dict$insert, key, value, dict);
			}),
		$elm$core$Dict$empty,
		assocs);
};
var $author$project$Common$listFind = F2(
	function (predicate, list) {
		listFind:
		while (true) {
			if (!list.b) {
				return $elm$core$Maybe$Nothing;
			} else {
				if (list.b.b) {
					var first = list.a;
					var _v1 = list.b;
					var second = _v1.a;
					var rest = _v1.b;
					if (predicate(first)) {
						return $elm$core$Maybe$Just(first);
					} else {
						if (predicate(second)) {
							return $elm$core$Maybe$Just(second);
						} else {
							var $temp$predicate = predicate,
								$temp$list = rest;
							predicate = $temp$predicate;
							list = $temp$list;
							continue listFind;
						}
					}
				} else {
					var first = list.a;
					var rest = list.b;
					if (predicate(first)) {
						return $elm$core$Maybe$Just(first);
					} else {
						var $temp$predicate = predicate,
							$temp$list = rest;
						predicate = $temp$predicate;
						list = $temp$list;
						continue listFind;
					}
				}
			}
		}
	});
var $author$project$FileTree$getNodeAtPathFromFileTree = F2(
	function (path, treeNode) {
		getNodeAtPathFromFileTree:
		while (true) {
			if (!path.b) {
				return $elm$core$Maybe$Just(treeNode);
			} else {
				var pathFirstElement = path.a;
				var pathRest = path.b;
				if (treeNode.$ === 'BlobNode') {
					return $elm$core$Maybe$Nothing;
				} else {
					var treeElements = treeNode.a;
					var _v2 = A2(
						$author$project$Common$listFind,
						function (_v3) {
							var entryName = _v3.a;
							return _Utils_eq(entryName, pathFirstElement);
						},
						treeElements);
					if (_v2.$ === 'Nothing') {
						return $elm$core$Maybe$Nothing;
					} else {
						var _v4 = _v2.a;
						var subNode = _v4.b;
						var $temp$path = pathRest,
							$temp$treeNode = subNode;
						path = $temp$path;
						treeNode = $temp$treeNode;
						continue getNodeAtPathFromFileTree;
					}
				}
			}
		}
	});
var $author$project$FileTree$setNodeAtPathInSortedFileTree = F2(
	function (_v0, nodeBefore) {
		var path = _v0.a;
		var nodeAtPath = _v0.b;
		if (!path.b) {
			return nodeAtPath;
		} else {
			var pathFirstElement = path.a;
			var pathRest = path.b;
			var nodeBeforeTreeEntries = function () {
				if (nodeBefore.$ === 'BlobNode') {
					return _List_Nil;
				} else {
					var treeBeforeEntries = nodeBefore.a;
					return treeBeforeEntries;
				}
			}();
			var childNodeBefore = A2(
				$author$project$FileTree$getNodeAtPathFromFileTree,
				_List_fromArray(
					[pathFirstElement]),
				nodeBefore);
			var childNode = A2(
				$author$project$FileTree$setNodeAtPathInSortedFileTree,
				_Utils_Tuple2(pathRest, nodeAtPath),
				A2($elm$core$Maybe$withDefault, nodeAtPath, childNodeBefore));
			var treeEntries = $elm$core$Dict$toList(
				A3(
					$elm$core$Dict$insert,
					pathFirstElement,
					childNode,
					$elm$core$Dict$fromList(nodeBeforeTreeEntries)));
			return $author$project$FileTree$TreeNode(treeEntries);
		}
	});
var $author$project$FileTreeInWorkspace$setBlobAtPathInSortedFileTreeFromBytes = function (_v0) {
	var path = _v0.a;
	var blobContent = _v0.b;
	return $author$project$FileTree$setNodeAtPathInSortedFileTree(
		_Utils_Tuple2(
			path,
			$author$project$FileTreeInWorkspace$blobNodeFromBytes(blobContent)));
};
var $author$project$FileTreeInWorkspace$sortedFileTreeFromListOfBlobsAsBytes = A2(
	$elm$core$List$foldl,
	$author$project$FileTreeInWorkspace$setBlobAtPathInSortedFileTreeFromBytes,
	$author$project$FileTree$TreeNode(_List_Nil));
var $agu_z$elm_zip$Zip$Entry$DecodeError = {$: 'DecodeError'};
var $agu_z$elm_zip$Zip$Entry$InflateError = {$: 'InflateError'};
var $agu_z$elm_zip$Zip$Entry$UnsupportedCompression = F2(
	function (a, b) {
		return {$: 'UnsupportedCompression', a: a, b: b};
	});
var $elm$core$Result$andThen = F2(
	function (callback, result) {
		if (result.$ === 'Ok') {
			var value = result.a;
			return callback(value);
		} else {
			var msg = result.a;
			return $elm$core$Result$Err(msg);
		}
	});
var $elm$core$Result$fromMaybe = F2(
	function (err, maybe) {
		if (maybe.$ === 'Just') {
			var v = maybe.a;
			return $elm$core$Result$Ok(v);
		} else {
			return $elm$core$Result$Err(err);
		}
	});
var $folkertdev$elm_flate$Inflate$BitReader$decode = F2(
	function (bytes, _v0) {
		var reader = _v0.a;
		var initialState = {bitsAvailable: 0, buffer: bytes, reserve: 0, reserveAvailable: 0, tag: 0};
		var _v1 = reader(initialState);
		if (_v1.$ === 'Ok') {
			var _v2 = _v1.a;
			var value = _v2.a;
			return $elm$core$Result$Ok(value);
		} else {
			var e = _v1.a;
			return $elm$core$Result$Err(e);
		}
	});
var $folkertdev$elm_flate$Experimental$ByteArray$ByteArray = F3(
	function (a, b, c) {
		return {$: 'ByteArray', a: a, b: b, c: c};
	});
var $folkertdev$elm_flate$Experimental$ByteArray$empty = A3($folkertdev$elm_flate$Experimental$ByteArray$ByteArray, $elm$core$Array$empty, 0, 0);
var $folkertdev$elm_flate$Inflate$BitReader$BitReader = function (a) {
	return {$: 'BitReader', a: a};
};
var $folkertdev$elm_flate$Inflate$BitReader$loopHelp = F3(
	function (accum, callback, state) {
		loopHelp:
		while (true) {
			var _v0 = callback(accum);
			var decoder = _v0.a;
			var _v1 = decoder(state);
			if (_v1.$ === 'Err') {
				var e = _v1.a;
				return $elm$core$Result$Err(e);
			} else {
				if (_v1.a.a.$ === 'Loop') {
					var _v2 = _v1.a;
					var newAccum = _v2.a.a;
					var newState = _v2.b;
					var $temp$accum = newAccum,
						$temp$callback = callback,
						$temp$state = newState;
					accum = $temp$accum;
					callback = $temp$callback;
					state = $temp$state;
					continue loopHelp;
				} else {
					var _v3 = _v1.a;
					var result = _v3.a.a;
					var newState = _v3.b;
					return $elm$core$Result$Ok(
						_Utils_Tuple2(result, newState));
				}
			}
		}
	});
var $folkertdev$elm_flate$Inflate$BitReader$loop = F2(
	function (state, callback) {
		return $folkertdev$elm_flate$Inflate$BitReader$BitReader(
			A2($folkertdev$elm_flate$Inflate$BitReader$loopHelp, state, callback));
	});
var $folkertdev$elm_flate$Inflate$BitReader$map = F2(
	function (f, _v0) {
		var g = _v0.a;
		return $folkertdev$elm_flate$Inflate$BitReader$BitReader(
			function (s) {
				var _v1 = g(s);
				if (_v1.$ === 'Ok') {
					var _v2 = _v1.a;
					var value = _v2.a;
					var newState = _v2.b;
					return $elm$core$Result$Ok(
						_Utils_Tuple2(
							f(value),
							newState));
				} else {
					var e = _v1.a;
					return $elm$core$Result$Err(e);
				}
			});
	});
var $elm$bytes$Bytes$Encode$U16 = F2(
	function (a, b) {
		return {$: 'U16', a: a, b: b};
	});
var $elm$bytes$Bytes$Encode$unsignedInt16 = $elm$bytes$Bytes$Encode$U16;
var $folkertdev$elm_flate$Experimental$ByteArray$toBytes = function (_v0) {
	var array = _v0.a;
	var finalSize = _v0.b;
	var finalBytes = _v0.c;
	var initial = function () {
		var finalInt32 = finalBytes >>> ((4 - finalSize) * 8);
		switch (finalSize) {
			case 4:
				return _List_fromArray(
					[
						A2($elm$bytes$Bytes$Encode$unsignedInt32, $elm$bytes$Bytes$BE, finalBytes)
					]);
			case 1:
				return _List_fromArray(
					[
						$elm$bytes$Bytes$Encode$unsignedInt8(finalInt32)
					]);
			case 2:
				return _List_fromArray(
					[
						A2($elm$bytes$Bytes$Encode$unsignedInt16, $elm$bytes$Bytes$BE, finalInt32)
					]);
			case 3:
				return _List_fromArray(
					[
						A2($elm$bytes$Bytes$Encode$unsignedInt16, $elm$bytes$Bytes$BE, finalInt32 >> 8),
						$elm$bytes$Bytes$Encode$unsignedInt8(255 & finalInt32)
					]);
			default:
				return _List_Nil;
		}
	}();
	var folder = F2(
		function (element, accum) {
			return A2(
				$elm$core$List$cons,
				A2($elm$bytes$Bytes$Encode$unsignedInt32, $elm$bytes$Bytes$BE, element),
				accum);
		});
	return $elm$bytes$Bytes$Encode$encode(
		$elm$bytes$Bytes$Encode$sequence(
			A3($elm$core$Array$foldr, folder, initial, array)));
};
var $folkertdev$elm_flate$Inflate$BitReader$andThen = F2(
	function (f, _v0) {
		var g = _v0.a;
		return $folkertdev$elm_flate$Inflate$BitReader$BitReader(
			function (s) {
				var _v1 = g(s);
				if (_v1.$ === 'Ok') {
					var _v2 = _v1.a;
					var value = _v2.a;
					var newState = _v2.b;
					var _v3 = f(value);
					var h = _v3.a;
					return h(newState);
				} else {
					var e = _v1.a;
					return $elm$core$Result$Err(e);
				}
			});
	});
var $elm$core$Array$length = function (_v0) {
	var len = _v0.a;
	return len;
};
var $elm$core$Elm$JsArray$push = _JsArray_push;
var $elm$core$Elm$JsArray$singleton = _JsArray_singleton;
var $elm$core$Elm$JsArray$unsafeSet = _JsArray_unsafeSet;
var $elm$core$Array$insertTailInTree = F4(
	function (shift, index, tail, tree) {
		var pos = $elm$core$Array$bitMask & (index >>> shift);
		if (_Utils_cmp(
			pos,
			$elm$core$Elm$JsArray$length(tree)) > -1) {
			if (shift === 5) {
				return A2(
					$elm$core$Elm$JsArray$push,
					$elm$core$Array$Leaf(tail),
					tree);
			} else {
				var newSub = $elm$core$Array$SubTree(
					A4($elm$core$Array$insertTailInTree, shift - $elm$core$Array$shiftStep, index, tail, $elm$core$Elm$JsArray$empty));
				return A2($elm$core$Elm$JsArray$push, newSub, tree);
			}
		} else {
			var value = A2($elm$core$Elm$JsArray$unsafeGet, pos, tree);
			if (value.$ === 'SubTree') {
				var subTree = value.a;
				var newSub = $elm$core$Array$SubTree(
					A4($elm$core$Array$insertTailInTree, shift - $elm$core$Array$shiftStep, index, tail, subTree));
				return A3($elm$core$Elm$JsArray$unsafeSet, pos, newSub, tree);
			} else {
				var newSub = $elm$core$Array$SubTree(
					A4(
						$elm$core$Array$insertTailInTree,
						shift - $elm$core$Array$shiftStep,
						index,
						tail,
						$elm$core$Elm$JsArray$singleton(value)));
				return A3($elm$core$Elm$JsArray$unsafeSet, pos, newSub, tree);
			}
		}
	});
var $elm$core$Array$unsafeReplaceTail = F2(
	function (newTail, _v0) {
		var len = _v0.a;
		var startShift = _v0.b;
		var tree = _v0.c;
		var tail = _v0.d;
		var originalTailLen = $elm$core$Elm$JsArray$length(tail);
		var newTailLen = $elm$core$Elm$JsArray$length(newTail);
		var newArrayLen = len + (newTailLen - originalTailLen);
		if (_Utils_eq(newTailLen, $elm$core$Array$branchFactor)) {
			var overflow = _Utils_cmp(newArrayLen >>> $elm$core$Array$shiftStep, 1 << startShift) > 0;
			if (overflow) {
				var newShift = startShift + $elm$core$Array$shiftStep;
				var newTree = A4(
					$elm$core$Array$insertTailInTree,
					newShift,
					len,
					newTail,
					$elm$core$Elm$JsArray$singleton(
						$elm$core$Array$SubTree(tree)));
				return A4($elm$core$Array$Array_elm_builtin, newArrayLen, newShift, newTree, $elm$core$Elm$JsArray$empty);
			} else {
				return A4(
					$elm$core$Array$Array_elm_builtin,
					newArrayLen,
					startShift,
					A4($elm$core$Array$insertTailInTree, startShift, len, newTail, tree),
					$elm$core$Elm$JsArray$empty);
			}
		} else {
			return A4($elm$core$Array$Array_elm_builtin, newArrayLen, startShift, tree, newTail);
		}
	});
var $elm$core$Array$push = F2(
	function (a, array) {
		var tail = array.d;
		return A2(
			$elm$core$Array$unsafeReplaceTail,
			A2($elm$core$Elm$JsArray$push, a, tail),
			array);
	});
var $folkertdev$elm_flate$Experimental$ByteArray$push = F2(
	function (value, input) {
		var array = input.a;
		var finalSize = input.b;
		var finalBytes = input.c;
		if (finalSize === 4) {
			return A3(
				$folkertdev$elm_flate$Experimental$ByteArray$ByteArray,
				A2($elm$core$Array$push, finalBytes, array),
				1,
				value << 24);
		} else {
			if (!finalSize) {
				return A3($folkertdev$elm_flate$Experimental$ByteArray$ByteArray, array, 1, value << 24);
			} else {
				var offset = finalSize;
				var internalIndex = $elm$core$Array$length(array) - 1;
				var _new = ((255 & value) << ((3 - offset) * 8)) | finalBytes;
				var mask = 4278190080 >>> (offset * 8);
				return A3($folkertdev$elm_flate$Experimental$ByteArray$ByteArray, array, finalSize + 1, _new);
			}
		}
	});
var $folkertdev$elm_flate$Experimental$ByteArray$pushMany = F3(
	function (nbytes, value_, input) {
		var array = input.a;
		var finalSize = input.b;
		var finalBytes = input.c;
		var value = (nbytes === 4) ? value_ : (((1 << (nbytes * 8)) - 1) & value_);
		if (!nbytes) {
			return input;
		} else {
			if (finalSize === 4) {
				return A3(
					$folkertdev$elm_flate$Experimental$ByteArray$ByteArray,
					A2($elm$core$Array$push, finalBytes, array),
					nbytes,
					value << ((4 - nbytes) * 8));
			} else {
				if (!finalSize) {
					return A3($folkertdev$elm_flate$Experimental$ByteArray$ByteArray, array, nbytes, value << ((4 - nbytes) * 8));
				} else {
					var freeSpace = 4 - finalSize;
					if (_Utils_cmp(nbytes, freeSpace) > 0) {
						var bytesLeftOver = (finalSize + nbytes) - 4;
						var forFinal = value >>> (bytesLeftOver * 8);
						var newFinal = finalBytes | forFinal;
						var amount = ((8 - finalSize) - nbytes) * 8;
						var forNextFinal = (((1 << (bytesLeftOver * 8)) - 1) & value) << amount;
						return A3(
							$folkertdev$elm_flate$Experimental$ByteArray$ByteArray,
							A2($elm$core$Array$push, newFinal, array),
							nbytes - freeSpace,
							forNextFinal);
					} else {
						var amount = (4 - (finalSize + nbytes)) * 8;
						var forFinal = value << amount;
						var newFinal = finalBytes | forFinal;
						return A3($folkertdev$elm_flate$Experimental$ByteArray$ByteArray, array, finalSize + nbytes, newFinal);
					}
				}
			}
		}
	});
var $folkertdev$elm_flate$Experimental$ByteArray$appendBytesHelp = function (_v0) {
	var remaining = _v0.a;
	var bytearray = _v0.b;
	var array = bytearray.a;
	var finalSize = bytearray.b;
	var finalBytes = bytearray.c;
	return (remaining >= 4) ? A2(
		$elm$bytes$Bytes$Decode$map,
		function (_new) {
			return $elm$bytes$Bytes$Decode$Loop(
				_Utils_Tuple2(
					remaining - 4,
					A3($folkertdev$elm_flate$Experimental$ByteArray$pushMany, 4, _new, bytearray)));
		},
		$elm$bytes$Bytes$Decode$unsignedInt32($elm$bytes$Bytes$BE)) : ((remaining >= 1) ? A2(
		$elm$bytes$Bytes$Decode$map,
		function (_new) {
			return $elm$bytes$Bytes$Decode$Loop(
				_Utils_Tuple2(
					remaining - 1,
					A2($folkertdev$elm_flate$Experimental$ByteArray$push, _new, bytearray)));
		},
		$elm$bytes$Bytes$Decode$unsignedInt8) : $elm$bytes$Bytes$Decode$succeed(
		$elm$bytes$Bytes$Decode$Done(bytearray)));
};
var $folkertdev$elm_flate$Experimental$ByteArray$appendBytes = F2(
	function (bytes, barray) {
		var array = barray.a;
		var finalSize = barray.b;
		var finalBytes = barray.c;
		var decoder = A2(
			$elm$bytes$Bytes$Decode$loop,
			_Utils_Tuple2(
				$elm$bytes$Bytes$width(bytes),
				barray),
			$folkertdev$elm_flate$Experimental$ByteArray$appendBytesHelp);
		var _v0 = A2($elm$bytes$Bytes$Decode$decode, decoder, bytes);
		if (_v0.$ === 'Just') {
			var v = _v0.a;
			return v;
		} else {
			return barray;
		}
	});
var $elm$core$Array$repeat = F2(
	function (n, e) {
		return A2(
			$elm$core$Array$initialize,
			n,
			function (_v0) {
				return e;
			});
	});
var $elm$core$Tuple$second = function (_v0) {
	var y = _v0.b;
	return y;
};
var $elm$core$Array$setHelp = F4(
	function (shift, index, value, tree) {
		var pos = $elm$core$Array$bitMask & (index >>> shift);
		var _v0 = A2($elm$core$Elm$JsArray$unsafeGet, pos, tree);
		if (_v0.$ === 'SubTree') {
			var subTree = _v0.a;
			var newSub = A4($elm$core$Array$setHelp, shift - $elm$core$Array$shiftStep, index, value, subTree);
			return A3(
				$elm$core$Elm$JsArray$unsafeSet,
				pos,
				$elm$core$Array$SubTree(newSub),
				tree);
		} else {
			var values = _v0.a;
			var newLeaf = A3($elm$core$Elm$JsArray$unsafeSet, $elm$core$Array$bitMask & index, value, values);
			return A3(
				$elm$core$Elm$JsArray$unsafeSet,
				pos,
				$elm$core$Array$Leaf(newLeaf),
				tree);
		}
	});
var $elm$core$Array$set = F3(
	function (index, value, array) {
		var len = array.a;
		var startShift = array.b;
		var tree = array.c;
		var tail = array.d;
		return ((index < 0) || (_Utils_cmp(index, len) > -1)) ? array : ((_Utils_cmp(
			index,
			$elm$core$Array$tailIndex(len)) > -1) ? A4(
			$elm$core$Array$Array_elm_builtin,
			len,
			startShift,
			tree,
			A3($elm$core$Elm$JsArray$unsafeSet, $elm$core$Array$bitMask & index, value, tail)) : A4(
			$elm$core$Array$Array_elm_builtin,
			len,
			startShift,
			A4($elm$core$Array$setHelp, startShift, index, value, tree),
			tail));
	});
var $elm$core$Dict$getMin = function (dict) {
	getMin:
	while (true) {
		if ((dict.$ === 'RBNode_elm_builtin') && (dict.d.$ === 'RBNode_elm_builtin')) {
			var left = dict.d;
			var $temp$dict = left;
			dict = $temp$dict;
			continue getMin;
		} else {
			return dict;
		}
	}
};
var $elm$core$Dict$moveRedLeft = function (dict) {
	if (((dict.$ === 'RBNode_elm_builtin') && (dict.d.$ === 'RBNode_elm_builtin')) && (dict.e.$ === 'RBNode_elm_builtin')) {
		if ((dict.e.d.$ === 'RBNode_elm_builtin') && (dict.e.d.a.$ === 'Red')) {
			var clr = dict.a;
			var k = dict.b;
			var v = dict.c;
			var _v1 = dict.d;
			var lClr = _v1.a;
			var lK = _v1.b;
			var lV = _v1.c;
			var lLeft = _v1.d;
			var lRight = _v1.e;
			var _v2 = dict.e;
			var rClr = _v2.a;
			var rK = _v2.b;
			var rV = _v2.c;
			var rLeft = _v2.d;
			var _v3 = rLeft.a;
			var rlK = rLeft.b;
			var rlV = rLeft.c;
			var rlL = rLeft.d;
			var rlR = rLeft.e;
			var rRight = _v2.e;
			return A5(
				$elm$core$Dict$RBNode_elm_builtin,
				$elm$core$Dict$Red,
				rlK,
				rlV,
				A5(
					$elm$core$Dict$RBNode_elm_builtin,
					$elm$core$Dict$Black,
					k,
					v,
					A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, lK, lV, lLeft, lRight),
					rlL),
				A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Black, rK, rV, rlR, rRight));
		} else {
			var clr = dict.a;
			var k = dict.b;
			var v = dict.c;
			var _v4 = dict.d;
			var lClr = _v4.a;
			var lK = _v4.b;
			var lV = _v4.c;
			var lLeft = _v4.d;
			var lRight = _v4.e;
			var _v5 = dict.e;
			var rClr = _v5.a;
			var rK = _v5.b;
			var rV = _v5.c;
			var rLeft = _v5.d;
			var rRight = _v5.e;
			if (clr.$ === 'Black') {
				return A5(
					$elm$core$Dict$RBNode_elm_builtin,
					$elm$core$Dict$Black,
					k,
					v,
					A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, lK, lV, lLeft, lRight),
					A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, rK, rV, rLeft, rRight));
			} else {
				return A5(
					$elm$core$Dict$RBNode_elm_builtin,
					$elm$core$Dict$Black,
					k,
					v,
					A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, lK, lV, lLeft, lRight),
					A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, rK, rV, rLeft, rRight));
			}
		}
	} else {
		return dict;
	}
};
var $elm$core$Dict$moveRedRight = function (dict) {
	if (((dict.$ === 'RBNode_elm_builtin') && (dict.d.$ === 'RBNode_elm_builtin')) && (dict.e.$ === 'RBNode_elm_builtin')) {
		if ((dict.d.d.$ === 'RBNode_elm_builtin') && (dict.d.d.a.$ === 'Red')) {
			var clr = dict.a;
			var k = dict.b;
			var v = dict.c;
			var _v1 = dict.d;
			var lClr = _v1.a;
			var lK = _v1.b;
			var lV = _v1.c;
			var _v2 = _v1.d;
			var _v3 = _v2.a;
			var llK = _v2.b;
			var llV = _v2.c;
			var llLeft = _v2.d;
			var llRight = _v2.e;
			var lRight = _v1.e;
			var _v4 = dict.e;
			var rClr = _v4.a;
			var rK = _v4.b;
			var rV = _v4.c;
			var rLeft = _v4.d;
			var rRight = _v4.e;
			return A5(
				$elm$core$Dict$RBNode_elm_builtin,
				$elm$core$Dict$Red,
				lK,
				lV,
				A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Black, llK, llV, llLeft, llRight),
				A5(
					$elm$core$Dict$RBNode_elm_builtin,
					$elm$core$Dict$Black,
					k,
					v,
					lRight,
					A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, rK, rV, rLeft, rRight)));
		} else {
			var clr = dict.a;
			var k = dict.b;
			var v = dict.c;
			var _v5 = dict.d;
			var lClr = _v5.a;
			var lK = _v5.b;
			var lV = _v5.c;
			var lLeft = _v5.d;
			var lRight = _v5.e;
			var _v6 = dict.e;
			var rClr = _v6.a;
			var rK = _v6.b;
			var rV = _v6.c;
			var rLeft = _v6.d;
			var rRight = _v6.e;
			if (clr.$ === 'Black') {
				return A5(
					$elm$core$Dict$RBNode_elm_builtin,
					$elm$core$Dict$Black,
					k,
					v,
					A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, lK, lV, lLeft, lRight),
					A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, rK, rV, rLeft, rRight));
			} else {
				return A5(
					$elm$core$Dict$RBNode_elm_builtin,
					$elm$core$Dict$Black,
					k,
					v,
					A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, lK, lV, lLeft, lRight),
					A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, rK, rV, rLeft, rRight));
			}
		}
	} else {
		return dict;
	}
};
var $elm$core$Dict$removeHelpPrepEQGT = F7(
	function (targetKey, dict, color, key, value, left, right) {
		if ((left.$ === 'RBNode_elm_builtin') && (left.a.$ === 'Red')) {
			var _v1 = left.a;
			var lK = left.b;
			var lV = left.c;
			var lLeft = left.d;
			var lRight = left.e;
			return A5(
				$elm$core$Dict$RBNode_elm_builtin,
				color,
				lK,
				lV,
				lLeft,
				A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, key, value, lRight, right));
		} else {
			_v2$2:
			while (true) {
				if ((right.$ === 'RBNode_elm_builtin') && (right.a.$ === 'Black')) {
					if (right.d.$ === 'RBNode_elm_builtin') {
						if (right.d.a.$ === 'Black') {
							var _v3 = right.a;
							var _v4 = right.d;
							var _v5 = _v4.a;
							return $elm$core$Dict$moveRedRight(dict);
						} else {
							break _v2$2;
						}
					} else {
						var _v6 = right.a;
						var _v7 = right.d;
						return $elm$core$Dict$moveRedRight(dict);
					}
				} else {
					break _v2$2;
				}
			}
			return dict;
		}
	});
var $elm$core$Dict$removeMin = function (dict) {
	if ((dict.$ === 'RBNode_elm_builtin') && (dict.d.$ === 'RBNode_elm_builtin')) {
		var color = dict.a;
		var key = dict.b;
		var value = dict.c;
		var left = dict.d;
		var lColor = left.a;
		var lLeft = left.d;
		var right = dict.e;
		if (lColor.$ === 'Black') {
			if ((lLeft.$ === 'RBNode_elm_builtin') && (lLeft.a.$ === 'Red')) {
				var _v3 = lLeft.a;
				return A5(
					$elm$core$Dict$RBNode_elm_builtin,
					color,
					key,
					value,
					$elm$core$Dict$removeMin(left),
					right);
			} else {
				var _v4 = $elm$core$Dict$moveRedLeft(dict);
				if (_v4.$ === 'RBNode_elm_builtin') {
					var nColor = _v4.a;
					var nKey = _v4.b;
					var nValue = _v4.c;
					var nLeft = _v4.d;
					var nRight = _v4.e;
					return A5(
						$elm$core$Dict$balance,
						nColor,
						nKey,
						nValue,
						$elm$core$Dict$removeMin(nLeft),
						nRight);
				} else {
					return $elm$core$Dict$RBEmpty_elm_builtin;
				}
			}
		} else {
			return A5(
				$elm$core$Dict$RBNode_elm_builtin,
				color,
				key,
				value,
				$elm$core$Dict$removeMin(left),
				right);
		}
	} else {
		return $elm$core$Dict$RBEmpty_elm_builtin;
	}
};
var $elm$core$Dict$removeHelp = F2(
	function (targetKey, dict) {
		if (dict.$ === 'RBEmpty_elm_builtin') {
			return $elm$core$Dict$RBEmpty_elm_builtin;
		} else {
			var color = dict.a;
			var key = dict.b;
			var value = dict.c;
			var left = dict.d;
			var right = dict.e;
			if (_Utils_cmp(targetKey, key) < 0) {
				if ((left.$ === 'RBNode_elm_builtin') && (left.a.$ === 'Black')) {
					var _v4 = left.a;
					var lLeft = left.d;
					if ((lLeft.$ === 'RBNode_elm_builtin') && (lLeft.a.$ === 'Red')) {
						var _v6 = lLeft.a;
						return A5(
							$elm$core$Dict$RBNode_elm_builtin,
							color,
							key,
							value,
							A2($elm$core$Dict$removeHelp, targetKey, left),
							right);
					} else {
						var _v7 = $elm$core$Dict$moveRedLeft(dict);
						if (_v7.$ === 'RBNode_elm_builtin') {
							var nColor = _v7.a;
							var nKey = _v7.b;
							var nValue = _v7.c;
							var nLeft = _v7.d;
							var nRight = _v7.e;
							return A5(
								$elm$core$Dict$balance,
								nColor,
								nKey,
								nValue,
								A2($elm$core$Dict$removeHelp, targetKey, nLeft),
								nRight);
						} else {
							return $elm$core$Dict$RBEmpty_elm_builtin;
						}
					}
				} else {
					return A5(
						$elm$core$Dict$RBNode_elm_builtin,
						color,
						key,
						value,
						A2($elm$core$Dict$removeHelp, targetKey, left),
						right);
				}
			} else {
				return A2(
					$elm$core$Dict$removeHelpEQGT,
					targetKey,
					A7($elm$core$Dict$removeHelpPrepEQGT, targetKey, dict, color, key, value, left, right));
			}
		}
	});
var $elm$core$Dict$removeHelpEQGT = F2(
	function (targetKey, dict) {
		if (dict.$ === 'RBNode_elm_builtin') {
			var color = dict.a;
			var key = dict.b;
			var value = dict.c;
			var left = dict.d;
			var right = dict.e;
			if (_Utils_eq(targetKey, key)) {
				var _v1 = $elm$core$Dict$getMin(right);
				if (_v1.$ === 'RBNode_elm_builtin') {
					var minKey = _v1.b;
					var minValue = _v1.c;
					return A5(
						$elm$core$Dict$balance,
						color,
						minKey,
						minValue,
						left,
						$elm$core$Dict$removeMin(right));
				} else {
					return $elm$core$Dict$RBEmpty_elm_builtin;
				}
			} else {
				return A5(
					$elm$core$Dict$balance,
					color,
					key,
					value,
					left,
					A2($elm$core$Dict$removeHelp, targetKey, right));
			}
		} else {
			return $elm$core$Dict$RBEmpty_elm_builtin;
		}
	});
var $elm$core$Dict$remove = F2(
	function (key, dict) {
		var _v0 = A2($elm$core$Dict$removeHelp, key, dict);
		if ((_v0.$ === 'RBNode_elm_builtin') && (_v0.a.$ === 'Red')) {
			var _v1 = _v0.a;
			var k = _v0.b;
			var v = _v0.c;
			var l = _v0.d;
			var r = _v0.e;
			return A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Black, k, v, l, r);
		} else {
			var x = _v0;
			return x;
		}
	});
var $elm$core$Dict$update = F3(
	function (targetKey, alter, dictionary) {
		var _v0 = alter(
			A2($elm$core$Dict$get, targetKey, dictionary));
		if (_v0.$ === 'Just') {
			var value = _v0.a;
			return A3($elm$core$Dict$insert, targetKey, value, dictionary);
		} else {
			return A2($elm$core$Dict$remove, targetKey, dictionary);
		}
	});
var $folkertdev$elm_flate$Inflate$Internal$buildTree = F3(
	function (lengths, offset, num) {
		var tableDict = function () {
			var updater = function (maybeValue) {
				if (maybeValue.$ === 'Nothing') {
					return $elm$core$Maybe$Just(1);
				} else {
					var v = maybeValue.a;
					return $elm$core$Maybe$Just(v + 1);
				}
			};
			var folder = F3(
				function (key, value, accum) {
					return ((_Utils_cmp(key, offset) > -1) && (_Utils_cmp(key, num + offset) < 0)) ? A3($elm$core$Dict$update, value, updater, accum) : accum;
				});
			return A3($elm$core$Dict$foldl, folder, $elm$core$Dict$empty, lengths);
		}();
		var offsetsDict = A3(
			$elm$core$Dict$foldl,
			F3(
				function (key, value, _v4) {
					var sum = _v4.a;
					var dict = _v4.b;
					return _Utils_Tuple2(
						sum + value,
						A3($elm$core$Dict$insert, key, sum, dict));
				}),
			_Utils_Tuple2(0, $elm$core$Dict$empty),
			tableDict);
		var newTable = function () {
			var helper = F4(
				function (key, value, i, array) {
					helper:
					while (true) {
						if (_Utils_cmp(i, key) > 0) {
							var $temp$key = key,
								$temp$value = value,
								$temp$i = i - 1,
								$temp$array = A2($elm$core$List$cons, 0, array);
							key = $temp$key;
							value = $temp$value;
							i = $temp$i;
							array = $temp$array;
							continue helper;
						} else {
							return A2($elm$core$List$cons, value, array);
						}
					}
				});
			var foldHelp = F3(
				function (key, value, _v3) {
					var i = _v3.a;
					var array = _v3.b;
					return _Utils_Tuple2(
						key - 1,
						A4(helper, key, value, i, array));
				});
			var anotherGo = F2(
				function (i, array) {
					anotherGo:
					while (true) {
						if (i >= 0) {
							var $temp$i = i - 1,
								$temp$array = A2($elm$core$List$cons, 0, array);
							i = $temp$i;
							array = $temp$array;
							continue anotherGo;
						} else {
							return array;
						}
					}
				});
			return function (_v2) {
				var a = _v2.a;
				var b = _v2.b;
				return A2(anotherGo, a, b);
			}(
				A3(
					$elm$core$Dict$foldr,
					foldHelp,
					_Utils_Tuple2(15, _List_Nil),
					tableDict));
		}();
		var go2 = F3(
			function (i, currentTranslation, currentOffsets) {
				go2:
				while (true) {
					if ((i - num) < 0) {
						var _v0 = A2($elm$core$Dict$get, offset + i, lengths);
						if (_v0.$ === 'Nothing') {
							var $temp$i = i + 1,
								$temp$currentTranslation = currentTranslation,
								$temp$currentOffsets = currentOffsets;
							i = $temp$i;
							currentTranslation = $temp$currentTranslation;
							currentOffsets = $temp$currentOffsets;
							continue go2;
						} else {
							var v = _v0.a;
							if (!(!v)) {
								var _v1 = A2($elm$core$Dict$get, v, currentOffsets);
								if (_v1.$ === 'Nothing') {
									return currentTranslation;
								} else {
									var w = _v1.a;
									var $temp$i = i + 1,
										$temp$currentTranslation = A3($elm$core$Array$set, w, i, currentTranslation),
										$temp$currentOffsets = A3($elm$core$Dict$insert, v, w + 1, currentOffsets);
									i = $temp$i;
									currentTranslation = $temp$currentTranslation;
									currentOffsets = $temp$currentOffsets;
									continue go2;
								}
							} else {
								var $temp$i = i + 1,
									$temp$currentTranslation = currentTranslation,
									$temp$currentOffsets = currentOffsets;
								i = $temp$i;
								currentTranslation = $temp$currentTranslation;
								currentOffsets = $temp$currentOffsets;
								continue go2;
							}
						}
					} else {
						return currentTranslation;
					}
				}
			});
		var translation2 = A3(
			go2,
			0,
			A2($elm$core$Array$repeat, num, 0),
			offsetsDict.b);
		return {table: newTable, trans: translation2};
	});
var $folkertdev$elm_flate$Inflate$Internal$clcIndices = _List_fromArray(
	[16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);
var $folkertdev$elm_flate$Inflate$BitSet$BitSet320 = function (a) {
	return function (b) {
		return function (c) {
			return function (d) {
				return function (e) {
					return function (f) {
						return function (g) {
							return function (h) {
								return function (i) {
									return function (j) {
										return {$: 'BitSet320', a: a, b: b, c: c, d: d, e: e, f: f, g: g, h: h, i: i, j: j};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var $folkertdev$elm_flate$Inflate$BitSet$insert = F2(
	function (n, input) {
		var b1 = input.a;
		var b2 = input.b;
		var b3 = input.c;
		var b4 = input.d;
		var b5 = input.e;
		var b6 = input.f;
		var b7 = input.g;
		var b8 = input.h;
		var b9 = input.i;
		var b10 = input.j;
		if (n >= 320) {
			return input;
		} else {
			var bit = 1 << (n % 32);
			var _v0 = (n / 32) | 0;
			switch (_v0) {
				case 0:
					return $folkertdev$elm_flate$Inflate$BitSet$BitSet320(bit | b1)(b2)(b3)(b4)(b5)(b6)(b7)(b8)(b9)(b10);
				case 1:
					return $folkertdev$elm_flate$Inflate$BitSet$BitSet320(b1)(bit | b2)(b3)(b4)(b5)(b6)(b7)(b8)(b9)(b10);
				case 2:
					return $folkertdev$elm_flate$Inflate$BitSet$BitSet320(b1)(b2)(bit | b3)(b4)(b5)(b6)(b7)(b8)(b9)(b10);
				case 3:
					return $folkertdev$elm_flate$Inflate$BitSet$BitSet320(b1)(b2)(b3)(bit | b4)(b5)(b6)(b7)(b8)(b9)(b10);
				case 4:
					return $folkertdev$elm_flate$Inflate$BitSet$BitSet320(b1)(b2)(b3)(b4)(bit | b5)(b6)(b7)(b8)(b9)(b10);
				case 5:
					return $folkertdev$elm_flate$Inflate$BitSet$BitSet320(b1)(b2)(b3)(b4)(b5)(bit | b6)(b7)(b8)(b9)(b10);
				case 6:
					return $folkertdev$elm_flate$Inflate$BitSet$BitSet320(b1)(b2)(b3)(b4)(b5)(b6)(bit | b7)(b8)(b9)(b10);
				case 7:
					return $folkertdev$elm_flate$Inflate$BitSet$BitSet320(b1)(b2)(b3)(b4)(b5)(b6)(b7)(bit | b8)(b9)(b10);
				case 8:
					return $folkertdev$elm_flate$Inflate$BitSet$BitSet320(b1)(b2)(b3)(b4)(b5)(b6)(b7)(b8)(bit | b9)(b10);
				case 9:
					return $folkertdev$elm_flate$Inflate$BitSet$BitSet320(b1)(b2)(b3)(b4)(b5)(b6)(b7)(b8)(b9)(bit | b10);
				default:
					return input;
			}
		}
	});
var $folkertdev$elm_flate$Inflate$BitSet$member = F2(
	function (n, input) {
		var b1 = input.a;
		var b2 = input.b;
		var b3 = input.c;
		var b4 = input.d;
		var b5 = input.e;
		var b6 = input.f;
		var b7 = input.g;
		var b8 = input.h;
		var b9 = input.i;
		var b10 = input.j;
		if (n >= 320) {
			return false;
		} else {
			var bit = 1 << (n % 32);
			var _v0 = (n / 32) | 0;
			switch (_v0) {
				case 0:
					return (bit & b1) > 0;
				case 1:
					return (bit & b2) > 0;
				case 2:
					return (bit & b3) > 0;
				case 3:
					return (bit & b4) > 0;
				case 4:
					return (bit & b5) > 0;
				case 5:
					return (bit & b6) > 0;
				case 6:
					return (bit & b7) > 0;
				case 7:
					return (bit & b8) > 0;
				case 8:
					return (bit & b9) > 0;
				case 9:
					return (bit & b10) > 0;
				default:
					return false;
			}
		}
	});
var $folkertdev$elm_flate$Inflate$BitSet$remove = F2(
	function (n, input) {
		var b1 = input.a;
		var b2 = input.b;
		var b3 = input.c;
		var b4 = input.d;
		var b5 = input.e;
		var b6 = input.f;
		var b7 = input.g;
		var b8 = input.h;
		var b9 = input.i;
		var b10 = input.j;
		if (n >= 320) {
			return input;
		} else {
			var bit = ~(1 << (n % 32));
			var _v0 = (n / 32) | 0;
			switch (_v0) {
				case 0:
					return $folkertdev$elm_flate$Inflate$BitSet$BitSet320(bit & b1)(b2)(b3)(b4)(b5)(b6)(b7)(b8)(b9)(b10);
				case 1:
					return $folkertdev$elm_flate$Inflate$BitSet$BitSet320(b1)(bit & b2)(b3)(b4)(b5)(b6)(b7)(b8)(b9)(b10);
				case 2:
					return $folkertdev$elm_flate$Inflate$BitSet$BitSet320(b1)(b2)(bit & b3)(b4)(b5)(b6)(b7)(b8)(b9)(b10);
				case 3:
					return $folkertdev$elm_flate$Inflate$BitSet$BitSet320(b1)(b2)(b3)(bit & b4)(b5)(b6)(b7)(b8)(b9)(b10);
				case 4:
					return $folkertdev$elm_flate$Inflate$BitSet$BitSet320(b1)(b2)(b3)(b4)(bit & b5)(b6)(b7)(b8)(b9)(b10);
				case 5:
					return $folkertdev$elm_flate$Inflate$BitSet$BitSet320(b1)(b2)(b3)(b4)(b5)(bit & b6)(b7)(b8)(b9)(b10);
				case 6:
					return $folkertdev$elm_flate$Inflate$BitSet$BitSet320(b1)(b2)(b3)(b4)(b5)(b6)(bit & b7)(b8)(b9)(b10);
				case 7:
					return $folkertdev$elm_flate$Inflate$BitSet$BitSet320(b1)(b2)(b3)(b4)(b5)(b6)(b7)(bit & b8)(b9)(b10);
				case 8:
					return $folkertdev$elm_flate$Inflate$BitSet$BitSet320(b1)(b2)(b3)(b4)(b5)(b6)(b7)(b8)(bit & b9)(b10);
				case 9:
					return $folkertdev$elm_flate$Inflate$BitSet$BitSet320(b1)(b2)(b3)(b4)(b5)(b6)(b7)(b8)(b9)(bit & b10);
				default:
					return input;
			}
		}
	});
var $folkertdev$elm_flate$Inflate$Internal$copySegment = F5(
	function (i, value, bitset, lengths, length) {
		var end = i + length;
		var go = F3(
			function (j, currentBitSet, accum) {
				go:
				while (true) {
					if ((j - end) < 0) {
						if (!(!value)) {
							var $temp$j = j + 1,
								$temp$currentBitSet = A2($folkertdev$elm_flate$Inflate$BitSet$insert, j, currentBitSet),
								$temp$accum = A3($elm$core$Dict$insert, j, value, accum);
							j = $temp$j;
							currentBitSet = $temp$currentBitSet;
							accum = $temp$accum;
							continue go;
						} else {
							if (A2($folkertdev$elm_flate$Inflate$BitSet$member, j, currentBitSet)) {
								var $temp$j = j + 1,
									$temp$currentBitSet = A2($folkertdev$elm_flate$Inflate$BitSet$remove, j, currentBitSet),
									$temp$accum = A2($elm$core$Dict$remove, j, accum);
								j = $temp$j;
								currentBitSet = $temp$currentBitSet;
								accum = $temp$accum;
								continue go;
							} else {
								var $temp$j = j + 1,
									$temp$currentBitSet = currentBitSet,
									$temp$accum = accum;
								j = $temp$j;
								currentBitSet = $temp$currentBitSet;
								accum = $temp$accum;
								continue go;
							}
						}
					} else {
						return _Utils_Tuple2(currentBitSet, accum);
					}
				}
			});
		var _v0 = A3(go, i, bitset, lengths);
		var newBitSet = _v0.a;
		var newLengths = _v0.b;
		return _Utils_Tuple3(i + length, newBitSet, newLengths);
	});
var $folkertdev$elm_flate$Inflate$Internal$decodeSymbolInnerLoop = F5(
	function (table, cur, tag, bitsAvailable, sum) {
		decodeSymbolInnerLoop:
		while (true) {
			var newTag = tag >>> 1;
			if (!table.b) {
				return {bitsAvailable: bitsAvailable, cur: cur, sum: sum, tag: tag};
			} else {
				var value = table.a;
				var rest = table.b;
				var newerCur = ((cur << 1) + (tag & 1)) - value;
				var newSum = sum + value;
				if (newerCur >= 0) {
					var $temp$table = rest,
						$temp$cur = newerCur,
						$temp$tag = newTag,
						$temp$bitsAvailable = bitsAvailable - 1,
						$temp$sum = newSum;
					table = $temp$table;
					cur = $temp$cur;
					tag = $temp$tag;
					bitsAvailable = $temp$bitsAvailable;
					sum = $temp$sum;
					continue decodeSymbolInnerLoop;
				} else {
					return {bitsAvailable: bitsAvailable - 1, cur: newerCur, sum: newSum, tag: newTag};
				}
			}
		}
	});
var $folkertdev$elm_flate$Inflate$BitReader$moveFromReserve = F2(
	function (nbits, state) {
		var masked = (nbits === 32) ? (state.reserve << state.bitsAvailable) : ((((1 << nbits) - 1) & state.reserve) << state.bitsAvailable);
		return {bitsAvailable: state.bitsAvailable + nbits, buffer: state.buffer, reserve: state.reserve >>> nbits, reserveAvailable: state.reserveAvailable - nbits, tag: masked | state.tag};
	});
var $folkertdev$elm_flate$Inflate$BitReader$runDecoder = F3(
	function (width, valueDecoder, state) {
		var decoder = A3(
			$elm$bytes$Bytes$Decode$map2,
			$elm$core$Tuple$pair,
			valueDecoder,
			$elm$bytes$Bytes$Decode$bytes(
				$elm$bytes$Bytes$width(state.buffer) - width));
		var _v0 = A2($elm$bytes$Bytes$Decode$decode, decoder, state.buffer);
		if (_v0.$ === 'Just') {
			var value = _v0.a;
			return $elm$core$Result$Ok(value);
		} else {
			return $elm$core$Result$Err('BitReader.runDecoder: Unexpected end of Bytes');
		}
	});
var $folkertdev$elm_flate$Inflate$BitReader$unsignedInt24 = function (endianness) {
	if (endianness.$ === 'LE') {
		return A3(
			$elm$bytes$Bytes$Decode$map2,
			F2(
				function (b2, b1) {
					return (b1 << 16) | b2;
				}),
			$elm$bytes$Bytes$Decode$unsignedInt16(endianness),
			$elm$bytes$Bytes$Decode$unsignedInt8);
	} else {
		return A3(
			$elm$bytes$Bytes$Decode$map2,
			F2(
				function (b1, b2) {
					return (b1 << 16) | b2;
				}),
			$elm$bytes$Bytes$Decode$unsignedInt16(endianness),
			$elm$bytes$Bytes$Decode$unsignedInt8);
	}
};
var $folkertdev$elm_flate$Inflate$BitReader$readMoreBits = function (state) {
	readMoreBits:
	while (true) {
		var freeSpaceOnTag = 32 - state.bitsAvailable;
		if ((_Utils_cmp(freeSpaceOnTag, state.reserveAvailable) < 1) && (state.reserveAvailable > 0)) {
			return $elm$core$Result$Ok(
				A2($folkertdev$elm_flate$Inflate$BitReader$moveFromReserve, freeSpaceOnTag, state));
		} else {
			if (!$elm$bytes$Bytes$width(state.buffer)) {
				return $elm$core$Result$Ok(
					A2($folkertdev$elm_flate$Inflate$BitReader$moveFromReserve, state.reserveAvailable, state));
			} else {
				var state1 = A2($folkertdev$elm_flate$Inflate$BitReader$moveFromReserve, state.reserveAvailable, state);
				var _v0 = function () {
					var _v1 = $elm$bytes$Bytes$width(state.buffer);
					switch (_v1) {
						case 0:
							return _Utils_Tuple3(
								0,
								0,
								$elm$bytes$Bytes$Decode$succeed(0));
						case 1:
							return _Utils_Tuple3(1, 8, $elm$bytes$Bytes$Decode$unsignedInt8);
						case 2:
							return _Utils_Tuple3(
								2,
								16,
								$elm$bytes$Bytes$Decode$unsignedInt16($elm$bytes$Bytes$LE));
						case 3:
							return _Utils_Tuple3(
								3,
								24,
								$folkertdev$elm_flate$Inflate$BitReader$unsignedInt24($elm$bytes$Bytes$LE));
						default:
							return _Utils_Tuple3(
								4,
								32,
								$elm$bytes$Bytes$Decode$unsignedInt32($elm$bytes$Bytes$LE));
					}
				}();
				var width = _v0.a;
				var additionallyAvailable = _v0.b;
				var decoder = _v0.c;
				var _v2 = A3($folkertdev$elm_flate$Inflate$BitReader$runDecoder, width, decoder, state1);
				if (_v2.$ === 'Err') {
					var e = _v2.a;
					return $elm$core$Result$Err(e);
				} else {
					var _v3 = _v2.a;
					var newReserve = _v3.a;
					var newBuffer = _v3.b;
					var $temp$state = {bitsAvailable: state1.bitsAvailable, buffer: newBuffer, reserve: newReserve, reserveAvailable: additionallyAvailable, tag: state1.tag};
					state = $temp$state;
					continue readMoreBits;
				}
			}
		}
	}
};
var $folkertdev$elm_flate$Inflate$Internal$decodeSymbol = F2(
	function (table, tree) {
		return $folkertdev$elm_flate$Inflate$BitReader$BitReader(
			function (state) {
				var _v0 = (state.bitsAvailable < 16) ? $folkertdev$elm_flate$Inflate$BitReader$readMoreBits(state) : $elm$core$Result$Ok(state);
				if (_v0.$ === 'Err') {
					var e = _v0.a;
					return $elm$core$Result$Err(e);
				} else {
					var d = _v0.a;
					var _v1 = A5($folkertdev$elm_flate$Inflate$Internal$decodeSymbolInnerLoop, table, 0, d.tag, d.bitsAvailable, 0);
					var cur = _v1.cur;
					var tag = _v1.tag;
					var bitsAvailable = _v1.bitsAvailable;
					var sum = _v1.sum;
					var _v2 = A2($elm$core$Array$get, sum + cur, tree.trans);
					if (_v2.$ === 'Nothing') {
						return $elm$core$Result$Err('Index into trans tree out of bounds');
					} else {
						var result = _v2.a;
						return $elm$core$Result$Ok(
							_Utils_Tuple2(
								result,
								{bitsAvailable: bitsAvailable, buffer: d.buffer, reserve: d.reserve, reserveAvailable: d.reserveAvailable, tag: tag}));
					}
				}
			});
	});
var $folkertdev$elm_flate$Inflate$BitReader$readBits = F2(
	function (numberOfBits, base) {
		return $folkertdev$elm_flate$Inflate$BitReader$BitReader(
			function (state) {
				if (!numberOfBits) {
					return $elm$core$Result$Ok(
						_Utils_Tuple2(base, state));
				} else {
					var _v0 = (_Utils_cmp(state.bitsAvailable, numberOfBits) < 0) ? $folkertdev$elm_flate$Inflate$BitReader$readMoreBits(state) : $elm$core$Result$Ok(state);
					if (_v0.$ === 'Err') {
						var e = _v0.a;
						return $elm$core$Result$Err(e);
					} else {
						var d = _v0.a;
						var val = d.tag & (65535 >>> (16 - numberOfBits));
						var newTag = d.tag >>> numberOfBits;
						return $elm$core$Result$Ok(
							_Utils_Tuple2(
								val + base,
								{bitsAvailable: d.bitsAvailable - numberOfBits, buffer: d.buffer, reserve: d.reserve, reserveAvailable: d.reserveAvailable, tag: newTag}));
					}
				}
			});
	});
var $folkertdev$elm_flate$Inflate$BitReader$succeed = function (x) {
	return $folkertdev$elm_flate$Inflate$BitReader$BitReader(
		function (s) {
			return $elm$core$Result$Ok(
				_Utils_Tuple2(x, s));
		});
};
var $elm$core$List$tail = function (list) {
	if (list.b) {
		var x = list.a;
		var xs = list.b;
		return $elm$core$Maybe$Just(xs);
	} else {
		return $elm$core$Maybe$Nothing;
	}
};
var $folkertdev$elm_flate$Inflate$Internal$decodeDynamicTreeLength = F4(
	function (codeTree, hlit, hdist, _v0) {
		var i = _v0.a;
		var bitset = _v0.b;
		var lengths = _v0.c;
		if (_Utils_cmp(i, hlit + hdist) < 0) {
			var table = A2(
				$elm$core$Maybe$withDefault,
				_List_Nil,
				$elm$core$List$tail(codeTree.table));
			return A2(
				$folkertdev$elm_flate$Inflate$BitReader$andThen,
				function (sym) {
					switch (sym) {
						case 16:
							var prev = A2(
								$elm$core$Maybe$withDefault,
								0,
								A2($elm$core$Dict$get, i - 1, lengths));
							return A2(
								$folkertdev$elm_flate$Inflate$BitReader$map,
								A2(
									$elm$core$Basics$composeR,
									A4($folkertdev$elm_flate$Inflate$Internal$copySegment, i, prev, bitset, lengths),
									$elm$bytes$Bytes$Decode$Loop),
								A2($folkertdev$elm_flate$Inflate$BitReader$readBits, 2, 3));
						case 17:
							return A2(
								$folkertdev$elm_flate$Inflate$BitReader$map,
								A2(
									$elm$core$Basics$composeR,
									A4($folkertdev$elm_flate$Inflate$Internal$copySegment, i, 0, bitset, lengths),
									$elm$bytes$Bytes$Decode$Loop),
								A2($folkertdev$elm_flate$Inflate$BitReader$readBits, 3, 3));
						case 18:
							return A2(
								$folkertdev$elm_flate$Inflate$BitReader$map,
								A2(
									$elm$core$Basics$composeR,
									A4($folkertdev$elm_flate$Inflate$Internal$copySegment, i, 0, bitset, lengths),
									$elm$bytes$Bytes$Decode$Loop),
								A2($folkertdev$elm_flate$Inflate$BitReader$readBits, 7, 11));
						case 0:
							return A2($folkertdev$elm_flate$Inflate$BitSet$member, i, bitset) ? $folkertdev$elm_flate$Inflate$BitReader$succeed(
								$elm$bytes$Bytes$Decode$Loop(
									_Utils_Tuple3(
										i + 1,
										bitset,
										A2($elm$core$Dict$remove, i, lengths)))) : $folkertdev$elm_flate$Inflate$BitReader$succeed(
								$elm$bytes$Bytes$Decode$Loop(
									_Utils_Tuple3(i + 1, bitset, lengths)));
						default:
							return $folkertdev$elm_flate$Inflate$BitReader$succeed(
								$elm$bytes$Bytes$Decode$Loop(
									_Utils_Tuple3(
										i + 1,
										A2($folkertdev$elm_flate$Inflate$BitSet$insert, i, bitset),
										A3($elm$core$Dict$insert, i, sym, lengths))));
					}
				},
				A2($folkertdev$elm_flate$Inflate$Internal$decodeSymbol, table, codeTree));
		} else {
			return $folkertdev$elm_flate$Inflate$BitReader$succeed(
				$elm$bytes$Bytes$Decode$Done(lengths));
		}
	});
var $folkertdev$elm_flate$Inflate$BitSet$empty = $folkertdev$elm_flate$Inflate$BitSet$BitSet320(0)(0)(0)(0)(0)(0)(0)(0)(0)(0);
var $elm$core$List$takeReverse = F3(
	function (n, list, kept) {
		takeReverse:
		while (true) {
			if (n <= 0) {
				return kept;
			} else {
				if (!list.b) {
					return kept;
				} else {
					var x = list.a;
					var xs = list.b;
					var $temp$n = n - 1,
						$temp$list = xs,
						$temp$kept = A2($elm$core$List$cons, x, kept);
					n = $temp$n;
					list = $temp$list;
					kept = $temp$kept;
					continue takeReverse;
				}
			}
		}
	});
var $elm$core$List$takeTailRec = F2(
	function (n, list) {
		return $elm$core$List$reverse(
			A3($elm$core$List$takeReverse, n, list, _List_Nil));
	});
var $elm$core$List$takeFast = F3(
	function (ctr, n, list) {
		if (n <= 0) {
			return _List_Nil;
		} else {
			var _v0 = _Utils_Tuple2(n, list);
			_v0$1:
			while (true) {
				_v0$5:
				while (true) {
					if (!_v0.b.b) {
						return list;
					} else {
						if (_v0.b.b.b) {
							switch (_v0.a) {
								case 1:
									break _v0$1;
								case 2:
									var _v2 = _v0.b;
									var x = _v2.a;
									var _v3 = _v2.b;
									var y = _v3.a;
									return _List_fromArray(
										[x, y]);
								case 3:
									if (_v0.b.b.b.b) {
										var _v4 = _v0.b;
										var x = _v4.a;
										var _v5 = _v4.b;
										var y = _v5.a;
										var _v6 = _v5.b;
										var z = _v6.a;
										return _List_fromArray(
											[x, y, z]);
									} else {
										break _v0$5;
									}
								default:
									if (_v0.b.b.b.b && _v0.b.b.b.b.b) {
										var _v7 = _v0.b;
										var x = _v7.a;
										var _v8 = _v7.b;
										var y = _v8.a;
										var _v9 = _v8.b;
										var z = _v9.a;
										var _v10 = _v9.b;
										var w = _v10.a;
										var tl = _v10.b;
										return (ctr > 1000) ? A2(
											$elm$core$List$cons,
											x,
											A2(
												$elm$core$List$cons,
												y,
												A2(
													$elm$core$List$cons,
													z,
													A2(
														$elm$core$List$cons,
														w,
														A2($elm$core$List$takeTailRec, n - 4, tl))))) : A2(
											$elm$core$List$cons,
											x,
											A2(
												$elm$core$List$cons,
												y,
												A2(
													$elm$core$List$cons,
													z,
													A2(
														$elm$core$List$cons,
														w,
														A3($elm$core$List$takeFast, ctr + 1, n - 4, tl)))));
									} else {
										break _v0$5;
									}
							}
						} else {
							if (_v0.a === 1) {
								break _v0$1;
							} else {
								break _v0$5;
							}
						}
					}
				}
				return list;
			}
			var _v1 = _v0.b;
			var x = _v1.a;
			return _List_fromArray(
				[x]);
		}
	});
var $elm$core$List$take = F2(
	function (n, list) {
		return A3($elm$core$List$takeFast, 0, n, list);
	});
var $folkertdev$elm_flate$Inflate$Internal$decodeTreeLengths = F4(
	function (hlit, hdist, hclen, codeLengths) {
		var clcs = A2($elm$core$List$take, hclen, $folkertdev$elm_flate$Inflate$Internal$clcIndices);
		var initialLengths = function () {
			var go = F3(
				function (xs, ys, accum) {
					go:
					while (true) {
						if (!xs.b) {
							return accum;
						} else {
							var index = xs.a;
							var restIndex = xs.b;
							if (!ys.b) {
								return accum;
							} else {
								var codeLength = ys.a;
								var restCodeLength = ys.b;
								if (!(!codeLength)) {
									var $temp$xs = restIndex,
										$temp$ys = restCodeLength,
										$temp$accum = A3($elm$core$Dict$insert, index, codeLength, accum);
									xs = $temp$xs;
									ys = $temp$ys;
									accum = $temp$accum;
									continue go;
								} else {
									var $temp$xs = restIndex,
										$temp$ys = restCodeLength,
										$temp$accum = accum;
									xs = $temp$xs;
									ys = $temp$ys;
									accum = $temp$accum;
									continue go;
								}
							}
						}
					}
				});
			return A3(go, clcs, codeLengths, $elm$core$Dict$empty);
		}();
		var codeTree = A3($folkertdev$elm_flate$Inflate$Internal$buildTree, initialLengths, 0, 19);
		var initialBitSet = A3(
			$elm$core$Dict$foldl,
			F2(
				function (i, _v0) {
					return $folkertdev$elm_flate$Inflate$BitSet$insert(i);
				}),
			$folkertdev$elm_flate$Inflate$BitSet$empty,
			initialLengths);
		return A2(
			$folkertdev$elm_flate$Inflate$BitReader$loop,
			_Utils_Tuple3(0, initialBitSet, initialLengths),
			A3($folkertdev$elm_flate$Inflate$Internal$decodeDynamicTreeLength, codeTree, hlit, hdist));
	});
var $folkertdev$elm_flate$Inflate$BitReader$exactly = F2(
	function (tableCount, decoder) {
		var helper = function (_v0) {
			var n = _v0.a;
			var xs = _v0.b;
			return (n <= 0) ? $folkertdev$elm_flate$Inflate$BitReader$succeed(
				$elm$bytes$Bytes$Decode$Done(
					$elm$core$List$reverse(xs))) : A2(
				$folkertdev$elm_flate$Inflate$BitReader$map,
				function (x) {
					return $elm$bytes$Bytes$Decode$Loop(
						_Utils_Tuple2(
							n - 1,
							A2($elm$core$List$cons, x, xs)));
				},
				decoder);
		};
		return A2(
			$folkertdev$elm_flate$Inflate$BitReader$loop,
			_Utils_Tuple2(tableCount, _List_Nil),
			helper);
	});
var $folkertdev$elm_flate$Inflate$Internal$cont = F3(
	function (hlit, hdist, hclen) {
		var buildTrees = function (lengths) {
			return _Utils_Tuple2(
				A3($folkertdev$elm_flate$Inflate$Internal$buildTree, lengths, 0, hlit),
				A3($folkertdev$elm_flate$Inflate$Internal$buildTree, lengths, hlit, hdist));
		};
		return A2(
			$folkertdev$elm_flate$Inflate$BitReader$map,
			buildTrees,
			A2(
				$folkertdev$elm_flate$Inflate$BitReader$andThen,
				A3($folkertdev$elm_flate$Inflate$Internal$decodeTreeLengths, hlit, hdist, hclen),
				A2(
					$folkertdev$elm_flate$Inflate$BitReader$exactly,
					hclen,
					A2($folkertdev$elm_flate$Inflate$BitReader$readBits, 3, 0))));
	});
var $folkertdev$elm_flate$Inflate$BitReader$map2 = F3(
	function (f, _v0, _v1) {
		var fa = _v0.a;
		var fb = _v1.a;
		return $folkertdev$elm_flate$Inflate$BitReader$BitReader(
			function (state) {
				var _v2 = fa(state);
				if (_v2.$ === 'Err') {
					var e = _v2.a;
					return $elm$core$Result$Err(e);
				} else {
					var _v3 = _v2.a;
					var a = _v3.a;
					var newState = _v3.b;
					var _v4 = fb(newState);
					if (_v4.$ === 'Err') {
						var e = _v4.a;
						return $elm$core$Result$Err(e);
					} else {
						var _v5 = _v4.a;
						var b = _v5.a;
						var newerState = _v5.b;
						return $elm$core$Result$Ok(
							_Utils_Tuple2(
								A2(f, a, b),
								newerState));
					}
				}
			});
	});
var $folkertdev$elm_flate$Inflate$BitReader$andMap = F2(
	function (a, f) {
		return A3($folkertdev$elm_flate$Inflate$BitReader$map2, $elm$core$Basics$apL, f, a);
	});
var $folkertdev$elm_flate$Inflate$BitReader$map3 = F4(
	function (f, a, b, c) {
		return A2(
			$folkertdev$elm_flate$Inflate$BitReader$andMap,
			c,
			A2(
				$folkertdev$elm_flate$Inflate$BitReader$andMap,
				b,
				A2(
					$folkertdev$elm_flate$Inflate$BitReader$andMap,
					a,
					$folkertdev$elm_flate$Inflate$BitReader$succeed(f))));
	});
var $folkertdev$elm_flate$Inflate$Internal$decodeTrees = A2(
	$folkertdev$elm_flate$Inflate$BitReader$andThen,
	$elm$core$Basics$identity,
	A4(
		$folkertdev$elm_flate$Inflate$BitReader$map3,
		$folkertdev$elm_flate$Inflate$Internal$cont,
		A2($folkertdev$elm_flate$Inflate$BitReader$readBits, 5, 257),
		A2($folkertdev$elm_flate$Inflate$BitReader$readBits, 5, 1),
		A2($folkertdev$elm_flate$Inflate$BitReader$readBits, 4, 4)));
var $folkertdev$elm_flate$Inflate$BitReader$error = function (e) {
	return $folkertdev$elm_flate$Inflate$BitReader$BitReader(
		function (s) {
			return $elm$core$Result$Err(e);
		});
};
var $folkertdev$elm_flate$Inflate$BitReader$getBit = A2($folkertdev$elm_flate$Inflate$BitReader$readBits, 1, 0);
var $folkertdev$elm_flate$Experimental$ByteArray$get = F2(
	function (index, _v0) {
		var array = _v0.a;
		var finalSize = _v0.b;
		var finalBytes = _v0.c;
		var offset = index % 4;
		if (_Utils_cmp(
			index,
			($elm$core$Array$length(array) * 4) + finalSize) > -1) {
			return $elm$core$Maybe$Nothing;
		} else {
			if (_Utils_cmp(
				index,
				$elm$core$Array$length(array) * 4) > -1) {
				return $elm$core$Maybe$Just(255 & (finalBytes >>> (8 * (3 - offset))));
			} else {
				var internalIndex = (index / 4) | 0;
				var _v1 = A2($elm$core$Array$get, internalIndex, array);
				if (_v1.$ === 'Nothing') {
					return $elm$core$Maybe$Nothing;
				} else {
					var int32 = _v1.a;
					return $elm$core$Maybe$Just(255 & (int32 >>> (8 * (3 - offset))));
				}
			}
		}
	});
var $elm$core$Basics$min = F2(
	function (x, y) {
		return (_Utils_cmp(x, y) < 0) ? x : y;
	});
var $folkertdev$elm_flate$Experimental$ByteArray$copyToBackInternal = F5(
	function (startIndex, size, array, finalSize, finalBytes) {
		copyToBackInternal:
		while (true) {
			var offset = startIndex % 4;
			var internalIndex = (startIndex / 4) | 0;
			if (size <= 0) {
				return A3($folkertdev$elm_flate$Experimental$ByteArray$ByteArray, array, finalSize, finalBytes);
			} else {
				if (_Utils_cmp(
					startIndex + 4,
					(($elm$core$Array$length(array) - 1) * 4) + finalSize) > -1) {
					var _v0 = A2(
						$folkertdev$elm_flate$Experimental$ByteArray$get,
						startIndex,
						A3($folkertdev$elm_flate$Experimental$ByteArray$ByteArray, array, finalSize, finalBytes));
					if (_v0.$ === 'Nothing') {
						return A3($folkertdev$elm_flate$Experimental$ByteArray$ByteArray, array, finalSize, finalBytes);
					} else {
						var value = _v0.a;
						var _v1 = A2(
							$folkertdev$elm_flate$Experimental$ByteArray$push,
							value,
							A3($folkertdev$elm_flate$Experimental$ByteArray$ByteArray, array, finalSize, finalBytes));
						var newArray = _v1.a;
						var newFinalSize = _v1.b;
						var newFinalBytes = _v1.c;
						var $temp$startIndex = startIndex + 1,
							$temp$size = size - 1,
							$temp$array = newArray,
							$temp$finalSize = newFinalSize,
							$temp$finalBytes = newFinalBytes;
						startIndex = $temp$startIndex;
						size = $temp$size;
						array = $temp$array;
						finalSize = $temp$finalSize;
						finalBytes = $temp$finalBytes;
						continue copyToBackInternal;
					}
				} else {
					var _v2 = A2($elm$core$Array$get, internalIndex, array);
					if (_v2.$ === 'Nothing') {
						return A3($folkertdev$elm_flate$Experimental$ByteArray$ByteArray, array, finalSize, finalBytes);
					} else {
						var value = _v2.a;
						var written = A2($elm$core$Basics$min, 4 - offset, size);
						var maskedFront = value << (8 * offset);
						var maskedBack = function () {
							if (_Utils_cmp(4 - offset, size) > 0) {
								var bytesWeNeedToRemove = 4 - size;
								var bytesWeHave = (3 - offset) + 1;
								return maskedFront >> (bytesWeNeedToRemove * 8);
							} else {
								return maskedFront >> (offset * 8);
							}
						}();
						var _v3 = A3(
							$folkertdev$elm_flate$Experimental$ByteArray$pushMany,
							written,
							maskedBack,
							A3($folkertdev$elm_flate$Experimental$ByteArray$ByteArray, array, finalSize, finalBytes));
						var x = _v3.a;
						var y = _v3.b;
						var z = _v3.c;
						var $temp$startIndex = startIndex + written,
							$temp$size = size - written,
							$temp$array = x,
							$temp$finalSize = y,
							$temp$finalBytes = z;
						startIndex = $temp$startIndex;
						size = $temp$size;
						array = $temp$array;
						finalSize = $temp$finalSize;
						finalBytes = $temp$finalBytes;
						continue copyToBackInternal;
					}
				}
			}
		}
	});
var $folkertdev$elm_flate$Experimental$ByteArray$copyToBack = F3(
	function (startIndex, size, _v0) {
		var array = _v0.a;
		var finalSize = _v0.b;
		var finalBytes = _v0.c;
		return A5($folkertdev$elm_flate$Experimental$ByteArray$copyToBackInternal, startIndex, size, array, finalSize, finalBytes);
	});
var $folkertdev$elm_flate$Inflate$Internal$HuffmanTable = function (a) {
	return {$: 'HuffmanTable', a: a};
};
var $elm$core$Elm$JsArray$foldl = _JsArray_foldl;
var $elm$core$Array$foldl = F3(
	function (func, baseCase, _v0) {
		var tree = _v0.c;
		var tail = _v0.d;
		var helper = F2(
			function (node, acc) {
				if (node.$ === 'SubTree') {
					var subTree = node.a;
					return A3($elm$core$Elm$JsArray$foldl, helper, acc, subTree);
				} else {
					var values = node.a;
					return A3($elm$core$Elm$JsArray$foldl, func, acc, values);
				}
			});
		return A3(
			$elm$core$Elm$JsArray$foldl,
			func,
			A3($elm$core$Elm$JsArray$foldl, helper, baseCase, tree),
			tail);
	});
var $folkertdev$elm_flate$Inflate$Internal$buildBitsBase = F2(
	function (delta, first) {
		var initializer = function (i) {
			return (_Utils_cmp(i, delta) < 0) ? 0 : (((i - delta) / delta) | 0);
		};
		var folder = F2(
			function (bit, _v0) {
				var sum = _v0.a;
				var accum = _v0.b;
				return _Utils_Tuple2(
					sum + (1 << bit),
					A2(
						$elm$core$Array$push,
						{base: sum, bits: bit},
						accum));
			});
		var bits = A2($elm$core$Array$initialize, 30, initializer);
		var base = A3(
			$elm$core$Array$foldl,
			folder,
			_Utils_Tuple2(first, $elm$core$Array$empty),
			bits).b;
		return $folkertdev$elm_flate$Inflate$Internal$HuffmanTable(base);
	});
var $folkertdev$elm_flate$Inflate$Internal$hardcodedDistanceTable = A2($folkertdev$elm_flate$Inflate$Internal$buildBitsBase, 2, 1);
var $folkertdev$elm_flate$Inflate$Internal$hardcodedLengthTable = function (_v0) {
	var array = _v0.a;
	return $folkertdev$elm_flate$Inflate$Internal$HuffmanTable(
		A3(
			$elm$core$Array$set,
			28,
			{base: 258, bits: 0},
			array));
}(
	A2($folkertdev$elm_flate$Inflate$Internal$buildBitsBase, 4, 3));
var $folkertdev$elm_flate$Inflate$Internal$readHuffmanTable = F2(
	function (index, _v0) {
		var table = _v0.a;
		return A2($elm$core$Array$get, index, table);
	});
var $folkertdev$elm_flate$Inflate$Internal$decodeLength = function (symbol) {
	var _v0 = A2($folkertdev$elm_flate$Inflate$Internal$readHuffmanTable, symbol - 257, $folkertdev$elm_flate$Inflate$Internal$hardcodedLengthTable);
	if (_v0.$ === 'Nothing') {
		return $folkertdev$elm_flate$Inflate$BitReader$error(
			function () {
				var _v1 = $folkertdev$elm_flate$Inflate$Internal$hardcodedDistanceTable;
				var internal = _v1.a;
				return 'index out of bounds in hardcodedLengthTable: requested index ' + ($elm$core$String$fromInt(symbol - 257) + ('but hardcodedLengthTable has length ' + $elm$core$String$fromInt(
					$elm$core$Array$length(internal))));
			}());
	} else {
		var entry = _v0.a;
		return A2($folkertdev$elm_flate$Inflate$BitReader$readBits, entry.bits, entry.base);
	}
};
var $folkertdev$elm_flate$Inflate$Internal$decodeOffset = F2(
	function (outputLength, dt) {
		var table_ = A2(
			$elm$core$Maybe$withDefault,
			_List_Nil,
			$elm$core$List$tail(dt.table));
		return A2(
			$folkertdev$elm_flate$Inflate$BitReader$andThen,
			function (distance) {
				var _v0 = A2($folkertdev$elm_flate$Inflate$Internal$readHuffmanTable, distance, $folkertdev$elm_flate$Inflate$Internal$hardcodedDistanceTable);
				if (_v0.$ === 'Nothing') {
					return $folkertdev$elm_flate$Inflate$BitReader$error(
						function () {
							var _v1 = $folkertdev$elm_flate$Inflate$Internal$hardcodedDistanceTable;
							var internal = _v1.a;
							return 'index out of bounds in hardcodedDistanceTable: requested index ' + ($elm$core$String$fromInt(distance) + ('but hardcodedLengthTable has length ' + $elm$core$String$fromInt(
								$elm$core$Array$length(internal))));
						}());
				} else {
					var entry = _v0.a;
					return A2(
						$folkertdev$elm_flate$Inflate$BitReader$map,
						function (v) {
							return outputLength - v;
						},
						A2($folkertdev$elm_flate$Inflate$BitReader$readBits, entry.bits, entry.base));
				}
			},
			A2($folkertdev$elm_flate$Inflate$Internal$decodeSymbol, table_, dt));
	});
var $folkertdev$elm_flate$Inflate$Internal$inflateBlockDataHelp = F2(
	function (trees, _v0) {
		var outputLength = _v0.a;
		var output = _v0.b;
		var table = A2(
			$elm$core$Maybe$withDefault,
			_List_Nil,
			$elm$core$List$tail(trees.literal.table));
		return A2(
			$folkertdev$elm_flate$Inflate$BitReader$andThen,
			function (symbol) {
				return (symbol === 256) ? $folkertdev$elm_flate$Inflate$BitReader$succeed(
					$elm$bytes$Bytes$Decode$Done(output)) : ((symbol < 256) ? $folkertdev$elm_flate$Inflate$BitReader$succeed(
					$elm$bytes$Bytes$Decode$Loop(
						_Utils_Tuple2(
							outputLength + 1,
							A2($folkertdev$elm_flate$Experimental$ByteArray$push, symbol, output)))) : A3(
					$folkertdev$elm_flate$Inflate$BitReader$map2,
					F2(
						function (length, offset) {
							return $elm$bytes$Bytes$Decode$Loop(
								_Utils_Tuple2(
									outputLength + length,
									A3($folkertdev$elm_flate$Experimental$ByteArray$copyToBack, offset, length, output)));
						}),
					$folkertdev$elm_flate$Inflate$Internal$decodeLength(symbol),
					A2($folkertdev$elm_flate$Inflate$Internal$decodeOffset, outputLength, trees.distance)));
			},
			A2($folkertdev$elm_flate$Inflate$Internal$decodeSymbol, table, trees.literal));
	});
var $folkertdev$elm_flate$Inflate$Internal$inflateBlockData = F3(
	function (trees, outputLength, output) {
		return A2(
			$folkertdev$elm_flate$Inflate$BitReader$loop,
			_Utils_Tuple2(outputLength, output),
			$folkertdev$elm_flate$Inflate$Internal$inflateBlockDataHelp(trees));
	});
var $elm$bytes$Bytes$Decode$andThen = F2(
	function (callback, _v0) {
		var decodeA = _v0.a;
		return $elm$bytes$Bytes$Decode$Decoder(
			F2(
				function (bites, offset) {
					var _v1 = A2(decodeA, bites, offset);
					var newOffset = _v1.a;
					var a = _v1.b;
					var _v2 = callback(a);
					var decodeB = _v2.a;
					return A2(decodeB, bites, newOffset);
				}));
	});
var $elm$bytes$Bytes$Decode$fail = $elm$bytes$Bytes$Decode$Decoder(_Bytes_decodeFailure);
var $folkertdev$elm_flate$Inflate$Internal$uncompressedBlockDecoder = function (bufferWidth) {
	var decodeLengths = A3(
		$elm$bytes$Bytes$Decode$map2,
		$elm$core$Tuple$pair,
		$elm$bytes$Bytes$Decode$unsignedInt16($elm$bytes$Bytes$LE),
		$elm$bytes$Bytes$Decode$unsignedInt16($elm$bytes$Bytes$LE));
	return A2(
		$elm$bytes$Bytes$Decode$andThen,
		function (_v0) {
			var length = _v0.a;
			var invlength = _v0.b;
			if (!_Utils_eq(length, (~invlength) & 65535)) {
				return $elm$bytes$Bytes$Decode$fail;
			} else {
				var remainingSize = (bufferWidth - 4) - length;
				return A3(
					$elm$bytes$Bytes$Decode$map2,
					$elm$core$Tuple$pair,
					$elm$bytes$Bytes$Decode$bytes(length),
					$elm$bytes$Bytes$Decode$bytes(remainingSize));
			}
		},
		decodeLengths);
};
var $folkertdev$elm_flate$Inflate$Internal$inflateUncompressedBlock = $folkertdev$elm_flate$Inflate$BitReader$BitReader(
	function (state) {
		var _v0 = A2(
			$elm$bytes$Bytes$Decode$decode,
			$folkertdev$elm_flate$Inflate$Internal$uncompressedBlockDecoder(
				$elm$bytes$Bytes$width(state.buffer)),
			state.buffer);
		if (_v0.$ === 'Nothing') {
			return $elm$core$Result$Err('inflateUncompressedBlock: ran out of bounds');
		} else {
			var _v1 = _v0.a;
			var block = _v1.a;
			var newBuffer = _v1.b;
			return $elm$core$Result$Ok(
				_Utils_Tuple2(
					block,
					_Utils_update(
						state,
						{buffer: newBuffer})));
		}
	});
var $folkertdev$elm_flate$Experimental$ByteArray$length = function (_v0) {
	var array = _v0.a;
	var finalSize = _v0.b;
	var finalBytes = _v0.c;
	var _v1 = $elm$core$Array$length(array) * 4;
	if (!_v1) {
		return finalSize;
	} else {
		var l = _v1;
		return l + finalSize;
	}
};
var $elm$core$Elm$JsArray$appendN = _JsArray_appendN;
var $elm$core$Elm$JsArray$slice = _JsArray_slice;
var $elm$core$Array$appendHelpBuilder = F2(
	function (tail, builder) {
		var tailLen = $elm$core$Elm$JsArray$length(tail);
		var notAppended = ($elm$core$Array$branchFactor - $elm$core$Elm$JsArray$length(builder.tail)) - tailLen;
		var appended = A3($elm$core$Elm$JsArray$appendN, $elm$core$Array$branchFactor, builder.tail, tail);
		return (notAppended < 0) ? {
			nodeList: A2(
				$elm$core$List$cons,
				$elm$core$Array$Leaf(appended),
				builder.nodeList),
			nodeListSize: builder.nodeListSize + 1,
			tail: A3($elm$core$Elm$JsArray$slice, notAppended, tailLen, tail)
		} : ((!notAppended) ? {
			nodeList: A2(
				$elm$core$List$cons,
				$elm$core$Array$Leaf(appended),
				builder.nodeList),
			nodeListSize: builder.nodeListSize + 1,
			tail: $elm$core$Elm$JsArray$empty
		} : {nodeList: builder.nodeList, nodeListSize: builder.nodeListSize, tail: appended});
	});
var $elm$core$Array$appendHelpTree = F2(
	function (toAppend, array) {
		var len = array.a;
		var tree = array.c;
		var tail = array.d;
		var itemsToAppend = $elm$core$Elm$JsArray$length(toAppend);
		var notAppended = ($elm$core$Array$branchFactor - $elm$core$Elm$JsArray$length(tail)) - itemsToAppend;
		var appended = A3($elm$core$Elm$JsArray$appendN, $elm$core$Array$branchFactor, tail, toAppend);
		var newArray = A2($elm$core$Array$unsafeReplaceTail, appended, array);
		if (notAppended < 0) {
			var nextTail = A3($elm$core$Elm$JsArray$slice, notAppended, itemsToAppend, toAppend);
			return A2($elm$core$Array$unsafeReplaceTail, nextTail, newArray);
		} else {
			return newArray;
		}
	});
var $elm$core$Array$builderFromArray = function (_v0) {
	var len = _v0.a;
	var tree = _v0.c;
	var tail = _v0.d;
	var helper = F2(
		function (node, acc) {
			if (node.$ === 'SubTree') {
				var subTree = node.a;
				return A3($elm$core$Elm$JsArray$foldl, helper, acc, subTree);
			} else {
				return A2($elm$core$List$cons, node, acc);
			}
		});
	return {
		nodeList: A3($elm$core$Elm$JsArray$foldl, helper, _List_Nil, tree),
		nodeListSize: (len / $elm$core$Array$branchFactor) | 0,
		tail: tail
	};
};
var $elm$core$Array$append = F2(
	function (a, _v0) {
		var aTail = a.d;
		var bLen = _v0.a;
		var bTree = _v0.c;
		var bTail = _v0.d;
		if (_Utils_cmp(bLen, $elm$core$Array$branchFactor * 4) < 1) {
			var foldHelper = F2(
				function (node, array) {
					if (node.$ === 'SubTree') {
						var tree = node.a;
						return A3($elm$core$Elm$JsArray$foldl, foldHelper, array, tree);
					} else {
						var leaf = node.a;
						return A2($elm$core$Array$appendHelpTree, leaf, array);
					}
				});
			return A2(
				$elm$core$Array$appendHelpTree,
				bTail,
				A3($elm$core$Elm$JsArray$foldl, foldHelper, a, bTree));
		} else {
			var foldHelper = F2(
				function (node, builder) {
					if (node.$ === 'SubTree') {
						var tree = node.a;
						return A3($elm$core$Elm$JsArray$foldl, foldHelper, builder, tree);
					} else {
						var leaf = node.a;
						return A2($elm$core$Array$appendHelpBuilder, leaf, builder);
					}
				});
			return A2(
				$elm$core$Array$builderToArray,
				true,
				A2(
					$elm$core$Array$appendHelpBuilder,
					bTail,
					A3(
						$elm$core$Elm$JsArray$foldl,
						foldHelper,
						$elm$core$Array$builderFromArray(a),
						bTree)));
		}
	});
var $folkertdev$elm_flate$Inflate$Internal$sdtree = {
	table: _List_fromArray(
		[0, 0, 0, 0, 0, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]),
	trans: A2(
		$elm$core$Array$append,
		$elm$core$Array$fromList(
			_List_fromArray(
				[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31])),
		A2($elm$core$Array$repeat, 288 - 32, 0))
};
var $folkertdev$elm_flate$Inflate$BitReader$flushHelp = function (state0) {
	var availableSpace = 32 - state0.bitsAvailable;
	var state = A2(
		$folkertdev$elm_flate$Inflate$BitReader$moveFromReserve,
		A2($elm$core$Basics$min, availableSpace, state0.reserveAvailable),
		state0);
	var reserveEncoder = (state.reserveAvailable > 24) ? _List_fromArray(
		[
			A2($elm$bytes$Bytes$Encode$unsignedInt32, $elm$bytes$Bytes$LE, state.reserve)
		]) : ((state.reserveAvailable > 16) ? _List_fromArray(
		[
			A2($elm$bytes$Bytes$Encode$unsignedInt16, $elm$bytes$Bytes$LE, state.reserve),
			$elm$bytes$Bytes$Encode$unsignedInt8(state.reserve >> 16)
		]) : ((state.reserveAvailable > 8) ? _List_fromArray(
		[
			A2($elm$bytes$Bytes$Encode$unsignedInt16, $elm$bytes$Bytes$LE, state.reserve)
		]) : ((state.reserveAvailable > 1) ? _List_fromArray(
		[
			$elm$bytes$Bytes$Encode$unsignedInt8(state.reserve)
		]) : _List_Nil)));
	var tagEncoder = (state.bitsAvailable > 24) ? _List_fromArray(
		[
			A2($elm$bytes$Bytes$Encode$unsignedInt32, $elm$bytes$Bytes$LE, state.tag)
		]) : ((state.bitsAvailable > 16) ? _List_fromArray(
		[
			A2($elm$bytes$Bytes$Encode$unsignedInt16, $elm$bytes$Bytes$LE, state.tag),
			$elm$bytes$Bytes$Encode$unsignedInt8(state.tag >> 16)
		]) : ((state.bitsAvailable > 8) ? _List_fromArray(
		[
			A2($elm$bytes$Bytes$Encode$unsignedInt16, $elm$bytes$Bytes$LE, state.tag)
		]) : ((state.bitsAvailable > 1) ? _List_fromArray(
		[
			$elm$bytes$Bytes$Encode$unsignedInt8(state.tag)
		]) : _List_Nil)));
	return $elm$bytes$Bytes$Encode$encode(
		$elm$bytes$Bytes$Encode$sequence(
			_Utils_ap(
				tagEncoder,
				_Utils_ap(
					reserveEncoder,
					_List_fromArray(
						[
							$elm$bytes$Bytes$Encode$bytes(state.buffer)
						])))));
};
var $folkertdev$elm_flate$Inflate$BitReader$flush = function (state) {
	return {
		bitsAvailable: 0,
		buffer: $folkertdev$elm_flate$Inflate$BitReader$flushHelp(state),
		reserve: 0,
		reserveAvailable: 0,
		tag: 0
	};
};
var $folkertdev$elm_flate$Inflate$BitReader$skipToByteBoundary = $folkertdev$elm_flate$Inflate$BitReader$BitReader(
	function (s) {
		var available = s.bitsAvailable + s.reserveAvailable;
		var untilBoundary = A2($elm$core$Basics$modBy, 8, available);
		var _v0 = A2($folkertdev$elm_flate$Inflate$BitReader$readBits, untilBoundary, 0);
		var step = _v0.a;
		var _v1 = step(s);
		if (_v1.$ === 'Err') {
			var e = _v1.a;
			return $elm$core$Result$Err(e);
		} else {
			var _v2 = _v1.a;
			var newState = _v2.b;
			var _v3 = $folkertdev$elm_flate$Inflate$BitReader$readMoreBits(newState);
			if (_v3.$ === 'Err') {
				var e = _v3.a;
				return $elm$core$Result$Err(e);
			} else {
				var newerState = _v3.a;
				return $elm$core$Result$Ok(
					_Utils_Tuple2(
						_Utils_Tuple0,
						$folkertdev$elm_flate$Inflate$BitReader$flush(newerState)));
			}
		}
	});
var $folkertdev$elm_flate$Inflate$Internal$sltree = {
	table: _List_fromArray(
		[0, 0, 0, 0, 0, 0, 0, 24, 152, 112, 0, 0, 0, 0, 0, 0]),
	trans: $elm$core$Array$fromList(
		_List_fromArray(
			[256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 280, 281, 282, 283, 284, 285, 286, 287, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255]))
};
var $folkertdev$elm_flate$Inflate$Internal$uncompressHelp = function (output) {
	var uncompressBlock = function (btype) {
		switch (btype) {
			case 0:
				return A2(
					$folkertdev$elm_flate$Inflate$BitReader$map,
					function (bytes) {
						return A2($folkertdev$elm_flate$Experimental$ByteArray$appendBytes, bytes, output);
					},
					A2(
						$folkertdev$elm_flate$Inflate$BitReader$andThen,
						function (_v1) {
							return $folkertdev$elm_flate$Inflate$Internal$inflateUncompressedBlock;
						},
						$folkertdev$elm_flate$Inflate$BitReader$skipToByteBoundary));
			case 1:
				return A3(
					$folkertdev$elm_flate$Inflate$Internal$inflateBlockData,
					{distance: $folkertdev$elm_flate$Inflate$Internal$sdtree, literal: $folkertdev$elm_flate$Inflate$Internal$sltree},
					$folkertdev$elm_flate$Experimental$ByteArray$length(output),
					output);
			case 2:
				return A2(
					$folkertdev$elm_flate$Inflate$BitReader$andThen,
					function (_v2) {
						var ltree = _v2.a;
						var dtree = _v2.b;
						return A3(
							$folkertdev$elm_flate$Inflate$Internal$inflateBlockData,
							{distance: dtree, literal: ltree},
							$folkertdev$elm_flate$Experimental$ByteArray$length(output),
							output);
					},
					$folkertdev$elm_flate$Inflate$Internal$decodeTrees);
			default:
				return $folkertdev$elm_flate$Inflate$BitReader$error(
					'invalid block type: ' + ($elm$core$String$fromInt(btype) + ' (only 0, 1 and 2 are valid block types)'));
		}
	};
	var readTwoBits = A3(
		$folkertdev$elm_flate$Inflate$BitReader$map2,
		F2(
			function (b1, b2) {
				return b1 + (2 * b2);
			}),
		$folkertdev$elm_flate$Inflate$BitReader$getBit,
		$folkertdev$elm_flate$Inflate$BitReader$getBit);
	var go = F2(
		function (isFinal, blockType) {
			return (!(!isFinal)) ? A2(
				$folkertdev$elm_flate$Inflate$BitReader$map,
				$elm$bytes$Bytes$Decode$Done,
				uncompressBlock(blockType)) : A2(
				$folkertdev$elm_flate$Inflate$BitReader$map,
				$elm$bytes$Bytes$Decode$Loop,
				uncompressBlock(blockType));
		});
	return A2(
		$folkertdev$elm_flate$Inflate$BitReader$andThen,
		$elm$core$Basics$identity,
		A3($folkertdev$elm_flate$Inflate$BitReader$map2, go, $folkertdev$elm_flate$Inflate$BitReader$getBit, readTwoBits));
};
var $folkertdev$elm_flate$Inflate$Internal$uncompress = A2(
	$folkertdev$elm_flate$Inflate$BitReader$map,
	A2($elm$core$Basics$composeR, $folkertdev$elm_flate$Experimental$ByteArray$toBytes, $elm$core$List$singleton),
	A2($folkertdev$elm_flate$Inflate$BitReader$loop, $folkertdev$elm_flate$Experimental$ByteArray$empty, $folkertdev$elm_flate$Inflate$Internal$uncompressHelp));
var $folkertdev$elm_flate$Inflate$Internal$inflate = function (buffer) {
	var _v0 = A2($folkertdev$elm_flate$Inflate$BitReader$decode, buffer, $folkertdev$elm_flate$Inflate$Internal$uncompress);
	if (_v0.$ === 'Err') {
		var e = _v0.a;
		return $elm$core$Result$Err(e);
	} else {
		var values = _v0.a;
		return $elm$core$Result$Ok(
			$elm$bytes$Bytes$Encode$encode(
				$elm$bytes$Bytes$Encode$sequence(
					A2($elm$core$List$map, $elm$bytes$Bytes$Encode$bytes, values))));
	}
};
var $folkertdev$elm_flate$Inflate$Inflate$inflate = function (buffer) {
	var _v0 = $folkertdev$elm_flate$Inflate$Internal$inflate(buffer);
	if (_v0.$ === 'Err') {
		return $elm$core$Maybe$Nothing;
	} else {
		var newBuffer = _v0.a;
		return $elm$core$Maybe$Just(newBuffer);
	}
};
var $folkertdev$elm_flate$Flate$inflate = $folkertdev$elm_flate$Inflate$Inflate$inflate;
var $agu_z$elm_zip$Zip$Entry$IntegrityError = {$: 'IntegrityError'};
var $agu_z$elm_zip$Zip$Entry$integrity = F2(
	function (sum, bytes) {
		return _Utils_eq(
			sum,
			$folkertdev$elm_flate$Flate$crc32(bytes)) ? $elm$core$Result$Ok(bytes) : $elm$core$Result$Err($agu_z$elm_zip$Zip$Entry$IntegrityError);
	});
var $agu_z$elm_zip$Internal$Decode$after = function (offset) {
	return A2(
		$elm$bytes$Bytes$Decode$map2,
		F2(
			function (_v0, a) {
				return a;
			}),
		$elm$bytes$Bytes$Decode$bytes(offset));
};
var $agu_z$elm_zip$Internal$Decode$i32 = $elm$bytes$Bytes$Decode$unsignedInt32($elm$bytes$Bytes$LE);
var $agu_z$elm_zip$Internal$Decode$checkSignature = function (expected) {
	var check = function (value) {
		return _Utils_eq(value, expected) ? $elm$bytes$Bytes$Decode$succeed(_Utils_Tuple0) : $elm$bytes$Bytes$Decode$fail;
	};
	return A2(
		$elm$bytes$Bytes$Decode$map2,
		F2(
			function (_v0, b) {
				return b;
			}),
		A2($elm$bytes$Bytes$Decode$andThen, check, $agu_z$elm_zip$Internal$Decode$i32));
};
var $agu_z$elm_zip$Internal$Decode$i16 = $elm$bytes$Bytes$Decode$unsignedInt16($elm$bytes$Bytes$LE);
var $agu_z$elm_zip$Internal$Decode$with = F2(
	function (a, fn) {
		return A3($elm$bytes$Bytes$Decode$map2, $elm$core$Basics$apL, fn, a);
	});
var $agu_z$elm_zip$Internal$Decode$readFile = function (_v0) {
	var bytes = _v0.a;
	var meta = _v0.b;
	if (bytes.$ === 'Exactly') {
		var entryBytes = bytes.a;
		return $elm$core$Maybe$Just(entryBytes);
	} else {
		var allBytes = bytes.a;
		var startOffset = bytes.b;
		var entryDataDecoder = A2(
			$elm$bytes$Bytes$Decode$andThen,
			function (offset) {
				return A2(
					$agu_z$elm_zip$Internal$Decode$after,
					offset,
					$elm$bytes$Bytes$Decode$bytes(meta.compressedSize));
			},
			A2(
				$agu_z$elm_zip$Internal$Decode$with,
				$agu_z$elm_zip$Internal$Decode$i16,
				A2(
					$agu_z$elm_zip$Internal$Decode$with,
					A2($agu_z$elm_zip$Internal$Decode$after, 22, $agu_z$elm_zip$Internal$Decode$i16),
					A2(
						$agu_z$elm_zip$Internal$Decode$checkSignature,
						67324752,
						$elm$bytes$Bytes$Decode$succeed($elm$core$Basics$add)))));
		return A2(
			$elm$bytes$Bytes$Decode$decode,
			A2($agu_z$elm_zip$Internal$Decode$after, startOffset, entryDataDecoder),
			allBytes);
	}
};
var $agu_z$elm_zip$Zip$Entry$toBytes = function (entry) {
	var record = entry.b;
	var _v0 = $agu_z$elm_zip$Internal$Decode$readFile(entry);
	if (_v0.$ === 'Just') {
		var rawBytes = _v0.a;
		return A2(
			$elm$core$Result$andThen,
			$agu_z$elm_zip$Zip$Entry$integrity(record.crc32),
			function () {
				var _v1 = record.compressionMethod;
				switch (_v1.$) {
					case 'Stored':
						return $elm$core$Result$Ok(rawBytes);
					case 'Deflated':
						return A2(
							$elm$core$Result$fromMaybe,
							$agu_z$elm_zip$Zip$Entry$InflateError,
							$folkertdev$elm_flate$Flate$inflate(rawBytes));
					default:
						var method = _v1.a;
						return $elm$core$Result$Err(
							A2($agu_z$elm_zip$Zip$Entry$UnsupportedCompression, method, rawBytes));
				}
			}());
	} else {
		return $elm$core$Result$Err($agu_z$elm_zip$Zip$Entry$DecodeError);
	}
};
var $author$project$Frontend$Main$extractFileTreeFromZipArchive = A2(
	$elm$core$Basics$composeR,
	$agu_z$elm_zip$Zip$entries,
	A2(
		$elm$core$Basics$composeR,
		$elm$core$List$filter(
			A2($elm$core$Basics$composeR, $agu_z$elm_zip$Zip$Entry$isDirectory, $elm$core$Basics$not)),
		A2(
			$elm$core$Basics$composeR,
			$elm$core$List$map(
				function (entry) {
					var _v0 = $agu_z$elm_zip$Zip$Entry$toBytes(entry);
					if (_v0.$ === 'Err') {
						return $elm$core$Result$Err(
							'Failed to extract entry \'' + ($agu_z$elm_zip$Zip$Entry$path(entry) + '\''));
					} else {
						var entryBytes = _v0.a;
						return $elm$core$Result$Ok(
							_Utils_Tuple2(
								A2(
									$elm$core$List$concatMap,
									$elm$core$String$split('\\'),
									A2(
										$elm$core$String$split,
										'/',
										$agu_z$elm_zip$Zip$Entry$path(entry))),
								entryBytes));
					}
				}),
			A2(
				$elm$core$Basics$composeR,
				$elm_community$result_extra$Result$Extra$combine,
				$elm$core$Result$map($author$project$FileTreeInWorkspace$sortedFileTreeFromListOfBlobsAsBytes)))));
var $elm$file$File$Select$file = F2(
	function (mimes, toMsg) {
		return A2(
			$elm$core$Task$perform,
			toMsg,
			_File_uploadOne(mimes));
	});
var $author$project$Frontend$Main$DiscardEvent = {$: 'DiscardEvent'};
var $elm$core$Task$onError = _Scheduler_onError;
var $elm$core$Task$attempt = F2(
	function (resultToMessage, task) {
		return $elm$core$Task$command(
			$elm$core$Task$Perform(
				A2(
					$elm$core$Task$onError,
					A2(
						$elm$core$Basics$composeL,
						A2($elm$core$Basics$composeL, $elm$core$Task$succeed, resultToMessage),
						$elm$core$Result$Err),
					A2(
						$elm$core$Task$andThen,
						A2(
							$elm$core$Basics$composeL,
							A2($elm$core$Basics$composeL, $elm$core$Task$succeed, resultToMessage),
							$elm$core$Result$Ok),
						task))));
	});
var $elm$browser$Browser$Dom$focus = _Browser_call('focus');
var $author$project$Frontend$Main$inputUrlElementId = 'input-url';
var $author$project$Frontend$Main$focusInputUrlElementCmd = A2(
	$elm$core$Task$attempt,
	function (_v0) {
		return $author$project$Frontend$Main$DiscardEvent;
	},
	$elm$browser$Browser$Dom$focus($author$project$Frontend$Main$inputUrlElementId));
var $elm$core$Maybe$andThen = F2(
	function (callback, maybeValue) {
		if (maybeValue.$ === 'Just') {
			var value = maybeValue.a;
			return callback(value);
		} else {
			return $elm$core$Maybe$Nothing;
		}
	});
var $agu_z$elm_zip$Internal$Decode$CdRecordBounds = F6(
	function (nameLength, extraFieldLength, commentLength, internalAttributes, externalAttributes, startOffset) {
		return {commentLength: commentLength, externalAttributes: externalAttributes, extraFieldLength: extraFieldLength, internalAttributes: internalAttributes, nameLength: nameLength, startOffset: startOffset};
	});
var $agu_z$elm_zip$Internal$Format$EntryMeta = function (madeBy) {
	return function (extractMinVersion) {
		return function (flag) {
			return function (compressionMethod) {
				return function (lastModified) {
					return function (crc32) {
						return function (compressedSize) {
							return function (uncompressedSize) {
								return function (fileName) {
									return function (extraField) {
										return function (comment) {
											return function (internalAttributes) {
												return function (externalAttributes) {
													return {comment: comment, compressedSize: compressedSize, compressionMethod: compressionMethod, crc32: crc32, externalAttributes: externalAttributes, extraField: extraField, extractMinVersion: extractMinVersion, fileName: fileName, flag: flag, internalAttributes: internalAttributes, lastModified: lastModified, madeBy: madeBy, uncompressedSize: uncompressedSize};
												};
											};
										};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var $agu_z$elm_zip$Internal$Format$Offset = F2(
	function (a, b) {
		return {$: 'Offset', a: a, b: b};
	});
var $agu_z$elm_zip$Internal$Format$Deflated = {$: 'Deflated'};
var $agu_z$elm_zip$Internal$Format$Unsupported = function (a) {
	return {$: 'Unsupported', a: a};
};
var $agu_z$elm_zip$Internal$Decode$compressionMethod = function () {
	var help = function (m) {
		switch (m) {
			case 0:
				return $agu_z$elm_zip$Internal$Format$Stored;
			case 8:
				return $agu_z$elm_zip$Internal$Format$Deflated;
			default:
				var method = m;
				return $agu_z$elm_zip$Internal$Format$Unsupported(method);
		}
	};
	return A2($elm$bytes$Bytes$Decode$map, help, $agu_z$elm_zip$Internal$Decode$i16);
}();
var $elm$bytes$Bytes$Decode$string = function (n) {
	return $elm$bytes$Bytes$Decode$Decoder(
		_Bytes_read_string(n));
};
var $agu_z$elm_zip$Internal$Decode$entryIn = function (bytes) {
	var start = A2(
		$agu_z$elm_zip$Internal$Decode$with,
		$agu_z$elm_zip$Internal$Decode$i32,
		A2(
			$agu_z$elm_zip$Internal$Decode$with,
			$agu_z$elm_zip$Internal$Decode$i32,
			A2(
				$agu_z$elm_zip$Internal$Decode$with,
				$agu_z$elm_zip$Internal$Decode$i32,
				A2(
					$agu_z$elm_zip$Internal$Decode$with,
					$agu_z$elm_zip$Internal$Decode$i32,
					A2(
						$agu_z$elm_zip$Internal$Decode$with,
						$agu_z$elm_zip$Internal$Decode$compressionMethod,
						A2(
							$agu_z$elm_zip$Internal$Decode$with,
							$agu_z$elm_zip$Internal$Decode$i16,
							A2(
								$agu_z$elm_zip$Internal$Decode$with,
								$agu_z$elm_zip$Internal$Decode$i16,
								A2(
									$agu_z$elm_zip$Internal$Decode$with,
									$agu_z$elm_zip$Internal$Decode$i16,
									A2(
										$agu_z$elm_zip$Internal$Decode$checkSignature,
										33639248,
										$elm$bytes$Bytes$Decode$succeed($agu_z$elm_zip$Internal$Format$EntryMeta))))))))));
	var recordBounds = A2(
		$agu_z$elm_zip$Internal$Decode$with,
		$agu_z$elm_zip$Internal$Decode$i32,
		A2(
			$agu_z$elm_zip$Internal$Decode$with,
			$agu_z$elm_zip$Internal$Decode$i32,
			A2(
				$agu_z$elm_zip$Internal$Decode$with,
				A2($agu_z$elm_zip$Internal$Decode$after, 2, $agu_z$elm_zip$Internal$Decode$i16),
				A2(
					$agu_z$elm_zip$Internal$Decode$with,
					$agu_z$elm_zip$Internal$Decode$i16,
					A2(
						$agu_z$elm_zip$Internal$Decode$with,
						$agu_z$elm_zip$Internal$Decode$i16,
						A2(
							$agu_z$elm_zip$Internal$Decode$with,
							$agu_z$elm_zip$Internal$Decode$i16,
							$elm$bytes$Bytes$Decode$succeed($agu_z$elm_zip$Internal$Decode$CdRecordBounds)))))));
	var finish = function (_v0) {
		var makeMeta = _v0.a;
		var bounds = _v0.b;
		return A2(
			$elm$bytes$Bytes$Decode$map,
			$agu_z$elm_zip$Internal$Format$Entry(
				A2($agu_z$elm_zip$Internal$Format$Offset, bytes, bounds.startOffset)),
			A6(
				$elm$bytes$Bytes$Decode$map5,
				makeMeta,
				$elm$bytes$Bytes$Decode$string(bounds.nameLength),
				$elm$bytes$Bytes$Decode$bytes(bounds.extraFieldLength),
				$elm$bytes$Bytes$Decode$string(bounds.commentLength),
				$elm$bytes$Bytes$Decode$succeed(bounds.internalAttributes),
				$elm$bytes$Bytes$Decode$succeed(bounds.externalAttributes)));
	};
	return A2(
		$elm$bytes$Bytes$Decode$andThen,
		finish,
		A3($elm$bytes$Bytes$Decode$map2, $elm$core$Tuple$pair, start, recordBounds));
};
var $agu_z$elm_zip$Internal$Decode$CdBounds = F2(
	function (recordCount, start) {
		return {recordCount: recordCount, start: start};
	});
var $agu_z$elm_zip$Internal$Decode$findCdBounds = function (bytes) {
	var decoder = A2(
		$agu_z$elm_zip$Internal$Decode$with,
		A2($agu_z$elm_zip$Internal$Decode$after, 4, $agu_z$elm_zip$Internal$Decode$i32),
		A2(
			$agu_z$elm_zip$Internal$Decode$with,
			A2($agu_z$elm_zip$Internal$Decode$after, 6, $agu_z$elm_zip$Internal$Decode$i16),
			A2(
				$agu_z$elm_zip$Internal$Decode$checkSignature,
				101010256,
				$elm$bytes$Bytes$Decode$succeed($agu_z$elm_zip$Internal$Decode$CdBounds))));
	var attempt = function (offset) {
		attempt:
		while (true) {
			var _v0 = A2(
				$elm$bytes$Bytes$Decode$decode,
				A2($agu_z$elm_zip$Internal$Decode$after, offset, decoder),
				bytes);
			if (_v0.$ === 'Just') {
				var bounds = _v0.a;
				return $elm$core$Maybe$Just(bounds);
			} else {
				if (offset < 0) {
					return $elm$core$Maybe$Nothing;
				} else {
					var $temp$offset = offset - 1;
					offset = $temp$offset;
					continue attempt;
				}
			}
		}
	};
	return attempt(
		$elm$bytes$Bytes$width(bytes) - 22);
};
var $agu_z$elm_zip$Internal$Decode$listStep = F2(
	function (elementDecoder, _v0) {
		var n = _v0.a;
		var elements = _v0.b;
		return (n <= 0) ? $elm$bytes$Bytes$Decode$succeed(
			$elm$bytes$Bytes$Decode$Done(
				$elm$core$List$reverse(elements))) : A2(
			$elm$bytes$Bytes$Decode$map,
			function (element) {
				return $elm$bytes$Bytes$Decode$Loop(
					_Utils_Tuple2(
						n - 1,
						A2($elm$core$List$cons, element, elements)));
			},
			elementDecoder);
	});
var $agu_z$elm_zip$Internal$Decode$list = F2(
	function (length, aDecoder) {
		return A2(
			$elm$bytes$Bytes$Decode$loop,
			_Utils_Tuple2(length, _List_Nil),
			$agu_z$elm_zip$Internal$Decode$listStep(aDecoder));
	});
var $agu_z$elm_zip$Internal$Decode$readDirectory = function (bytes) {
	var topDecoder = function (bounds) {
		return A2(
			$agu_z$elm_zip$Internal$Decode$after,
			bounds.start,
			A2(
				$agu_z$elm_zip$Internal$Decode$list,
				bounds.recordCount,
				$agu_z$elm_zip$Internal$Decode$entryIn(bytes)));
	};
	return A2(
		$elm$core$Maybe$andThen,
		function (bounds) {
			return A2(
				$elm$bytes$Bytes$Decode$decode,
				topDecoder(bounds),
				bytes);
		},
		$agu_z$elm_zip$Internal$Decode$findCdBounds(bytes));
};
var $agu_z$elm_zip$Zip$fromBytes = function (bytes) {
	return A2(
		$elm$core$Maybe$map,
		$agu_z$elm_zip$Zip$Zip,
		$agu_z$elm_zip$Internal$Decode$readDirectory(bytes));
};
var $author$project$Frontend$Main$defaultEditorOpenPosition = {column: 1, lineNumber: 1};
var $author$project$Frontend$Main$initWorkspaceFromFileTreeAndFileSelection = function (_v0) {
	var fileTree = _v0.fileTree;
	var fileLocationOpenInEditor = _v0.fileLocationOpenInEditor;
	return {
		compilation: $elm$core$Maybe$Nothing,
		decodeMessageFromMonacoEditorError: $elm$core$Maybe$Nothing,
		editing: function () {
			if (fileLocationOpenInEditor.$ === 'Nothing') {
				return $elm$core$Maybe$Nothing;
			} else {
				var fileLocation = fileLocationOpenInEditor.a;
				return $elm$core$Maybe$Just(
					{fileLocation: fileLocation, openPosition: $author$project$Frontend$Main$defaultEditorOpenPosition});
			}
		}(),
		elmFormat: $elm$core$Maybe$Nothing,
		enableInspectionOnCompile: false,
		fileTree: fileTree,
		lastTextReceivedFromEditor: $elm$core$Maybe$Nothing,
		syntaxInspection: $elm$core$Maybe$Nothing,
		viewEnlargedPane: $elm$core$Maybe$Nothing
	};
};
var $author$project$Frontend$ContainerHtml$ClickedLinkInPreview = function (a) {
	return {$: 'ClickedLinkInPreview', a: a};
};
var $elm$json$Json$Decode$field = _Json_decodeField;
var $elm$json$Json$Decode$index = _Json_decodeIndex;
var $author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap = $elm$json$Json$Decode$map2($elm$core$Basics$apR);
var $elm$json$Json$Decode$oneOf = _Json_oneOf;
var $author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames = F3(
	function (fieldName, alternateNames, decoder) {
		return $elm$json$Json$Decode$oneOf(
			A2(
				$elm$core$List$map,
				function (name) {
					return A2($elm$json$Json$Decode$field, name, decoder);
				},
				A2($elm$core$List$cons, fieldName, alternateNames)));
	});
var $elm$json$Json$Decode$andThen = _Json_andThen;
var $elm$json$Json$Decode$lazy = function (thunk) {
	return A2(
		$elm$json$Json$Decode$andThen,
		thunk,
		$elm$json$Json$Decode$succeed(_Utils_Tuple0));
};
var $elm$json$Json$Decode$string = _Json_decodeString;
var $author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_Frontend_ContainerHtml_Message = $elm$json$Json$Decode$oneOf(
	_List_fromArray(
		[
			A2(
			$elm$json$Json$Decode$field,
			'ClickedLinkInPreview',
			$elm$json$Json$Decode$lazy(
				function (_v0) {
					return A2(
						$elm$json$Json$Decode$map,
						$author$project$Frontend$ContainerHtml$ClickedLinkInPreview,
						A2(
							$elm$json$Json$Decode$index,
							0,
							A2(
								$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
								A3(
									$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
									'href',
									_List_fromArray(
										['Href']),
									$elm$json$Json$Decode$string),
								$elm$json$Json$Decode$succeed(
									function (href) {
										return {href: href};
									}))));
				}))
		]));
var $author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_360248148 = $author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_Frontend_ContainerHtml_Message;
var $author$project$CompilationInterface$GenerateJsonConverters$jsonDecodeMessageFromContainerHtml = $author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_360248148;
var $author$project$Frontend$MonacoEditor$CompletedSetupEvent = {$: 'CompletedSetupEvent'};
var $author$project$Frontend$MonacoEditor$DidChangeContentEvent = function (a) {
	return {$: 'DidChangeContentEvent', a: a};
};
var $author$project$Frontend$MonacoEditor$EditorActionCloseEditorEvent = {$: 'EditorActionCloseEditorEvent'};
var $author$project$Frontend$MonacoEditor$EditorActionCompileEvent = {$: 'EditorActionCompileEvent'};
var $author$project$Frontend$MonacoEditor$EditorActionFormatDocumentEvent = {$: 'EditorActionFormatDocumentEvent'};
var $author$project$Frontend$MonacoEditor$EditorActionInspectSyntaxEvent = {$: 'EditorActionInspectSyntaxEvent'};
var $author$project$Frontend$MonacoEditor$OpenCodeEditorEvent = function (a) {
	return {$: 'OpenCodeEditorEvent', a: a};
};
var $author$project$Frontend$MonacoEditor$RequestCompletionItemsEvent = function (a) {
	return {$: 'RequestCompletionItemsEvent', a: a};
};
var $author$project$Frontend$MonacoEditor$RequestDefinitionEvent = function (a) {
	return {$: 'RequestDefinitionEvent', a: a};
};
var $author$project$Frontend$MonacoEditor$RequestHoverEvent = function (a) {
	return {$: 'RequestHoverEvent', a: a};
};
var $elm$json$Json$Decode$int = _Json_decodeInt;
var $elm$json$Json$Decode$fail = _Json_fail;
var $elm$json$Json$Encode$null = _Json_encodeNull;
var $elm$json$Json$Decode$value = _Json_decodeValue;
var $author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecodeSucceedWhenNotNull = function (valueIfNotNull) {
	return A2(
		$elm$json$Json$Decode$andThen,
		function (asValue) {
			return _Utils_eq(asValue, $elm$json$Json$Encode$null) ? $elm$json$Json$Decode$fail('Is null.') : $elm$json$Json$Decode$succeed(valueIfNotNull);
		},
		$elm$json$Json$Decode$value);
};
var $author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_Frontend_MonacoEditor_MessageFromEditor = $elm$json$Json$Decode$oneOf(
	_List_fromArray(
		[
			A2(
			$elm$json$Json$Decode$field,
			'CompletedSetupEvent',
			$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecodeSucceedWhenNotNull($author$project$Frontend$MonacoEditor$CompletedSetupEvent)),
			A2(
			$elm$json$Json$Decode$field,
			'DidChangeContentEvent',
			$elm$json$Json$Decode$lazy(
				function (_v0) {
					return A2(
						$elm$json$Json$Decode$map,
						$author$project$Frontend$MonacoEditor$DidChangeContentEvent,
						A2(
							$elm$json$Json$Decode$index,
							0,
							A2(
								$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
								A3(
									$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
									'uri',
									_List_fromArray(
										['Uri']),
									$elm$json$Json$Decode$string),
								A2(
									$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
									A3(
										$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
										'textModelValue',
										_List_fromArray(
											['TextModelValue']),
										$elm$json$Json$Decode$string),
									$elm$json$Json$Decode$succeed(
										F2(
											function (textModelValue, uri) {
												return {textModelValue: textModelValue, uri: uri};
											}))))));
				})),
			A2(
			$elm$json$Json$Decode$field,
			'DidFocusEditorWidgetEvent',
			$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecodeSucceedWhenNotNull($author$project$Frontend$MonacoEditor$DidFocusEditorWidgetEvent)),
			A2(
			$elm$json$Json$Decode$field,
			'EditorActionCloseEditorEvent',
			$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecodeSucceedWhenNotNull($author$project$Frontend$MonacoEditor$EditorActionCloseEditorEvent)),
			A2(
			$elm$json$Json$Decode$field,
			'EditorActionCompileEvent',
			$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecodeSucceedWhenNotNull($author$project$Frontend$MonacoEditor$EditorActionCompileEvent)),
			A2(
			$elm$json$Json$Decode$field,
			'EditorActionFormatDocumentEvent',
			$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecodeSucceedWhenNotNull($author$project$Frontend$MonacoEditor$EditorActionFormatDocumentEvent)),
			A2(
			$elm$json$Json$Decode$field,
			'EditorActionInspectSyntaxEvent',
			$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecodeSucceedWhenNotNull($author$project$Frontend$MonacoEditor$EditorActionInspectSyntaxEvent)),
			A2(
			$elm$json$Json$Decode$field,
			'OpenCodeEditorEvent',
			$elm$json$Json$Decode$lazy(
				function (_v1) {
					return A2(
						$elm$json$Json$Decode$map,
						$author$project$Frontend$MonacoEditor$OpenCodeEditorEvent,
						A2(
							$elm$json$Json$Decode$index,
							0,
							A2(
								$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
								A3(
									$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
									'position',
									_List_fromArray(
										['Position']),
									A2(
										$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
										A3(
											$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
											'column',
											_List_fromArray(
												['Column']),
											$elm$json$Json$Decode$int),
										A2(
											$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
											A3(
												$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
												'lineNumber',
												_List_fromArray(
													['LineNumber']),
												$elm$json$Json$Decode$int),
											$elm$json$Json$Decode$succeed(
												F2(
													function (lineNumber, column) {
														return {column: column, lineNumber: lineNumber};
													}))))),
								A2(
									$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
									A3(
										$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
										'uri',
										_List_fromArray(
											['Uri']),
										$elm$json$Json$Decode$string),
									$elm$json$Json$Decode$succeed(
										F2(
											function (uri, position) {
												return {position: position, uri: uri};
											}))))));
				})),
			A2(
			$elm$json$Json$Decode$field,
			'RequestCompletionItemsEvent',
			$elm$json$Json$Decode$lazy(
				function (_v2) {
					return A2(
						$elm$json$Json$Decode$map,
						$author$project$Frontend$MonacoEditor$RequestCompletionItemsEvent,
						A2(
							$elm$json$Json$Decode$index,
							0,
							A2(
								$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
								A3(
									$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
									'cursorColumn',
									_List_fromArray(
										['CursorColumn']),
									$elm$json$Json$Decode$int),
								A2(
									$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
									A3(
										$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
										'cursorLineNumber',
										_List_fromArray(
											['CursorLineNumber']),
										$elm$json$Json$Decode$int),
									A2(
										$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
										A3(
											$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
											'uri',
											_List_fromArray(
												['Uri']),
											$elm$json$Json$Decode$string),
										$elm$json$Json$Decode$succeed(
											F3(
												function (uri, cursorLineNumber, cursorColumn) {
													return {cursorColumn: cursorColumn, cursorLineNumber: cursorLineNumber, uri: uri};
												})))))));
				})),
			A2(
			$elm$json$Json$Decode$field,
			'RequestDefinitionEvent',
			$elm$json$Json$Decode$lazy(
				function (_v3) {
					return A2(
						$elm$json$Json$Decode$map,
						$author$project$Frontend$MonacoEditor$RequestDefinitionEvent,
						A2(
							$elm$json$Json$Decode$index,
							0,
							A2(
								$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
								A3(
									$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
									'word',
									_List_fromArray(
										['Word']),
									$elm$json$Json$Decode$string),
								A2(
									$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
									A3(
										$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
										'lineText',
										_List_fromArray(
											['LineText']),
										$elm$json$Json$Decode$string),
									A2(
										$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
										A3(
											$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
											'positionColumn',
											_List_fromArray(
												['PositionColumn']),
											$elm$json$Json$Decode$int),
										A2(
											$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
											A3(
												$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
												'positionLineNumber',
												_List_fromArray(
													['PositionLineNumber']),
												$elm$json$Json$Decode$int),
											A2(
												$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
												A3(
													$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
													'uri',
													_List_fromArray(
														['Uri']),
													$elm$json$Json$Decode$string),
												$elm$json$Json$Decode$succeed(
													F5(
														function (uri, positionLineNumber, positionColumn, lineText, word) {
															return {lineText: lineText, positionColumn: positionColumn, positionLineNumber: positionLineNumber, uri: uri, word: word};
														})))))))));
				})),
			A2(
			$elm$json$Json$Decode$field,
			'RequestHoverEvent',
			$elm$json$Json$Decode$lazy(
				function (_v4) {
					return A2(
						$elm$json$Json$Decode$map,
						$author$project$Frontend$MonacoEditor$RequestHoverEvent,
						A2(
							$elm$json$Json$Decode$index,
							0,
							A2(
								$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
								A3(
									$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
									'word',
									_List_fromArray(
										['Word']),
									$elm$json$Json$Decode$string),
								A2(
									$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
									A3(
										$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
										'lineText',
										_List_fromArray(
											['LineText']),
										$elm$json$Json$Decode$string),
									A2(
										$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
										A3(
											$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
											'positionColumn',
											_List_fromArray(
												['PositionColumn']),
											$elm$json$Json$Decode$int),
										A2(
											$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
											A3(
												$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
												'positionLineNumber',
												_List_fromArray(
													['PositionLineNumber']),
												$elm$json$Json$Decode$int),
											A2(
												$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
												A3(
													$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
													'uri',
													_List_fromArray(
														['Uri']),
													$elm$json$Json$Decode$string),
												$elm$json$Json$Decode$succeed(
													F5(
														function (uri, positionLineNumber, positionColumn, lineText, word) {
															return {lineText: lineText, positionColumn: positionColumn, positionLineNumber: positionLineNumber, uri: uri, word: word};
														})))))))));
				}))
		]));
var $author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_834299063 = $author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_Frontend_MonacoEditor_MessageFromEditor;
var $author$project$CompilationInterface$GenerateJsonConverters$jsonDecodeMessageFromMonacoEditor = $author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_834299063;
var $elm$browser$Browser$Navigation$load = _Browser_load;
var $author$project$Frontend$Main$describeHttpError = function (httpError) {
	switch (httpError.$) {
		case 'BadUrl':
			var errorMessage = httpError.a;
			return 'Bad Url: ' + errorMessage;
		case 'Timeout':
			return 'Timeout';
		case 'NetworkError':
			return 'Network Error';
		case 'BadStatus':
			var metadata = httpError.a;
			var body = httpError.b;
			return A2(
				$elm$core$String$join,
				'\n',
				_List_fromArray(
					[
						'BadStatus: ' + $elm$core$String$fromInt(metadata.statusCode),
						'Response body: ' + body
					]));
		default:
			var body = httpError.b;
			var errorMessage = httpError.c;
			return A2(
				$elm$core$String$join,
				'\n',
				_List_fromArray(
					['BadPayload: ' + errorMessage, 'Response body: ' + body]));
	}
};
var $elm$bytes$Bytes$Encode$Utf8 = F2(
	function (a, b) {
		return {$: 'Utf8', a: a, b: b};
	});
var $elm$bytes$Bytes$Encode$string = function (str) {
	return A2(
		$elm$bytes$Bytes$Encode$Utf8,
		_Bytes_getStringWidth(str),
		str);
};
var $danfishgold$base64_bytes$Encode$isValidChar = function (c) {
	if ($elm$core$Char$isAlphaNum(c)) {
		return true;
	} else {
		switch (c.valueOf()) {
			case '+':
				return true;
			case '/':
				return true;
			default:
				return false;
		}
	}
};
var $danfishgold$base64_bytes$Encode$unsafeConvertChar = function (_char) {
	var key = $elm$core$Char$toCode(_char);
	if ((key >= 65) && (key <= 90)) {
		return key - 65;
	} else {
		if ((key >= 97) && (key <= 122)) {
			return (key - 97) + 26;
		} else {
			if ((key >= 48) && (key <= 57)) {
				return ((key - 48) + 26) + 26;
			} else {
				switch (_char.valueOf()) {
					case '+':
						return 62;
					case '/':
						return 63;
					default:
						return -1;
				}
			}
		}
	}
};
var $danfishgold$base64_bytes$Encode$encodeCharacters = F4(
	function (a, b, c, d) {
		if ($danfishgold$base64_bytes$Encode$isValidChar(a) && $danfishgold$base64_bytes$Encode$isValidChar(b)) {
			var n2 = $danfishgold$base64_bytes$Encode$unsafeConvertChar(b);
			var n1 = $danfishgold$base64_bytes$Encode$unsafeConvertChar(a);
			if ('=' === d.valueOf()) {
				if ('=' === c.valueOf()) {
					var n = (n1 << 18) | (n2 << 12);
					var b1 = n >> 16;
					return $elm$core$Maybe$Just(
						$elm$bytes$Bytes$Encode$unsignedInt8(b1));
				} else {
					if ($danfishgold$base64_bytes$Encode$isValidChar(c)) {
						var n3 = $danfishgold$base64_bytes$Encode$unsafeConvertChar(c);
						var n = ((n1 << 18) | (n2 << 12)) | (n3 << 6);
						var combined = n >> 8;
						return $elm$core$Maybe$Just(
							A2($elm$bytes$Bytes$Encode$unsignedInt16, $elm$bytes$Bytes$BE, combined));
					} else {
						return $elm$core$Maybe$Nothing;
					}
				}
			} else {
				if ($danfishgold$base64_bytes$Encode$isValidChar(c) && $danfishgold$base64_bytes$Encode$isValidChar(d)) {
					var n4 = $danfishgold$base64_bytes$Encode$unsafeConvertChar(d);
					var n3 = $danfishgold$base64_bytes$Encode$unsafeConvertChar(c);
					var n = ((n1 << 18) | (n2 << 12)) | ((n3 << 6) | n4);
					var combined = n >> 8;
					var b3 = n;
					return $elm$core$Maybe$Just(
						$elm$bytes$Bytes$Encode$sequence(
							_List_fromArray(
								[
									A2($elm$bytes$Bytes$Encode$unsignedInt16, $elm$bytes$Bytes$BE, combined),
									$elm$bytes$Bytes$Encode$unsignedInt8(b3)
								])));
				} else {
					return $elm$core$Maybe$Nothing;
				}
			}
		} else {
			return $elm$core$Maybe$Nothing;
		}
	});
var $danfishgold$base64_bytes$Encode$encodeChunks = F2(
	function (input, accum) {
		encodeChunks:
		while (true) {
			var _v0 = $elm$core$String$toList(
				A2($elm$core$String$left, 4, input));
			_v0$4:
			while (true) {
				if (!_v0.b) {
					return $elm$core$Maybe$Just(accum);
				} else {
					if (_v0.b.b) {
						if (_v0.b.b.b) {
							if (_v0.b.b.b.b) {
								if (!_v0.b.b.b.b.b) {
									var a = _v0.a;
									var _v1 = _v0.b;
									var b = _v1.a;
									var _v2 = _v1.b;
									var c = _v2.a;
									var _v3 = _v2.b;
									var d = _v3.a;
									var _v4 = A4($danfishgold$base64_bytes$Encode$encodeCharacters, a, b, c, d);
									if (_v4.$ === 'Just') {
										var enc = _v4.a;
										var $temp$input = A2($elm$core$String$dropLeft, 4, input),
											$temp$accum = A2($elm$core$List$cons, enc, accum);
										input = $temp$input;
										accum = $temp$accum;
										continue encodeChunks;
									} else {
										return $elm$core$Maybe$Nothing;
									}
								} else {
									break _v0$4;
								}
							} else {
								var a = _v0.a;
								var _v5 = _v0.b;
								var b = _v5.a;
								var _v6 = _v5.b;
								var c = _v6.a;
								var _v7 = A4(
									$danfishgold$base64_bytes$Encode$encodeCharacters,
									a,
									b,
									c,
									_Utils_chr('='));
								if (_v7.$ === 'Nothing') {
									return $elm$core$Maybe$Nothing;
								} else {
									var enc = _v7.a;
									return $elm$core$Maybe$Just(
										A2($elm$core$List$cons, enc, accum));
								}
							}
						} else {
							var a = _v0.a;
							var _v8 = _v0.b;
							var b = _v8.a;
							var _v9 = A4(
								$danfishgold$base64_bytes$Encode$encodeCharacters,
								a,
								b,
								_Utils_chr('='),
								_Utils_chr('='));
							if (_v9.$ === 'Nothing') {
								return $elm$core$Maybe$Nothing;
							} else {
								var enc = _v9.a;
								return $elm$core$Maybe$Just(
									A2($elm$core$List$cons, enc, accum));
							}
						}
					} else {
						break _v0$4;
					}
				}
			}
			return $elm$core$Maybe$Nothing;
		}
	});
var $danfishgold$base64_bytes$Encode$encoder = function (string) {
	return A2(
		$elm$core$Maybe$map,
		A2($elm$core$Basics$composeR, $elm$core$List$reverse, $elm$bytes$Bytes$Encode$sequence),
		A2($danfishgold$base64_bytes$Encode$encodeChunks, string, _List_Nil));
};
var $danfishgold$base64_bytes$Encode$toBytes = function (string) {
	return A2(
		$elm$core$Maybe$map,
		$elm$bytes$Bytes$Encode$encode,
		$danfishgold$base64_bytes$Encode$encoder(string));
};
var $danfishgold$base64_bytes$Base64$toBytes = $danfishgold$base64_bytes$Encode$toBytes;
var $author$project$Frontend$Main$fileTreeNodeFromListFileWithPath = A2(
	$elm$core$Basics$composeR,
	$elm$core$List$map(
		function (file) {
			return _Utils_Tuple2(
				file.path,
				A2(
					$elm$core$Maybe$withDefault,
					$elm$bytes$Bytes$Encode$encode(
						$elm$bytes$Bytes$Encode$string('Failed to decode from Base64')),
					$danfishgold$base64_bytes$Base64$toBytes(file.contentBase64)));
		}),
	$author$project$FileTreeInWorkspace$sortedFileTreeFromListOfBlobsAsBytes);
var $elm_community$result_extra$Result$Extra$unpack = F3(
	function (errFunc, okFunc, result) {
		if (result.$ === 'Ok') {
			var ok = result.a;
			return okFunc(ok);
		} else {
			var err = result.a;
			return errFunc(err);
		}
	});
var $elm$core$List$drop = F2(
	function (n, list) {
		drop:
		while (true) {
			if (n <= 0) {
				return list;
			} else {
				if (!list.b) {
					return list;
				} else {
					var x = list.a;
					var xs = list.b;
					var $temp$n = n - 1,
						$temp$list = xs;
					n = $temp$n;
					list = $temp$list;
					continue drop;
				}
			}
		}
	});
var $TSFoster$elm_bytes_extra$Bytes$Encode$Extra$list = function (encode) {
	return A2(
		$elm$core$Basics$composeL,
		$elm$bytes$Bytes$Encode$sequence,
		$elm$core$List$map(encode));
};
var $TSFoster$elm_bytes_extra$Bytes$Encode$Extra$byteValues = $TSFoster$elm_bytes_extra$Bytes$Encode$Extra$list($elm$bytes$Bytes$Encode$unsignedInt8);
var $TSFoster$elm_bytes_extra$Bytes$Extra$fromByteValues = A2($elm$core$Basics$composeL, $elm$bytes$Bytes$Encode$encode, $TSFoster$elm_bytes_extra$Bytes$Encode$Extra$byteValues);
var $author$project$WorkspaceState_2021_01$applyBlobChanges = F2(
	function (changes, blobBefore) {
		return $TSFoster$elm_bytes_extra$Bytes$Extra$fromByteValues(
			A3(
				$elm$core$List$foldl,
				F2(
					function (change, stateBefore) {
						switch (change.$) {
							case 'ReuseBytes':
								var reuseBytes = change.a;
								return {
									changedBlobBytes: _Utils_ap(
										stateBefore.changedBlobBytes,
										A2($elm$core$List$take, reuseBytes, stateBefore.originalBlobRemainingBytes)),
									originalBlobRemainingBytes: A2($elm$core$List$drop, reuseBytes, stateBefore.originalBlobRemainingBytes)
								};
							case 'RemoveBytes':
								var removeBytes = change.a;
								return _Utils_update(
									stateBefore,
									{
										originalBlobRemainingBytes: A2($elm$core$List$drop, removeBytes, stateBefore.originalBlobRemainingBytes)
									});
							default:
								var addBytes = change.a;
								return _Utils_update(
									stateBefore,
									{
										changedBlobBytes: _Utils_ap(
											stateBefore.changedBlobBytes,
											$TSFoster$elm_bytes_extra$Bytes$Extra$toByteValues(addBytes))
									});
						}
					}),
				{
					changedBlobBytes: _List_Nil,
					originalBlobRemainingBytes: $TSFoster$elm_bytes_extra$Bytes$Extra$toByteValues(blobBefore)
				},
				changes).changedBlobBytes);
	});
var $TSFoster$elm_bytes_extra$Bytes$Extra$empty = $elm$bytes$Bytes$Encode$encode(
	$elm$bytes$Bytes$Encode$sequence(_List_Nil));
var $author$project$FileTree$getBlobAtPathFromFileTree = F2(
	function (path, treeNode) {
		var _v0 = A2($author$project$FileTree$getNodeAtPathFromFileTree, path, treeNode);
		if ((_v0.$ === 'Just') && (_v0.a.$ === 'BlobNode')) {
			var blob = _v0.a.a;
			return $elm$core$Maybe$Just(blob);
		} else {
			return $elm$core$Maybe$Nothing;
		}
	});
var $elm$core$List$maybeCons = F3(
	function (f, mx, xs) {
		var _v0 = f(mx);
		if (_v0.$ === 'Just') {
			var x = _v0.a;
			return A2($elm$core$List$cons, x, xs);
		} else {
			return xs;
		}
	});
var $elm$core$List$filterMap = F2(
	function (f, xs) {
		return A3(
			$elm$core$List$foldr,
			$elm$core$List$maybeCons(f),
			_List_Nil,
			xs);
	});
var $author$project$FileTree$removeNodeAtPath = F2(
	function (path, nodeBefore) {
		if (!path.b) {
			return $elm$core$Maybe$Nothing;
		} else {
			var nextPathElement = path.a;
			var remainingPathElements = path.b;
			if (nodeBefore.$ === 'BlobNode') {
				return $elm$core$Maybe$Just(nodeBefore);
			} else {
				var treeBefore = nodeBefore.a;
				var _v2 = A2(
					$elm$core$List$filterMap,
					function (_v3) {
						var branchName = _v3.a;
						var branchValue = _v3.b;
						return _Utils_eq(branchName, nextPathElement) ? A2(
							$elm$core$Maybe$map,
							$elm$core$Tuple$pair(branchName),
							A2($author$project$FileTree$removeNodeAtPath, remainingPathElements, branchValue)) : $elm$core$Maybe$Just(
							_Utils_Tuple2(branchName, branchValue));
					},
					treeBefore);
				if (!_v2.b) {
					return $elm$core$Maybe$Nothing;
				} else {
					var remainingBranches = _v2;
					return $elm$core$Maybe$Just(
						$author$project$FileTree$TreeNode(remainingBranches));
				}
			}
		}
	});
var $author$project$FileTreeInWorkspace$applyWorkspaceStateDifference_2021_01 = F2(
	function (differenceFromBase, baseComposition) {
		var compositionAfterRemovals = A3(
			$elm$core$List$foldl,
			function (removeNode) {
				return A2(
					$elm$core$Basics$composeR,
					$author$project$FileTree$removeNodeAtPath(removeNode),
					$elm$core$Maybe$withDefault(
						$author$project$FileTree$TreeNode(_List_Nil)));
			},
			baseComposition,
			differenceFromBase.removeNodes);
		var workspaceStateAfterChangeBlobs = A3(
			$elm$core$List$foldl,
			function (_v0) {
				var blobPath = _v0.a;
				var changesFromBaseBlob = _v0.b;
				var blobValueBefore = A2(
					$elm$core$Maybe$withDefault,
					$TSFoster$elm_bytes_extra$Bytes$Extra$empty,
					A2($author$project$FileTree$getBlobAtPathFromFileTree, blobPath, compositionAfterRemovals));
				var changedBlobValue = A2($author$project$WorkspaceState_2021_01$applyBlobChanges, changesFromBaseBlob, blobValueBefore);
				return $author$project$FileTree$setNodeAtPathInSortedFileTree(
					_Utils_Tuple2(
						blobPath,
						$author$project$FileTree$BlobNode(changedBlobValue)));
			},
			compositionAfterRemovals,
			differenceFromBase.changeBlobs);
		return $elm$core$Result$Ok(workspaceStateAfterChangeBlobs);
	});
var $elm_community$result_extra$Result$Extra$extract = F2(
	function (f, x) {
		if (x.$ === 'Ok') {
			var a = x.a;
			return a;
		} else {
			var e = x.a;
			return f(e);
		}
	});
var $author$project$FileTreeInWorkspace$mapBlobsFromBytes = $author$project$FileTree$mapBlobs($author$project$FileTreeInWorkspace$blobValueFromBytes);
var $elm$core$String$fromList = _String_fromList;
var $rtfeldman$elm_hex$Hex$unsafeToDigit = function (num) {
	unsafeToDigit:
	while (true) {
		switch (num) {
			case 0:
				return _Utils_chr('0');
			case 1:
				return _Utils_chr('1');
			case 2:
				return _Utils_chr('2');
			case 3:
				return _Utils_chr('3');
			case 4:
				return _Utils_chr('4');
			case 5:
				return _Utils_chr('5');
			case 6:
				return _Utils_chr('6');
			case 7:
				return _Utils_chr('7');
			case 8:
				return _Utils_chr('8');
			case 9:
				return _Utils_chr('9');
			case 10:
				return _Utils_chr('a');
			case 11:
				return _Utils_chr('b');
			case 12:
				return _Utils_chr('c');
			case 13:
				return _Utils_chr('d');
			case 14:
				return _Utils_chr('e');
			case 15:
				return _Utils_chr('f');
			default:
				var $temp$num = num;
				num = $temp$num;
				continue unsafeToDigit;
		}
	}
};
var $rtfeldman$elm_hex$Hex$unsafePositiveToDigits = F2(
	function (digits, num) {
		unsafePositiveToDigits:
		while (true) {
			if (num < 16) {
				return A2(
					$elm$core$List$cons,
					$rtfeldman$elm_hex$Hex$unsafeToDigit(num),
					digits);
			} else {
				var $temp$digits = A2(
					$elm$core$List$cons,
					$rtfeldman$elm_hex$Hex$unsafeToDigit(
						A2($elm$core$Basics$modBy, 16, num)),
					digits),
					$temp$num = (num / 16) | 0;
				digits = $temp$digits;
				num = $temp$num;
				continue unsafePositiveToDigits;
			}
		}
	});
var $rtfeldman$elm_hex$Hex$toString = function (num) {
	return $elm$core$String$fromList(
		(num < 0) ? A2(
			$elm$core$List$cons,
			_Utils_chr('-'),
			A2($rtfeldman$elm_hex$Hex$unsafePositiveToDigits, _List_Nil, -num)) : A2($rtfeldman$elm_hex$Hex$unsafePositiveToDigits, _List_Nil, num));
};
var $folkertdev$elm_sha2$SHA256$wordToHex = function (_byte) {
	return A3(
		$elm$core$String$padLeft,
		8,
		_Utils_chr('0'),
		$rtfeldman$elm_hex$Hex$toString(_byte >>> 0));
};
var $folkertdev$elm_sha2$SHA256$toHex = function (_v0) {
	var _v1 = _v0.a;
	var a = _v1.a;
	var b = _v1.b;
	var c = _v1.c;
	var d = _v1.d;
	var e = _v1.e;
	var f = _v1.f;
	var g = _v1.g;
	var h = _v1.h;
	return _Utils_ap(
		$folkertdev$elm_sha2$SHA256$wordToHex(a),
		_Utils_ap(
			$folkertdev$elm_sha2$SHA256$wordToHex(b),
			_Utils_ap(
				$folkertdev$elm_sha2$SHA256$wordToHex(c),
				_Utils_ap(
					$folkertdev$elm_sha2$SHA256$wordToHex(d),
					_Utils_ap(
						$folkertdev$elm_sha2$SHA256$wordToHex(e),
						_Utils_ap(
							$folkertdev$elm_sha2$SHA256$wordToHex(f),
							_Utils_ap(
								$folkertdev$elm_sha2$SHA256$wordToHex(g),
								$folkertdev$elm_sha2$SHA256$wordToHex(h))))))));
};
var $author$project$Frontend$WorkspaceStateInUrl$workspaceStateCompositionHash = A2($elm$core$Basics$composeR, $author$project$FileTreeInWorkspace$compositionHashFromFileTreeNodeBytes, $folkertdev$elm_sha2$SHA256$toHex);
var $author$project$Frontend$Main$updateForLoadedWorkspaceState = F4(
	function (config, loadedBaseWorkspaceState, workspaceStateDiff, stateBefore) {
		return _Utils_Tuple2(
			A2(
				$elm_community$result_extra$Result$Extra$extract,
				function (error) {
					return _Utils_update(
						stateBefore,
						{
							workspace: $author$project$Frontend$Main$WorkspaceErr(error)
						});
				},
				function () {
					var _v0 = A2(
						$author$project$FileTreeInWorkspace$applyWorkspaceStateDifference_2021_01,
						workspaceStateDiff,
						$author$project$FileTreeInWorkspace$mapBlobsToBytes(loadedBaseWorkspaceState));
					if (_v0.$ === 'Err') {
						var error = _v0.a;
						return $elm$core$Result$Err('Failed to apply difference model to compute workspace state: ' + error);
					} else {
						var composedWorkspaceState = _v0.a;
						var fileLocationOpenInEditor = function () {
							var _v2 = config.filePathToOpen;
							if (_v2.$ === 'Nothing') {
								return $elm$core$Maybe$Nothing;
							} else {
								var filePathToOpen = _v2.a;
								var _v3 = $elm$core$List$reverse(filePathToOpen);
								if (!_v3.b) {
									return $elm$core$Maybe$Nothing;
								} else {
									var fileName = _v3.a;
									var directoryPathReversed = _v3.b;
									return $elm$core$Maybe$Just(
										_Utils_Tuple2(
											$elm$core$List$reverse(directoryPathReversed),
											fileName));
								}
							}
						}();
						var continueIfHashOk = $elm$core$Result$Ok(
							_Utils_update(
								stateBefore,
								{
									workspace: $author$project$Frontend$Main$WorkspaceActive(
										$author$project$Frontend$Main$initWorkspaceFromFileTreeAndFileSelection(
											{
												fileLocationOpenInEditor: fileLocationOpenInEditor,
												fileTree: $author$project$FileTreeInWorkspace$mapBlobsFromBytes(composedWorkspaceState)
											}))
								}));
						var composedWorkspaceStateHashBase16 = $author$project$Frontend$WorkspaceStateInUrl$workspaceStateCompositionHash(composedWorkspaceState);
						var _v1 = config.expectedCompositionHash;
						if (_v1.$ === 'Nothing') {
							return continueIfHashOk;
						} else {
							var expectedCompositionHash = _v1.a;
							return _Utils_eq(composedWorkspaceStateHashBase16, expectedCompositionHash) ? continueIfHashOk : $elm$core$Result$Err('Composed workspace state has hash ' + (composedWorkspaceStateHashBase16 + (' instead of the expected hash ' + expectedCompositionHash)));
						}
					}
				}()),
			$elm$core$Platform$Cmd$none);
	});
var $author$project$Frontend$Main$processEventBackendLoadFromGitResult = F3(
	function (urlIntoGitRepository, result, stateBeforeRememberingResult) {
		var resultWithFileTreeAndCache = A2(
			$elm$core$Result$map,
			$elm$core$Result$map(
				function (loadOk) {
					return {
						compositionIdCache: loadOk.compositionId,
						fileTree: $author$project$Frontend$Main$fileTreeNodeFromListFileWithPath(loadOk.filesAsFlatList),
						urlInCommit: loadOk.urlInCommit
					};
				}),
			result);
		var stateBefore = _Utils_update(
			stateBeforeRememberingResult,
			{
				lastBackendLoadFromGitResult: $elm$core$Maybe$Just(
					_Utils_Tuple2(urlIntoGitRepository, resultWithFileTreeAndCache))
			});
		var _v0 = stateBefore.popup;
		if (((_v0.$ === 'Just') && (_v0.a.$ === 'ModalDialog')) && (_v0.a.a.$ === 'LoadFromGitDialog')) {
			var dialogStateBefore = _v0.a.a.a;
			var dialogState = _Utils_update(
				dialogStateBefore,
				{
					loadCompositionResult: $elm$core$Maybe$Just(resultWithFileTreeAndCache)
				});
			return _Utils_Tuple2(
				_Utils_update(
					stateBefore,
					{
						popup: $elm$core$Maybe$Just(
							$author$project$Frontend$Main$ModalDialog(
								$author$project$Frontend$Main$LoadFromGitDialog(dialogState)))
					}),
				$elm$core$Platform$Cmd$none);
		} else {
			var _v1 = stateBefore.workspace;
			if (_v1.$ === 'WorkspaceLoadingFromLink') {
				var workspaceLoadingFromLink = _v1.a;
				if (_Utils_eq(urlIntoGitRepository, workspaceLoadingFromLink.workspaceStateDescription.base)) {
					var _v2 = A3(
						$elm_community$result_extra$Result$Extra$unpack,
						A2($elm$core$Basics$composeR, $author$project$Frontend$Main$describeHttpError, $elm$core$Result$Err),
						$elm$core$Basics$identity,
						resultWithFileTreeAndCache);
					if (_v2.$ === 'Ok') {
						var loadOk = _v2.a;
						return A4(
							$author$project$Frontend$Main$updateForLoadedWorkspaceState,
							{expectedCompositionHash: workspaceLoadingFromLink.expectedCompositionHash, filePathToOpen: workspaceLoadingFromLink.filePathToOpen},
							loadOk.fileTree,
							workspaceLoadingFromLink.workspaceStateDescription.differenceFromBase,
							stateBefore);
					} else {
						var loadingError = _v2.a;
						return _Utils_Tuple2(
							_Utils_update(
								stateBefore,
								{
									workspace: $author$project$Frontend$Main$WorkspaceErr(loadingError)
								}),
							$elm$core$Platform$Cmd$none);
					}
				} else {
					return _Utils_Tuple2(stateBefore, $elm$core$Platform$Cmd$none);
				}
			} else {
				return _Utils_Tuple2(stateBefore, $elm$core$Platform$Cmd$none);
			}
		}
	});
var $author$project$Frontend$WorkspaceStateInUrl$filePathToOpenQueryParameterName = 'file-path-to-open';
var $elm_community$maybe_extra$Maybe$Extra$join = function (mx) {
	if (mx.$ === 'Just') {
		var x = mx.a;
		return x;
	} else {
		return $elm$core$Maybe$Nothing;
	}
};
var $elm$url$Url$Parser$State = F5(
	function (visited, unvisited, params, frag, value) {
		return {frag: frag, params: params, unvisited: unvisited, value: value, visited: visited};
	});
var $elm$url$Url$Parser$getFirstMatch = function (states) {
	getFirstMatch:
	while (true) {
		if (!states.b) {
			return $elm$core$Maybe$Nothing;
		} else {
			var state = states.a;
			var rest = states.b;
			var _v1 = state.unvisited;
			if (!_v1.b) {
				return $elm$core$Maybe$Just(state.value);
			} else {
				if ((_v1.a === '') && (!_v1.b.b)) {
					return $elm$core$Maybe$Just(state.value);
				} else {
					var $temp$states = rest;
					states = $temp$states;
					continue getFirstMatch;
				}
			}
		}
	}
};
var $elm$url$Url$Parser$removeFinalEmpty = function (segments) {
	if (!segments.b) {
		return _List_Nil;
	} else {
		if ((segments.a === '') && (!segments.b.b)) {
			return _List_Nil;
		} else {
			var segment = segments.a;
			var rest = segments.b;
			return A2(
				$elm$core$List$cons,
				segment,
				$elm$url$Url$Parser$removeFinalEmpty(rest));
		}
	}
};
var $elm$url$Url$Parser$preparePath = function (path) {
	var _v0 = A2($elm$core$String$split, '/', path);
	if (_v0.b && (_v0.a === '')) {
		var segments = _v0.b;
		return $elm$url$Url$Parser$removeFinalEmpty(segments);
	} else {
		var segments = _v0;
		return $elm$url$Url$Parser$removeFinalEmpty(segments);
	}
};
var $elm$url$Url$Parser$addToParametersHelp = F2(
	function (value, maybeList) {
		if (maybeList.$ === 'Nothing') {
			return $elm$core$Maybe$Just(
				_List_fromArray(
					[value]));
		} else {
			var list = maybeList.a;
			return $elm$core$Maybe$Just(
				A2($elm$core$List$cons, value, list));
		}
	});
var $elm$url$Url$percentDecode = _Url_percentDecode;
var $elm$url$Url$Parser$addParam = F2(
	function (segment, dict) {
		var _v0 = A2($elm$core$String$split, '=', segment);
		if ((_v0.b && _v0.b.b) && (!_v0.b.b.b)) {
			var rawKey = _v0.a;
			var _v1 = _v0.b;
			var rawValue = _v1.a;
			var _v2 = $elm$url$Url$percentDecode(rawKey);
			if (_v2.$ === 'Nothing') {
				return dict;
			} else {
				var key = _v2.a;
				var _v3 = $elm$url$Url$percentDecode(rawValue);
				if (_v3.$ === 'Nothing') {
					return dict;
				} else {
					var value = _v3.a;
					return A3(
						$elm$core$Dict$update,
						key,
						$elm$url$Url$Parser$addToParametersHelp(value),
						dict);
				}
			}
		} else {
			return dict;
		}
	});
var $elm$url$Url$Parser$prepareQuery = function (maybeQuery) {
	if (maybeQuery.$ === 'Nothing') {
		return $elm$core$Dict$empty;
	} else {
		var qry = maybeQuery.a;
		return A3(
			$elm$core$List$foldr,
			$elm$url$Url$Parser$addParam,
			$elm$core$Dict$empty,
			A2($elm$core$String$split, '&', qry));
	}
};
var $elm$url$Url$Parser$parse = F2(
	function (_v0, url) {
		var parser = _v0.a;
		return $elm$url$Url$Parser$getFirstMatch(
			parser(
				A5(
					$elm$url$Url$Parser$State,
					_List_Nil,
					$elm$url$Url$Parser$preparePath(url.path),
					$elm$url$Url$Parser$prepareQuery(url.query),
					url.fragment,
					$elm$core$Basics$identity)));
	});
var $elm$url$Url$Parser$Parser = function (a) {
	return {$: 'Parser', a: a};
};
var $elm$url$Url$Parser$query = function (_v0) {
	var queryParser = _v0.a;
	return $elm$url$Url$Parser$Parser(
		function (_v1) {
			var visited = _v1.visited;
			var unvisited = _v1.unvisited;
			var params = _v1.params;
			var frag = _v1.frag;
			var value = _v1.value;
			return _List_fromArray(
				[
					A5(
					$elm$url$Url$Parser$State,
					visited,
					unvisited,
					params,
					frag,
					value(
						queryParser(params)))
				]);
		});
};
var $elm$url$Url$Parser$slash = F2(
	function (_v0, _v1) {
		var parseBefore = _v0.a;
		var parseAfter = _v1.a;
		return $elm$url$Url$Parser$Parser(
			function (state) {
				return A2(
					$elm$core$List$concatMap,
					parseAfter,
					parseBefore(state));
			});
	});
var $elm$url$Url$Parser$questionMark = F2(
	function (parser, queryParser) {
		return A2(
			$elm$url$Url$Parser$slash,
			parser,
			$elm$url$Url$Parser$query(queryParser));
	});
var $elm$url$Url$Parser$Internal$Parser = function (a) {
	return {$: 'Parser', a: a};
};
var $elm$url$Url$Parser$Query$custom = F2(
	function (key, func) {
		return $elm$url$Url$Parser$Internal$Parser(
			function (dict) {
				return func(
					A2(
						$elm$core$Maybe$withDefault,
						_List_Nil,
						A2($elm$core$Dict$get, key, dict)));
			});
	});
var $elm$url$Url$Parser$Query$string = function (key) {
	return A2(
		$elm$url$Url$Parser$Query$custom,
		key,
		function (stringList) {
			if (stringList.b && (!stringList.b.b)) {
				var str = stringList.a;
				return $elm$core$Maybe$Just(str);
			} else {
				return $elm$core$Maybe$Nothing;
			}
		});
};
var $elm$url$Url$Parser$top = $elm$url$Url$Parser$Parser(
	function (state) {
		return _List_fromArray(
			[state]);
	});
var $author$project$Frontend$WorkspaceStateInUrl$filePathToOpenFromUrl = function (url) {
	return $elm_community$maybe_extra$Maybe$Extra$join(
		A2(
			$elm$url$Url$Parser$parse,
			A2(
				$elm$url$Url$Parser$questionMark,
				$elm$url$Url$Parser$top,
				$elm$url$Url$Parser$Query$string($author$project$Frontend$WorkspaceStateInUrl$filePathToOpenQueryParameterName)),
			_Utils_update(
				url,
				{path: ''})));
};
var $author$project$WorkspaceState_2021_01$noDifference = {changeBlobs: _List_Nil, removeNodes: _List_Nil};
var $author$project$Frontend$Main$WorkspaceLoadingFromLink = function (a) {
	return {$: 'WorkspaceLoadingFromLink', a: a};
};
var $author$project$Frontend$Main$BackendLoadFromGitResultEvent = F2(
	function (a, b) {
		return {$: 'BackendLoadFromGitResultEvent', a: a, b: b};
	});
var $author$project$FrontendBackendInterface$LoadCompositionRequest = function (a) {
	return {$: 'LoadCompositionRequest', a: a};
};
var $elm$http$Http$BadStatus_ = F2(
	function (a, b) {
		return {$: 'BadStatus_', a: a, b: b};
	});
var $elm$http$Http$BadUrl_ = function (a) {
	return {$: 'BadUrl_', a: a};
};
var $elm$http$Http$GoodStatus_ = F2(
	function (a, b) {
		return {$: 'GoodStatus_', a: a, b: b};
	});
var $elm$http$Http$NetworkError_ = {$: 'NetworkError_'};
var $elm$http$Http$Receiving = function (a) {
	return {$: 'Receiving', a: a};
};
var $elm$http$Http$Sending = function (a) {
	return {$: 'Sending', a: a};
};
var $elm$http$Http$Timeout_ = {$: 'Timeout_'};
var $elm$core$Maybe$isJust = function (maybe) {
	if (maybe.$ === 'Just') {
		return true;
	} else {
		return false;
	}
};
var $elm$http$Http$expectStringResponse = F2(
	function (toMsg, toResult) {
		return A3(
			_Http_expect,
			'',
			$elm$core$Basics$identity,
			A2($elm$core$Basics$composeR, toResult, toMsg));
	});
var $elm$json$Json$Decode$decodeString = _Json_runOnString;
var $elm$core$Result$mapError = F2(
	function (f, result) {
		if (result.$ === 'Ok') {
			var v = result.a;
			return $elm$core$Result$Ok(v);
		} else {
			var e = result.a;
			return $elm$core$Result$Err(
				f(e));
		}
	});
var $jzxhuang$http_extras$Http$Detailed$BadBody = F3(
	function (a, b, c) {
		return {$: 'BadBody', a: a, b: b, c: c};
	});
var $jzxhuang$http_extras$Http$Detailed$BadStatus = F2(
	function (a, b) {
		return {$: 'BadStatus', a: a, b: b};
	});
var $jzxhuang$http_extras$Http$Detailed$BadUrl = function (a) {
	return {$: 'BadUrl', a: a};
};
var $jzxhuang$http_extras$Http$Detailed$NetworkError = {$: 'NetworkError'};
var $jzxhuang$http_extras$Http$Detailed$Timeout = {$: 'Timeout'};
var $jzxhuang$http_extras$Http$Detailed$resolve = F2(
	function (toResult, response) {
		switch (response.$) {
			case 'BadUrl_':
				var url = response.a;
				return $elm$core$Result$Err(
					$jzxhuang$http_extras$Http$Detailed$BadUrl(url));
			case 'Timeout_':
				return $elm$core$Result$Err($jzxhuang$http_extras$Http$Detailed$Timeout);
			case 'NetworkError_':
				return $elm$core$Result$Err($jzxhuang$http_extras$Http$Detailed$NetworkError);
			case 'BadStatus_':
				var metadata = response.a;
				var body = response.b;
				return $elm$core$Result$Err(
					A2($jzxhuang$http_extras$Http$Detailed$BadStatus, metadata, body));
			default:
				var metadata = response.a;
				var body = response.b;
				return A2(
					$elm$core$Result$mapError,
					A2($jzxhuang$http_extras$Http$Detailed$BadBody, metadata, body),
					toResult(
						_Utils_Tuple2(metadata, body)));
		}
	});
var $jzxhuang$http_extras$Http$Detailed$responseToJson = F2(
	function (decoder, responseString) {
		return A2(
			$jzxhuang$http_extras$Http$Detailed$resolve,
			function (_v0) {
				var metadata = _v0.a;
				var body = _v0.b;
				return A2(
					$elm$core$Result$mapError,
					$elm$json$Json$Decode$errorToString,
					A2(
						$elm$json$Json$Decode$decodeString,
						A2(
							$elm$json$Json$Decode$map,
							function (res) {
								return _Utils_Tuple2(metadata, res);
							},
							decoder),
						body));
			},
			responseString);
	});
var $jzxhuang$http_extras$Http$Detailed$expectJson = F2(
	function (toMsg, decoder) {
		return A2(
			$elm$http$Http$expectStringResponse,
			toMsg,
			$jzxhuang$http_extras$Http$Detailed$responseToJson(decoder));
	});
var $elm$http$Http$jsonBody = function (value) {
	return A2(
		_Http_pair,
		'application/json',
		A2($elm$json$Json$Encode$encode, 0, value));
};
var $author$project$FrontendBackendInterface$ElmMakeResponse = function (a) {
	return {$: 'ElmMakeResponse', a: a};
};
var $author$project$FrontendBackendInterface$ErrorResponse = function (a) {
	return {$: 'ErrorResponse', a: a};
};
var $author$project$FrontendBackendInterface$FormatElmModuleTextResponse = function (a) {
	return {$: 'FormatElmModuleTextResponse', a: a};
};
var $author$project$FrontendBackendInterface$LoadCompositionResponse = function (a) {
	return {$: 'LoadCompositionResponse', a: a};
};
var $elm$json$Json$Decode$list = _Json_decodeList;
var $author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode__generic_List = $elm$json$Json$Decode$list;
var $elm$json$Json$Decode$null = _Json_decodeNull;
var $author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode__generic_Maybe = function (decoder) {
	return $elm$json$Json$Decode$oneOf(
		_List_fromArray(
			[
				A2(
				$elm$json$Json$Decode$field,
				'Nothing',
				$elm$json$Json$Decode$succeed($elm$core$Maybe$Nothing)),
				A2(
				$elm$json$Json$Decode$field,
				'Just',
				A2(
					$elm$json$Json$Decode$map,
					$elm$core$Maybe$Just,
					A2($elm$json$Json$Decode$index, 0, decoder))),
				A2(
				$elm$json$Json$Decode$field,
				'Just',
				A2($elm$json$Json$Decode$map, $elm$core$Maybe$Just, decoder)),
				$elm$json$Json$Decode$null($elm$core$Maybe$Nothing)
			]));
};
var $author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_FrontendBackendInterface_ResponseStructure = $elm$json$Json$Decode$oneOf(
	_List_fromArray(
		[
			A2(
			$elm$json$Json$Decode$field,
			'ElmMakeResponse',
			$elm$json$Json$Decode$lazy(
				function (_v0) {
					return A2(
						$elm$json$Json$Decode$map,
						$author$project$FrontendBackendInterface$ElmMakeResponse,
						A2(
							$elm$json$Json$Decode$index,
							0,
							A2(
								$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
								A3(
									$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
									'reportJsonProcessOutput',
									_List_fromArray(
										['ReportJsonProcessOutput']),
									A2(
										$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
										A3(
											$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
											'exitCode',
											_List_fromArray(
												['ExitCode']),
											$elm$json$Json$Decode$int),
										A2(
											$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
											A3(
												$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
												'standardOutput',
												_List_fromArray(
													['StandardOutput']),
												$elm$json$Json$Decode$string),
											A2(
												$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
												A3(
													$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
													'standardError',
													_List_fromArray(
														['StandardError']),
													$elm$json$Json$Decode$string),
												$elm$json$Json$Decode$succeed(
													F3(
														function (standardError, standardOutput, exitCode) {
															return {exitCode: exitCode, standardError: standardError, standardOutput: standardOutput};
														})))))),
								A2(
									$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
									A3(
										$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
										'outputFileContentBase64',
										_List_fromArray(
											['OutputFileContentBase64']),
										$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode__generic_Maybe($elm$json$Json$Decode$string)),
									A2(
										$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
										A3(
											$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
											'processOutput',
											_List_fromArray(
												['ProcessOutput']),
											A2(
												$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
												A3(
													$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
													'exitCode',
													_List_fromArray(
														['ExitCode']),
													$elm$json$Json$Decode$int),
												A2(
													$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
													A3(
														$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
														'standardOutput',
														_List_fromArray(
															['StandardOutput']),
														$elm$json$Json$Decode$string),
													A2(
														$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
														A3(
															$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
															'standardError',
															_List_fromArray(
																['StandardError']),
															$elm$json$Json$Decode$string),
														$elm$json$Json$Decode$succeed(
															F3(
																function (standardError, standardOutput, exitCode) {
																	return {exitCode: exitCode, standardError: standardError, standardOutput: standardOutput};
																})))))),
										$elm$json$Json$Decode$succeed(
											F3(
												function (processOutput, outputFileContentBase64, reportJsonProcessOutput) {
													return {outputFileContentBase64: outputFileContentBase64, processOutput: processOutput, reportJsonProcessOutput: reportJsonProcessOutput};
												})))))));
				})),
			A2(
			$elm$json$Json$Decode$field,
			'ErrorResponse',
			$elm$json$Json$Decode$lazy(
				function (_v1) {
					return A2(
						$elm$json$Json$Decode$map,
						$author$project$FrontendBackendInterface$ErrorResponse,
						A2($elm$json$Json$Decode$index, 0, $elm$json$Json$Decode$string));
				})),
			A2(
			$elm$json$Json$Decode$field,
			'FormatElmModuleTextResponse',
			$elm$json$Json$Decode$lazy(
				function (_v2) {
					return A2(
						$elm$json$Json$Decode$map,
						$author$project$FrontendBackendInterface$FormatElmModuleTextResponse,
						A2(
							$elm$json$Json$Decode$index,
							0,
							A2(
								$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
								A3(
									$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
									'formattedText',
									_List_fromArray(
										['FormattedText']),
									$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode__generic_Maybe($elm$json$Json$Decode$string)),
								A2(
									$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
									A3(
										$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
										'processOutput',
										_List_fromArray(
											['ProcessOutput']),
										A2(
											$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
											A3(
												$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
												'exitCode',
												_List_fromArray(
													['ExitCode']),
												$elm$json$Json$Decode$int),
											A2(
												$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
												A3(
													$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
													'standardOutput',
													_List_fromArray(
														['StandardOutput']),
													$elm$json$Json$Decode$string),
												A2(
													$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
													A3(
														$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
														'standardError',
														_List_fromArray(
															['StandardError']),
														$elm$json$Json$Decode$string),
													$elm$json$Json$Decode$succeed(
														F3(
															function (standardError, standardOutput, exitCode) {
																return {exitCode: exitCode, standardError: standardError, standardOutput: standardOutput};
															})))))),
									$elm$json$Json$Decode$succeed(
										F2(
											function (processOutput, formattedText) {
												return {formattedText: formattedText, processOutput: processOutput};
											}))))));
				})),
			A2(
			$elm$json$Json$Decode$field,
			'LoadCompositionResponse',
			$elm$json$Json$Decode$lazy(
				function (_v3) {
					return A2(
						$elm$json$Json$Decode$map,
						$author$project$FrontendBackendInterface$LoadCompositionResponse,
						A2(
							$elm$json$Json$Decode$index,
							0,
							A2(
								$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
								A3(
									$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
									'urlInCommit',
									_List_fromArray(
										['UrlInCommit']),
									$elm$json$Json$Decode$string),
								A2(
									$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
									A3(
										$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
										'filesAsFlatList',
										_List_fromArray(
											['FilesAsFlatList']),
										$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode__generic_List(
											A2(
												$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
												A3(
													$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
													'contentBase64',
													_List_fromArray(
														['ContentBase64']),
													$elm$json$Json$Decode$string),
												A2(
													$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
													A3(
														$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
														'path',
														_List_fromArray(
															['Path']),
														$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode__generic_List($elm$json$Json$Decode$string)),
													$elm$json$Json$Decode$succeed(
														F2(
															function (path, contentBase64) {
																return {contentBase64: contentBase64, path: path};
															})))))),
									A2(
										$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
										A3(
											$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
											'compositionId',
											_List_fromArray(
												['CompositionId']),
											$elm$json$Json$Decode$string),
										$elm$json$Json$Decode$succeed(
											F3(
												function (compositionId, filesAsFlatList, urlInCommit) {
													return {compositionId: compositionId, filesAsFlatList: filesAsFlatList, urlInCommit: urlInCommit};
												})))))));
				}))
		]));
var $author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_536068732 = $author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_FrontendBackendInterface_ResponseStructure;
var $author$project$CompilationInterface$GenerateJsonConverters$jsonDecodeResponseStructure = $author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_536068732;
var $elm$json$Json$Encode$bool = _Json_wrap;
var $elm$json$Json$Encode$list = F2(
	function (func, entries) {
		return _Json_wrap(
			A3(
				$elm$core$List$foldl,
				_Json_addEntry(func),
				_Json_emptyArray(_Utils_Tuple0),
				entries));
	});
var $elm$json$Json$Encode$object = function (pairs) {
	return _Json_wrap(
		A3(
			$elm$core$List$foldl,
			F2(
				function (_v0, obj) {
					var k = _v0.a;
					var v = _v0.b;
					return A3(_Json_addField, k, v, obj);
				}),
			_Json_emptyObject(_Utils_Tuple0),
			pairs));
};
var $author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonEncode_FrontendBackendInterface_ElmMakeOutputType = function (valueToEncode) {
	if (valueToEncode.$ === 'ElmMakeOutputTypeHtml') {
		return $elm$json$Json$Encode$object(
			_List_fromArray(
				[
					_Utils_Tuple2(
					'ElmMakeOutputTypeHtml',
					A2($elm$json$Json$Encode$list, $elm$core$Basics$identity, _List_Nil))
				]));
	} else {
		return $elm$json$Json$Encode$object(
			_List_fromArray(
				[
					_Utils_Tuple2(
					'ElmMakeOutputTypeJs',
					A2($elm$json$Json$Encode$list, $elm$core$Basics$identity, _List_Nil))
				]));
	}
};
var $author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonEncode__generic_List = $elm$json$Json$Encode$list;
var $elm$json$Json$Encode$string = _Json_wrap;
var $author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonEncode_FrontendBackendInterface_RequestStructure = function (valueToEncode) {
	switch (valueToEncode.$) {
		case 'ElmMakeRequest':
			var tagArgument0 = valueToEncode.a;
			return $elm$json$Json$Encode$object(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'ElmMakeRequest',
						A2(
							$elm$json$Json$Encode$list,
							$elm$core$Basics$identity,
							_List_fromArray(
								[
									$elm$json$Json$Encode$object(
									_List_fromArray(
										[
											_Utils_Tuple2(
											'files',
											A2(
												$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonEncode__generic_List,
												function (type_arg) {
													return $elm$json$Json$Encode$object(
														_List_fromArray(
															[
																_Utils_Tuple2(
																'path',
																A2(
																	$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonEncode__generic_List,
																	function (type_arg_) {
																		return $elm$json$Json$Encode$string(type_arg_);
																	},
																	type_arg.path)),
																_Utils_Tuple2(
																'contentBase64',
																$elm$json$Json$Encode$string(type_arg.contentBase64))
															]));
												},
												tagArgument0.files)),
											_Utils_Tuple2(
											'workingDirectoryPath',
											A2(
												$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonEncode__generic_List,
												function (type_arg) {
													return $elm$json$Json$Encode$string(type_arg);
												},
												tagArgument0.workingDirectoryPath)),
											_Utils_Tuple2(
											'entryPointFilePathFromWorkingDirectory',
											A2(
												$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonEncode__generic_List,
												function (type_arg) {
													return $elm$json$Json$Encode$string(type_arg);
												},
												tagArgument0.entryPointFilePathFromWorkingDirectory)),
											_Utils_Tuple2(
											'makeOptionDebug',
											$elm$json$Json$Encode$bool(tagArgument0.makeOptionDebug)),
											_Utils_Tuple2(
											'outputType',
											$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonEncode_FrontendBackendInterface_ElmMakeOutputType(tagArgument0.outputType))
										]))
								])))
					]));
		case 'FormatElmModuleTextRequest':
			var tagArgument0 = valueToEncode.a;
			return $elm$json$Json$Encode$object(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'FormatElmModuleTextRequest',
						A2(
							$elm$json$Json$Encode$list,
							$elm$core$Basics$identity,
							_List_fromArray(
								[
									$elm$json$Json$Encode$string(tagArgument0)
								])))
					]));
		default:
			var tagArgument0 = valueToEncode.a;
			return $elm$json$Json$Encode$object(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'LoadCompositionRequest',
						A2(
							$elm$json$Json$Encode$list,
							$elm$core$Basics$identity,
							_List_fromArray(
								[
									$elm$json$Json$Encode$string(tagArgument0)
								])))
					]));
	}
};
var $author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonEncode_2548601546 = function (valueToEncode) {
	return $author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonEncode_FrontendBackendInterface_RequestStructure(valueToEncode);
};
var $author$project$CompilationInterface$GenerateJsonConverters$jsonEncodeRequestStructure = $author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonEncode_2548601546;
var $elm$http$Http$Request = function (a) {
	return {$: 'Request', a: a};
};
var $elm$http$Http$State = F2(
	function (reqs, subs) {
		return {reqs: reqs, subs: subs};
	});
var $elm$http$Http$init = $elm$core$Task$succeed(
	A2($elm$http$Http$State, $elm$core$Dict$empty, _List_Nil));
var $elm$http$Http$updateReqs = F3(
	function (router, cmds, reqs) {
		updateReqs:
		while (true) {
			if (!cmds.b) {
				return $elm$core$Task$succeed(reqs);
			} else {
				var cmd = cmds.a;
				var otherCmds = cmds.b;
				if (cmd.$ === 'Cancel') {
					var tracker = cmd.a;
					var _v2 = A2($elm$core$Dict$get, tracker, reqs);
					if (_v2.$ === 'Nothing') {
						var $temp$router = router,
							$temp$cmds = otherCmds,
							$temp$reqs = reqs;
						router = $temp$router;
						cmds = $temp$cmds;
						reqs = $temp$reqs;
						continue updateReqs;
					} else {
						var pid = _v2.a;
						return A2(
							$elm$core$Task$andThen,
							function (_v3) {
								return A3(
									$elm$http$Http$updateReqs,
									router,
									otherCmds,
									A2($elm$core$Dict$remove, tracker, reqs));
							},
							$elm$core$Process$kill(pid));
					}
				} else {
					var req = cmd.a;
					return A2(
						$elm$core$Task$andThen,
						function (pid) {
							var _v4 = req.tracker;
							if (_v4.$ === 'Nothing') {
								return A3($elm$http$Http$updateReqs, router, otherCmds, reqs);
							} else {
								var tracker = _v4.a;
								return A3(
									$elm$http$Http$updateReqs,
									router,
									otherCmds,
									A3($elm$core$Dict$insert, tracker, pid, reqs));
							}
						},
						$elm$core$Process$spawn(
							A3(
								_Http_toTask,
								router,
								$elm$core$Platform$sendToApp(router),
								req)));
				}
			}
		}
	});
var $elm$http$Http$onEffects = F4(
	function (router, cmds, subs, state) {
		return A2(
			$elm$core$Task$andThen,
			function (reqs) {
				return $elm$core$Task$succeed(
					A2($elm$http$Http$State, reqs, subs));
			},
			A3($elm$http$Http$updateReqs, router, cmds, state.reqs));
	});
var $elm$http$Http$maybeSend = F4(
	function (router, desiredTracker, progress, _v0) {
		var actualTracker = _v0.a;
		var toMsg = _v0.b;
		return _Utils_eq(desiredTracker, actualTracker) ? $elm$core$Maybe$Just(
			A2(
				$elm$core$Platform$sendToApp,
				router,
				toMsg(progress))) : $elm$core$Maybe$Nothing;
	});
var $elm$http$Http$onSelfMsg = F3(
	function (router, _v0, state) {
		var tracker = _v0.a;
		var progress = _v0.b;
		return A2(
			$elm$core$Task$andThen,
			function (_v1) {
				return $elm$core$Task$succeed(state);
			},
			$elm$core$Task$sequence(
				A2(
					$elm$core$List$filterMap,
					A3($elm$http$Http$maybeSend, router, tracker, progress),
					state.subs)));
	});
var $elm$http$Http$Cancel = function (a) {
	return {$: 'Cancel', a: a};
};
var $elm$http$Http$cmdMap = F2(
	function (func, cmd) {
		if (cmd.$ === 'Cancel') {
			var tracker = cmd.a;
			return $elm$http$Http$Cancel(tracker);
		} else {
			var r = cmd.a;
			return $elm$http$Http$Request(
				{
					allowCookiesFromOtherDomains: r.allowCookiesFromOtherDomains,
					body: r.body,
					expect: A2(_Http_mapExpect, func, r.expect),
					headers: r.headers,
					method: r.method,
					timeout: r.timeout,
					tracker: r.tracker,
					url: r.url
				});
		}
	});
var $elm$http$Http$MySub = F2(
	function (a, b) {
		return {$: 'MySub', a: a, b: b};
	});
var $elm$http$Http$subMap = F2(
	function (func, _v0) {
		var tracker = _v0.a;
		var toMsg = _v0.b;
		return A2(
			$elm$http$Http$MySub,
			tracker,
			A2($elm$core$Basics$composeR, toMsg, func));
	});
_Platform_effectManagers['Http'] = _Platform_createManager($elm$http$Http$init, $elm$http$Http$onEffects, $elm$http$Http$onSelfMsg, $elm$http$Http$cmdMap, $elm$http$Http$subMap);
var $elm$http$Http$command = _Platform_leaf('Http');
var $elm$http$Http$subscription = _Platform_leaf('Http');
var $elm$http$Http$request = function (r) {
	return $elm$http$Http$command(
		$elm$http$Http$Request(
			{allowCookiesFromOtherDomains: false, body: r.body, expect: r.expect, headers: r.headers, method: r.method, timeout: r.timeout, tracker: r.tracker, url: r.url}));
};
var $elm$http$Http$post = function (r) {
	return $elm$http$Http$request(
		{body: r.body, expect: r.expect, headers: _List_Nil, method: 'POST', timeout: $elm$core$Maybe$Nothing, tracker: $elm$core$Maybe$Nothing, url: r.url});
};
var $author$project$Frontend$Main$requestToApiCmd = F3(
	function (request, jsonDecoderSpecialization, eventConstructor) {
		var jsonDecoder = A2($elm$json$Json$Decode$andThen, jsonDecoderSpecialization, $author$project$CompilationInterface$GenerateJsonConverters$jsonDecodeResponseStructure);
		return $elm$http$Http$post(
			{
				body: $elm$http$Http$jsonBody(
					$author$project$CompilationInterface$GenerateJsonConverters$jsonEncodeRequestStructure(request)),
				expect: A2($jzxhuang$http_extras$Http$Detailed$expectJson, eventConstructor, jsonDecoder),
				url: A2(
					$elm$url$Url$Builder$absolute,
					_List_fromArray(
						['api']),
					_List_Nil)
			});
	});
var $elm$core$String$trim = _String_trim;
var $author$project$Frontend$Main$loadFromGitCmd = function (urlIntoGitRepository) {
	var backendResponseJsonDecoder = function (backendResponse) {
		switch (backendResponse.$) {
			case 'LoadCompositionResponse':
				var loadComposition = backendResponse.a;
				return $elm$json$Json$Decode$succeed(
					$elm$core$Result$Ok(loadComposition));
			case 'ErrorResponse':
				var error = backendResponse.a;
				return $elm$json$Json$Decode$succeed(
					$elm$core$Result$Err('The server reported an error:\n' + error));
			default:
				return $elm$json$Json$Decode$fail('Unexpected response: Not a LoadCompositionResponse');
		}
	};
	return A3(
		$author$project$Frontend$Main$requestToApiCmd,
		$author$project$FrontendBackendInterface$LoadCompositionRequest(
			$elm$core$String$trim(urlIntoGitRepository)),
		backendResponseJsonDecoder,
		A2(
			$elm$core$Basics$composeR,
			$elm$core$Result$map($elm$core$Tuple$second),
			$author$project$Frontend$Main$BackendLoadFromGitResultEvent(urlIntoGitRepository)));
};
var $author$project$Frontend$Main$updateToBeginLoadWorkspaceState = F3(
	function (_v0, stateBefore, workspaceStateDescription) {
		var workspaceStateExpectedCompositionHash = _v0.workspaceStateExpectedCompositionHash;
		var filePathToOpen = _v0.filePathToOpen;
		return _Utils_Tuple2(
			_Utils_update(
				stateBefore,
				{
					workspace: $author$project$Frontend$Main$WorkspaceLoadingFromLink(
						{expectedCompositionHash: workspaceStateExpectedCompositionHash, filePathToOpen: filePathToOpen, workspaceStateDescription: workspaceStateDescription})
				}),
			$author$project$Frontend$Main$loadFromGitCmd(workspaceStateDescription.base));
	});
var $author$project$Frontend$WorkspaceStateInUrl$LinkWorkspaceState = function (a) {
	return {$: 'LinkWorkspaceState', a: a};
};
var $author$project$Common$decodeBytesToString = function (bytes) {
	return A2(
		$elm$bytes$Bytes$Decode$decode,
		$elm$bytes$Bytes$Decode$string(
			$elm$bytes$Bytes$width(bytes)),
		bytes);
};
var $author$project$Frontend$WorkspaceStateInUrl$DiffWorkspaceState_Version_2021_01 = function (a) {
	return {$: 'DiffWorkspaceState_Version_2021_01', a: a};
};
var $author$project$Frontend$WorkspaceStateInUrl$LiteralWorkspaceState = function (a) {
	return {$: 'LiteralWorkspaceState', a: a};
};
var $author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_FileTree_FileTreeNode = function (jsonDecode_type_parameter_blobStructure) {
	return $elm$json$Json$Decode$oneOf(
		_List_fromArray(
			[
				A2(
				$elm$json$Json$Decode$field,
				'BlobNode',
				$elm$json$Json$Decode$lazy(
					function (_v0) {
						return A2(
							$elm$json$Json$Decode$map,
							$author$project$FileTree$BlobNode,
							A2($elm$json$Json$Decode$index, 0, jsonDecode_type_parameter_blobStructure));
					})),
				A2(
				$elm$json$Json$Decode$field,
				'TreeNode',
				$elm$json$Json$Decode$lazy(
					function (_v1) {
						return A2(
							$elm$json$Json$Decode$map,
							$author$project$FileTree$TreeNode,
							A2(
								$elm$json$Json$Decode$index,
								0,
								$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode__generic_List(
									A3(
										$elm$json$Json$Decode$map2,
										F2(
											function (item_0, item_1) {
												return _Utils_Tuple2(item_0, item_1);
											}),
										A2($elm$json$Json$Decode$index, 0, $elm$json$Json$Decode$string),
										A2(
											$elm$json$Json$Decode$index,
											1,
											$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_FileTree_FileTreeNode(jsonDecode_type_parameter_blobStructure))))));
					}))
			]));
};
var $author$project$CompilerGenerated$Encode$isValidChar = function (c) {
	if ($elm$core$Char$isAlphaNum(c)) {
		return true;
	} else {
		switch (c.valueOf()) {
			case '+':
				return true;
			case '/':
				return true;
			default:
				return false;
		}
	}
};
var $author$project$CompilerGenerated$Encode$unsafeConvertChar = function (_char) {
	var key = $elm$core$Char$toCode(_char);
	if ((key >= 65) && (key <= 90)) {
		return key - 65;
	} else {
		if ((key >= 97) && (key <= 122)) {
			return (key - 97) + 26;
		} else {
			if ((key >= 48) && (key <= 57)) {
				return ((key - 48) + 26) + 26;
			} else {
				switch (_char.valueOf()) {
					case '+':
						return 62;
					case '/':
						return 63;
					default:
						return -1;
				}
			}
		}
	}
};
var $author$project$CompilerGenerated$Encode$encodeCharacters = F4(
	function (a, b, c, d) {
		if ($author$project$CompilerGenerated$Encode$isValidChar(a) && $author$project$CompilerGenerated$Encode$isValidChar(b)) {
			var n2 = $author$project$CompilerGenerated$Encode$unsafeConvertChar(b);
			var n1 = $author$project$CompilerGenerated$Encode$unsafeConvertChar(a);
			if ('=' === d.valueOf()) {
				if ('=' === c.valueOf()) {
					var n = (n1 << 18) | (n2 << 12);
					var b1 = n >> 16;
					return $elm$core$Maybe$Just(
						$elm$bytes$Bytes$Encode$unsignedInt8(b1));
				} else {
					if ($author$project$CompilerGenerated$Encode$isValidChar(c)) {
						var n3 = $author$project$CompilerGenerated$Encode$unsafeConvertChar(c);
						var n = ((n1 << 18) | (n2 << 12)) | (n3 << 6);
						var combined = n >> 8;
						return $elm$core$Maybe$Just(
							A2($elm$bytes$Bytes$Encode$unsignedInt16, $elm$bytes$Bytes$BE, combined));
					} else {
						return $elm$core$Maybe$Nothing;
					}
				}
			} else {
				if ($author$project$CompilerGenerated$Encode$isValidChar(c) && $author$project$CompilerGenerated$Encode$isValidChar(d)) {
					var n4 = $author$project$CompilerGenerated$Encode$unsafeConvertChar(d);
					var n3 = $author$project$CompilerGenerated$Encode$unsafeConvertChar(c);
					var n = ((n1 << 18) | (n2 << 12)) | ((n3 << 6) | n4);
					var combined = n >> 8;
					var b3 = n;
					return $elm$core$Maybe$Just(
						$elm$bytes$Bytes$Encode$sequence(
							_List_fromArray(
								[
									A2($elm$bytes$Bytes$Encode$unsignedInt16, $elm$bytes$Bytes$BE, combined),
									$elm$bytes$Bytes$Encode$unsignedInt8(b3)
								])));
				} else {
					return $elm$core$Maybe$Nothing;
				}
			}
		} else {
			return $elm$core$Maybe$Nothing;
		}
	});
var $author$project$CompilerGenerated$Encode$encodeChunks = F2(
	function (input, accum) {
		encodeChunks:
		while (true) {
			var _v0 = $elm$core$String$toList(
				A2($elm$core$String$left, 4, input));
			_v0$4:
			while (true) {
				if (!_v0.b) {
					return $elm$core$Maybe$Just(accum);
				} else {
					if (_v0.b.b) {
						if (_v0.b.b.b) {
							if (_v0.b.b.b.b) {
								if (!_v0.b.b.b.b.b) {
									var a = _v0.a;
									var _v1 = _v0.b;
									var b = _v1.a;
									var _v2 = _v1.b;
									var c = _v2.a;
									var _v3 = _v2.b;
									var d = _v3.a;
									var _v4 = A4($author$project$CompilerGenerated$Encode$encodeCharacters, a, b, c, d);
									if (_v4.$ === 'Just') {
										var enc = _v4.a;
										var $temp$input = A2($elm$core$String$dropLeft, 4, input),
											$temp$accum = A2($elm$core$List$cons, enc, accum);
										input = $temp$input;
										accum = $temp$accum;
										continue encodeChunks;
									} else {
										return $elm$core$Maybe$Nothing;
									}
								} else {
									break _v0$4;
								}
							} else {
								var a = _v0.a;
								var _v5 = _v0.b;
								var b = _v5.a;
								var _v6 = _v5.b;
								var c = _v6.a;
								var _v7 = A4(
									$author$project$CompilerGenerated$Encode$encodeCharacters,
									a,
									b,
									c,
									_Utils_chr('='));
								if (_v7.$ === 'Nothing') {
									return $elm$core$Maybe$Nothing;
								} else {
									var enc = _v7.a;
									return $elm$core$Maybe$Just(
										A2($elm$core$List$cons, enc, accum));
								}
							}
						} else {
							var a = _v0.a;
							var _v8 = _v0.b;
							var b = _v8.a;
							var _v9 = A4(
								$author$project$CompilerGenerated$Encode$encodeCharacters,
								a,
								b,
								_Utils_chr('='),
								_Utils_chr('='));
							if (_v9.$ === 'Nothing') {
								return $elm$core$Maybe$Nothing;
							} else {
								var enc = _v9.a;
								return $elm$core$Maybe$Just(
									A2($elm$core$List$cons, enc, accum));
							}
						}
					} else {
						break _v0$4;
					}
				}
			}
			return $elm$core$Maybe$Nothing;
		}
	});
var $author$project$CompilerGenerated$Encode$encoder = function (string) {
	return A2(
		$elm$core$Maybe$map,
		A2($elm$core$Basics$composeR, $elm$core$List$reverse, $elm$bytes$Bytes$Encode$sequence),
		A2($author$project$CompilerGenerated$Encode$encodeChunks, string, _List_Nil));
};
var $author$project$CompilerGenerated$Encode$toBytes = function (string) {
	return A2(
		$elm$core$Maybe$map,
		$elm$bytes$Bytes$Encode$encode,
		$author$project$CompilerGenerated$Encode$encoder(string));
};
var $author$project$CompilerGenerated$Base64$toBytes = $author$project$CompilerGenerated$Encode$toBytes;
var $author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$json_decode_Bytes = A2(
	$elm$json$Json$Decode$field,
	'AsBase64',
	A2(
		$elm$json$Json$Decode$andThen,
		A2(
			$elm$core$Basics$composeR,
			$author$project$CompilerGenerated$Base64$toBytes,
			A2(
				$elm$core$Basics$composeR,
				$elm$core$Maybe$map($elm$json$Json$Decode$succeed),
				$elm$core$Maybe$withDefault(
					$elm$json$Json$Decode$fail('Failed to decode base64.')))),
		$elm$json$Json$Decode$string));
var $author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_2146051484 = $author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_FileTree_FileTreeNode($author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$json_decode_Bytes);
var $author$project$CompilationInterface$GenerateJsonConverters$jsonDecodeFileTreeNode = $author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_2146051484;
var $author$project$WorkspaceState_2021_01$AddBytes = function (a) {
	return {$: 'AddBytes', a: a};
};
var $author$project$WorkspaceState_2021_01$RemoveBytes = function (a) {
	return {$: 'RemoveBytes', a: a};
};
var $author$project$WorkspaceState_2021_01$ReuseBytes = function (a) {
	return {$: 'ReuseBytes', a: a};
};
var $author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_WorkspaceState_2021_01_BlobChangeSequenceElement = $elm$json$Json$Decode$oneOf(
	_List_fromArray(
		[
			A2(
			$elm$json$Json$Decode$field,
			'AddBytes',
			$elm$json$Json$Decode$lazy(
				function (_v0) {
					return A2(
						$elm$json$Json$Decode$map,
						$author$project$WorkspaceState_2021_01$AddBytes,
						A2($elm$json$Json$Decode$index, 0, $author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$json_decode_Bytes));
				})),
			A2(
			$elm$json$Json$Decode$field,
			'RemoveBytes',
			$elm$json$Json$Decode$lazy(
				function (_v1) {
					return A2(
						$elm$json$Json$Decode$map,
						$author$project$WorkspaceState_2021_01$RemoveBytes,
						A2($elm$json$Json$Decode$index, 0, $elm$json$Json$Decode$int));
				})),
			A2(
			$elm$json$Json$Decode$field,
			'ReuseBytes',
			$elm$json$Json$Decode$lazy(
				function (_v2) {
					return A2(
						$elm$json$Json$Decode$map,
						$author$project$WorkspaceState_2021_01$ReuseBytes,
						A2($elm$json$Json$Decode$index, 0, $elm$json$Json$Decode$int));
				}))
		]));
var $author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_2130805252 = A2(
	$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
	A3(
		$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
		'differenceFromBase',
		_List_fromArray(
			['DifferenceFromBase']),
		A2(
			$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
			A3(
				$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
				'changeBlobs',
				_List_fromArray(
					['ChangeBlobs']),
				$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode__generic_List(
					A3(
						$elm$json$Json$Decode$map2,
						F2(
							function (item_0, item_1) {
								return _Utils_Tuple2(item_0, item_1);
							}),
						A2(
							$elm$json$Json$Decode$index,
							0,
							$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode__generic_List($elm$json$Json$Decode$string)),
						A2(
							$elm$json$Json$Decode$index,
							1,
							$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode__generic_List($author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_WorkspaceState_2021_01_BlobChangeSequenceElement))))),
			A2(
				$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
				A3(
					$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
					'removeNodes',
					_List_fromArray(
						['RemoveNodes']),
					$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode__generic_List(
						$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode__generic_List($elm$json$Json$Decode$string))),
				$elm$json$Json$Decode$succeed(
					F2(
						function (removeNodes, changeBlobs) {
							return {changeBlobs: changeBlobs, removeNodes: removeNodes};
						}))))),
	A2(
		$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
		A3(
			$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
			'base',
			_List_fromArray(
				['Base']),
			$elm$json$Json$Decode$string),
		$elm$json$Json$Decode$succeed(
			F2(
				function (base, differenceFromBase) {
					return {base: base, differenceFromBase: differenceFromBase};
				}))));
var $author$project$CompilationInterface$GenerateJsonConverters$jsonDecodeWorkspaceState_2021_01 = $author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_2130805252;
var $author$project$Frontend$WorkspaceStateInUrl$jsonDecodeWorkspaceStateDescription = $elm$json$Json$Decode$oneOf(
	_List_fromArray(
		[
			A2(
			$elm$json$Json$Decode$map,
			$author$project$Frontend$WorkspaceStateInUrl$LiteralWorkspaceState,
			A2($elm$json$Json$Decode$field, 'version_2020_12', $author$project$CompilationInterface$GenerateJsonConverters$jsonDecodeFileTreeNode)),
			A2(
			$elm$json$Json$Decode$map,
			$author$project$Frontend$WorkspaceStateInUrl$DiffWorkspaceState_Version_2021_01,
			A2($elm$json$Json$Decode$field, 'version_2021_01', $author$project$CompilationInterface$GenerateJsonConverters$jsonDecodeWorkspaceState_2021_01))
		]));
var $elm_community$maybe_extra$Maybe$Extra$orElse = F2(
	function (ma, mb) {
		if (mb.$ === 'Nothing') {
			return ma;
		} else {
			return mb;
		}
	});
var $author$project$Frontend$WorkspaceStateInUrl$workspaceStateDeflateBase64QueryParameterName = 'workspace-state-deflate-base64';
var $author$project$Frontend$WorkspaceStateInUrl$workspaceStateDeflateBase64QueryParameterName_Old = 'project-state-deflate-base64';
var $author$project$Frontend$WorkspaceStateInUrl$workspaceStateQueryParameterName = 'workspace-state';
var $author$project$Frontend$WorkspaceStateInUrl$workspaceStateQueryParameterName_Old = 'project-state';
var $author$project$Frontend$WorkspaceStateInUrl$workspaceStateStringQualifiesAsLink = function (workspaceStateString) {
	return A2($elm$core$String$startsWith, 'https://', workspaceStateString);
};
var $author$project$Frontend$WorkspaceStateInUrl$workspaceStateDescriptionFromUrl = function (url) {
	var stringFromQueryParameterName = function (paramName) {
		return $elm_community$maybe_extra$Maybe$Extra$join(
			A2(
				$elm$url$Url$Parser$parse,
				A2(
					$elm$url$Url$Parser$questionMark,
					$elm$url$Url$Parser$top,
					$elm$url$Url$Parser$Query$string(paramName)),
				_Utils_update(
					url,
					{path: ''})));
	};
	var continueWithWorkspaceStateString = function (workspaceStateString) {
		return $author$project$Frontend$WorkspaceStateInUrl$workspaceStateStringQualifiesAsLink(workspaceStateString) ? $elm$core$Result$Ok(
			$author$project$Frontend$WorkspaceStateInUrl$LinkWorkspaceState(workspaceStateString)) : A2(
			$elm$core$Result$mapError,
			$elm$json$Json$Decode$errorToString,
			A2($elm$json$Json$Decode$decodeString, $author$project$Frontend$WorkspaceStateInUrl$jsonDecodeWorkspaceStateDescription, workspaceStateString));
	};
	var _v0 = A2(
		$elm_community$maybe_extra$Maybe$Extra$orElse,
		stringFromQueryParameterName($author$project$Frontend$WorkspaceStateInUrl$workspaceStateQueryParameterName_Old),
		stringFromQueryParameterName($author$project$Frontend$WorkspaceStateInUrl$workspaceStateQueryParameterName));
	if (_v0.$ === 'Just') {
		var workspaceStateString = _v0.a;
		return $author$project$Frontend$WorkspaceStateInUrl$workspaceStateStringQualifiesAsLink(workspaceStateString) ? $elm$core$Maybe$Just(
			$elm$core$Result$Ok(
				$author$project$Frontend$WorkspaceStateInUrl$LinkWorkspaceState(workspaceStateString))) : $elm$core$Maybe$Just(
			continueWithWorkspaceStateString(workspaceStateString));
	} else {
		var _v1 = A2(
			$elm_community$maybe_extra$Maybe$Extra$orElse,
			stringFromQueryParameterName($author$project$Frontend$WorkspaceStateInUrl$workspaceStateDeflateBase64QueryParameterName_Old),
			stringFromQueryParameterName($author$project$Frontend$WorkspaceStateInUrl$workspaceStateDeflateBase64QueryParameterName));
		if (_v1.$ === 'Nothing') {
			return $elm$core$Maybe$Nothing;
		} else {
			var workspaceStateDeflateBase64 = _v1.a;
			return $elm$core$Maybe$Just(
				A2(
					$elm$core$Result$andThen,
					continueWithWorkspaceStateString,
					A2(
						$elm$core$Result$andThen,
						A2(
							$elm$core$Basics$composeR,
							$author$project$Common$decodeBytesToString,
							$elm$core$Result$fromMaybe('Failed to decode bytes to string')),
						A2(
							$elm$core$Result$andThen,
							A2(
								$elm$core$Basics$composeR,
								$folkertdev$elm_flate$Flate$inflate,
								$elm$core$Result$fromMaybe('Failed to inflate')),
							A2(
								$elm$core$Result$fromMaybe,
								'Failed to decode from base64',
								$danfishgold$base64_bytes$Base64$toBytes(workspaceStateDeflateBase64))))));
		}
	}
};
var $author$project$Frontend$WorkspaceStateInUrl$workspaceStateHashQueryParameterName = 'workspace-hash';
var $author$project$Frontend$WorkspaceStateInUrl$workspaceStateHashFromUrl = function (url) {
	return $elm_community$maybe_extra$Maybe$Extra$join(
		A2(
			$elm$url$Url$Parser$parse,
			A2(
				$elm$url$Url$Parser$questionMark,
				$elm$url$Url$Parser$top,
				$elm$url$Url$Parser$Query$string($author$project$Frontend$WorkspaceStateInUrl$workspaceStateHashQueryParameterName)),
			_Utils_update(
				url,
				{path: ''})));
};
var $author$project$Frontend$Main$processEventUrlChanged = F2(
	function (url, stateBefore) {
		var workspaceStateExpectedCompositionHash = $author$project$Frontend$WorkspaceStateInUrl$workspaceStateHashFromUrl(url);
		var workspaceWithMatchingStateHashAlreadyLoaded = function (_v3) {
			var _v2 = stateBefore.workspace;
			if (_v2.$ === 'WorkspaceActive') {
				var workspaceActive = _v2.a;
				return _Utils_eq(
					$elm$core$Maybe$Just(
						$author$project$Frontend$WorkspaceStateInUrl$workspaceStateCompositionHash(
							$author$project$FileTreeInWorkspace$mapBlobsToBytes(workspaceActive.fileTree))),
					workspaceStateExpectedCompositionHash);
			} else {
				return false;
			}
		};
		var filePathToOpen = A2(
			$elm$core$Maybe$map,
			A2(
				$elm$core$Basics$composeR,
				$elm$core$String$split('/'),
				$elm$core$List$concatMap(
					$elm$core$String$split('\\'))),
			$author$project$Frontend$WorkspaceStateInUrl$filePathToOpenFromUrl(url));
		var continueWithDiffWorkspaceState = A2(
			$author$project$Frontend$Main$updateToBeginLoadWorkspaceState,
			{filePathToOpen: filePathToOpen, workspaceStateExpectedCompositionHash: workspaceStateExpectedCompositionHash},
			stateBefore);
		var _v0 = $author$project$Frontend$WorkspaceStateInUrl$workspaceStateDescriptionFromUrl(url);
		if (_v0.$ === 'Nothing') {
			return _Utils_Tuple2(stateBefore, $elm$core$Platform$Cmd$none);
		} else {
			if (_v0.a.$ === 'Err') {
				var fromUrlError = _v0.a.a;
				return _Utils_Tuple2(
					_Utils_update(
						stateBefore,
						{
							workspace: $author$project$Frontend$Main$WorkspaceErr('Failed to decode workspace state from URL: ' + fromUrlError)
						}),
					$elm$core$Platform$Cmd$none);
			} else {
				var workspaceDescription = _v0.a.a;
				if (workspaceWithMatchingStateHashAlreadyLoaded(_Utils_Tuple0)) {
					return _Utils_Tuple2(stateBefore, $elm$core$Platform$Cmd$none);
				} else {
					switch (workspaceDescription.$) {
						case 'LiteralWorkspaceState':
							var fileTreeFromUrl = workspaceDescription.a;
							return A4(
								$author$project$Frontend$Main$updateForLoadedWorkspaceState,
								{expectedCompositionHash: workspaceStateExpectedCompositionHash, filePathToOpen: filePathToOpen},
								$author$project$FileTreeInWorkspace$mapBlobsFromBytes(fileTreeFromUrl),
								$author$project$WorkspaceState_2021_01$noDifference,
								stateBefore);
						case 'LinkWorkspaceState':
							var linkToWorkspaceState = workspaceDescription.a;
							return continueWithDiffWorkspaceState(
								{base: linkToWorkspaceState, differenceFromBase: $author$project$WorkspaceState_2021_01$noDifference});
						default:
							var diffWorkspaceState = workspaceDescription.a;
							return continueWithDiffWorkspaceState(diffWorkspaceState);
					}
				}
			}
		}
	});
var $elm$browser$Browser$Navigation$pushUrl = _Browser_pushUrl;
var $folkertdev$elm_flate$Flate$Dynamic = function (a) {
	return {$: 'Dynamic', a: a};
};
var $folkertdev$elm_flate$Flate$Static = function (a) {
	return {$: 'Static', a: a};
};
var $folkertdev$elm_flate$Flate$WithWindowSize = function (a) {
	return {$: 'WithWindowSize', a: a};
};
var $elm$url$Url$Builder$crossOrigin = F3(
	function (prePath, pathSegments, parameters) {
		return prePath + ('/' + (A2($elm$core$String$join, '/', pathSegments) + $elm$url$Url$Builder$toQuery(parameters)));
	});
var $folkertdev$elm_flate$Deflate$Internal$chunksHelp = F2(
	function (chunkSize, _v0) {
		var sizeRemaining = _v0.a;
		var accum = _v0.b;
		return (!sizeRemaining) ? $elm$bytes$Bytes$Decode$succeed(
			$elm$bytes$Bytes$Decode$Done(_List_Nil)) : ((_Utils_cmp(chunkSize, sizeRemaining) > -1) ? A2(
			$elm$bytes$Bytes$Decode$map,
			function (_new) {
				return $elm$bytes$Bytes$Decode$Done(
					$elm$core$List$reverse(
						A2(
							$elm$core$List$cons,
							_Utils_Tuple2(true, _new),
							accum)));
			},
			$elm$bytes$Bytes$Decode$bytes(sizeRemaining)) : A2(
			$elm$bytes$Bytes$Decode$map,
			function (_new) {
				return $elm$bytes$Bytes$Decode$Loop(
					_Utils_Tuple2(
						sizeRemaining - chunkSize,
						A2(
							$elm$core$List$cons,
							_Utils_Tuple2(false, _new),
							accum)));
			},
			$elm$bytes$Bytes$Decode$bytes(chunkSize)));
	});
var $folkertdev$elm_flate$Deflate$Internal$chunks = F2(
	function (chunkSize, buffer) {
		var _v0 = A2(
			$elm$bytes$Bytes$Decode$decode,
			A2(
				$elm$bytes$Bytes$Decode$loop,
				_Utils_Tuple2(
					$elm$bytes$Bytes$width(buffer),
					_List_Nil),
				$folkertdev$elm_flate$Deflate$Internal$chunksHelp(chunkSize)),
			buffer);
		if (_v0.$ === 'Nothing') {
			return _List_fromArray(
				[
					_Utils_Tuple2(
					true,
					$elm$bytes$Bytes$Encode$encode(
						$elm$bytes$Bytes$Encode$sequence(_List_Nil)))
				]);
		} else {
			if (!_v0.a.b) {
				return _List_fromArray(
					[
						_Utils_Tuple2(
						true,
						$elm$bytes$Bytes$Encode$encode(
							$elm$bytes$Bytes$Encode$sequence(_List_Nil)))
					]);
			} else {
				var value = _v0.a;
				return value;
			}
		}
	});
var $folkertdev$elm_flate$Deflate$Internal$default_block_size = 1024 * 1024;
var $folkertdev$elm_flate$Deflate$BitWriter$empty = {bitsWritten: 0, encoders: _List_Nil, tag: 0};
var $folkertdev$elm_flate$Deflate$Symbol$code = function (symbol) {
	switch (symbol.$) {
		case 'Literal':
			var _byte = symbol.a;
			return _byte;
		case 'EndOfBlock':
			return 256;
		default:
			var length = symbol.a;
			return ((length >= 3) && (length <= 10)) ? ((257 + length) - 3) : (((length >= 11) && (length <= 18)) ? (265 + (((length - 11) / 2) | 0)) : (((length >= 19) && (length <= 34)) ? (269 + (((length - 19) / 4) | 0)) : (((length >= 35) && (length <= 66)) ? (273 + (((length - 35) / 8) | 0)) : (((length >= 67) && (length <= 130)) ? (277 + (((length - 67) / 16) | 0)) : (((length >= 131) && (length <= 257)) ? (281 + (((length - 131) / 32) | 0)) : ((length === 258) ? 285 : (-1)))))));
	}
};
var $folkertdev$elm_flate$Deflate$Symbol$distance = function (symbol) {
	if (symbol.$ === 'Share') {
		var distance_ = symbol.b;
		if (distance_ <= 4) {
			return $elm$core$Maybe$Just(
				_Utils_Tuple3(distance_ - 1, 0, 0));
		} else {
			var go = F3(
				function (extraBits, code_, base) {
					go:
					while (true) {
						if (_Utils_cmp(base * 2, distance_) < 0) {
							var $temp$extraBits = extraBits + 1,
								$temp$code_ = code_ + 2,
								$temp$base = base * 2;
							extraBits = $temp$extraBits;
							code_ = $temp$code_;
							base = $temp$base;
							continue go;
						} else {
							return _Utils_Tuple3(extraBits, code_, base);
						}
					}
				});
			var _v1 = A3(go, 1, 4, 4);
			var extraBits = _v1.a;
			var code_ = _v1.b;
			var base = _v1.c;
			var delta = (distance_ - base) - 1;
			var half = (base / 2) | 0;
			return (_Utils_cmp(distance_, base + half) < 1) ? $elm$core$Maybe$Just(
				_Utils_Tuple3(
					code_,
					extraBits,
					A2($elm$core$Basics$modBy, half, delta))) : $elm$core$Maybe$Just(
				_Utils_Tuple3(
					code_ + 1,
					extraBits,
					A2($elm$core$Basics$modBy, half, delta)));
		}
	} else {
		return $elm$core$Maybe$Nothing;
	}
};
var $folkertdev$elm_flate$Deflate$Symbol$update = F3(
	function (index, tagger, array) {
		var _v0 = A2($elm$core$Array$get, index, array);
		if (_v0.$ === 'Nothing') {
			return array;
		} else {
			var value = _v0.a;
			return A3(
				$elm$core$Array$set,
				index,
				tagger(value),
				array);
		}
	});
var $folkertdev$elm_flate$Deflate$Symbol$dynamicFindFrequencies = F2(
	function (symbol, _v0) {
		var literalCounts = _v0.a;
		var distanceCounts = _v0.b;
		var emptyDistanceCount = _v0.c;
		var _v1 = $folkertdev$elm_flate$Deflate$Symbol$distance(symbol);
		if (_v1.$ === 'Nothing') {
			return _Utils_Tuple3(
				A3(
					$folkertdev$elm_flate$Deflate$Symbol$update,
					$folkertdev$elm_flate$Deflate$Symbol$code(symbol),
					function (v) {
						return v + 1;
					},
					literalCounts),
				distanceCounts,
				emptyDistanceCount);
		} else {
			var _v2 = _v1.a;
			var d = _v2.a;
			return _Utils_Tuple3(
				A3(
					$folkertdev$elm_flate$Deflate$Symbol$update,
					$folkertdev$elm_flate$Deflate$Symbol$code(symbol),
					function (v) {
						return v + 1;
					},
					literalCounts),
				A3(
					$folkertdev$elm_flate$Deflate$Symbol$update,
					d,
					function (v) {
						return v + 1;
					},
					distanceCounts),
				false);
		}
	});
var $elm$core$List$sortWith = _List_sortWith;
var $folkertdev$elm_flate$Huffman$calcOptimalMaxBitWidth = function (frequencies) {
	var heapModificationLoop = function (heap) {
		heapModificationLoop:
		while (true) {
			if (!heap.b) {
				return 0;
			} else {
				if (!heap.b.b) {
					var _v1 = heap.a;
					var value = _v1.b;
					return A2($elm$core$Basics$max, 1, value);
				} else {
					var _v2 = heap.a;
					var weight1 = _v2.a;
					var width1 = _v2.b;
					var _v3 = heap.b;
					var _v4 = _v3.a;
					var weight2 = _v4.a;
					var width2 = _v4.b;
					var rest = _v3.b;
					var $temp$heap = A2(
						$elm$core$List$sortWith,
						F2(
							function (a, b) {
								return A2($elm$core$Basics$compare, b, a);
							}),
						A2(
							$elm$core$List$cons,
							_Utils_Tuple2(
								weight1 + weight2,
								1 + A2($elm$core$Basics$max, width1, width2)),
							rest));
					heap = $temp$heap;
					continue heapModificationLoop;
				}
			}
		}
	};
	var createHeapFolder = F2(
		function (freq, heap) {
			return (freq > 0) ? A2(
				$elm$core$List$cons,
				_Utils_Tuple2(-freq, 0),
				heap) : heap;
		});
	var createHeap = A3($elm$core$Array$foldl, createHeapFolder, _List_Nil, frequencies);
	return heapModificationLoop(createHeap);
};
var $elm$core$Array$filter = F2(
	function (isGood, array) {
		return $elm$core$Array$fromList(
			A3(
				$elm$core$Array$foldr,
				F2(
					function (x, xs) {
						return isGood(x) ? A2($elm$core$List$cons, x, xs) : xs;
					}),
				_List_Nil,
				array));
	});
var $elm$core$Elm$JsArray$indexedMap = _JsArray_indexedMap;
var $elm$core$Array$indexedMap = F2(
	function (func, _v0) {
		var len = _v0.a;
		var tree = _v0.c;
		var tail = _v0.d;
		var initialBuilder = {
			nodeList: _List_Nil,
			nodeListSize: 0,
			tail: A3(
				$elm$core$Elm$JsArray$indexedMap,
				func,
				$elm$core$Array$tailIndex(len),
				tail)
		};
		var helper = F2(
			function (node, builder) {
				if (node.$ === 'SubTree') {
					var subTree = node.a;
					return A3($elm$core$Elm$JsArray$foldl, helper, builder, subTree);
				} else {
					var leaf = node.a;
					var offset = builder.nodeListSize * $elm$core$Array$branchFactor;
					var mappedLeaf = $elm$core$Array$Leaf(
						A3($elm$core$Elm$JsArray$indexedMap, func, offset, leaf));
					return {
						nodeList: A2($elm$core$List$cons, mappedLeaf, builder.nodeList),
						nodeListSize: builder.nodeListSize + 1,
						tail: builder.tail
					};
				}
			});
		return A2(
			$elm$core$Array$builderToArray,
			true,
			A3($elm$core$Elm$JsArray$foldl, helper, initialBuilder, tree));
	});
var $elm$core$Elm$JsArray$map = _JsArray_map;
var $elm$core$Array$map = F2(
	function (func, _v0) {
		var len = _v0.a;
		var startShift = _v0.b;
		var tree = _v0.c;
		var tail = _v0.d;
		var helper = function (node) {
			if (node.$ === 'SubTree') {
				var subTree = node.a;
				return $elm$core$Array$SubTree(
					A2($elm$core$Elm$JsArray$map, helper, subTree));
			} else {
				var values = node.a;
				return $elm$core$Array$Leaf(
					A2($elm$core$Elm$JsArray$map, func, values));
			}
		};
		return A4(
			$elm$core$Array$Array_elm_builtin,
			len,
			startShift,
			A2($elm$core$Elm$JsArray$map, helper, tree),
			A2($elm$core$Elm$JsArray$map, func, tail));
	});
var $folkertdev$elm_flate$LengthLimitedHuffmanCodes$mergeLoop = F3(
	function (xarr, yarr, accum) {
		mergeLoop:
		while (true) {
			var _v0 = _Utils_Tuple2(xarr, yarr);
			if (!_v0.a.b) {
				return A2(
					$elm$core$Array$append,
					accum,
					$elm$core$Array$fromList(yarr));
			} else {
				if (!_v0.b.b) {
					return A2(
						$elm$core$Array$append,
						accum,
						$elm$core$Array$fromList(xarr));
				} else {
					var _v1 = _v0.a;
					var x = _v1.a;
					var xrest = _v1.b;
					var _v2 = _v0.b;
					var y = _v2.a;
					var yrest = _v2.b;
					if (_Utils_cmp(x.weight, y.weight) < 0) {
						var $temp$xarr = xrest,
							$temp$yarr = yarr,
							$temp$accum = A2($elm$core$Array$push, x, accum);
						xarr = $temp$xarr;
						yarr = $temp$yarr;
						accum = $temp$accum;
						continue mergeLoop;
					} else {
						var $temp$xarr = xarr,
							$temp$yarr = yrest,
							$temp$accum = A2($elm$core$Array$push, y, accum);
						xarr = $temp$xarr;
						yarr = $temp$yarr;
						accum = $temp$accum;
						continue mergeLoop;
					}
				}
			}
		}
	});
var $folkertdev$elm_flate$LengthLimitedHuffmanCodes$merge = F2(
	function (x, y) {
		return A3(
			$folkertdev$elm_flate$LengthLimitedHuffmanCodes$mergeLoop,
			$elm$core$Array$toList(x),
			$elm$core$Array$toList(y),
			$elm$core$Array$empty);
	});
var $folkertdev$elm_flate$LengthLimitedHuffmanCodes$mergeNodes = F2(
	function (node1, node2) {
		return {
			symbols: A2($elm$core$Array$append, node1.symbols, node2.symbols),
			weight: node1.weight + node2.weight
		};
	});
var $folkertdev$elm_flate$LengthLimitedHuffmanCodes$package = function (nodes) {
	if ($elm$core$Array$length(nodes) >= 2) {
		var newLen = ($elm$core$Array$length(nodes) / 2) | 0;
		var loop = F2(
			function (currentNodes, accum) {
				loop:
				while (true) {
					if (currentNodes.b && currentNodes.b.b) {
						var self = currentNodes.a;
						var _v1 = currentNodes.b;
						var other = _v1.a;
						var rest = _v1.b;
						var $temp$currentNodes = rest,
							$temp$accum = A2(
							$elm$core$List$cons,
							A2($folkertdev$elm_flate$LengthLimitedHuffmanCodes$mergeNodes, self, other),
							accum);
						currentNodes = $temp$currentNodes;
						accum = $temp$accum;
						continue loop;
					} else {
						return $elm$core$Array$fromList(
							$elm$core$List$reverse(accum));
					}
				}
			});
		return A2(
			loop,
			$elm$core$Array$toList(nodes),
			_List_Nil);
	} else {
		return nodes;
	}
};
var $folkertdev$elm_flate$LengthLimitedHuffmanCodes$singletonNode = F2(
	function (symbol, weight) {
		return {
			symbols: A2($elm$core$Array$repeat, 1, symbol),
			weight: weight
		};
	});
var $elm_community$list_extra$List$Extra$stableSortWith = F2(
	function (pred, list) {
		var predWithIndex = F2(
			function (_v1, _v2) {
				var a1 = _v1.a;
				var i1 = _v1.b;
				var a2 = _v2.a;
				var i2 = _v2.b;
				var result = A2(pred, a1, a2);
				if (result.$ === 'EQ') {
					return A2($elm$core$Basics$compare, i1, i2);
				} else {
					return result;
				}
			});
		var listWithIndex = A2(
			$elm$core$List$indexedMap,
			F2(
				function (i, a) {
					return _Utils_Tuple2(a, i);
				}),
			list);
		return A2(
			$elm$core$List$map,
			$elm$core$Tuple$first,
			A2($elm$core$List$sortWith, predWithIndex, listWithIndex));
	});
var $folkertdev$elm_flate$LengthLimitedHuffmanCodes$update = F3(
	function (index, tagger, array) {
		var _v0 = A2($elm$core$Array$get, index, array);
		if (_v0.$ === 'Nothing') {
			return array;
		} else {
			var value = _v0.a;
			return A3(
				$elm$core$Array$set,
				index,
				tagger(value),
				array);
		}
	});
var $folkertdev$elm_flate$LengthLimitedHuffmanCodes$calculate = F2(
	function (maxBitWidth, frequencies) {
		var source = $elm$core$Array$fromList(
			A2(
				$elm_community$list_extra$List$Extra$stableSortWith,
				F2(
					function (a, b) {
						return A2($elm$core$Basics$compare, a.weight, b.weight);
					}),
				$elm$core$Array$toList(
					A2(
						$elm$core$Array$map,
						function (_v3) {
							var symbol = _v3.a;
							var weight = _v3.b;
							return A2($folkertdev$elm_flate$LengthLimitedHuffmanCodes$singletonNode, symbol, weight);
						},
						A2(
							$elm$core$Array$filter,
							function (_v2) {
								var f = _v2.b;
								return f > 0;
							},
							A2($elm$core$Array$indexedMap, $elm$core$Tuple$pair, frequencies))))));
		var weighted = A3(
			$elm$core$List$foldl,
			F2(
				function (_v1, w) {
					return A2(
						$folkertdev$elm_flate$LengthLimitedHuffmanCodes$merge,
						$folkertdev$elm_flate$LengthLimitedHuffmanCodes$package(w),
						source);
				}),
			source,
			A2($elm$core$List$range, 0, maxBitWidth - 2));
		var loop = F2(
			function (symbols, accum) {
				loop:
				while (true) {
					if (!symbols.b) {
						return accum;
					} else {
						var symbol = symbols.a;
						var rest = symbols.b;
						var $temp$symbols = rest,
							$temp$accum = A3(
							$folkertdev$elm_flate$LengthLimitedHuffmanCodes$update,
							symbol,
							function (v) {
								return v + 1;
							},
							accum);
						symbols = $temp$symbols;
						accum = $temp$accum;
						continue loop;
					}
				}
			});
		var allSymbols = A2(
			$elm$core$List$concatMap,
			A2(
				$elm$core$Basics$composeR,
				function ($) {
					return $.symbols;
				},
				$elm$core$Array$toList),
			$elm$core$Array$toList(
				$folkertdev$elm_flate$LengthLimitedHuffmanCodes$package(weighted)));
		return A2(
			loop,
			allSymbols,
			A2(
				$elm$core$Array$repeat,
				$elm$core$Array$length(frequencies),
				0));
	});
var $folkertdev$elm_flate$Huffman$Tree = function (a) {
	return {$: 'Tree', a: a};
};
var $folkertdev$elm_flate$Huffman$Code = function (a) {
	return {$: 'Code', a: a};
};
var $folkertdev$elm_flate$Huffman$codeFromRecord = $folkertdev$elm_flate$Huffman$Code;
var $folkertdev$elm_flate$Huffman$new = function (n) {
	return $folkertdev$elm_flate$Huffman$Tree(
		A2(
			$elm$core$Array$repeat,
			n,
			$folkertdev$elm_flate$Huffman$codeFromRecord(
				{bits: 0, width: 0})));
};
var $folkertdev$elm_flate$Huffman$inverseEndianLoop = F4(
	function (i, limit, f, t) {
		inverseEndianLoop:
		while (true) {
			if (_Utils_cmp(i, limit) < 0) {
				var $temp$i = i + 1,
					$temp$limit = limit,
					$temp$f = f >> 1,
					$temp$t = (f & 1) | (t << 1);
				i = $temp$i;
				limit = $temp$limit;
				f = $temp$f;
				t = $temp$t;
				continue inverseEndianLoop;
			} else {
				return t;
			}
		}
	});
var $folkertdev$elm_flate$Huffman$inverseEndian = function (_v0) {
	var width = _v0.a.width;
	var bits = _v0.a.bits;
	var inverseBits = A4($folkertdev$elm_flate$Huffman$inverseEndianLoop, 0, width, bits, 0);
	return $folkertdev$elm_flate$Huffman$Code(
		{bits: inverseBits, width: width});
};
var $folkertdev$elm_flate$Huffman$setMapping = F3(
	function (symbol, code, _v0) {
		var array = _v0.a;
		return $folkertdev$elm_flate$Huffman$Tree(
			A3(
				$elm$core$Array$set,
				symbol,
				$folkertdev$elm_flate$Huffman$inverseEndian(code),
				array));
	});
var $folkertdev$elm_flate$Huffman$restoreCanonicalHuffmanCodes = F2(
	function (bitWidths, tree) {
		var symbols = A2(
			$elm_community$list_extra$List$Extra$stableSortWith,
			F2(
				function (_v4, _v5) {
					var a = _v4.b;
					var b = _v5.b;
					return A2($elm$core$Basics$compare, a, b);
				}),
			$elm$core$Array$toList(
				A2(
					$elm$core$Array$filter,
					function (_v3) {
						var codeBitWidth = _v3.b;
						return codeBitWidth > 0;
					},
					A2($elm$core$Array$indexedMap, $elm$core$Tuple$pair, bitWidths))));
		var loop = F2(
			function (_v1, _v2) {
				var symbol = _v1.a;
				var bitWidth = _v1.b;
				var code = _v2.a;
				var prevWidth = _v2.b;
				var currentTree = _v2.c;
				var newBits = code << (bitWidth - prevWidth);
				var nextCode = $folkertdev$elm_flate$Huffman$Code(
					{bits: newBits, width: bitWidth});
				return _Utils_Tuple3(
					newBits + 1,
					bitWidth,
					A3($folkertdev$elm_flate$Huffman$setMapping, symbol, nextCode, currentTree));
			});
		return function (_v0) {
			var x = _v0.c;
			return x;
		}(
			A3(
				$elm$core$List$foldl,
				loop,
				_Utils_Tuple3(0, 0, tree),
				symbols));
	});
var $folkertdev$elm_flate$Huffman$fromBitWidths = function (bitWidths) {
	var symbolCount = function (v) {
		return v + 1;
	}(
		A2(
			$elm$core$Maybe$withDefault,
			0,
			A2(
				$elm$core$Maybe$map,
				$elm$core$Tuple$first,
				function (a) {
					return A2(
						$elm$core$Array$get,
						$elm$core$Array$length(a) - 1,
						a);
				}(
					A2(
						$elm$core$Array$filter,
						function (e) {
							return e.b > 0;
						},
						A2($elm$core$Array$indexedMap, $elm$core$Tuple$pair, bitWidths))))));
	return A2(
		$folkertdev$elm_flate$Huffman$restoreCanonicalHuffmanCodes,
		bitWidths,
		$folkertdev$elm_flate$Huffman$new(symbolCount));
};
var $folkertdev$elm_flate$Huffman$fromFrequencies = F2(
	function (symbolFrequencies, maxBitWidth_) {
		var maxBitWidth = A2(
			$elm$core$Basics$min,
			maxBitWidth_,
			$folkertdev$elm_flate$Huffman$calcOptimalMaxBitWidth(symbolFrequencies));
		var codeBitWidhts = A2($folkertdev$elm_flate$LengthLimitedHuffmanCodes$calculate, maxBitWidth, symbolFrequencies);
		return $folkertdev$elm_flate$Huffman$fromBitWidths(codeBitWidhts);
	});
var $folkertdev$elm_flate$Deflate$Symbol$buildDynamicHuffmanCodec = function (symbols) {
	var _v0 = A3(
		$elm$core$Array$foldl,
		$folkertdev$elm_flate$Deflate$Symbol$dynamicFindFrequencies,
		_Utils_Tuple3(
			A2($elm$core$Array$repeat, 286, 0),
			A2($elm$core$Array$repeat, 30, 0),
			true),
		symbols);
	var literalCounts = _v0.a;
	var distanceCounts = _v0.b;
	var emptyDistanceCount = _v0.c;
	return {
		distance: emptyDistanceCount ? A2(
			$folkertdev$elm_flate$Huffman$fromFrequencies,
			A3($elm$core$Array$set, 0, 1, distanceCounts),
			15) : A2($folkertdev$elm_flate$Huffman$fromFrequencies, distanceCounts, 15),
		literal: A2($folkertdev$elm_flate$Huffman$fromFrequencies, literalCounts, 15)
	};
};
var $folkertdev$elm_flate$Deflate$Symbol$EndOfBlock = {$: 'EndOfBlock'};
var $folkertdev$elm_flate$Deflate$Symbol$Literal = function (a) {
	return {$: 'Literal', a: a};
};
var $folkertdev$elm_flate$Deflate$Symbol$Share = F2(
	function (a, b) {
		return {$: 'Share', a: a, b: b};
	});
var $folkertdev$elm_flate$Deflate$Internal$codeToSymbol = function (code) {
	if (code.$ === 'Literal') {
		var v = code.a;
		return $folkertdev$elm_flate$Deflate$Symbol$Literal(v);
	} else {
		var length = code.a;
		var backwardDistance = code.b;
		return A2($folkertdev$elm_flate$Deflate$Symbol$Share, length, backwardDistance);
	}
};
var $folkertdev$elm_flate$LZ77$Literal = function (a) {
	return {$: 'Literal', a: a};
};
var $folkertdev$elm_flate$LZ77$Pointer = F2(
	function (a, b) {
		return {$: 'Pointer', a: a, b: b};
	});
var $folkertdev$elm_flate$PrefixTable$Small = function (a) {
	return {$: 'Small', a: a};
};
var $folkertdev$elm_flate$PrefixTable$Large = function (a) {
	return {$: 'Large', a: a};
};
var $folkertdev$elm_flate$PrefixTable$LargePrefixTable = function (a) {
	return {$: 'LargePrefixTable', a: a};
};
var $folkertdev$elm_flate$PrefixTable$insertInList = F6(
	function (i, array, p2, position, remaining, accum) {
		insertInList:
		while (true) {
			if (!remaining.b) {
				var newPositions = A2(
					$elm$core$List$cons,
					_Utils_Tuple2(p2, position),
					accum);
				return _Utils_Tuple2(
					$folkertdev$elm_flate$PrefixTable$Large(
						$folkertdev$elm_flate$PrefixTable$LargePrefixTable(
							A3($elm$core$Array$set, i, newPositions, array))),
					$elm$core$Maybe$Nothing);
			} else {
				var current = remaining.a;
				var key = current.a;
				var oldValue = current.b;
				var rest = remaining.b;
				if (!(key - p2)) {
					var newPositions = _Utils_ap(
						accum,
						A2(
							$elm$core$List$cons,
							_Utils_Tuple2(key, position),
							rest));
					return _Utils_Tuple2(
						$folkertdev$elm_flate$PrefixTable$Large(
							$folkertdev$elm_flate$PrefixTable$LargePrefixTable(
								A3($elm$core$Array$set, i, newPositions, array))),
						$elm$core$Maybe$Just(oldValue));
				} else {
					var $temp$i = i,
						$temp$array = array,
						$temp$p2 = p2,
						$temp$position = position,
						$temp$remaining = rest,
						$temp$accum = A2($elm$core$List$cons, current, accum);
					i = $temp$i;
					array = $temp$array;
					p2 = $temp$p2;
					position = $temp$position;
					remaining = $temp$remaining;
					accum = $temp$accum;
					continue insertInList;
				}
			}
		}
	});
var $folkertdev$elm_flate$PrefixTable$insert = F3(
	function (_v0, position, ptable) {
		var prefix_ = _v0.a;
		var prefix = 16777215 & (prefix_ >>> 0);
		if (ptable.$ === 'Small') {
			var dict = ptable.a;
			var _v2 = A2($elm$core$Dict$get, prefix, dict);
			if (_v2.$ === 'Nothing') {
				return _Utils_Tuple2(
					$folkertdev$elm_flate$PrefixTable$Small(
						A3($elm$core$Dict$insert, prefix, position, dict)),
					$elm$core$Maybe$Nothing);
			} else {
				var oldValue = _v2.a;
				return _Utils_Tuple2(
					$folkertdev$elm_flate$PrefixTable$Small(
						A3($elm$core$Dict$insert, prefix, position, dict)),
					$elm$core$Maybe$Just(oldValue));
			}
		} else {
			var array = ptable.a.a;
			var index = prefix >> 8;
			var _v3 = A2($elm$core$Array$get, index, array);
			if (_v3.$ === 'Nothing') {
				return _Utils_Tuple2(ptable, $elm$core$Maybe$Nothing);
			} else {
				var positions = _v3.a;
				return A6($folkertdev$elm_flate$PrefixTable$insertInList, index, array, 255 & prefix, position, positions, _List_Nil);
			}
		}
	});
var $folkertdev$elm_flate$LZ77$longestCommonPrefixLoop = F5(
	function (i, j, limit, accum, array) {
		longestCommonPrefixLoop:
		while (true) {
			if (_Utils_cmp(i, limit) < 0) {
				var _v0 = A2($folkertdev$elm_flate$Experimental$ByteArray$get, i, array);
				if (_v0.$ === 'Nothing') {
					return accum;
				} else {
					var value1 = _v0.a;
					var _v1 = A2($folkertdev$elm_flate$Experimental$ByteArray$get, j, array);
					if (_v1.$ === 'Nothing') {
						return accum;
					} else {
						var value2 = _v1.a;
						if (!(value1 - value2)) {
							var $temp$i = i + 1,
								$temp$j = j + 1,
								$temp$limit = limit,
								$temp$accum = accum + 1,
								$temp$array = array;
							i = $temp$i;
							j = $temp$j;
							limit = $temp$limit;
							accum = $temp$accum;
							array = $temp$array;
							continue longestCommonPrefixLoop;
						} else {
							return accum;
						}
					}
				}
			} else {
				return accum;
			}
		}
	});
var $folkertdev$elm_flate$LZ77$max_length = 258;
var $folkertdev$elm_flate$LZ77$longestCommonPrefix = F3(
	function (i, j, array) {
		var remaining = A2(
			$elm$core$Basics$min,
			$folkertdev$elm_flate$LZ77$max_length - 3,
			$folkertdev$elm_flate$Experimental$ByteArray$length(array) - j);
		return A5($folkertdev$elm_flate$LZ77$longestCommonPrefixLoop, i, j, i + remaining, 0, array);
	});
var $folkertdev$elm_flate$PrefixTable$OutOfBounds = {$: 'OutOfBounds'};
var $folkertdev$elm_flate$PrefixTable$Prefix = F2(
	function (a, b) {
		return {$: 'Prefix', a: a, b: b};
	});
var $folkertdev$elm_flate$PrefixTable$PrefixCode = function (a) {
	return {$: 'PrefixCode', a: a};
};
var $folkertdev$elm_flate$PrefixTable$Trailing1 = function (a) {
	return {$: 'Trailing1', a: a};
};
var $folkertdev$elm_flate$PrefixTable$Trailing2 = F2(
	function (a, b) {
		return {$: 'Trailing2', a: a, b: b};
	});
var $folkertdev$elm_flate$Experimental$ByteArray$getInt32 = F2(
	function (index, _v0) {
		var array = _v0.a;
		var finalBytes = _v0.c;
		var size = $elm$core$Array$length(array);
		return (!(index - size)) ? $elm$core$Maybe$Just(finalBytes) : A2($elm$core$Array$get, index, array);
	});
var $folkertdev$elm_flate$PrefixTable$prefixAt = F2(
	function (k, input) {
		var size = $folkertdev$elm_flate$Experimental$ByteArray$length(input);
		if (_Utils_cmp(k + 2, size) > -1) {
			if (_Utils_cmp(k, size) > -1) {
				return $folkertdev$elm_flate$PrefixTable$OutOfBounds;
			} else {
				if (_Utils_cmp(k + 1, size) > -1) {
					var _v0 = A2($folkertdev$elm_flate$Experimental$ByteArray$get, k, input);
					if (_v0.$ === 'Nothing') {
						return $folkertdev$elm_flate$PrefixTable$OutOfBounds;
					} else {
						var value = _v0.a;
						return $folkertdev$elm_flate$PrefixTable$Trailing1(value);
					}
				} else {
					var _v1 = A2($folkertdev$elm_flate$Experimental$ByteArray$get, k, input);
					if (_v1.$ === 'Nothing') {
						return $folkertdev$elm_flate$PrefixTable$OutOfBounds;
					} else {
						var v1 = _v1.a;
						var _v2 = A2($folkertdev$elm_flate$Experimental$ByteArray$get, k + 1, input);
						if (_v2.$ === 'Nothing') {
							return $folkertdev$elm_flate$PrefixTable$OutOfBounds;
						} else {
							var v2 = _v2.a;
							return A2($folkertdev$elm_flate$PrefixTable$Trailing2, v1, v2);
						}
					}
				}
			}
		} else {
			var offset = k % 4;
			var internalIndex = (k / 4) | 0;
			switch (offset) {
				case 0:
					var _v4 = A2($folkertdev$elm_flate$Experimental$ByteArray$getInt32, internalIndex, input);
					if (_v4.$ === 'Nothing') {
						return $folkertdev$elm_flate$PrefixTable$OutOfBounds;
					} else {
						var int32 = _v4.a;
						var first = 255 & ((int32 >> 24) >>> 0);
						var code = int32 >> 8;
						return A2(
							$folkertdev$elm_flate$PrefixTable$Prefix,
							first,
							$folkertdev$elm_flate$PrefixTable$PrefixCode(code));
					}
				case 1:
					var _v5 = A2($folkertdev$elm_flate$Experimental$ByteArray$getInt32, internalIndex, input);
					if (_v5.$ === 'Nothing') {
						return $folkertdev$elm_flate$PrefixTable$OutOfBounds;
					} else {
						var int32 = _v5.a;
						var first = 255 & ((255 & (int32 >> 16)) >>> 0);
						var code = 16777215 & int32;
						return A2(
							$folkertdev$elm_flate$PrefixTable$Prefix,
							first,
							$folkertdev$elm_flate$PrefixTable$PrefixCode(code));
					}
				case 2:
					var _v6 = A2($folkertdev$elm_flate$Experimental$ByteArray$getInt32, internalIndex, input);
					if (_v6.$ === 'Nothing') {
						return $folkertdev$elm_flate$PrefixTable$OutOfBounds;
					} else {
						var int32 = _v6.a;
						var _v7 = A2($folkertdev$elm_flate$Experimental$ByteArray$getInt32, internalIndex + 1, input);
						if (_v7.$ === 'Nothing') {
							return $folkertdev$elm_flate$PrefixTable$OutOfBounds;
						} else {
							var nextInt32 = _v7.a;
							var first = 255 & ((255 & (int32 >> 8)) >>> 0);
							var code = 16777215 & (((255 & (nextInt32 >> 24)) | ((65535 & int32) << 8)) >>> 0);
							return A2(
								$folkertdev$elm_flate$PrefixTable$Prefix,
								first,
								$folkertdev$elm_flate$PrefixTable$PrefixCode(code));
						}
					}
				default:
					var _v8 = A2($folkertdev$elm_flate$Experimental$ByteArray$getInt32, internalIndex, input);
					if (_v8.$ === 'Nothing') {
						return $folkertdev$elm_flate$PrefixTable$OutOfBounds;
					} else {
						var int32 = _v8.a;
						var _v9 = A2($folkertdev$elm_flate$Experimental$ByteArray$getInt32, internalIndex + 1, input);
						if (_v9.$ === 'Nothing') {
							return $folkertdev$elm_flate$PrefixTable$OutOfBounds;
						} else {
							var nextInt32 = _v9.a;
							var first = 255 & ((255 & int32) >>> 0);
							var code = (65535 & (nextInt32 >> 16)) | ((255 & int32) << 16);
							return A2(
								$folkertdev$elm_flate$PrefixTable$Prefix,
								first,
								$folkertdev$elm_flate$PrefixTable$PrefixCode(code));
						}
					}
			}
		}
	});
var $folkertdev$elm_flate$LZ77$updatePrefixTableLoop = F4(
	function (k, limit, buffer, prefixTable) {
		updatePrefixTableLoop:
		while (true) {
			if (_Utils_cmp(k, limit) < 0) {
				var _v0 = A2($folkertdev$elm_flate$PrefixTable$prefixAt, k, buffer);
				if (_v0.$ === 'Prefix') {
					var code = _v0.b;
					var _v1 = A3($folkertdev$elm_flate$PrefixTable$insert, code, k, prefixTable);
					var newPrefixTable = _v1.a;
					var $temp$k = k + 1,
						$temp$limit = limit,
						$temp$buffer = buffer,
						$temp$prefixTable = newPrefixTable;
					k = $temp$k;
					limit = $temp$limit;
					buffer = $temp$buffer;
					prefixTable = $temp$prefixTable;
					continue updatePrefixTableLoop;
				} else {
					return prefixTable;
				}
			} else {
				return prefixTable;
			}
		}
	});
var $folkertdev$elm_flate$LZ77$flushLoop = F5(
	function (i, windowSize, buffer, prefixTable, encoders) {
		flushLoop:
		while (true) {
			var _v0 = A2($folkertdev$elm_flate$PrefixTable$prefixAt, i, buffer);
			switch (_v0.$) {
				case 'OutOfBounds':
					return encoders;
				case 'Trailing1':
					var p1 = _v0.a;
					return A2(
						$elm$core$Array$push,
						$folkertdev$elm_flate$LZ77$Literal(p1),
						encoders);
				case 'Trailing2':
					var p1 = _v0.a;
					var p2 = _v0.b;
					return A2(
						$elm$core$Array$push,
						$folkertdev$elm_flate$LZ77$Literal(p2),
						A2(
							$elm$core$Array$push,
							$folkertdev$elm_flate$LZ77$Literal(p1),
							encoders));
				default:
					var p1 = _v0.a;
					var key = _v0.b;
					var _v1 = A3($folkertdev$elm_flate$PrefixTable$insert, key, i, prefixTable);
					var newPrefixTable = _v1.a;
					var matched = _v1.b;
					if (matched.$ === 'Just') {
						var j = matched.a;
						var distance = i - j;
						if ((distance - windowSize) <= 0) {
							var length = 3 + A3($folkertdev$elm_flate$LZ77$longestCommonPrefix, i + 3, j + 3, buffer);
							var newEncoders = A2(
								$elm$core$Array$push,
								A2($folkertdev$elm_flate$LZ77$Pointer, length, distance),
								encoders);
							var newerPrefixTable = A4($folkertdev$elm_flate$LZ77$updatePrefixTableLoop, i + 1, i + length, buffer, newPrefixTable);
							var $temp$i = i + length,
								$temp$windowSize = windowSize,
								$temp$buffer = buffer,
								$temp$prefixTable = newerPrefixTable,
								$temp$encoders = newEncoders;
							i = $temp$i;
							windowSize = $temp$windowSize;
							buffer = $temp$buffer;
							prefixTable = $temp$prefixTable;
							encoders = $temp$encoders;
							continue flushLoop;
						} else {
							var $temp$i = i + 1,
								$temp$windowSize = windowSize,
								$temp$buffer = buffer,
								$temp$prefixTable = newPrefixTable,
								$temp$encoders = A2(
								$elm$core$Array$push,
								$folkertdev$elm_flate$LZ77$Literal(p1),
								encoders);
							i = $temp$i;
							windowSize = $temp$windowSize;
							buffer = $temp$buffer;
							prefixTable = $temp$prefixTable;
							encoders = $temp$encoders;
							continue flushLoop;
						}
					} else {
						var $temp$i = i + 1,
							$temp$windowSize = windowSize,
							$temp$buffer = buffer,
							$temp$prefixTable = newPrefixTable,
							$temp$encoders = A2(
							$elm$core$Array$push,
							$folkertdev$elm_flate$LZ77$Literal(p1),
							encoders);
						i = $temp$i;
						windowSize = $temp$windowSize;
						buffer = $temp$buffer;
						prefixTable = $temp$prefixTable;
						encoders = $temp$encoders;
						continue flushLoop;
					}
			}
		}
	});
var $folkertdev$elm_flate$PrefixTable$max_distance = 32768;
var $folkertdev$elm_flate$PrefixTable$max_window_size = $folkertdev$elm_flate$PrefixTable$max_distance;
var $folkertdev$elm_flate$PrefixTable$newLargePrefixTable = $folkertdev$elm_flate$PrefixTable$LargePrefixTable(
	A2($elm$core$Array$repeat, 65535, _List_Nil));
var $folkertdev$elm_flate$PrefixTable$new = function (nbytes) {
	return (_Utils_cmp(nbytes, $folkertdev$elm_flate$PrefixTable$max_window_size) < 0) ? $folkertdev$elm_flate$PrefixTable$Small($elm$core$Dict$empty) : $folkertdev$elm_flate$PrefixTable$Large($folkertdev$elm_flate$PrefixTable$newLargePrefixTable);
};
var $folkertdev$elm_flate$LZ77$flush = F2(
	function (windowSize, buffer) {
		var codes = A5(
			$folkertdev$elm_flate$LZ77$flushLoop,
			0,
			windowSize,
			buffer,
			$folkertdev$elm_flate$PrefixTable$new(
				$folkertdev$elm_flate$Experimental$ByteArray$length(buffer)),
			$elm$core$Array$empty);
		return codes;
	});
var $folkertdev$elm_flate$Experimental$ByteArray$fromBytesHelp = function (_v0) {
	var remaining = _v0.a;
	var array = _v0.b;
	if (remaining >= 40) {
		return A2(
			$elm$bytes$Bytes$Decode$andThen,
			$elm$core$Basics$identity,
			A6(
				$elm$bytes$Bytes$Decode$map5,
				F5(
					function (a, b, c, d, e) {
						return A6(
							$elm$bytes$Bytes$Decode$map5,
							F5(
								function (f, g, h, i, j) {
									return $elm$bytes$Bytes$Decode$Loop(
										_Utils_Tuple2(
											remaining - 40,
											A2(
												$elm$core$Array$append,
												array,
												$elm$core$Array$fromList(
													_List_fromArray(
														[a, b, c, d, e, f, g, h, i, j])))));
								}),
							$elm$bytes$Bytes$Decode$unsignedInt32($elm$bytes$Bytes$BE),
							$elm$bytes$Bytes$Decode$unsignedInt32($elm$bytes$Bytes$BE),
							$elm$bytes$Bytes$Decode$unsignedInt32($elm$bytes$Bytes$BE),
							$elm$bytes$Bytes$Decode$unsignedInt32($elm$bytes$Bytes$BE),
							$elm$bytes$Bytes$Decode$unsignedInt32($elm$bytes$Bytes$BE));
					}),
				$elm$bytes$Bytes$Decode$unsignedInt32($elm$bytes$Bytes$BE),
				$elm$bytes$Bytes$Decode$unsignedInt32($elm$bytes$Bytes$BE),
				$elm$bytes$Bytes$Decode$unsignedInt32($elm$bytes$Bytes$BE),
				$elm$bytes$Bytes$Decode$unsignedInt32($elm$bytes$Bytes$BE),
				$elm$bytes$Bytes$Decode$unsignedInt32($elm$bytes$Bytes$BE)));
	} else {
		if (remaining >= 20) {
			return A6(
				$elm$bytes$Bytes$Decode$map5,
				F5(
					function (a, b, c, d, e) {
						return $elm$bytes$Bytes$Decode$Loop(
							_Utils_Tuple2(
								remaining - 20,
								A2(
									$elm$core$Array$push,
									e,
									A2(
										$elm$core$Array$push,
										d,
										A2(
											$elm$core$Array$push,
											c,
											A2(
												$elm$core$Array$push,
												b,
												A2($elm$core$Array$push, a, array)))))));
					}),
				$elm$bytes$Bytes$Decode$unsignedInt32($elm$bytes$Bytes$BE),
				$elm$bytes$Bytes$Decode$unsignedInt32($elm$bytes$Bytes$BE),
				$elm$bytes$Bytes$Decode$unsignedInt32($elm$bytes$Bytes$BE),
				$elm$bytes$Bytes$Decode$unsignedInt32($elm$bytes$Bytes$BE),
				$elm$bytes$Bytes$Decode$unsignedInt32($elm$bytes$Bytes$BE));
		} else {
			if (remaining >= 4) {
				return A2(
					$elm$bytes$Bytes$Decode$map,
					function (a) {
						return $elm$bytes$Bytes$Decode$Loop(
							_Utils_Tuple2(
								remaining - 4,
								A2($elm$core$Array$push, a, array)));
					},
					$elm$bytes$Bytes$Decode$unsignedInt32($elm$bytes$Bytes$BE));
			} else {
				switch (remaining) {
					case 0:
						return $elm$bytes$Bytes$Decode$succeed(
							$elm$bytes$Bytes$Decode$Done(
								_Utils_Tuple3(0, 0, array)));
					case 1:
						return A2(
							$elm$bytes$Bytes$Decode$map,
							function (_byte) {
								return $elm$bytes$Bytes$Decode$Done(
									_Utils_Tuple3(1, _byte << 24, array));
							},
							$elm$bytes$Bytes$Decode$unsignedInt8);
					case 2:
						return A2(
							$elm$bytes$Bytes$Decode$map,
							function (_byte) {
								return $elm$bytes$Bytes$Decode$Done(
									_Utils_Tuple3(2, _byte << 16, array));
							},
							$elm$bytes$Bytes$Decode$unsignedInt16($elm$bytes$Bytes$BE));
					default:
						return A3(
							$elm$bytes$Bytes$Decode$map2,
							F2(
								function (bytes, _byte) {
									return $elm$bytes$Bytes$Decode$Done(
										_Utils_Tuple3(3, (bytes << 16) | (_byte << 8), array));
								}),
							$elm$bytes$Bytes$Decode$unsignedInt16($elm$bytes$Bytes$BE),
							$elm$bytes$Bytes$Decode$unsignedInt8);
				}
			}
		}
	}
};
var $folkertdev$elm_flate$Experimental$ByteArray$fromBytes = function (buffer) {
	var _v0 = A2(
		$elm$bytes$Bytes$Decode$decode,
		A2(
			$elm$bytes$Bytes$Decode$loop,
			_Utils_Tuple2(
				$elm$bytes$Bytes$width(buffer),
				$elm$core$Array$empty),
			$folkertdev$elm_flate$Experimental$ByteArray$fromBytesHelp),
		buffer);
	if (_v0.$ === 'Nothing') {
		return $folkertdev$elm_flate$Experimental$ByteArray$empty;
	} else {
		var _v1 = _v0.a;
		var finalSize = _v1.a;
		var finalBytes = _v1.b;
		var array = _v1.c;
		return A3($folkertdev$elm_flate$Experimental$ByteArray$ByteArray, array, finalSize, finalBytes);
	}
};
var $folkertdev$elm_flate$LZ77$encodeWithOptions = F2(
	function (_v0, buffer) {
		var windowSize = _v0.windowSize;
		return A2(
			$folkertdev$elm_flate$LZ77$flush,
			windowSize,
			$folkertdev$elm_flate$Experimental$ByteArray$fromBytes(buffer));
	});
var $folkertdev$elm_flate$ByteArray$decodeByteArrayHelp = function (_v0) {
	var remaining = _v0.a;
	var accum = _v0.b;
	return (remaining >= 4) ? A2(
		$elm$bytes$Bytes$Decode$map,
		function (_new) {
			var byte4 = 255 & (_new >>> 0);
			var byte3 = 255 & ((_new >> 8) >>> 0);
			var byte2 = 255 & ((_new >> 16) >>> 0);
			var byte1 = 255 & ((_new >> 24) >>> 0);
			var newAccum = A2(
				$elm$core$Array$push,
				byte4,
				A2(
					$elm$core$Array$push,
					byte3,
					A2(
						$elm$core$Array$push,
						byte2,
						A2($elm$core$Array$push, byte1, accum))));
			return $elm$bytes$Bytes$Decode$Loop(
				_Utils_Tuple2(remaining - 4, newAccum));
		},
		$elm$bytes$Bytes$Decode$unsignedInt32($elm$bytes$Bytes$BE)) : ((remaining > 0) ? A2(
		$elm$bytes$Bytes$Decode$map,
		function (_new) {
			return $elm$bytes$Bytes$Decode$Loop(
				_Utils_Tuple2(
					remaining - 1,
					A2($elm$core$Array$push, _new, accum)));
		},
		$elm$bytes$Bytes$Decode$unsignedInt8) : $elm$bytes$Bytes$Decode$succeed(
		$elm$bytes$Bytes$Decode$Done(accum)));
};
var $folkertdev$elm_flate$ByteArray$decoder = function (n) {
	return A2(
		$elm$bytes$Bytes$Decode$loop,
		_Utils_Tuple2(n, $elm$core$Array$empty),
		$folkertdev$elm_flate$ByteArray$decodeByteArrayHelp);
};
var $folkertdev$elm_flate$ByteArray$fromBytes = function (buffer) {
	var _v0 = A2(
		$elm$bytes$Bytes$Decode$decode,
		$folkertdev$elm_flate$ByteArray$decoder(
			$elm$bytes$Bytes$width(buffer)),
		buffer);
	if (_v0.$ === 'Nothing') {
		return $elm$core$Array$empty;
	} else {
		var value = _v0.a;
		return value;
	}
};
var $folkertdev$elm_flate$Deflate$Internal$compress = F2(
	function (maybeWindowSize, buf) {
		if (maybeWindowSize.$ === 'Nothing') {
			return A2(
				$elm$core$Array$push,
				$folkertdev$elm_flate$Deflate$Symbol$EndOfBlock,
				A2(
					$elm$core$Array$map,
					$folkertdev$elm_flate$Deflate$Symbol$Literal,
					$folkertdev$elm_flate$ByteArray$fromBytes(buf)));
		} else {
			var windowSize = maybeWindowSize.a;
			return A2(
				$elm$core$Array$push,
				$folkertdev$elm_flate$Deflate$Symbol$EndOfBlock,
				A2(
					$elm$core$Array$map,
					$folkertdev$elm_flate$Deflate$Internal$codeToSymbol,
					A2(
						$folkertdev$elm_flate$LZ77$encodeWithOptions,
						{windowSize: windowSize},
						buf)));
		}
	});
var $folkertdev$elm_flate$Deflate$BitWriter$flushIfNeeded = F3(
	function (tag, bitsWritten, encoders) {
		return (bitsWritten >= 16) ? {
			bitsWritten: bitsWritten - 16,
			encoders: A2(
				$elm$core$List$cons,
				A2($elm$bytes$Bytes$Encode$unsignedInt16, $elm$bytes$Bytes$LE, tag),
				encoders),
			tag: tag >> 16
		} : {bitsWritten: bitsWritten, encoders: encoders, tag: tag};
	});
var $folkertdev$elm_flate$Deflate$BitWriter$writeBits = F3(
	function (bitwidth, bits, state) {
		return A3($folkertdev$elm_flate$Deflate$BitWriter$flushIfNeeded, state.tag | (bits << state.bitsWritten), state.bitsWritten + bitwidth, state.encoders);
	});
var $folkertdev$elm_flate$Huffman$encode = F2(
	function (symbol, _v0) {
		var table = _v0.a;
		var _v1 = A2($elm$core$Array$get, symbol, table);
		if (_v1.$ === 'Nothing') {
			return A2($folkertdev$elm_flate$Deflate$BitWriter$writeBits, 0, 0);
		} else {
			var width = _v1.a.a.width;
			var bits = _v1.a.a.bits;
			return A2($folkertdev$elm_flate$Deflate$BitWriter$writeBits, width, bits);
		}
	});
var $folkertdev$elm_flate$Deflate$Symbol$extraLength = function (symbol) {
	if (symbol.$ === 'Share') {
		var length = symbol.a;
		return (((length >= 3) && (length <= 10)) || (length === 258)) ? $elm$core$Maybe$Nothing : (((length >= 11) && (length <= 18)) ? $elm$core$Maybe$Just(
			_Utils_Tuple2(
				1,
				A2($elm$core$Basics$modBy, 2, length - 11))) : (((length >= 19) && (length <= 34)) ? $elm$core$Maybe$Just(
			_Utils_Tuple2(
				2,
				A2($elm$core$Basics$modBy, 4, length - 19))) : (((length >= 35) && (length <= 66)) ? $elm$core$Maybe$Just(
			_Utils_Tuple2(
				3,
				A2($elm$core$Basics$modBy, 8, length - 35))) : (((length >= 67) && (length <= 130)) ? $elm$core$Maybe$Just(
			_Utils_Tuple2(
				4,
				A2($elm$core$Basics$modBy, 16, length - 67))) : (((length >= 131) && (length <= 257)) ? $elm$core$Maybe$Just(
			_Utils_Tuple2(
				5,
				A2($elm$core$Basics$modBy, 32, length - 131))) : $elm$core$Maybe$Nothing)))));
	} else {
		return $elm$core$Maybe$Nothing;
	}
};
var $folkertdev$elm_flate$Deflate$Symbol$encode = F3(
	function (symbol, htrees, bitWriter) {
		var maybeExtra = function () {
			var _v2 = $folkertdev$elm_flate$Deflate$Symbol$extraLength(symbol);
			if (_v2.$ === 'Nothing') {
				return $elm$core$Basics$identity;
			} else {
				var _v3 = _v2.a;
				var bits = _v3.a;
				var extra = _v3.b;
				return A2($folkertdev$elm_flate$Deflate$BitWriter$writeBits, bits, extra);
			}
		}();
		var maybeDistance = function () {
			var _v0 = $folkertdev$elm_flate$Deflate$Symbol$distance(symbol);
			if (_v0.$ === 'Nothing') {
				return $elm$core$Basics$identity;
			} else {
				var _v1 = _v0.a;
				var code_ = _v1.a;
				var bits = _v1.b;
				var extra = _v1.c;
				return A2(
					$elm$core$Basics$composeR,
					A2($folkertdev$elm_flate$Huffman$encode, code_, htrees.distance),
					(bits > 0) ? A2($folkertdev$elm_flate$Deflate$BitWriter$writeBits, bits, extra) : $elm$core$Basics$identity);
			}
		}();
		return maybeDistance(
			maybeExtra(
				A3(
					$folkertdev$elm_flate$Huffman$encode,
					$folkertdev$elm_flate$Deflate$Symbol$code(symbol),
					htrees.literal,
					bitWriter)));
	});
var $folkertdev$elm_flate$Deflate$Symbol$bitwidth_code_order = _List_fromArray(
	[16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);
var $folkertdev$elm_flate$Deflate$Symbol$calculateCodes = function (runLengths) {
	var loop2 = F3(
		function (r, c, codes) {
			loop2:
			while (true) {
				if (c >= 3) {
					var n = A2($elm$core$Basics$min, 6, c);
					var $temp$r = r,
						$temp$c = c - n,
						$temp$codes = A2(
						$elm$core$Array$push,
						_Utils_Tuple3(16, 2, n - 3),
						codes);
					r = $temp$r;
					c = $temp$c;
					codes = $temp$codes;
					continue loop2;
				} else {
					return A2(
						$elm$core$Array$append,
						codes,
						A2(
							$elm$core$Array$repeat,
							c,
							_Utils_Tuple3(r.value, 0, 0)));
				}
			}
		});
	var loop1 = F2(
		function (c, codes) {
			loop1:
			while (true) {
				if (c >= 11) {
					var n = A2($elm$core$Basics$min, 138, c);
					var $temp$c = c - n,
						$temp$codes = A2(
						$elm$core$Array$push,
						_Utils_Tuple3(18, 7, n - 11),
						codes);
					c = $temp$c;
					codes = $temp$codes;
					continue loop1;
				} else {
					if (c >= 3) {
						return A2(
							$elm$core$Array$push,
							_Utils_Tuple3(17, 3, c - 3),
							codes);
					} else {
						return A2(
							$elm$core$Array$append,
							codes,
							A2(
								$elm$core$Array$repeat,
								c,
								_Utils_Tuple3(0, 0, 0)));
					}
				}
			}
		});
	var folder = F2(
		function (r, codes) {
			return (!r.value) ? A2(loop1, r.count, codes) : A3(
				loop2,
				r,
				r.count - 1,
				A2(
					$elm$core$Array$push,
					_Utils_Tuple3(r.value, 0, 0),
					codes));
		});
	return A3($elm$core$Array$foldl, folder, $elm$core$Array$empty, runLengths);
};
var $folkertdev$elm_flate$Huffman$getWidth = function (_v0) {
	var width = _v0.a.width;
	return width;
};
var $folkertdev$elm_flate$Huffman$lookup = F2(
	function (symbol, _v0) {
		var array = _v0.a;
		return A2($elm$core$Array$get, symbol, array);
	});
var $folkertdev$elm_flate$Deflate$Symbol$calculateRunLengths = F2(
	function (lengths, accum) {
		calculateRunLengths:
		while (true) {
			if (!lengths.b) {
				return A3($elm$core$List$foldr, $elm$core$Array$push, $elm$core$Array$empty, accum);
			} else {
				var _v1 = lengths.a;
				var e = _v1.a;
				var size = _v1.b;
				var rest = lengths.b;
				var list = A2(
					$elm$core$List$indexedMap,
					$elm$core$Tuple$pair,
					A2(
						$elm$core$List$map,
						function (x) {
							return A2(
								$elm$core$Maybe$withDefault,
								0,
								A2(
									$elm$core$Maybe$map,
									$folkertdev$elm_flate$Huffman$getWidth,
									A2($folkertdev$elm_flate$Huffman$lookup, x, e)));
						},
						A2($elm$core$List$range, 0, size - 1)));
				var folder = F2(
					function (_v3, runLengths) {
						var i = _v3.a;
						var c = _v3.b;
						if (!runLengths.b) {
							return A2(
								$elm$core$List$cons,
								{count: 1, value: c},
								runLengths);
						} else {
							var last = runLengths.a;
							var remaining = runLengths.b;
							return _Utils_eq(last.value, c) ? A2(
								$elm$core$List$cons,
								{count: last.count + 1, value: last.value},
								remaining) : A2(
								$elm$core$List$cons,
								{count: 1, value: c},
								runLengths);
						}
					});
				var $temp$lengths = rest,
					$temp$accum = A3($elm$core$List$foldl, folder, accum, list);
				lengths = $temp$lengths;
				accum = $temp$accum;
				continue calculateRunLengths;
			}
		}
	});
var $folkertdev$elm_flate$Deflate$Symbol$buildBitWidthCodes = F3(
	function (literalCodeCount, distanceCodeCount, trees) {
		var runLengths = A2(
			$folkertdev$elm_flate$Deflate$Symbol$calculateRunLengths,
			_List_fromArray(
				[
					_Utils_Tuple2(trees.literal, literalCodeCount),
					_Utils_Tuple2(trees.distance, distanceCodeCount)
				]),
			_List_Nil);
		return $folkertdev$elm_flate$Deflate$Symbol$calculateCodes(runLengths);
	});
var $folkertdev$elm_flate$Deflate$Symbol$positionLoop = F3(
	function (predicate, i, elements) {
		positionLoop:
		while (true) {
			if (!elements.b) {
				return $elm$core$Maybe$Nothing;
			} else {
				var x = elements.a;
				var xs = elements.b;
				if (predicate(x)) {
					return $elm$core$Maybe$Just(i);
				} else {
					var $temp$predicate = predicate,
						$temp$i = i + 1,
						$temp$elements = xs;
					predicate = $temp$predicate;
					i = $temp$i;
					elements = $temp$elements;
					continue positionLoop;
				}
			}
		}
	});
var $folkertdev$elm_flate$Deflate$Symbol$position = F2(
	function (predicate, elements) {
		return A3($folkertdev$elm_flate$Deflate$Symbol$positionLoop, predicate, 0, elements);
	});
var $folkertdev$elm_flate$Huffman$positionFromTheEnd = F2(
	function (predicated, array) {
		var folder = F2(
			function (element, _v1) {
				var index = _v1.a;
				var accum = _v1.b;
				if (accum.$ === 'Just') {
					return _Utils_Tuple2(index, accum);
				} else {
					return predicated(element) ? _Utils_Tuple2(
						index,
						$elm$core$Maybe$Just(index)) : _Utils_Tuple2(index - 1, $elm$core$Maybe$Nothing);
				}
			});
		var finalIndex = $elm$core$Array$length(array) - 1;
		return A2(
			$elm$core$Maybe$map,
			function (v) {
				return finalIndex - v;
			},
			A3(
				$elm$core$Array$foldr,
				folder,
				_Utils_Tuple2(finalIndex, $elm$core$Maybe$Nothing),
				array).b);
	});
var $folkertdev$elm_flate$Huffman$usedMaxSymbol = function (_v0) {
	var array = _v0.a;
	return A2(
		$elm$core$Maybe$map,
		function (trailingZeros) {
			return ($elm$core$Array$length(array) - 1) - trailingZeros;
		},
		A2(
			$folkertdev$elm_flate$Huffman$positionFromTheEnd,
			function (_v1) {
				var value = _v1.a;
				return value.width > 0;
			},
			array));
};
var $folkertdev$elm_flate$Deflate$Symbol$writeDynamicHuffmanCodec = F2(
	function (trees, bitWriter) {
		var literal_code_count = A2(
			$elm$core$Basics$max,
			257,
			A2(
				$elm$core$Maybe$withDefault,
				0,
				$folkertdev$elm_flate$Huffman$usedMaxSymbol(trees.literal)) + 1);
		var distance_code_count = A2(
			$elm$core$Basics$max,
			1,
			A2(
				$elm$core$Maybe$withDefault,
				0,
				$folkertdev$elm_flate$Huffman$usedMaxSymbol(trees.distance)) + 1);
		var codes = A3(
			$folkertdev$elm_flate$Deflate$Symbol$buildBitWidthCodes,
			literal_code_count,
			distance_code_count,
			{distance: trees.distance, literal: trees.literal});
		var codeCounts = A3(
			$elm$core$Array$foldl,
			function (_v2) {
				var i = _v2.a;
				return A2(
					$folkertdev$elm_flate$Deflate$Symbol$update,
					i,
					function (v) {
						return v + 1;
					});
			},
			A2($elm$core$Array$repeat, 19, 0),
			codes);
		var bitWidthEncoder = A2($folkertdev$elm_flate$Huffman$fromFrequencies, codeCounts, 7);
		var bitwidthCodeCount = A2(
			$elm$core$Basics$max,
			4,
			A2(
				$elm$core$Maybe$withDefault,
				0,
				A2(
					$elm$core$Maybe$map,
					function (trailingZeros) {
						return 19 - trailingZeros;
					},
					A2(
						$folkertdev$elm_flate$Deflate$Symbol$position,
						function (i) {
							var _v1 = A2($folkertdev$elm_flate$Huffman$lookup, i, bitWidthEncoder);
							if (_v1.$ === 'Nothing') {
								return false;
							} else {
								var value = _v1.a;
								return $folkertdev$elm_flate$Huffman$getWidth(value) > 0;
							}
						},
						$elm$core$List$reverse($folkertdev$elm_flate$Deflate$Symbol$bitwidth_code_order)))));
		var v1 = function (writer) {
			return A3(
				$elm$core$List$foldl,
				F2(
					function (i, current) {
						var width = _Utils_eq(
							A2($elm$core$Array$get, i, codeCounts),
							$elm$core$Maybe$Just(0)) ? 0 : A2(
							$elm$core$Maybe$withDefault,
							0,
							A2(
								$elm$core$Maybe$map,
								$folkertdev$elm_flate$Huffman$getWidth,
								A2($folkertdev$elm_flate$Huffman$lookup, i, bitWidthEncoder)));
						return A3($folkertdev$elm_flate$Deflate$BitWriter$writeBits, 3, width, current);
					}),
				writer,
				A2($elm$core$List$take, bitwidthCodeCount, $folkertdev$elm_flate$Deflate$Symbol$bitwidth_code_order));
		};
		var v2 = function (writer) {
			return A3(
				$elm$core$Array$foldl,
				F2(
					function (_v0, current) {
						var code_ = _v0.a;
						var bits = _v0.b;
						var extra = _v0.c;
						return (bits > 0) ? A3(
							$folkertdev$elm_flate$Deflate$BitWriter$writeBits,
							bits,
							extra,
							A3($folkertdev$elm_flate$Huffman$encode, code_, bitWidthEncoder, current)) : A3($folkertdev$elm_flate$Huffman$encode, code_, bitWidthEncoder, current);
					}),
				writer,
				codes);
		};
		return v2(
			v1(
				A3(
					$folkertdev$elm_flate$Deflate$BitWriter$writeBits,
					4,
					bitwidthCodeCount - 4,
					A3(
						$folkertdev$elm_flate$Deflate$BitWriter$writeBits,
						5,
						distance_code_count - 1,
						A3($folkertdev$elm_flate$Deflate$BitWriter$writeBits, 5, literal_code_count - 257, bitWriter)))));
	});
var $folkertdev$elm_flate$Deflate$Internal$encodeCompressDynamic = F3(
	function (maybeWindowSize, buf, bitWriter) {
		var compressed = A2($folkertdev$elm_flate$Deflate$Internal$compress, maybeWindowSize, buf);
		var huffmanTree = $folkertdev$elm_flate$Deflate$Symbol$buildDynamicHuffmanCodec(compressed);
		var huffmanTreeWriter = A2($folkertdev$elm_flate$Deflate$Symbol$writeDynamicHuffmanCodec, huffmanTree, bitWriter);
		return A3(
			$elm$core$Array$foldl,
			F2(
				function (symbol, first) {
					return A3($folkertdev$elm_flate$Deflate$Symbol$encode, symbol, huffmanTree, first);
				}),
			huffmanTreeWriter,
			compressed);
	});
var $folkertdev$elm_flate$Deflate$BitWriter$writeBit = function (b) {
	if (!b) {
		return A2($folkertdev$elm_flate$Deflate$BitWriter$writeBits, 1, 0);
	} else {
		return A2($folkertdev$elm_flate$Deflate$BitWriter$writeBits, 1, 1);
	}
};
var $folkertdev$elm_flate$Deflate$Internal$encodeDynamicBlock = F3(
	function (windowSize, _v0, bitWriter) {
		var isLastBlock = _v0.a;
		var buffer = _v0.b;
		return A3(
			$folkertdev$elm_flate$Deflate$Internal$encodeCompressDynamic,
			windowSize,
			buffer,
			A3(
				$folkertdev$elm_flate$Deflate$BitWriter$writeBits,
				2,
				2,
				A2($folkertdev$elm_flate$Deflate$BitWriter$writeBit, isLastBlock, bitWriter)));
	});
var $folkertdev$elm_flate$Deflate$BitWriter$flushLoop = F3(
	function (tag, bitsWritten, encoders) {
		flushLoop:
		while (true) {
			if (bitsWritten > 0) {
				var $temp$tag = tag >> 8,
					$temp$bitsWritten = A2($elm$core$Basics$max, 0, bitsWritten - 8),
					$temp$encoders = A2(
					$elm$core$List$cons,
					$elm$bytes$Bytes$Encode$unsignedInt8(tag),
					encoders);
				tag = $temp$tag;
				bitsWritten = $temp$bitsWritten;
				encoders = $temp$encoders;
				continue flushLoop;
			} else {
				return {bitsWritten: bitsWritten, encoders: encoders, tag: tag};
			}
		}
	});
var $folkertdev$elm_flate$Deflate$BitWriter$flush = function (state) {
	return A3($folkertdev$elm_flate$Deflate$BitWriter$flushLoop, state.tag, state.bitsWritten, state.encoders);
};
var $folkertdev$elm_flate$Deflate$BitWriter$run = function (state) {
	return $elm$core$List$reverse(state.encoders);
};
var $folkertdev$elm_flate$Deflate$Internal$encodeDynamic = F2(
	function (windowSize, buffer) {
		var encodedChunks = A2(
			$elm$core$List$map,
			$folkertdev$elm_flate$Deflate$Internal$encodeDynamicBlock(windowSize),
			A2($folkertdev$elm_flate$Deflate$Internal$chunks, $folkertdev$elm_flate$Deflate$Internal$default_block_size, buffer));
		return $elm$bytes$Bytes$Encode$encode(
			$elm$bytes$Bytes$Encode$sequence(
				$folkertdev$elm_flate$Deflate$BitWriter$run(
					$folkertdev$elm_flate$Deflate$BitWriter$flush(
						A3(
							$elm$core$List$foldl,
							F2(
								function (chunk, first) {
									return chunk(first);
								}),
							$folkertdev$elm_flate$Deflate$BitWriter$empty,
							encodedChunks)))));
	});
var $folkertdev$elm_flate$Deflate$Internal$max_non_compressed_block_size = 65535;
var $elm$core$Array$sliceLeft = F2(
	function (from, array) {
		var len = array.a;
		var tree = array.c;
		var tail = array.d;
		if (!from) {
			return array;
		} else {
			if (_Utils_cmp(
				from,
				$elm$core$Array$tailIndex(len)) > -1) {
				return A4(
					$elm$core$Array$Array_elm_builtin,
					len - from,
					$elm$core$Array$shiftStep,
					$elm$core$Elm$JsArray$empty,
					A3(
						$elm$core$Elm$JsArray$slice,
						from - $elm$core$Array$tailIndex(len),
						$elm$core$Elm$JsArray$length(tail),
						tail));
			} else {
				var skipNodes = (from / $elm$core$Array$branchFactor) | 0;
				var helper = F2(
					function (node, acc) {
						if (node.$ === 'SubTree') {
							var subTree = node.a;
							return A3($elm$core$Elm$JsArray$foldr, helper, acc, subTree);
						} else {
							var leaf = node.a;
							return A2($elm$core$List$cons, leaf, acc);
						}
					});
				var leafNodes = A3(
					$elm$core$Elm$JsArray$foldr,
					helper,
					_List_fromArray(
						[tail]),
					tree);
				var nodesToInsert = A2($elm$core$List$drop, skipNodes, leafNodes);
				if (!nodesToInsert.b) {
					return $elm$core$Array$empty;
				} else {
					var head = nodesToInsert.a;
					var rest = nodesToInsert.b;
					var firstSlice = from - (skipNodes * $elm$core$Array$branchFactor);
					var initialBuilder = {
						nodeList: _List_Nil,
						nodeListSize: 0,
						tail: A3(
							$elm$core$Elm$JsArray$slice,
							firstSlice,
							$elm$core$Elm$JsArray$length(head),
							head)
					};
					return A2(
						$elm$core$Array$builderToArray,
						true,
						A3($elm$core$List$foldl, $elm$core$Array$appendHelpBuilder, initialBuilder, rest));
				}
			}
		}
	});
var $elm$core$Array$fetchNewTail = F4(
	function (shift, end, treeEnd, tree) {
		fetchNewTail:
		while (true) {
			var pos = $elm$core$Array$bitMask & (treeEnd >>> shift);
			var _v0 = A2($elm$core$Elm$JsArray$unsafeGet, pos, tree);
			if (_v0.$ === 'SubTree') {
				var sub = _v0.a;
				var $temp$shift = shift - $elm$core$Array$shiftStep,
					$temp$end = end,
					$temp$treeEnd = treeEnd,
					$temp$tree = sub;
				shift = $temp$shift;
				end = $temp$end;
				treeEnd = $temp$treeEnd;
				tree = $temp$tree;
				continue fetchNewTail;
			} else {
				var values = _v0.a;
				return A3($elm$core$Elm$JsArray$slice, 0, $elm$core$Array$bitMask & end, values);
			}
		}
	});
var $elm$core$Array$hoistTree = F3(
	function (oldShift, newShift, tree) {
		hoistTree:
		while (true) {
			if ((_Utils_cmp(oldShift, newShift) < 1) || (!$elm$core$Elm$JsArray$length(tree))) {
				return tree;
			} else {
				var _v0 = A2($elm$core$Elm$JsArray$unsafeGet, 0, tree);
				if (_v0.$ === 'SubTree') {
					var sub = _v0.a;
					var $temp$oldShift = oldShift - $elm$core$Array$shiftStep,
						$temp$newShift = newShift,
						$temp$tree = sub;
					oldShift = $temp$oldShift;
					newShift = $temp$newShift;
					tree = $temp$tree;
					continue hoistTree;
				} else {
					return tree;
				}
			}
		}
	});
var $elm$core$Array$sliceTree = F3(
	function (shift, endIdx, tree) {
		var lastPos = $elm$core$Array$bitMask & (endIdx >>> shift);
		var _v0 = A2($elm$core$Elm$JsArray$unsafeGet, lastPos, tree);
		if (_v0.$ === 'SubTree') {
			var sub = _v0.a;
			var newSub = A3($elm$core$Array$sliceTree, shift - $elm$core$Array$shiftStep, endIdx, sub);
			return (!$elm$core$Elm$JsArray$length(newSub)) ? A3($elm$core$Elm$JsArray$slice, 0, lastPos, tree) : A3(
				$elm$core$Elm$JsArray$unsafeSet,
				lastPos,
				$elm$core$Array$SubTree(newSub),
				A3($elm$core$Elm$JsArray$slice, 0, lastPos + 1, tree));
		} else {
			return A3($elm$core$Elm$JsArray$slice, 0, lastPos, tree);
		}
	});
var $elm$core$Array$sliceRight = F2(
	function (end, array) {
		var len = array.a;
		var startShift = array.b;
		var tree = array.c;
		var tail = array.d;
		if (_Utils_eq(end, len)) {
			return array;
		} else {
			if (_Utils_cmp(
				end,
				$elm$core$Array$tailIndex(len)) > -1) {
				return A4(
					$elm$core$Array$Array_elm_builtin,
					end,
					startShift,
					tree,
					A3($elm$core$Elm$JsArray$slice, 0, $elm$core$Array$bitMask & end, tail));
			} else {
				var endIdx = $elm$core$Array$tailIndex(end);
				var depth = $elm$core$Basics$floor(
					A2(
						$elm$core$Basics$logBase,
						$elm$core$Array$branchFactor,
						A2($elm$core$Basics$max, 1, endIdx - 1)));
				var newShift = A2($elm$core$Basics$max, 5, depth * $elm$core$Array$shiftStep);
				return A4(
					$elm$core$Array$Array_elm_builtin,
					end,
					newShift,
					A3(
						$elm$core$Array$hoistTree,
						startShift,
						newShift,
						A3($elm$core$Array$sliceTree, startShift, endIdx, tree)),
					A4($elm$core$Array$fetchNewTail, startShift, end, endIdx, tree));
			}
		}
	});
var $elm$core$Array$translateIndex = F2(
	function (index, _v0) {
		var len = _v0.a;
		var posIndex = (index < 0) ? (len + index) : index;
		return (posIndex < 0) ? 0 : ((_Utils_cmp(posIndex, len) > 0) ? len : posIndex);
	});
var $elm$core$Array$slice = F3(
	function (from, to, array) {
		var correctTo = A2($elm$core$Array$translateIndex, to, array);
		var correctFrom = A2($elm$core$Array$translateIndex, from, array);
		return (_Utils_cmp(correctFrom, correctTo) > 0) ? $elm$core$Array$empty : A2(
			$elm$core$Array$sliceLeft,
			correctFrom,
			A2($elm$core$Array$sliceRight, correctTo, array));
	});
var $folkertdev$elm_flate$ByteArray$fasterEncodeFolderR = F2(
	function (_byte, _v0) {
		var bytesOnAccum = _v0.a;
		var accum = _v0.b;
		var encoders = _v0.c;
		switch (bytesOnAccum) {
			case 0:
				var value = 255 & _byte;
				return _Utils_Tuple3(1, value, encoders);
			case 1:
				var value = accum | ((255 & _byte) << 8);
				return _Utils_Tuple3(2, value, encoders);
			case 2:
				var value = accum | ((255 & _byte) << 16);
				return _Utils_Tuple3(3, value, encoders);
			default:
				var value = accum | ((255 & _byte) << 24);
				return _Utils_Tuple3(
					0,
					0,
					A2(
						$elm$core$List$cons,
						A2($elm$bytes$Bytes$Encode$unsignedInt32, $elm$bytes$Bytes$BE, value),
						encoders));
		}
	});
var $folkertdev$elm_flate$ByteArray$fasterEncodeR = function (_v0) {
	var bytesOnAccum = _v0.a;
	var accum = _v0.b;
	var otherEncoders = _v0.c;
	var encoders = function () {
		switch (bytesOnAccum) {
			case 0:
				return otherEncoders;
			case 1:
				return A2(
					$elm$core$List$cons,
					$elm$bytes$Bytes$Encode$unsignedInt8(accum),
					otherEncoders);
			case 2:
				return A2(
					$elm$core$List$cons,
					A2($elm$bytes$Bytes$Encode$unsignedInt16, $elm$bytes$Bytes$BE, accum),
					otherEncoders);
			default:
				var otherBytes = accum >> 8;
				var firstByte = 255 & accum;
				return A2(
					$elm$core$List$cons,
					A2($elm$bytes$Bytes$Encode$unsignedInt16, $elm$bytes$Bytes$BE, otherBytes),
					A2(
						$elm$core$List$cons,
						$elm$bytes$Bytes$Encode$unsignedInt8(firstByte),
						otherEncoders));
		}
	}();
	return encoders;
};
var $folkertdev$elm_flate$ByteArray$toBytes = function (array) {
	return $elm$bytes$Bytes$Encode$encode(
		$elm$bytes$Bytes$Encode$sequence(
			$folkertdev$elm_flate$ByteArray$fasterEncodeR(
				A3(
					$elm$core$Array$foldr,
					$folkertdev$elm_flate$ByteArray$fasterEncodeFolderR,
					_Utils_Tuple3(0, 0, _List_Nil),
					array))));
};
var $folkertdev$elm_flate$Deflate$BitWriter$writeEncoder = F2(
	function (encoder, state) {
		return {
			bitsWritten: state.bitsWritten,
			encoders: A2($elm$core$List$cons, encoder, state.encoders),
			tag: state.tag
		};
	});
var $folkertdev$elm_flate$Deflate$Internal$encodeRawBlock = F2(
	function (_v0, bitWriter) {
		var isLastBlock = _v0.a;
		var buffer = _v0.b;
		var byteArray = $folkertdev$elm_flate$ByteArray$fromBytes(buffer);
		var size = A2(
			$elm$core$Basics$min,
			$elm$core$Array$length(byteArray),
			$folkertdev$elm_flate$Deflate$Internal$max_non_compressed_block_size);
		var sliced = A3($elm$core$Array$slice, 0, size, byteArray);
		return A2(
			$folkertdev$elm_flate$Deflate$BitWriter$writeEncoder,
			$elm$bytes$Bytes$Encode$bytes(
				$folkertdev$elm_flate$ByteArray$toBytes(sliced)),
			A2(
				$folkertdev$elm_flate$Deflate$BitWriter$writeEncoder,
				A2($elm$bytes$Bytes$Encode$unsignedInt16, $elm$bytes$Bytes$LE, ~size),
				A2(
					$folkertdev$elm_flate$Deflate$BitWriter$writeEncoder,
					A2($elm$bytes$Bytes$Encode$unsignedInt16, $elm$bytes$Bytes$LE, size),
					$folkertdev$elm_flate$Deflate$BitWriter$flush(
						A3(
							$folkertdev$elm_flate$Deflate$BitWriter$writeBits,
							2,
							0,
							A2($folkertdev$elm_flate$Deflate$BitWriter$writeBit, isLastBlock, bitWriter))))));
	});
var $folkertdev$elm_flate$Deflate$Internal$encodeRaw = function (buffer) {
	return $elm$bytes$Bytes$Encode$encode(
		$elm$bytes$Bytes$Encode$sequence(
			$folkertdev$elm_flate$Deflate$BitWriter$run(
				A3(
					$elm$core$List$foldl,
					F2(
						function (chunk, first) {
							return A2($folkertdev$elm_flate$Deflate$Internal$encodeRawBlock, chunk, first);
						}),
					$folkertdev$elm_flate$Deflate$BitWriter$empty,
					A2(
						$folkertdev$elm_flate$Deflate$Internal$chunks,
						A2($elm$core$Basics$min, $folkertdev$elm_flate$Deflate$Internal$max_non_compressed_block_size, $folkertdev$elm_flate$Deflate$Internal$default_block_size),
						buffer)))));
};
var $folkertdev$elm_flate$Huffman$fromList = A2(
	$elm$core$Basics$composeL,
	A2($elm$core$Basics$composeL, $folkertdev$elm_flate$Huffman$Tree, $elm$core$Array$fromList),
	$elm$core$List$map($folkertdev$elm_flate$Huffman$codeFromRecord));
var $folkertdev$elm_flate$Huffman$hardcodedStaticHuffmanTree = {
	distance: $folkertdev$elm_flate$Huffman$fromList(
		_List_fromArray(
			[
				{bits: 0, width: 5},
				{bits: 16, width: 5},
				{bits: 8, width: 5},
				{bits: 24, width: 5},
				{bits: 4, width: 5},
				{bits: 20, width: 5},
				{bits: 12, width: 5},
				{bits: 28, width: 5},
				{bits: 2, width: 5},
				{bits: 18, width: 5},
				{bits: 10, width: 5},
				{bits: 26, width: 5},
				{bits: 6, width: 5},
				{bits: 22, width: 5},
				{bits: 14, width: 5},
				{bits: 30, width: 5},
				{bits: 1, width: 5},
				{bits: 17, width: 5},
				{bits: 9, width: 5},
				{bits: 25, width: 5},
				{bits: 5, width: 5},
				{bits: 21, width: 5},
				{bits: 13, width: 5},
				{bits: 29, width: 5},
				{bits: 3, width: 5},
				{bits: 19, width: 5},
				{bits: 11, width: 5},
				{bits: 27, width: 5},
				{bits: 7, width: 5},
				{bits: 23, width: 5}
			])),
	literal: $folkertdev$elm_flate$Huffman$fromList(
		_List_fromArray(
			[
				{bits: 12, width: 8},
				{bits: 140, width: 8},
				{bits: 76, width: 8},
				{bits: 204, width: 8},
				{bits: 44, width: 8},
				{bits: 172, width: 8},
				{bits: 108, width: 8},
				{bits: 236, width: 8},
				{bits: 28, width: 8},
				{bits: 156, width: 8},
				{bits: 92, width: 8},
				{bits: 220, width: 8},
				{bits: 60, width: 8},
				{bits: 188, width: 8},
				{bits: 124, width: 8},
				{bits: 252, width: 8},
				{bits: 2, width: 8},
				{bits: 130, width: 8},
				{bits: 66, width: 8},
				{bits: 194, width: 8},
				{bits: 34, width: 8},
				{bits: 162, width: 8},
				{bits: 98, width: 8},
				{bits: 226, width: 8},
				{bits: 18, width: 8},
				{bits: 146, width: 8},
				{bits: 82, width: 8},
				{bits: 210, width: 8},
				{bits: 50, width: 8},
				{bits: 178, width: 8},
				{bits: 114, width: 8},
				{bits: 242, width: 8},
				{bits: 10, width: 8},
				{bits: 138, width: 8},
				{bits: 74, width: 8},
				{bits: 202, width: 8},
				{bits: 42, width: 8},
				{bits: 170, width: 8},
				{bits: 106, width: 8},
				{bits: 234, width: 8},
				{bits: 26, width: 8},
				{bits: 154, width: 8},
				{bits: 90, width: 8},
				{bits: 218, width: 8},
				{bits: 58, width: 8},
				{bits: 186, width: 8},
				{bits: 122, width: 8},
				{bits: 250, width: 8},
				{bits: 6, width: 8},
				{bits: 134, width: 8},
				{bits: 70, width: 8},
				{bits: 198, width: 8},
				{bits: 38, width: 8},
				{bits: 166, width: 8},
				{bits: 102, width: 8},
				{bits: 230, width: 8},
				{bits: 22, width: 8},
				{bits: 150, width: 8},
				{bits: 86, width: 8},
				{bits: 214, width: 8},
				{bits: 54, width: 8},
				{bits: 182, width: 8},
				{bits: 118, width: 8},
				{bits: 246, width: 8},
				{bits: 14, width: 8},
				{bits: 142, width: 8},
				{bits: 78, width: 8},
				{bits: 206, width: 8},
				{bits: 46, width: 8},
				{bits: 174, width: 8},
				{bits: 110, width: 8},
				{bits: 238, width: 8},
				{bits: 30, width: 8},
				{bits: 158, width: 8},
				{bits: 94, width: 8},
				{bits: 222, width: 8},
				{bits: 62, width: 8},
				{bits: 190, width: 8},
				{bits: 126, width: 8},
				{bits: 254, width: 8},
				{bits: 1, width: 8},
				{bits: 129, width: 8},
				{bits: 65, width: 8},
				{bits: 193, width: 8},
				{bits: 33, width: 8},
				{bits: 161, width: 8},
				{bits: 97, width: 8},
				{bits: 225, width: 8},
				{bits: 17, width: 8},
				{bits: 145, width: 8},
				{bits: 81, width: 8},
				{bits: 209, width: 8},
				{bits: 49, width: 8},
				{bits: 177, width: 8},
				{bits: 113, width: 8},
				{bits: 241, width: 8},
				{bits: 9, width: 8},
				{bits: 137, width: 8},
				{bits: 73, width: 8},
				{bits: 201, width: 8},
				{bits: 41, width: 8},
				{bits: 169, width: 8},
				{bits: 105, width: 8},
				{bits: 233, width: 8},
				{bits: 25, width: 8},
				{bits: 153, width: 8},
				{bits: 89, width: 8},
				{bits: 217, width: 8},
				{bits: 57, width: 8},
				{bits: 185, width: 8},
				{bits: 121, width: 8},
				{bits: 249, width: 8},
				{bits: 5, width: 8},
				{bits: 133, width: 8},
				{bits: 69, width: 8},
				{bits: 197, width: 8},
				{bits: 37, width: 8},
				{bits: 165, width: 8},
				{bits: 101, width: 8},
				{bits: 229, width: 8},
				{bits: 21, width: 8},
				{bits: 149, width: 8},
				{bits: 85, width: 8},
				{bits: 213, width: 8},
				{bits: 53, width: 8},
				{bits: 181, width: 8},
				{bits: 117, width: 8},
				{bits: 245, width: 8},
				{bits: 13, width: 8},
				{bits: 141, width: 8},
				{bits: 77, width: 8},
				{bits: 205, width: 8},
				{bits: 45, width: 8},
				{bits: 173, width: 8},
				{bits: 109, width: 8},
				{bits: 237, width: 8},
				{bits: 29, width: 8},
				{bits: 157, width: 8},
				{bits: 93, width: 8},
				{bits: 221, width: 8},
				{bits: 61, width: 8},
				{bits: 189, width: 8},
				{bits: 125, width: 8},
				{bits: 253, width: 8},
				{bits: 19, width: 9},
				{bits: 275, width: 9},
				{bits: 147, width: 9},
				{bits: 403, width: 9},
				{bits: 83, width: 9},
				{bits: 339, width: 9},
				{bits: 211, width: 9},
				{bits: 467, width: 9},
				{bits: 51, width: 9},
				{bits: 307, width: 9},
				{bits: 179, width: 9},
				{bits: 435, width: 9},
				{bits: 115, width: 9},
				{bits: 371, width: 9},
				{bits: 243, width: 9},
				{bits: 499, width: 9},
				{bits: 11, width: 9},
				{bits: 267, width: 9},
				{bits: 139, width: 9},
				{bits: 395, width: 9},
				{bits: 75, width: 9},
				{bits: 331, width: 9},
				{bits: 203, width: 9},
				{bits: 459, width: 9},
				{bits: 43, width: 9},
				{bits: 299, width: 9},
				{bits: 171, width: 9},
				{bits: 427, width: 9},
				{bits: 107, width: 9},
				{bits: 363, width: 9},
				{bits: 235, width: 9},
				{bits: 491, width: 9},
				{bits: 27, width: 9},
				{bits: 283, width: 9},
				{bits: 155, width: 9},
				{bits: 411, width: 9},
				{bits: 91, width: 9},
				{bits: 347, width: 9},
				{bits: 219, width: 9},
				{bits: 475, width: 9},
				{bits: 59, width: 9},
				{bits: 315, width: 9},
				{bits: 187, width: 9},
				{bits: 443, width: 9},
				{bits: 123, width: 9},
				{bits: 379, width: 9},
				{bits: 251, width: 9},
				{bits: 507, width: 9},
				{bits: 7, width: 9},
				{bits: 263, width: 9},
				{bits: 135, width: 9},
				{bits: 391, width: 9},
				{bits: 71, width: 9},
				{bits: 327, width: 9},
				{bits: 199, width: 9},
				{bits: 455, width: 9},
				{bits: 39, width: 9},
				{bits: 295, width: 9},
				{bits: 167, width: 9},
				{bits: 423, width: 9},
				{bits: 103, width: 9},
				{bits: 359, width: 9},
				{bits: 231, width: 9},
				{bits: 487, width: 9},
				{bits: 23, width: 9},
				{bits: 279, width: 9},
				{bits: 151, width: 9},
				{bits: 407, width: 9},
				{bits: 87, width: 9},
				{bits: 343, width: 9},
				{bits: 215, width: 9},
				{bits: 471, width: 9},
				{bits: 55, width: 9},
				{bits: 311, width: 9},
				{bits: 183, width: 9},
				{bits: 439, width: 9},
				{bits: 119, width: 9},
				{bits: 375, width: 9},
				{bits: 247, width: 9},
				{bits: 503, width: 9},
				{bits: 15, width: 9},
				{bits: 271, width: 9},
				{bits: 143, width: 9},
				{bits: 399, width: 9},
				{bits: 79, width: 9},
				{bits: 335, width: 9},
				{bits: 207, width: 9},
				{bits: 463, width: 9},
				{bits: 47, width: 9},
				{bits: 303, width: 9},
				{bits: 175, width: 9},
				{bits: 431, width: 9},
				{bits: 111, width: 9},
				{bits: 367, width: 9},
				{bits: 239, width: 9},
				{bits: 495, width: 9},
				{bits: 31, width: 9},
				{bits: 287, width: 9},
				{bits: 159, width: 9},
				{bits: 415, width: 9},
				{bits: 95, width: 9},
				{bits: 351, width: 9},
				{bits: 223, width: 9},
				{bits: 479, width: 9},
				{bits: 63, width: 9},
				{bits: 319, width: 9},
				{bits: 191, width: 9},
				{bits: 447, width: 9},
				{bits: 127, width: 9},
				{bits: 383, width: 9},
				{bits: 255, width: 9},
				{bits: 511, width: 9},
				{bits: 0, width: 7},
				{bits: 64, width: 7},
				{bits: 32, width: 7},
				{bits: 96, width: 7},
				{bits: 16, width: 7},
				{bits: 80, width: 7},
				{bits: 48, width: 7},
				{bits: 112, width: 7},
				{bits: 8, width: 7},
				{bits: 72, width: 7},
				{bits: 40, width: 7},
				{bits: 104, width: 7},
				{bits: 24, width: 7},
				{bits: 88, width: 7},
				{bits: 56, width: 7},
				{bits: 120, width: 7},
				{bits: 4, width: 7},
				{bits: 68, width: 7},
				{bits: 36, width: 7},
				{bits: 100, width: 7},
				{bits: 20, width: 7},
				{bits: 84, width: 7},
				{bits: 52, width: 7},
				{bits: 116, width: 7},
				{bits: 3, width: 8},
				{bits: 131, width: 8},
				{bits: 67, width: 8},
				{bits: 195, width: 8},
				{bits: 35, width: 8},
				{bits: 163, width: 8},
				{bits: 99, width: 8},
				{bits: 227, width: 8}
			]))
};
var $folkertdev$elm_flate$Deflate$Internal$encodeCompressStatic = F3(
	function (maybeWindowSize, buf, bitWriter) {
		var huffmanTrees = $folkertdev$elm_flate$Huffman$hardcodedStaticHuffmanTree;
		var compressed = A2($folkertdev$elm_flate$Deflate$Internal$compress, maybeWindowSize, buf);
		return A3(
			$elm$core$Array$foldl,
			F2(
				function (symbol, first) {
					return A3($folkertdev$elm_flate$Deflate$Symbol$encode, symbol, huffmanTrees, first);
				}),
			bitWriter,
			compressed);
	});
var $folkertdev$elm_flate$Deflate$Internal$encodeStaticBlock = F3(
	function (windowSize, _v0, bitWriter) {
		var isLastBlock = _v0.a;
		var buffer = _v0.b;
		return A3(
			$folkertdev$elm_flate$Deflate$Internal$encodeCompressStatic,
			windowSize,
			buffer,
			A3(
				$folkertdev$elm_flate$Deflate$BitWriter$writeBits,
				2,
				1,
				A2($folkertdev$elm_flate$Deflate$BitWriter$writeBit, isLastBlock, bitWriter)));
	});
var $folkertdev$elm_flate$Deflate$Internal$encodeStatic = F2(
	function (windowSize, buffer) {
		return $elm$bytes$Bytes$Encode$encode(
			$elm$bytes$Bytes$Encode$sequence(
				$folkertdev$elm_flate$Deflate$BitWriter$run(
					$folkertdev$elm_flate$Deflate$BitWriter$flush(
						A3(
							$elm$core$List$foldl,
							F2(
								function (chunk, first) {
									return A3($folkertdev$elm_flate$Deflate$Internal$encodeStaticBlock, windowSize, chunk, first);
								}),
							$folkertdev$elm_flate$Deflate$BitWriter$empty,
							A2($folkertdev$elm_flate$Deflate$Internal$chunks, $folkertdev$elm_flate$Deflate$Internal$default_block_size, buffer))))));
	});
var $folkertdev$elm_flate$Flate$deflateWithOptions = F2(
	function (encoding, buffer) {
		switch (encoding.$) {
			case 'Raw':
				return $folkertdev$elm_flate$Deflate$Internal$encodeRaw(buffer);
			case 'Static':
				if (encoding.a.$ === 'NoCompression') {
					var _v1 = encoding.a;
					return A2($folkertdev$elm_flate$Deflate$Internal$encodeStatic, $elm$core$Maybe$Nothing, buffer);
				} else {
					var w = encoding.a.a;
					return A2(
						$folkertdev$elm_flate$Deflate$Internal$encodeStatic,
						$elm$core$Maybe$Just(w),
						buffer);
				}
			default:
				if (encoding.a.$ === 'NoCompression') {
					var _v2 = encoding.a;
					return A2($folkertdev$elm_flate$Deflate$Internal$encodeDynamic, $elm$core$Maybe$Nothing, buffer);
				} else {
					var w = encoding.a.a;
					return A2(
						$folkertdev$elm_flate$Deflate$Internal$encodeDynamic,
						$elm$core$Maybe$Just(w),
						buffer);
				}
		}
	});
var $elm$core$List$head = function (list) {
	if (list.b) {
		var x = list.a;
		var xs = list.b;
		return $elm$core$Maybe$Just(x);
	} else {
		return $elm$core$Maybe$Nothing;
	}
};
var $author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonEncode_FileTree_FileTreeNode = F2(
	function (jsonEncode_type_parameter_blobStructure, valueToEncode) {
		if (valueToEncode.$ === 'BlobNode') {
			var tagArgument0 = valueToEncode.a;
			return $elm$json$Json$Encode$object(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'BlobNode',
						A2(
							$elm$json$Json$Encode$list,
							$elm$core$Basics$identity,
							_List_fromArray(
								[
									jsonEncode_type_parameter_blobStructure(tagArgument0)
								])))
					]));
		} else {
			var tagArgument0 = valueToEncode.a;
			return $elm$json$Json$Encode$object(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'TreeNode',
						A2(
							$elm$json$Json$Encode$list,
							$elm$core$Basics$identity,
							_List_fromArray(
								[
									A2(
									$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonEncode__generic_List,
									function (type_arg) {
										return A2(
											$elm$json$Json$Encode$list,
											$elm$core$Basics$identity,
											_List_fromArray(
												[
													$elm$json$Json$Encode$string(
													function (_v1) {
														var item_0 = _v1.a;
														var item_1 = _v1.b;
														return item_0;
													}(type_arg)),
													A2(
													$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonEncode_FileTree_FileTreeNode,
													function (type_arg_) {
														return jsonEncode_type_parameter_blobStructure(type_arg_);
													},
													function (_v2) {
														var item_0 = _v2.a;
														var item_1 = _v2.b;
														return item_1;
													}(type_arg))
												]));
									},
									tagArgument0)
								])))
					]));
		}
	});
var $author$project$CompilerGenerated$Decode$lowest6BitsMask = 63;
var $author$project$CompilerGenerated$Decode$unsafeToChar = function (n) {
	if (n <= 25) {
		return $elm$core$Char$fromCode(65 + n);
	} else {
		if (n <= 51) {
			return $elm$core$Char$fromCode(97 + (n - 26));
		} else {
			if (n <= 61) {
				return $elm$core$Char$fromCode(48 + (n - 52));
			} else {
				switch (n) {
					case 62:
						return _Utils_chr('+');
					case 63:
						return _Utils_chr('/');
					default:
						return _Utils_chr('\u0000');
				}
			}
		}
	}
};
var $author$project$CompilerGenerated$Decode$bitsToChars = F2(
	function (bits, missing) {
		var s = $author$project$CompilerGenerated$Decode$unsafeToChar(bits & $author$project$CompilerGenerated$Decode$lowest6BitsMask);
		var r = $author$project$CompilerGenerated$Decode$unsafeToChar((bits >>> 6) & $author$project$CompilerGenerated$Decode$lowest6BitsMask);
		var q = $author$project$CompilerGenerated$Decode$unsafeToChar((bits >>> 12) & $author$project$CompilerGenerated$Decode$lowest6BitsMask);
		var p = $author$project$CompilerGenerated$Decode$unsafeToChar(bits >>> 18);
		switch (missing) {
			case 0:
				return A2(
					$elm$core$String$cons,
					p,
					A2(
						$elm$core$String$cons,
						q,
						A2(
							$elm$core$String$cons,
							r,
							$elm$core$String$fromChar(s))));
			case 1:
				return A2(
					$elm$core$String$cons,
					p,
					A2(
						$elm$core$String$cons,
						q,
						A2($elm$core$String$cons, r, '=')));
			case 2:
				return A2(
					$elm$core$String$cons,
					p,
					A2($elm$core$String$cons, q, '=='));
			default:
				return '';
		}
	});
var $author$project$CompilerGenerated$Decode$bitsToCharSpecialized = F4(
	function (bits1, bits2, bits3, accum) {
		var z = $author$project$CompilerGenerated$Decode$unsafeToChar((bits3 >>> 6) & $author$project$CompilerGenerated$Decode$lowest6BitsMask);
		var y = $author$project$CompilerGenerated$Decode$unsafeToChar((bits3 >>> 12) & $author$project$CompilerGenerated$Decode$lowest6BitsMask);
		var x = $author$project$CompilerGenerated$Decode$unsafeToChar(bits3 >>> 18);
		var w = $author$project$CompilerGenerated$Decode$unsafeToChar(bits3 & $author$project$CompilerGenerated$Decode$lowest6BitsMask);
		var s = $author$project$CompilerGenerated$Decode$unsafeToChar(bits1 & $author$project$CompilerGenerated$Decode$lowest6BitsMask);
		var r = $author$project$CompilerGenerated$Decode$unsafeToChar((bits1 >>> 6) & $author$project$CompilerGenerated$Decode$lowest6BitsMask);
		var q = $author$project$CompilerGenerated$Decode$unsafeToChar((bits1 >>> 12) & $author$project$CompilerGenerated$Decode$lowest6BitsMask);
		var p = $author$project$CompilerGenerated$Decode$unsafeToChar(bits1 >>> 18);
		var d = $author$project$CompilerGenerated$Decode$unsafeToChar(bits2 & $author$project$CompilerGenerated$Decode$lowest6BitsMask);
		var c = $author$project$CompilerGenerated$Decode$unsafeToChar((bits2 >>> 6) & $author$project$CompilerGenerated$Decode$lowest6BitsMask);
		var b = $author$project$CompilerGenerated$Decode$unsafeToChar((bits2 >>> 12) & $author$project$CompilerGenerated$Decode$lowest6BitsMask);
		var a = $author$project$CompilerGenerated$Decode$unsafeToChar(bits2 >>> 18);
		return A2(
			$elm$core$String$cons,
			x,
			A2(
				$elm$core$String$cons,
				y,
				A2(
					$elm$core$String$cons,
					z,
					A2(
						$elm$core$String$cons,
						w,
						A2(
							$elm$core$String$cons,
							a,
							A2(
								$elm$core$String$cons,
								b,
								A2(
									$elm$core$String$cons,
									c,
									A2(
										$elm$core$String$cons,
										d,
										A2(
											$elm$core$String$cons,
											p,
											A2(
												$elm$core$String$cons,
												q,
												A2(
													$elm$core$String$cons,
													r,
													A2($elm$core$String$cons, s, accum))))))))))));
	});
var $author$project$CompilerGenerated$Decode$decode18Help = F5(
	function (a, b, c, d, e) {
		var combined6 = ((255 & d) << 16) | e;
		var combined5 = d >>> 8;
		var combined4 = 16777215 & c;
		var combined3 = ((65535 & b) << 8) | (c >>> 24);
		var combined2 = ((255 & a) << 16) | (b >>> 16);
		var combined1 = a >>> 8;
		return A4(
			$author$project$CompilerGenerated$Decode$bitsToCharSpecialized,
			combined3,
			combined2,
			combined1,
			A4($author$project$CompilerGenerated$Decode$bitsToCharSpecialized, combined6, combined5, combined4, ''));
	});
var $author$project$CompilerGenerated$Decode$u16BE = $elm$bytes$Bytes$Decode$unsignedInt16($elm$bytes$Bytes$BE);
var $author$project$CompilerGenerated$Decode$u32BE = $elm$bytes$Bytes$Decode$unsignedInt32($elm$bytes$Bytes$BE);
var $author$project$CompilerGenerated$Decode$decode18Bytes = A6($elm$bytes$Bytes$Decode$map5, $author$project$CompilerGenerated$Decode$decode18Help, $author$project$CompilerGenerated$Decode$u32BE, $author$project$CompilerGenerated$Decode$u32BE, $author$project$CompilerGenerated$Decode$u32BE, $author$project$CompilerGenerated$Decode$u32BE, $author$project$CompilerGenerated$Decode$u16BE);
var $author$project$CompilerGenerated$Decode$loopHelp = function (_v0) {
	var remaining = _v0.remaining;
	var string = _v0.string;
	if (remaining >= 18) {
		return A2(
			$elm$bytes$Bytes$Decode$map,
			function (result) {
				return $elm$bytes$Bytes$Decode$Loop(
					{
						remaining: remaining - 18,
						string: _Utils_ap(string, result)
					});
			},
			$author$project$CompilerGenerated$Decode$decode18Bytes);
	} else {
		if (remaining >= 3) {
			var helper = F3(
				function (a, b, c) {
					var combined = ((a << 16) | (b << 8)) | c;
					return $elm$bytes$Bytes$Decode$Loop(
						{
							remaining: remaining - 3,
							string: _Utils_ap(
								string,
								A2($author$project$CompilerGenerated$Decode$bitsToChars, combined, 0))
						});
				});
			return A4($elm$bytes$Bytes$Decode$map3, helper, $elm$bytes$Bytes$Decode$unsignedInt8, $elm$bytes$Bytes$Decode$unsignedInt8, $elm$bytes$Bytes$Decode$unsignedInt8);
		} else {
			if (!remaining) {
				return $elm$bytes$Bytes$Decode$succeed(
					$elm$bytes$Bytes$Decode$Done(string));
			} else {
				if (remaining === 2) {
					var helper = F2(
						function (a, b) {
							var combined = (a << 16) | (b << 8);
							return $elm$bytes$Bytes$Decode$Done(
								_Utils_ap(
									string,
									A2($author$project$CompilerGenerated$Decode$bitsToChars, combined, 1)));
						});
					return A3($elm$bytes$Bytes$Decode$map2, helper, $elm$bytes$Bytes$Decode$unsignedInt8, $elm$bytes$Bytes$Decode$unsignedInt8);
				} else {
					return A2(
						$elm$bytes$Bytes$Decode$map,
						function (a) {
							return $elm$bytes$Bytes$Decode$Done(
								_Utils_ap(
									string,
									A2($author$project$CompilerGenerated$Decode$bitsToChars, a << 16, 2)));
						},
						$elm$bytes$Bytes$Decode$unsignedInt8);
				}
			}
		}
	}
};
var $author$project$CompilerGenerated$Decode$decoder = function (width) {
	return A2(
		$elm$bytes$Bytes$Decode$loop,
		{remaining: width, string: ''},
		$author$project$CompilerGenerated$Decode$loopHelp);
};
var $author$project$CompilerGenerated$Decode$fromBytes = function (bytes) {
	return A2(
		$elm$bytes$Bytes$Decode$decode,
		$author$project$CompilerGenerated$Decode$decoder(
			$elm$bytes$Bytes$width(bytes)),
		bytes);
};
var $author$project$CompilerGenerated$Base64$fromBytes = $author$project$CompilerGenerated$Decode$fromBytes;
var $author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$json_encode_Bytes = function (bytes) {
	return $elm$json$Json$Encode$object(
		_List_fromArray(
			[
				_Utils_Tuple2(
				'AsBase64',
				$elm$json$Json$Encode$string(
					A2(
						$elm$core$Maybe$withDefault,
						'Error encoding to base64',
						$author$project$CompilerGenerated$Base64$fromBytes(bytes))))
			]));
};
var $author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonEncode_2146051484 = function (valueToEncode) {
	return A2(
		$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonEncode_FileTree_FileTreeNode,
		function (type_arg) {
			return $author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$json_encode_Bytes(type_arg);
		},
		valueToEncode);
};
var $author$project$CompilationInterface$GenerateJsonConverters$jsonEncodeFileTreeNode = $author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonEncode_2146051484;
var $elm$json$Json$Encode$int = _Json_wrap;
var $author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonEncode_WorkspaceState_2021_01_BlobChangeSequenceElement = function (valueToEncode) {
	switch (valueToEncode.$) {
		case 'AddBytes':
			var tagArgument0 = valueToEncode.a;
			return $elm$json$Json$Encode$object(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'AddBytes',
						A2(
							$elm$json$Json$Encode$list,
							$elm$core$Basics$identity,
							_List_fromArray(
								[
									$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$json_encode_Bytes(tagArgument0)
								])))
					]));
		case 'RemoveBytes':
			var tagArgument0 = valueToEncode.a;
			return $elm$json$Json$Encode$object(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'RemoveBytes',
						A2(
							$elm$json$Json$Encode$list,
							$elm$core$Basics$identity,
							_List_fromArray(
								[
									$elm$json$Json$Encode$int(tagArgument0)
								])))
					]));
		default:
			var tagArgument0 = valueToEncode.a;
			return $elm$json$Json$Encode$object(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'ReuseBytes',
						A2(
							$elm$json$Json$Encode$list,
							$elm$core$Basics$identity,
							_List_fromArray(
								[
									$elm$json$Json$Encode$int(tagArgument0)
								])))
					]));
	}
};
var $author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonEncode_2130805252 = function (valueToEncode) {
	return $elm$json$Json$Encode$object(
		_List_fromArray(
			[
				_Utils_Tuple2(
				'base',
				$elm$json$Json$Encode$string(valueToEncode.base)),
				_Utils_Tuple2(
				'differenceFromBase',
				$elm$json$Json$Encode$object(
					_List_fromArray(
						[
							_Utils_Tuple2(
							'removeNodes',
							A2(
								$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonEncode__generic_List,
								function (type_arg) {
									return A2(
										$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonEncode__generic_List,
										function (type_arg_) {
											return $elm$json$Json$Encode$string(type_arg_);
										},
										type_arg);
								},
								valueToEncode.differenceFromBase.removeNodes)),
							_Utils_Tuple2(
							'changeBlobs',
							A2(
								$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonEncode__generic_List,
								function (type_arg) {
									return A2(
										$elm$json$Json$Encode$list,
										$elm$core$Basics$identity,
										_List_fromArray(
											[
												A2(
												$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonEncode__generic_List,
												function (type_arg_) {
													return $elm$json$Json$Encode$string(type_arg_);
												},
												function (_v0) {
													var item_0 = _v0.a;
													var item_1 = _v0.b;
													return item_0;
												}(type_arg)),
												A2(
												$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonEncode__generic_List,
												function (type_arg_) {
													return $author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonEncode_WorkspaceState_2021_01_BlobChangeSequenceElement(type_arg_);
												},
												function (_v1) {
													var item_0 = _v1.a;
													var item_1 = _v1.b;
													return item_1;
												}(type_arg))
											]));
								},
								valueToEncode.differenceFromBase.changeBlobs))
						])))
			]));
};
var $author$project$CompilationInterface$GenerateJsonConverters$jsonEncodeWorkspaceState_2021_01 = $author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonEncode_2130805252;
var $author$project$Frontend$WorkspaceStateInUrl$jsonEncodeWorkspaceStateDescription = function (workspaceStateDescription) {
	switch (workspaceStateDescription.$) {
		case 'LiteralWorkspaceState':
			var literalWorkspaceState = workspaceStateDescription.a;
			return $elm$json$Json$Encode$object(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'version_2020_12',
						$author$project$CompilationInterface$GenerateJsonConverters$jsonEncodeFileTreeNode(literalWorkspaceState))
					]));
		case 'LinkWorkspaceState':
			var link = workspaceStateDescription.a;
			return $elm$json$Json$Encode$string(link);
		default:
			var diffWorkspaceState = workspaceStateDescription.a;
			return $elm$json$Json$Encode$object(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'version_2021_01',
						$author$project$CompilationInterface$GenerateJsonConverters$jsonEncodeWorkspaceState_2021_01(diffWorkspaceState))
					]));
	}
};
var $folkertdev$elm_flate$LZ77$max_distance = 32768;
var $folkertdev$elm_flate$LZ77$maxWindowSize = $folkertdev$elm_flate$LZ77$max_distance;
var $elm$core$Set$Set_elm_builtin = function (a) {
	return {$: 'Set_elm_builtin', a: a};
};
var $elm$core$Dict$diff = F2(
	function (t1, t2) {
		return A3(
			$elm$core$Dict$foldl,
			F3(
				function (k, v, t) {
					return A2($elm$core$Dict$remove, k, t);
				}),
			t1,
			t2);
	});
var $elm$core$Set$diff = F2(
	function (_v0, _v1) {
		var dict1 = _v0.a;
		var dict2 = _v1.a;
		return $elm$core$Set$Set_elm_builtin(
			A2($elm$core$Dict$diff, dict1, dict2));
	});
var $jinjor$elm_diff$Diff$Added = function (a) {
	return {$: 'Added', a: a};
};
var $jinjor$elm_diff$Diff$CannotGetA = function (a) {
	return {$: 'CannotGetA', a: a};
};
var $jinjor$elm_diff$Diff$CannotGetB = function (a) {
	return {$: 'CannotGetB', a: a};
};
var $jinjor$elm_diff$Diff$NoChange = function (a) {
	return {$: 'NoChange', a: a};
};
var $jinjor$elm_diff$Diff$Removed = function (a) {
	return {$: 'Removed', a: a};
};
var $jinjor$elm_diff$Diff$UnexpectedPath = F2(
	function (a, b) {
		return {$: 'UnexpectedPath', a: a, b: b};
	});
var $jinjor$elm_diff$Diff$makeChangesHelp = F5(
	function (changes, getA, getB, _v0, path) {
		makeChangesHelp:
		while (true) {
			var x = _v0.a;
			var y = _v0.b;
			if (!path.b) {
				return $elm$core$Result$Ok(changes);
			} else {
				var _v2 = path.a;
				var prevX = _v2.a;
				var prevY = _v2.b;
				var tail = path.b;
				var change = function () {
					if (_Utils_eq(x - 1, prevX) && _Utils_eq(y - 1, prevY)) {
						var _v4 = getA(x);
						if (_v4.$ === 'Just') {
							var a = _v4.a;
							return $elm$core$Result$Ok(
								$jinjor$elm_diff$Diff$NoChange(a));
						} else {
							return $elm$core$Result$Err(
								$jinjor$elm_diff$Diff$CannotGetA(x));
						}
					} else {
						if (_Utils_eq(x, prevX)) {
							var _v5 = getB(y);
							if (_v5.$ === 'Just') {
								var b = _v5.a;
								return $elm$core$Result$Ok(
									$jinjor$elm_diff$Diff$Added(b));
							} else {
								return $elm$core$Result$Err(
									$jinjor$elm_diff$Diff$CannotGetB(y));
							}
						} else {
							if (_Utils_eq(y, prevY)) {
								var _v6 = getA(x);
								if (_v6.$ === 'Just') {
									var a = _v6.a;
									return $elm$core$Result$Ok(
										$jinjor$elm_diff$Diff$Removed(a));
								} else {
									return $elm$core$Result$Err(
										$jinjor$elm_diff$Diff$CannotGetA(x));
								}
							} else {
								return $elm$core$Result$Err(
									A2(
										$jinjor$elm_diff$Diff$UnexpectedPath,
										_Utils_Tuple2(x, y),
										path));
							}
						}
					}
				}();
				if (change.$ === 'Ok') {
					var c = change.a;
					var $temp$changes = A2($elm$core$List$cons, c, changes),
						$temp$getA = getA,
						$temp$getB = getB,
						$temp$_v0 = _Utils_Tuple2(prevX, prevY),
						$temp$path = tail;
					changes = $temp$changes;
					getA = $temp$getA;
					getB = $temp$getB;
					_v0 = $temp$_v0;
					path = $temp$path;
					continue makeChangesHelp;
				} else {
					var e = change.a;
					return $elm$core$Result$Err(e);
				}
			}
		}
	});
var $jinjor$elm_diff$Diff$makeChanges = F3(
	function (getA, getB, path) {
		if (!path.b) {
			return $elm$core$Result$Ok(_List_Nil);
		} else {
			var latest = path.a;
			var tail = path.b;
			return A5($jinjor$elm_diff$Diff$makeChangesHelp, _List_Nil, getA, getB, latest, tail);
		}
	});
var $jinjor$elm_diff$Diff$Continue = function (a) {
	return {$: 'Continue', a: a};
};
var $jinjor$elm_diff$Diff$Found = function (a) {
	return {$: 'Found', a: a};
};
var $jinjor$elm_diff$Diff$step = F4(
	function (snake_, offset, k, v) {
		var fromTop = A2(
			$elm$core$Maybe$withDefault,
			_List_Nil,
			A2($elm$core$Array$get, (k + 1) + offset, v));
		var fromLeft = A2(
			$elm$core$Maybe$withDefault,
			_List_Nil,
			A2($elm$core$Array$get, (k - 1) + offset, v));
		var _v0 = function () {
			var _v2 = _Utils_Tuple2(fromLeft, fromTop);
			if (!_v2.a.b) {
				if (!_v2.b.b) {
					return _Utils_Tuple2(
						_List_Nil,
						_Utils_Tuple2(0, 0));
				} else {
					var _v3 = _v2.b;
					var _v4 = _v3.a;
					var topX = _v4.a;
					var topY = _v4.b;
					return _Utils_Tuple2(
						fromTop,
						_Utils_Tuple2(topX + 1, topY));
				}
			} else {
				if (!_v2.b.b) {
					var _v5 = _v2.a;
					var _v6 = _v5.a;
					var leftX = _v6.a;
					var leftY = _v6.b;
					return _Utils_Tuple2(
						fromLeft,
						_Utils_Tuple2(leftX, leftY + 1));
				} else {
					var _v7 = _v2.a;
					var _v8 = _v7.a;
					var leftX = _v8.a;
					var leftY = _v8.b;
					var _v9 = _v2.b;
					var _v10 = _v9.a;
					var topX = _v10.a;
					var topY = _v10.b;
					return (_Utils_cmp(leftY + 1, topY) > -1) ? _Utils_Tuple2(
						fromLeft,
						_Utils_Tuple2(leftX, leftY + 1)) : _Utils_Tuple2(
						fromTop,
						_Utils_Tuple2(topX + 1, topY));
				}
			}
		}();
		var path = _v0.a;
		var _v1 = _v0.b;
		var x = _v1.a;
		var y = _v1.b;
		var _v11 = A3(
			snake_,
			x + 1,
			y + 1,
			A2(
				$elm$core$List$cons,
				_Utils_Tuple2(x, y),
				path));
		var newPath = _v11.a;
		var goal = _v11.b;
		return goal ? $jinjor$elm_diff$Diff$Found(newPath) : $jinjor$elm_diff$Diff$Continue(
			A3($elm$core$Array$set, k + offset, newPath, v));
	});
var $jinjor$elm_diff$Diff$onpLoopK = F4(
	function (snake_, offset, ks, v) {
		onpLoopK:
		while (true) {
			if (!ks.b) {
				return $jinjor$elm_diff$Diff$Continue(v);
			} else {
				var k = ks.a;
				var ks_ = ks.b;
				var _v1 = A4($jinjor$elm_diff$Diff$step, snake_, offset, k, v);
				if (_v1.$ === 'Found') {
					var path = _v1.a;
					return $jinjor$elm_diff$Diff$Found(path);
				} else {
					var v_ = _v1.a;
					var $temp$snake_ = snake_,
						$temp$offset = offset,
						$temp$ks = ks_,
						$temp$v = v_;
					snake_ = $temp$snake_;
					offset = $temp$offset;
					ks = $temp$ks;
					v = $temp$v;
					continue onpLoopK;
				}
			}
		}
	});
var $jinjor$elm_diff$Diff$onpLoopP = F5(
	function (snake_, delta, offset, p, v) {
		onpLoopP:
		while (true) {
			var ks = (delta > 0) ? _Utils_ap(
				$elm$core$List$reverse(
					A2($elm$core$List$range, delta + 1, delta + p)),
				A2($elm$core$List$range, -p, delta)) : _Utils_ap(
				$elm$core$List$reverse(
					A2($elm$core$List$range, delta + 1, p)),
				A2($elm$core$List$range, (-p) + delta, delta));
			var _v0 = A4($jinjor$elm_diff$Diff$onpLoopK, snake_, offset, ks, v);
			if (_v0.$ === 'Found') {
				var path = _v0.a;
				return path;
			} else {
				var v_ = _v0.a;
				var $temp$snake_ = snake_,
					$temp$delta = delta,
					$temp$offset = offset,
					$temp$p = p + 1,
					$temp$v = v_;
				snake_ = $temp$snake_;
				delta = $temp$delta;
				offset = $temp$offset;
				p = $temp$p;
				v = $temp$v;
				continue onpLoopP;
			}
		}
	});
var $jinjor$elm_diff$Diff$snake = F5(
	function (getA, getB, nextX, nextY, path) {
		snake:
		while (true) {
			var _v0 = _Utils_Tuple2(
				getA(nextX),
				getB(nextY));
			_v0$2:
			while (true) {
				if (_v0.a.$ === 'Just') {
					if (_v0.b.$ === 'Just') {
						var a = _v0.a.a;
						var b = _v0.b.a;
						if (_Utils_eq(a, b)) {
							var $temp$getA = getA,
								$temp$getB = getB,
								$temp$nextX = nextX + 1,
								$temp$nextY = nextY + 1,
								$temp$path = A2(
								$elm$core$List$cons,
								_Utils_Tuple2(nextX, nextY),
								path);
							getA = $temp$getA;
							getB = $temp$getB;
							nextX = $temp$nextX;
							nextY = $temp$nextY;
							path = $temp$path;
							continue snake;
						} else {
							return _Utils_Tuple2(path, false);
						}
					} else {
						break _v0$2;
					}
				} else {
					if (_v0.b.$ === 'Nothing') {
						var _v1 = _v0.a;
						var _v2 = _v0.b;
						return _Utils_Tuple2(path, true);
					} else {
						break _v0$2;
					}
				}
			}
			return _Utils_Tuple2(path, false);
		}
	});
var $jinjor$elm_diff$Diff$onp = F4(
	function (getA, getB, m, n) {
		var v = A2(
			$elm$core$Array$initialize,
			(m + n) + 1,
			$elm$core$Basics$always(_List_Nil));
		var delta = n - m;
		return A5(
			$jinjor$elm_diff$Diff$onpLoopP,
			A2($jinjor$elm_diff$Diff$snake, getA, getB),
			delta,
			m,
			0,
			v);
	});
var $jinjor$elm_diff$Diff$testDiff = F2(
	function (a, b) {
		var arrB = $elm$core$Array$fromList(b);
		var getB = function (y) {
			return A2($elm$core$Array$get, y - 1, arrB);
		};
		var n = $elm$core$Array$length(arrB);
		var arrA = $elm$core$Array$fromList(a);
		var getA = function (x) {
			return A2($elm$core$Array$get, x - 1, arrA);
		};
		var m = $elm$core$Array$length(arrA);
		var path = A4($jinjor$elm_diff$Diff$onp, getA, getB, m, n);
		return A3($jinjor$elm_diff$Diff$makeChanges, getA, getB, path);
	});
var $jinjor$elm_diff$Diff$diff = F2(
	function (a, b) {
		var _v0 = A2($jinjor$elm_diff$Diff$testDiff, a, b);
		if (_v0.$ === 'Ok') {
			var changes = _v0.a;
			return changes;
		} else {
			return _List_Nil;
		}
	});
var $author$project$WorkspaceState_2021_01$diffChangesAggregateNoChangeSequences = function (changes) {
	var aggregateRecursiveReverted = F2(
		function (aggregate, remaining) {
			aggregateRecursiveReverted:
			while (true) {
				if (!remaining.b) {
					return aggregate;
				} else {
					if (((remaining.a.$ === 'NoChange') && remaining.b.b) && (remaining.b.a.$ === 'NoChange')) {
						var firstNoChange = remaining.a.a;
						var _v1 = remaining.b;
						var secondNoChange = _v1.a.a;
						var remainingTail = _v1.b;
						var $temp$aggregate = aggregate,
							$temp$remaining = A2(
							$elm$core$List$cons,
							$jinjor$elm_diff$Diff$NoChange(
								_Utils_ap(firstNoChange, secondNoChange)),
							remainingTail);
						aggregate = $temp$aggregate;
						remaining = $temp$remaining;
						continue aggregateRecursiveReverted;
					} else {
						var nextRemaining = remaining.a;
						var remainingTail = remaining.b;
						var $temp$aggregate = A2($elm$core$List$cons, nextRemaining, aggregate),
							$temp$remaining = remainingTail;
						aggregate = $temp$aggregate;
						remaining = $temp$remaining;
						continue aggregateRecursiveReverted;
					}
				}
			}
		});
	return $elm$core$List$reverse(
		A2(aggregateRecursiveReverted, _List_Nil, changes));
};
var $elm_community$list_extra$List$Extra$findIndexHelp = F3(
	function (index, predicate, list) {
		findIndexHelp:
		while (true) {
			if (!list.b) {
				return $elm$core$Maybe$Nothing;
			} else {
				var x = list.a;
				var xs = list.b;
				if (predicate(x)) {
					return $elm$core$Maybe$Just(index);
				} else {
					var $temp$index = index + 1,
						$temp$predicate = predicate,
						$temp$list = xs;
					index = $temp$index;
					predicate = $temp$predicate;
					list = $temp$list;
					continue findIndexHelp;
				}
			}
		}
	});
var $elm_community$list_extra$List$Extra$findIndex = $elm_community$list_extra$List$Extra$findIndexHelp(0);
var $elm_community$list_extra$List$Extra$splitAt = F2(
	function (n, xs) {
		return _Utils_Tuple2(
			A2($elm$core$List$take, n, xs),
			A2($elm$core$List$drop, n, xs));
	});
var $elm_community$list_extra$List$Extra$splitWhen = F2(
	function (predicate, list) {
		return A2(
			$elm$core$Maybe$map,
			function (i) {
				return A2($elm_community$list_extra$List$Extra$splitAt, i, list);
			},
			A2($elm_community$list_extra$List$Extra$findIndex, predicate, list));
	});
var $author$project$WorkspaceState_2021_01$splitBlobValueAtLineBreaks = function (blobValue) {
	var isLineBreakCharacter = function (_char) {
		return (_char === 10) || (_char === 13);
	};
	var breakRecursiveReverted = F2(
		function (broken, remaining) {
			breakRecursiveReverted:
			while (true) {
				var _v0 = A2($elm_community$list_extra$List$Extra$splitWhen, isLineBreakCharacter, remaining);
				if (_v0.$ === 'Nothing') {
					return A2($elm$core$List$cons, remaining, broken);
				} else {
					var _v1 = _v0.a;
					var nextElement = _v1.a;
					var nextRemainingPlusHead = _v1.b;
					if (!nextRemainingPlusHead.b) {
						return A2($elm$core$List$cons, remaining, broken);
					} else {
						var nextElementTail = nextRemainingPlusHead.a;
						var nextRemaining = nextRemainingPlusHead.b;
						var $temp$broken = A2(
							$elm$core$List$cons,
							_Utils_ap(
								nextElement,
								_List_fromArray(
									[nextElementTail])),
							broken),
							$temp$remaining = nextRemaining;
						broken = $temp$broken;
						remaining = $temp$remaining;
						continue breakRecursiveReverted;
					}
				}
			}
		});
	return $elm$core$List$reverse(
		A2(breakRecursiveReverted, _List_Nil, blobValue));
};
var $author$project$WorkspaceState_2021_01$findBlobChanges = F2(
	function (baseBlobValue, blobValue) {
		var blobValueBlocks = $author$project$WorkspaceState_2021_01$splitBlobValueAtLineBreaks(
			$TSFoster$elm_bytes_extra$Bytes$Extra$toByteValues(blobValue));
		var baseBlobValueInts = $TSFoster$elm_bytes_extra$Bytes$Extra$toByteValues(baseBlobValue);
		var baseBlobValueBlocks = $author$project$WorkspaceState_2021_01$splitBlobValueAtLineBreaks(baseBlobValueInts);
		var changes = $author$project$WorkspaceState_2021_01$diffChangesAggregateNoChangeSequences(
			A2($jinjor$elm_diff$Diff$diff, baseBlobValueBlocks, blobValueBlocks));
		return A2(
			$elm$core$List$map,
			function (change) {
				switch (change.$) {
					case 'NoChange':
						var noChange = change.a;
						return $author$project$WorkspaceState_2021_01$ReuseBytes(
							$elm$core$List$length(noChange));
					case 'Removed':
						var removed = change.a;
						return $author$project$WorkspaceState_2021_01$RemoveBytes(
							$elm$core$List$length(removed));
					default:
						var added = change.a;
						return $author$project$WorkspaceState_2021_01$AddBytes(
							$TSFoster$elm_bytes_extra$Bytes$Extra$fromByteValues(added));
				}
			},
			changes);
	});
var $elm$core$Set$empty = $elm$core$Set$Set_elm_builtin($elm$core$Dict$empty);
var $elm$core$Set$insert = F2(
	function (key, _v0) {
		var dict = _v0.a;
		return $elm$core$Set$Set_elm_builtin(
			A3($elm$core$Dict$insert, key, _Utils_Tuple0, dict));
	});
var $elm$core$Set$fromList = function (list) {
	return A3($elm$core$List$foldl, $elm$core$Set$insert, $elm$core$Set$empty, list);
};
var $author$project$FileTreeInWorkspace$searchWorkspaceStateDifference_2021_01 = F2(
	function (workspaceState, _v0) {
		var baseComposition = _v0.baseComposition;
		var workspaceStateBlobs = $author$project$FileTree$flatListOfBlobsFromFileTreeNode(workspaceState);
		var workspaceStateBlobsPaths = $elm$core$Set$fromList(
			A2($elm$core$List$map, $elm$core$Tuple$first, workspaceStateBlobs));
		var baseCompositionBlobs = $author$project$FileTree$flatListOfBlobsFromFileTreeNode(baseComposition);
		var baseCompositionBlobsDict = $elm$core$Dict$fromList(baseCompositionBlobs);
		var baseCompositionBlobsPaths = $elm$core$Set$fromList(
			A2($elm$core$List$map, $elm$core$Tuple$first, baseCompositionBlobs));
		var removeNodes = $elm$core$Set$toList(
			A2($elm$core$Set$diff, baseCompositionBlobsPaths, workspaceStateBlobsPaths));
		var addedOrChangedBlobs = A2(
			$elm$core$List$filter,
			function (_v2) {
				var blobPath = _v2.a;
				var newBlobContent = _v2.b;
				return !A2(
					$elm$core$Maybe$withDefault,
					false,
					A2(
						$elm$core$Maybe$map,
						A2(
							$elm$core$Basics$composeR,
							function ($) {
								return $.asBase64;
							},
							$elm$core$Basics$eq(newBlobContent.asBase64)),
						A2($elm$core$Dict$get, blobPath, baseCompositionBlobsDict)));
			},
			workspaceStateBlobs);
		var addedOrChangedBlobsWithHash = A2(
			$elm$core$List$map,
			function (_v1) {
				var blobPath = _v1.a;
				var blobValue = _v1.b;
				var baseCompositionBlobValue = A2(
					$elm$core$Maybe$withDefault,
					$TSFoster$elm_bytes_extra$Bytes$Extra$empty,
					A2(
						$elm$core$Maybe$map,
						function ($) {
							return $.asBytes;
						},
						A2($elm$core$Dict$get, blobPath, baseCompositionBlobsDict)));
				var changesFromBaseBlob = A2($author$project$WorkspaceState_2021_01$findBlobChanges, baseCompositionBlobValue, blobValue.asBytes);
				return {
					blobHash: $folkertdev$elm_sha2$SHA256$toHex(
						$author$project$FileTreeInWorkspace$compositionHashFromFileTreeNode(
							$author$project$FileTree$BlobNode(blobValue))),
					blobPath: blobPath,
					blobValue: blobValue,
					changesFromBaseBlob: changesFromBaseBlob
				};
			},
			addedOrChangedBlobs);
		return $elm$core$Result$Ok(
			{
				changeBlobs: A2(
					$elm$core$List$map,
					function (blob) {
						return _Utils_Tuple2(blob.blobPath, blob.changesFromBaseBlob);
					},
					addedOrChangedBlobsWithHash),
				removeNodes: removeNodes
			});
	});
var $elm$core$List$sortBy = _List_sortBy;
var $elm$url$Url$Builder$QueryParameter = F2(
	function (a, b) {
		return {$: 'QueryParameter', a: a, b: b};
	});
var $elm$url$Url$percentEncode = _Url_percentEncode;
var $elm$url$Url$Builder$string = F2(
	function (key, value) {
		return A2(
			$elm$url$Url$Builder$QueryParameter,
			$elm$url$Url$percentEncode(key),
			$elm$url$Url$percentEncode(value));
	});
var $elm$url$Url$addPort = F2(
	function (maybePort, starter) {
		if (maybePort.$ === 'Nothing') {
			return starter;
		} else {
			var port_ = maybePort.a;
			return starter + (':' + $elm$core$String$fromInt(port_));
		}
	});
var $elm$url$Url$addPrefixed = F3(
	function (prefix, maybeSegment, starter) {
		if (maybeSegment.$ === 'Nothing') {
			return starter;
		} else {
			var segment = maybeSegment.a;
			return _Utils_ap(
				starter,
				_Utils_ap(prefix, segment));
		}
	});
var $elm$url$Url$toString = function (url) {
	var http = function () {
		var _v0 = url.protocol;
		if (_v0.$ === 'Http') {
			return 'http://';
		} else {
			return 'https://';
		}
	}();
	return A3(
		$elm$url$Url$addPrefixed,
		'#',
		url.fragment,
		A3(
			$elm$url$Url$addPrefixed,
			'?',
			url.query,
			_Utils_ap(
				A2(
					$elm$url$Url$addPort,
					url.port_,
					_Utils_ap(http, url.host)),
				url.path)));
};
var $author$project$Frontend$WorkspaceStateInUrl$setWorkspaceStateInUrl = F4(
	function (workspaceState, maybeWorkspaceStateBase, optionalParameters, url) {
		var workspaceStateJustBytes = $author$project$FileTreeInWorkspace$mapBlobsToBytes(workspaceState);
		var workspaceStateDescription = function () {
			if (maybeWorkspaceStateBase.$ === 'Nothing') {
				return $author$project$Frontend$WorkspaceStateInUrl$LiteralWorkspaceState(workspaceStateJustBytes);
			} else {
				var workspaceStateBase = maybeWorkspaceStateBase.a;
				if (_Utils_eq(
					$author$project$Frontend$WorkspaceStateInUrl$workspaceStateCompositionHash(workspaceStateJustBytes),
					$author$project$Frontend$WorkspaceStateInUrl$workspaceStateCompositionHash(
						$author$project$FileTreeInWorkspace$mapBlobsToBytes(workspaceStateBase.fileTree)))) {
					return $author$project$Frontend$WorkspaceStateInUrl$LinkWorkspaceState(workspaceStateBase.urlInCommit);
				} else {
					var _v4 = A2(
						$author$project$FileTreeInWorkspace$searchWorkspaceStateDifference_2021_01,
						workspaceState,
						{baseComposition: workspaceStateBase.fileTree});
					if (_v4.$ === 'Err') {
						return $author$project$Frontend$WorkspaceStateInUrl$LiteralWorkspaceState(workspaceStateJustBytes);
					} else {
						var diffModel = _v4.a;
						return $author$project$Frontend$WorkspaceStateInUrl$DiffWorkspaceState_Version_2021_01(
							{base: workspaceStateBase.urlInCommit, differenceFromBase: diffModel});
					}
				}
			}
		}();
		var optionalQueryParameters = function () {
			var _v2 = optionalParameters.filePathToOpen;
			if (_v2.$ === 'Nothing') {
				return _List_Nil;
			} else {
				var filePathToOpen = _v2.a;
				return _List_fromArray(
					[
						A2(
						$elm$url$Url$Builder$string,
						$author$project$Frontend$WorkspaceStateInUrl$filePathToOpenQueryParameterName,
						A2($elm$core$String$join, '/', filePathToOpen))
					]);
			}
		}();
		var _v0 = function () {
			if (workspaceStateDescription.$ === 'LinkWorkspaceState') {
				var link = workspaceStateDescription.a;
				return _Utils_Tuple2(link, false);
			} else {
				return _Utils_Tuple2(
					A2(
						$elm$json$Json$Encode$encode,
						0,
						$author$project$Frontend$WorkspaceStateInUrl$jsonEncodeWorkspaceStateDescription(workspaceStateDescription)),
					true);
			}
		}();
		var workspaceStateString = _v0.a;
		var applyCompression = _v0.b;
		var workspaceStateQueryParameter = function () {
			if (applyCompression) {
				var workspaceStateStringBytes = $elm$bytes$Bytes$Encode$encode(
					$elm$bytes$Bytes$Encode$string(workspaceStateString));
				var compression = $folkertdev$elm_flate$Flate$WithWindowSize($folkertdev$elm_flate$LZ77$maxWindowSize);
				var deflatedWithDynamic = A2(
					$folkertdev$elm_flate$Flate$deflateWithOptions,
					$folkertdev$elm_flate$Flate$Dynamic(compression),
					workspaceStateStringBytes);
				var deflatedWithStatic = A2(
					$folkertdev$elm_flate$Flate$deflateWithOptions,
					$folkertdev$elm_flate$Flate$Static(compression),
					workspaceStateStringBytes);
				var deflatedBytes = A2(
					$elm$core$Maybe$withDefault,
					deflatedWithStatic,
					$elm$core$List$head(
						A2(
							$elm$core$List$sortBy,
							$elm$bytes$Bytes$width,
							_List_fromArray(
								[deflatedWithStatic, deflatedWithDynamic]))));
				return A2(
					$elm$url$Url$Builder$string,
					$author$project$Frontend$WorkspaceStateInUrl$workspaceStateDeflateBase64QueryParameterName,
					A2(
						$elm$core$Maybe$withDefault,
						'Failed to encode as base64',
						$danfishgold$base64_bytes$Base64$fromBytes(deflatedBytes)));
			} else {
				return A2($elm$url$Url$Builder$string, $author$project$Frontend$WorkspaceStateInUrl$workspaceStateQueryParameterName, workspaceStateString);
			}
		}();
		return A2(
			$elm$core$Maybe$withDefault,
			_Utils_update(
				url,
				{host: 'Error: Failed to parse URL from String'}),
			$elm$url$Url$fromString(
				A3(
					$elm$url$Url$Builder$crossOrigin,
					$elm$url$Url$toString(
						_Utils_update(
							url,
							{fragment: $elm$core$Maybe$Nothing, path: '', query: $elm$core$Maybe$Nothing})),
					_List_Nil,
					A2(
						$elm$core$List$cons,
						workspaceStateQueryParameter,
						A2(
							$elm$core$List$cons,
							A2(
								$elm$url$Url$Builder$string,
								$author$project$Frontend$WorkspaceStateInUrl$workspaceStateHashQueryParameterName,
								$author$project$Frontend$WorkspaceStateInUrl$workspaceStateCompositionHash(workspaceStateJustBytes)),
							optionalQueryParameters)))));
	});
var $elm$core$Result$toMaybe = function (result) {
	if (result.$ === 'Ok') {
		var v = result.a;
		return $elm$core$Maybe$Just(v);
	} else {
		return $elm$core$Maybe$Nothing;
	}
};
var $author$project$Frontend$Main$setWorkspaceStateInUrlForBookmark = F3(
	function (_v0, workspaceActive, state) {
		var createDiffIfBaseAvailable = _v0.createDiffIfBaseAvailable;
		var filePathToOpen = function () {
			var _v1 = workspaceActive.editing;
			if (_v1.$ === 'Nothing') {
				return $elm$core$Maybe$Nothing;
			} else {
				var editing = _v1.a;
				var _v2 = editing.fileLocation;
				var directoryPath = _v2.a;
				var fileName = _v2.b;
				return $elm$core$Maybe$Just(
					_Utils_ap(
						directoryPath,
						_List_fromArray(
							[fileName])));
			}
		}();
		var baseToUse = (!createDiffIfBaseAvailable) ? $elm$core$Maybe$Nothing : A2(
			$elm$core$Maybe$andThen,
			$elm$core$Result$toMaybe,
			A2(
				$elm$core$Maybe$andThen,
				A2($elm$core$Basics$composeR, $elm$core$Tuple$second, $elm$core$Result$toMaybe),
				state.lastBackendLoadFromGitResult));
		return A4(
			$author$project$Frontend$WorkspaceStateInUrl$setWorkspaceStateInUrl,
			workspaceActive.fileTree,
			baseToUse,
			{filePathToOpen: filePathToOpen},
			state.url);
	});
var $elm$file$File$toBytes = _File_toBytes;
var $agu_z$elm_zip$Internal$Encode$i16 = $elm$bytes$Bytes$Encode$unsignedInt16($elm$bytes$Bytes$LE);
var $agu_z$elm_zip$Internal$Encode$compressionMethod = function (method) {
	return $agu_z$elm_zip$Internal$Encode$i16(
		function () {
			switch (method.$) {
				case 'Stored':
					return 0;
				case 'Deflated':
					return 8;
				default:
					var x = method.a;
					return x;
			}
		}());
};
var $elm$bytes$Bytes$Encode$getStringWidth = _Bytes_getStringWidth;
var $agu_z$elm_zip$Internal$Encode$i32 = $elm$bytes$Bytes$Encode$unsignedInt32($elm$bytes$Bytes$LE);
var $agu_z$elm_zip$Internal$Encode$advance = F2(
	function (entry, step) {
		var meta = entry.b;
		var fileNameWidth = $elm$bytes$Bytes$Encode$getStringWidth(meta.fileName);
		var extraFieldWidth = $elm$bytes$Bytes$width(meta.extraField);
		var data = function () {
			var _v0 = $agu_z$elm_zip$Internal$Decode$readFile(entry);
			if (_v0.$ === 'Just') {
				var bytes = _v0.a;
				return _List_fromArray(
					[
						$elm$bytes$Bytes$Encode$bytes(bytes)
					]);
			} else {
				return _List_Nil;
			}
		}();
		var commonWidth = (26 + fileNameWidth) + extraFieldWidth;
		var localFileWidth = (4 + commonWidth) + meta.compressedSize;
		var commonHeader = $elm$bytes$Bytes$Encode$sequence(
			_List_fromArray(
				[
					$agu_z$elm_zip$Internal$Encode$i16(meta.extractMinVersion),
					$agu_z$elm_zip$Internal$Encode$i16(meta.flag),
					$agu_z$elm_zip$Internal$Encode$compressionMethod(meta.compressionMethod),
					$agu_z$elm_zip$Internal$Encode$i32(meta.lastModified),
					$agu_z$elm_zip$Internal$Encode$i32(meta.crc32),
					$agu_z$elm_zip$Internal$Encode$i32(meta.compressedSize),
					$agu_z$elm_zip$Internal$Encode$i32(meta.uncompressedSize),
					$agu_z$elm_zip$Internal$Encode$i16(fileNameWidth),
					$agu_z$elm_zip$Internal$Encode$i16(extraFieldWidth)
				]));
		var localFile = $elm$bytes$Bytes$Encode$sequence(
			_Utils_ap(
				_List_fromArray(
					[
						$agu_z$elm_zip$Internal$Encode$i32(67324752),
						commonHeader,
						$elm$bytes$Bytes$Encode$string(meta.fileName),
						$elm$bytes$Bytes$Encode$bytes(meta.extraField)
					]),
				data));
		var commentWidth = $elm$bytes$Bytes$Encode$getStringWidth(meta.comment);
		var record = $elm$bytes$Bytes$Encode$sequence(
			_List_fromArray(
				[
					$agu_z$elm_zip$Internal$Encode$i32(33639248),
					$agu_z$elm_zip$Internal$Encode$i16(meta.madeBy),
					commonHeader,
					$agu_z$elm_zip$Internal$Encode$i16(commentWidth),
					$agu_z$elm_zip$Internal$Encode$i16(0),
					$agu_z$elm_zip$Internal$Encode$i16(meta.internalAttributes),
					$agu_z$elm_zip$Internal$Encode$i32(meta.externalAttributes),
					$agu_z$elm_zip$Internal$Encode$i32(step.position),
					$elm$bytes$Bytes$Encode$string(meta.fileName),
					$elm$bytes$Bytes$Encode$bytes(meta.extraField),
					$elm$bytes$Bytes$Encode$string(meta.comment)
				]));
		var recordWidth = (20 + commonWidth) + commentWidth;
		return {
			directory: $elm$bytes$Bytes$Encode$sequence(
				_List_fromArray(
					[step.directory, record])),
			directorySize: step.directorySize + recordWidth,
			local: $elm$bytes$Bytes$Encode$sequence(
				_List_fromArray(
					[step.local, localFile])),
			position: step.position + localFileWidth
		};
	});
var $agu_z$elm_zip$Internal$Encode$endOfCentralDirectory = function (_v0) {
	var recordCount = _v0.recordCount;
	var size = _v0.size;
	var startOffset = _v0.startOffset;
	return $elm$bytes$Bytes$Encode$sequence(
		_List_fromArray(
			[
				$agu_z$elm_zip$Internal$Encode$i32(101010256),
				$agu_z$elm_zip$Internal$Encode$i16(0),
				$agu_z$elm_zip$Internal$Encode$i16(0),
				$agu_z$elm_zip$Internal$Encode$i16(recordCount),
				$agu_z$elm_zip$Internal$Encode$i16(recordCount),
				$agu_z$elm_zip$Internal$Encode$i32(size),
				$agu_z$elm_zip$Internal$Encode$i32(startOffset),
				$agu_z$elm_zip$Internal$Encode$i16(0)
			]));
};
var $agu_z$elm_zip$Internal$Encode$encodeEntries = F3(
	function (recordCount, entries, step) {
		encodeEntries:
		while (true) {
			if (!entries.b) {
				return $elm$bytes$Bytes$Encode$sequence(
					_List_fromArray(
						[
							step.local,
							step.directory,
							$agu_z$elm_zip$Internal$Encode$endOfCentralDirectory(
							{recordCount: recordCount, size: step.directorySize, startOffset: step.position})
						]));
			} else {
				var entry = entries.a;
				var tail = entries.b;
				var $temp$recordCount = recordCount,
					$temp$entries = tail,
					$temp$step = A2($agu_z$elm_zip$Internal$Encode$advance, entry, step);
				recordCount = $temp$recordCount;
				entries = $temp$entries;
				step = $temp$step;
				continue encodeEntries;
			}
		}
	});
var $agu_z$elm_zip$Internal$Encode$writeArchive = function (entries) {
	return $elm$bytes$Bytes$Encode$encode(
		A3(
			$agu_z$elm_zip$Internal$Encode$encodeEntries,
			$elm$core$List$length(entries),
			entries,
			{
				directory: $elm$bytes$Bytes$Encode$sequence(_List_Nil),
				directorySize: 0,
				local: $elm$bytes$Bytes$Encode$sequence(_List_Nil),
				position: 0
			}));
};
var $agu_z$elm_zip$Zip$toBytes = function (_v0) {
	var allEntries = _v0.a;
	return $agu_z$elm_zip$Internal$Encode$writeArchive(allEntries);
};
var $author$project$Frontend$Main$updateForUserInputLoadFromGit = F3(
	function (_v0, event, dialogStateBefore) {
		var time = _v0.time;
		if (event.$ === 'LoadFromGitEnterUrlEvent') {
			var urlIntoGitRepository = event.a.urlIntoGitRepository;
			if ((!_Utils_eq(dialogStateBefore.request, $elm$core$Maybe$Nothing)) || (!_Utils_eq(dialogStateBefore.loadCompositionResult, $elm$core$Maybe$Nothing))) {
				return _Utils_Tuple2(dialogStateBefore, $elm$core$Platform$Cmd$none);
			} else {
				var dialogState = {loadCompositionResult: $elm$core$Maybe$Nothing, request: $elm$core$Maybe$Nothing, urlIntoGitRepository: urlIntoGitRepository};
				return _Utils_Tuple2(dialogState, $elm$core$Platform$Cmd$none);
			}
		} else {
			var urlIntoGitRepository = event.a.urlIntoGitRepository;
			var trimmedUrl = $elm$core$String$trim(urlIntoGitRepository);
			if (trimmedUrl === '') {
				return _Utils_Tuple2(dialogStateBefore, $elm$core$Platform$Cmd$none);
			} else {
				var dialogState = {
					loadCompositionResult: $elm$core$Maybe$Nothing,
					request: $elm$core$Maybe$Just(
						{time: time, url: urlIntoGitRepository}),
					urlIntoGitRepository: urlIntoGitRepository
				};
				return _Utils_Tuple2(
					dialogState,
					$author$project$Frontend$Main$loadFromGitCmd(urlIntoGitRepository));
			}
		}
	});
var $elm$core$String$toLower = _String_toLower;
var $author$project$Frontend$Main$updateUserClickedLinkInPreview = F2(
	function (_v0, stateBefore) {
		var href = _v0.href;
		var _v1 = $elm$url$Url$fromString(href);
		if (_v1.$ === 'Nothing') {
			return _Utils_Tuple2(stateBefore, $elm$core$Platform$Cmd$none);
		} else {
			var url = _v1.a;
			if ((!_Utils_eq(url.host, stateBefore.url.host)) && ($elm$core$String$toLower(url.host) !== 'elm-editor.com')) {
				return _Utils_Tuple2(stateBefore, $elm$core$Platform$Cmd$none);
			} else {
				var _v2 = $author$project$Frontend$WorkspaceStateInUrl$workspaceStateDescriptionFromUrl(url);
				if (_v2.$ === 'Nothing') {
					return _Utils_Tuple2(stateBefore, $elm$core$Platform$Cmd$none);
				} else {
					if (_v2.a.$ === 'Err') {
						return _Utils_Tuple2(stateBefore, $elm$core$Platform$Cmd$none);
					} else {
						return A2($author$project$Frontend$Main$processEventUrlChanged, url, stateBefore);
					}
				}
			}
		}
	});
var $author$project$Frontend$FileEditor$ElmContent = {$: 'ElmContent'};
var $author$project$FrontendBackendInterface$ElmMakeOutputTypeHtml = {$: 'ElmMakeOutputTypeHtml'};
var $author$project$CompileElmApp$LocatedInSourceFiles = F2(
	function (a, b) {
		return {$: 'LocatedInSourceFiles', a: a, b: b};
	});
var $author$project$CompileElmApp$OtherCompilationError = function (a) {
	return {$: 'OtherCompilationError', a: a};
};
var $author$project$CompileElmApp$fileContentFromString = A2($elm$core$Basics$composeR, $elm$bytes$Bytes$Encode$string, $elm$bytes$Bytes$Encode$encode);
var $author$project$CompileElmApp$filePathFromElmModuleName = F2(
	function (sourceDirs, elmModuleName) {
		var _v0 = $elm$core$List$reverse(elmModuleName);
		if (!_v0.b) {
			return _List_Nil;
		} else {
			var moduleLastName = _v0.a;
			var reversedDirectoryNames = _v0.b;
			return _Utils_ap(
				sourceDirs.mainSourceDirectoryPath,
				$elm$core$List$reverse(
					A2($elm$core$List$cons, moduleLastName + '.elm', reversedDirectoryNames)));
		}
	});
var $stil4m$elm_syntax$Elm$Syntax$Node$value = function (_v0) {
	var v = _v0.b;
	return v;
};
var $stil4m$elm_syntax$Elm$Syntax$Module$moduleName = function (m) {
	switch (m.$) {
		case 'NormalModule':
			var x = m.a;
			return $stil4m$elm_syntax$Elm$Syntax$Node$value(x.moduleName);
		case 'PortModule':
			var x = m.a;
			return $stil4m$elm_syntax$Elm$Syntax$Node$value(x.moduleName);
		default:
			var x = m.a;
			return $stil4m$elm_syntax$Elm$Syntax$Node$value(x.moduleName);
	}
};
var $stil4m$elm_syntax$Rope$empty = $elm$core$Maybe$Nothing;
var $stil4m$elm_syntax$Elm$Syntax$Declaration$AliasDeclaration = function (a) {
	return {$: 'AliasDeclaration', a: a};
};
var $stil4m$elm_syntax$Elm$Syntax$Declaration$CustomTypeDeclaration = function (a) {
	return {$: 'CustomTypeDeclaration', a: a};
};
var $stil4m$elm_syntax$Elm$Syntax$Declaration$FunctionDeclaration = function (a) {
	return {$: 'FunctionDeclaration', a: a};
};
var $stil4m$elm_syntax$Elm$Syntax$Node$Node = F2(
	function (a, b) {
		return {$: 'Node', a: a, b: b};
	});
var $stil4m$elm_syntax$Elm$Syntax$Declaration$PortDeclaration = function (a) {
	return {$: 'PortDeclaration', a: a};
};
var $stil4m$elm_syntax$Elm$Syntax$Signature$Signature = F2(
	function (name, typeAnnotation) {
		return {name: name, typeAnnotation: typeAnnotation};
	});
var $stil4m$elm_syntax$Elm$Syntax$Node$combine = F3(
	function (f, a, b) {
		var start = a.a.start;
		var end = b.a.end;
		return A2(
			$stil4m$elm_syntax$Elm$Syntax$Node$Node,
			{end: end, start: start},
			A2(f, a, b));
	});
var $stil4m$elm_syntax$ParserFast$Done = function (a) {
	return {$: 'Done', a: a};
};
var $stil4m$elm_syntax$ParserFast$Loop = function (a) {
	return {$: 'Loop', a: a};
};
var $stil4m$elm_syntax$ParserFast$Bad = F2(
	function (a, b) {
		return {$: 'Bad', a: a, b: b};
	});
var $stil4m$elm_syntax$ParserFast$ExpectingAnyChar = F2(
	function (a, b) {
		return {$: 'ExpectingAnyChar', a: a, b: b};
	});
var $stil4m$elm_syntax$ParserFast$Good = F2(
	function (a, b) {
		return {$: 'Good', a: a, b: b};
	});
var $stil4m$elm_syntax$ParserFast$Parser = function (a) {
	return {$: 'Parser', a: a};
};
var $elm$core$String$any = _String_any;
var $elm$core$Basics$isNaN = _Basics_isNaN;
var $stil4m$elm_syntax$Char$Extra$isUtf16Surrogate = function (c) {
	return $elm$core$Basics$isNaN(
		$elm$core$Char$toCode(c));
};
var $stil4m$elm_syntax$ParserFast$charStringIsUtf16HighSurrogate = function (charString) {
	return A2($elm$core$String$any, $stil4m$elm_syntax$Char$Extra$isUtf16Surrogate, charString);
};
var $stil4m$elm_syntax$ParserFast$charOrEnd = F2(
	function (offset, string) {
		var actualChar = A3($elm$core$String$slice, offset, offset + 1, string);
		switch (actualChar) {
			case '\n':
				return -2;
			case '':
				return -1;
			default:
				return $stil4m$elm_syntax$ParserFast$charStringIsUtf16HighSurrogate(actualChar) ? (offset + 2) : (offset + 1);
		}
	});
var $stil4m$elm_syntax$ParserFast$skipWhileHelp = F6(
	function (isGood, offset, row, col, src, indent) {
		skipWhileHelp:
		while (true) {
			var actualChar = A3($elm$core$String$slice, offset, offset + 1, src);
			if (A2($elm$core$String$any, isGood, actualChar)) {
				if (actualChar === '\n') {
					var $temp$isGood = isGood,
						$temp$offset = offset + 1,
						$temp$row = row + 1,
						$temp$col = 1,
						$temp$src = src,
						$temp$indent = indent;
					isGood = $temp$isGood;
					offset = $temp$offset;
					row = $temp$row;
					col = $temp$col;
					src = $temp$src;
					indent = $temp$indent;
					continue skipWhileHelp;
				} else {
					var $temp$isGood = isGood,
						$temp$offset = offset + 1,
						$temp$row = row,
						$temp$col = col + 1,
						$temp$src = src,
						$temp$indent = indent;
					isGood = $temp$isGood;
					offset = $temp$offset;
					row = $temp$row;
					col = $temp$col;
					src = $temp$src;
					indent = $temp$indent;
					continue skipWhileHelp;
				}
			} else {
				if ($stil4m$elm_syntax$ParserFast$charStringIsUtf16HighSurrogate(actualChar) && A2(
					$elm$core$String$any,
					isGood,
					A3($elm$core$String$slice, offset, offset + 2, src))) {
					var $temp$isGood = isGood,
						$temp$offset = offset + 2,
						$temp$row = row,
						$temp$col = col + 1,
						$temp$src = src,
						$temp$indent = indent;
					isGood = $temp$isGood;
					offset = $temp$offset;
					row = $temp$row;
					col = $temp$col;
					src = $temp$src;
					indent = $temp$indent;
					continue skipWhileHelp;
				} else {
					return {col: col, indent: indent, offset: offset, row: row, src: src};
				}
			}
		}
	});
var $stil4m$elm_syntax$ParserFast$anyCharFollowedByWhileMap = F2(
	function (consumedStringToRes, afterFirstIsOkay) {
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s) {
				var firstOffset = A2($stil4m$elm_syntax$ParserFast$charOrEnd, s.offset, s.src);
				if (_Utils_eq(firstOffset, -1)) {
					return A2(
						$stil4m$elm_syntax$ParserFast$Bad,
						false,
						A2($stil4m$elm_syntax$ParserFast$ExpectingAnyChar, s.row, s.col));
				} else {
					var s1 = _Utils_eq(firstOffset, -2) ? A6($stil4m$elm_syntax$ParserFast$skipWhileHelp, afterFirstIsOkay, s.offset + 1, s.row + 1, 1, s.src, s.indent) : A6($stil4m$elm_syntax$ParserFast$skipWhileHelp, afterFirstIsOkay, firstOffset, s.row, s.col + 1, s.src, s.indent);
					return A2(
						$stil4m$elm_syntax$ParserFast$Good,
						consumedStringToRes(
							A3($elm$core$String$slice, s.offset, s1.offset, s.src)),
						s1);
				}
			});
	});
var $stil4m$elm_syntax$ParserFast$loopHelp = F5(
	function (committedSoFar, state, element, reduce, s0) {
		loopHelp:
		while (true) {
			var parseElement = element.a;
			var _v0 = parseElement(s0);
			if (_v0.$ === 'Good') {
				var step = _v0.a;
				var s1 = _v0.b;
				var _v1 = A2(reduce, step, state);
				if (_v1.$ === 'Loop') {
					var newState = _v1.a;
					var $temp$committedSoFar = true,
						$temp$state = newState,
						$temp$element = element,
						$temp$reduce = reduce,
						$temp$s0 = s1;
					committedSoFar = $temp$committedSoFar;
					state = $temp$state;
					element = $temp$element;
					reduce = $temp$reduce;
					s0 = $temp$s0;
					continue loopHelp;
				} else {
					var result = _v1.a;
					return A2($stil4m$elm_syntax$ParserFast$Good, result, s1);
				}
			} else {
				var elementCommitted = _v0.a;
				var x = _v0.b;
				return A2($stil4m$elm_syntax$ParserFast$Bad, committedSoFar || elementCommitted, x);
			}
		}
	});
var $stil4m$elm_syntax$ParserFast$loop = F3(
	function (state, element, reduce) {
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s) {
				return A5($stil4m$elm_syntax$ParserFast$loopHelp, false, state, element, reduce, s);
			});
	});
var $stil4m$elm_syntax$ParserFast$map2WithRange = F3(
	function (func, _v0, _v1) {
		var parseA = _v0.a;
		var parseB = _v1.a;
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s0) {
				var _v2 = parseA(s0);
				if (_v2.$ === 'Bad') {
					var committed = _v2.a;
					var x = _v2.b;
					return A2($stil4m$elm_syntax$ParserFast$Bad, committed, x);
				} else {
					var a = _v2.a;
					var s1 = _v2.b;
					var _v3 = parseB(s1);
					if (_v3.$ === 'Bad') {
						var x = _v3.b;
						return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
					} else {
						var b = _v3.a;
						var s2 = _v3.b;
						return A2(
							$stil4m$elm_syntax$ParserFast$Good,
							A3(
								func,
								{
									end: {column: s2.col, row: s2.row},
									start: {column: s0.col, row: s0.row}
								},
								a,
								b),
							s2);
					}
				}
			});
	});
var $stil4m$elm_syntax$ParserFast$ExpectingOneOf = F3(
	function (a, b, c) {
		return {$: 'ExpectingOneOf', a: a, b: b, c: c};
	});
var $stil4m$elm_syntax$ParserFast$oneOf2 = F2(
	function (_v0, _v1) {
		var attemptFirst = _v0.a;
		var attemptSecond = _v1.a;
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s) {
				var _v2 = attemptFirst(s);
				if (_v2.$ === 'Good') {
					var firstGood = _v2;
					return firstGood;
				} else {
					var firstBad = _v2;
					var firstCommitted = firstBad.a;
					var firstX = firstBad.b;
					if (firstCommitted) {
						return firstBad;
					} else {
						var _v3 = attemptSecond(s);
						if (_v3.$ === 'Good') {
							var secondGood = _v3;
							return secondGood;
						} else {
							var secondBad = _v3;
							var secondCommitted = secondBad.a;
							var secondX = secondBad.b;
							return secondCommitted ? secondBad : A2(
								$stil4m$elm_syntax$ParserFast$Bad,
								false,
								A3($stil4m$elm_syntax$ParserFast$ExpectingOneOf, firstX, secondX, _List_Nil));
						}
					}
				}
			});
	});
var $stil4m$elm_syntax$ParserFast$oneOf3 = F3(
	function (_v0, _v1, _v2) {
		var attemptFirst = _v0.a;
		var attemptSecond = _v1.a;
		var attemptThird = _v2.a;
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s) {
				var _v3 = attemptFirst(s);
				if (_v3.$ === 'Good') {
					var firstGood = _v3;
					return firstGood;
				} else {
					var firstBad = _v3;
					var firstCommitted = firstBad.a;
					var firstX = firstBad.b;
					if (firstCommitted) {
						return firstBad;
					} else {
						var _v4 = attemptSecond(s);
						if (_v4.$ === 'Good') {
							var secondGood = _v4;
							return secondGood;
						} else {
							var secondBad = _v4;
							var secondCommitted = secondBad.a;
							var secondX = secondBad.b;
							if (secondCommitted) {
								return secondBad;
							} else {
								var _v5 = attemptThird(s);
								if (_v5.$ === 'Good') {
									var thirdGood = _v5;
									return thirdGood;
								} else {
									var thirdBad = _v5;
									var thirdCommitted = thirdBad.a;
									var thirdX = thirdBad.b;
									return thirdCommitted ? thirdBad : A2(
										$stil4m$elm_syntax$ParserFast$Bad,
										false,
										A3(
											$stil4m$elm_syntax$ParserFast$ExpectingOneOf,
											firstX,
											secondX,
											_List_fromArray(
												[thirdX])));
								}
							}
						}
					}
				}
			});
	});
var $stil4m$elm_syntax$ParserFast$ExpectingSymbol = F3(
	function (a, b, c) {
		return {$: 'ExpectingSymbol', a: a, b: b, c: c};
	});
var $stil4m$elm_syntax$ParserFast$symbol = F2(
	function (str, res) {
		var strLength = $elm$core$String$length(str);
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s) {
				var newOffset = s.offset + strLength;
				return _Utils_eq(
					A3($elm$core$String$slice, s.offset, newOffset, s.src),
					str + '') ? A2(
					$stil4m$elm_syntax$ParserFast$Good,
					res,
					{col: s.col + strLength, indent: s.indent, offset: newOffset, row: s.row, src: s.src}) : A2(
					$stil4m$elm_syntax$ParserFast$Bad,
					false,
					A3($stil4m$elm_syntax$ParserFast$ExpectingSymbol, s.row, s.col, str));
			});
	});
var $stil4m$elm_syntax$ParserFast$pStepCommit = function (pStep) {
	if (pStep.$ === 'Good') {
		var good = pStep;
		return good;
	} else {
		var x = pStep.b;
		return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
	}
};
var $stil4m$elm_syntax$ParserFast$symbolFollowedBy = F2(
	function (str, _v0) {
		var parseNext = _v0.a;
		var strLength = $elm$core$String$length(str);
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s) {
				var newOffset = s.offset + strLength;
				return _Utils_eq(
					A3($elm$core$String$slice, s.offset, newOffset, s.src),
					str + '') ? $stil4m$elm_syntax$ParserFast$pStepCommit(
					parseNext(
						{col: s.col + strLength, indent: s.indent, offset: newOffset, row: s.row, src: s.src})) : A2(
					$stil4m$elm_syntax$ParserFast$Bad,
					false,
					A3($stil4m$elm_syntax$ParserFast$ExpectingSymbol, s.row, s.col, str));
			});
	});
var $stil4m$elm_syntax$ParserFast$while = function (isGood) {
	return $stil4m$elm_syntax$ParserFast$Parser(
		function (s0) {
			var s1 = A6($stil4m$elm_syntax$ParserFast$skipWhileHelp, isGood, s0.offset, s0.row, s0.col, s0.src, s0.indent);
			return A2(
				$stil4m$elm_syntax$ParserFast$Good,
				A3($elm$core$String$slice, s0.offset, s1.offset, s0.src),
				s1);
		});
};
var $stil4m$elm_syntax$ParserFast$nestableMultiCommentMapWithRange = F3(
	function (rangeContentToRes, _v0, _v1) {
		var openChar = _v0.a;
		var openTail = _v0.b;
		var closeChar = _v1.a;
		var closeTail = _v1.b;
		var open = A2($elm$core$String$cons, openChar, openTail);
		var isNotRelevant = function (_char) {
			return (!_Utils_eq(_char, openChar)) && ((!_Utils_eq(_char, closeChar)) && (!$stil4m$elm_syntax$Char$Extra$isUtf16Surrogate(_char)));
		};
		var close = A2($elm$core$String$cons, closeChar, closeTail);
		return A3(
			$stil4m$elm_syntax$ParserFast$map2WithRange,
			F3(
				function (range, afterOpen, contentAfterAfterOpen) {
					return A2(
						rangeContentToRes,
						range,
						_Utils_ap(
							open,
							_Utils_ap(
								afterOpen,
								_Utils_ap(contentAfterAfterOpen, close))));
				}),
			A2(
				$stil4m$elm_syntax$ParserFast$symbolFollowedBy,
				open,
				$stil4m$elm_syntax$ParserFast$while(isNotRelevant)),
			A2(
				$stil4m$elm_syntax$ParserFast$oneOf2,
				A2($stil4m$elm_syntax$ParserFast$symbol, close, ''),
				A3(
					$stil4m$elm_syntax$ParserFast$loop,
					_Utils_Tuple2('', 1),
					A3(
						$stil4m$elm_syntax$ParserFast$oneOf3,
						A2(
							$stil4m$elm_syntax$ParserFast$symbol,
							close,
							_Utils_Tuple2(close, -1)),
						A2(
							$stil4m$elm_syntax$ParserFast$symbol,
							open,
							_Utils_Tuple2(open, 1)),
						A2(
							$stil4m$elm_syntax$ParserFast$anyCharFollowedByWhileMap,
							function (consumed) {
								return _Utils_Tuple2(consumed, 0);
							},
							isNotRelevant)),
					F2(
						function (_v2, _v3) {
							var toAppend = _v2.a;
							var nestingChange = _v2.b;
							var soFarContent = _v3.a;
							var soFarNesting = _v3.b;
							var newNesting = soFarNesting + nestingChange;
							return (!newNesting) ? $stil4m$elm_syntax$ParserFast$Done(soFarContent) : $stil4m$elm_syntax$ParserFast$Loop(
								_Utils_Tuple2(soFarContent + (toAppend + ''), newNesting));
						}))));
	});
var $stil4m$elm_syntax$Elm$Parser$Comments$multiLineCommentNoCheck = A3(
	$stil4m$elm_syntax$ParserFast$nestableMultiCommentMapWithRange,
	$stil4m$elm_syntax$Elm$Syntax$Node$Node,
	_Utils_Tuple2(
		_Utils_chr('{'),
		'-'),
	_Utils_Tuple2(
		_Utils_chr('-'),
		'}'));
var $stil4m$elm_syntax$Elm$Parser$Comments$declarationDocumentation = $stil4m$elm_syntax$Elm$Parser$Comments$multiLineCommentNoCheck;
var $stil4m$elm_syntax$Rope$Branch2 = F2(
	function (a, b) {
		return {$: 'Branch2', a: a, b: b};
	});
var $stil4m$elm_syntax$Rope$filledPrependTo = F2(
	function (right, leftLikelyFilled) {
		if (right.$ === 'Nothing') {
			return $elm$core$Maybe$Just(leftLikelyFilled);
		} else {
			var rightLikelyFilled = right.a;
			return $elm$core$Maybe$Just(
				A2($stil4m$elm_syntax$Rope$Branch2, leftLikelyFilled, rightLikelyFilled));
		}
	});
var $stil4m$elm_syntax$Elm$Parser$Declarations$FunctionDeclarationAfterDocumentation = function (a) {
	return {$: 'FunctionDeclarationAfterDocumentation', a: a};
};
var $stil4m$elm_syntax$Elm$Syntax$Expression$Application = function (a) {
	return {$: 'Application', a: a};
};
var $stil4m$elm_syntax$Elm$Syntax$Expression$CaseExpression = function (a) {
	return {$: 'CaseExpression', a: a};
};
var $stil4m$elm_syntax$Elm$Parser$Expression$ExtendRightByOperation = function (a) {
	return {$: 'ExtendRightByOperation', a: a};
};
var $stil4m$elm_syntax$Elm$Parser$Expression$FieldsFirstValue = function (a) {
	return {$: 'FieldsFirstValue', a: a};
};
var $stil4m$elm_syntax$Elm$Syntax$Expression$IfBlock = F3(
	function (a, b, c) {
		return {$: 'IfBlock', a: a, b: b, c: c};
	});
var $stil4m$elm_syntax$Elm$Syntax$Expression$LambdaExpression = function (a) {
	return {$: 'LambdaExpression', a: a};
};
var $stil4m$elm_syntax$Elm$Syntax$Infix$Left = {$: 'Left'};
var $stil4m$elm_syntax$Elm$Syntax$Expression$LetDestructuring = F2(
	function (a, b) {
		return {$: 'LetDestructuring', a: a, b: b};
	});
var $stil4m$elm_syntax$Elm$Syntax$Expression$LetExpression = function (a) {
	return {$: 'LetExpression', a: a};
};
var $stil4m$elm_syntax$Elm$Syntax$Expression$LetFunction = function (a) {
	return {$: 'LetFunction', a: a};
};
var $stil4m$elm_syntax$Elm$Syntax$Expression$ListExpr = function (a) {
	return {$: 'ListExpr', a: a};
};
var $stil4m$elm_syntax$Elm$Syntax$Expression$Negation = function (a) {
	return {$: 'Negation', a: a};
};
var $stil4m$elm_syntax$Elm$Syntax$Infix$Non = {$: 'Non'};
var $stil4m$elm_syntax$Elm$Syntax$Expression$ParenthesizedExpression = function (a) {
	return {$: 'ParenthesizedExpression', a: a};
};
var $stil4m$elm_syntax$Elm$Syntax$Expression$RecordAccess = F2(
	function (a, b) {
		return {$: 'RecordAccess', a: a, b: b};
	});
var $stil4m$elm_syntax$Elm$Syntax$Expression$RecordExpr = function (a) {
	return {$: 'RecordExpr', a: a};
};
var $stil4m$elm_syntax$Elm$Syntax$Expression$RecordUpdateExpression = F2(
	function (a, b) {
		return {$: 'RecordUpdateExpression', a: a, b: b};
	});
var $stil4m$elm_syntax$Elm$Parser$Expression$RecordUpdateFirstSetter = function (a) {
	return {$: 'RecordUpdateFirstSetter', a: a};
};
var $stil4m$elm_syntax$Elm$Syntax$Infix$Right = {$: 'Right'};
var $stil4m$elm_syntax$Elm$Syntax$Expression$TupledExpression = function (a) {
	return {$: 'TupledExpression', a: a};
};
var $stil4m$elm_syntax$Elm$Parser$Expression$TupledParenthesizedFollowedByRecordAccesses = function (a) {
	return {$: 'TupledParenthesizedFollowedByRecordAccesses', a: a};
};
var $stil4m$elm_syntax$Elm$Parser$Expression$TupledTwoOrThree = function (a) {
	return {$: 'TupledTwoOrThree', a: a};
};
var $stil4m$elm_syntax$Elm$Syntax$Expression$UnitExpr = {$: 'UnitExpr'};
var $stil4m$elm_syntax$Elm$Syntax$Expression$PrefixOperator = function (a) {
	return {$: 'PrefixOperator', a: a};
};
var $stil4m$elm_syntax$Elm$Parser$Tokens$isAllowedOperatorToken = function (operatorCandidateToValidate) {
	switch (operatorCandidateToValidate) {
		case '==':
			return true;
		case '/=':
			return true;
		case '::':
			return true;
		case '++':
			return true;
		case '+':
			return true;
		case '*':
			return true;
		case '<|':
			return true;
		case '|>':
			return true;
		case '||':
			return true;
		case '<=':
			return true;
		case '>=':
			return true;
		case '|=':
			return true;
		case '|.':
			return true;
		case '//':
			return true;
		case '</>':
			return true;
		case '<?>':
			return true;
		case '^':
			return true;
		case '<<':
			return true;
		case '>>':
			return true;
		case '<':
			return true;
		case '>':
			return true;
		case '/':
			return true;
		case '&&':
			return true;
		case '-':
			return true;
		default:
			return false;
	}
};
var $stil4m$elm_syntax$Elm$Parser$Tokens$isOperatorSymbolChar = function (c) {
	switch (c.valueOf()) {
		case '+':
			return true;
		case '-':
			return true;
		case '/':
			return true;
		case '*':
			return true;
		case '=':
			return true;
		case '.':
			return true;
		case '<':
			return true;
		case '>':
			return true;
		case ':':
			return true;
		case '&':
			return true;
		case '|':
			return true;
		case '^':
			return true;
		case '?':
			return true;
		default:
			return false;
	}
};
var $stil4m$elm_syntax$ParserFast$ExpectingStringSatisfyingPredicate = F2(
	function (a, b) {
		return {$: 'ExpectingStringSatisfyingPredicate', a: a, b: b};
	});
var $stil4m$elm_syntax$ParserFast$skipWhileWithoutLinebreakAnd2PartUtf16Help = F3(
	function (isGood, offset, src) {
		skipWhileWithoutLinebreakAnd2PartUtf16Help:
		while (true) {
			if (A2(
				$elm$core$String$any,
				isGood,
				A3($elm$core$String$slice, offset, offset + 1, src))) {
				var $temp$isGood = isGood,
					$temp$offset = offset + 1,
					$temp$src = src;
				isGood = $temp$isGood;
				offset = $temp$offset;
				src = $temp$src;
				continue skipWhileWithoutLinebreakAnd2PartUtf16Help;
			} else {
				return offset;
			}
		}
	});
var $stil4m$elm_syntax$ParserFast$whileWithoutLinebreakAnd2PartUtf16ValidateMapWithRangeBacktrackableFollowedBySymbol = F4(
	function (whileRangeAndContentToRes, whileCharIsOkay, whileResultIsOkay, mandatoryFinalSymbol) {
		var mandatoryFinalSymbolLength = $elm$core$String$length(mandatoryFinalSymbol);
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s0) {
				var s1Offset = A3($stil4m$elm_syntax$ParserFast$skipWhileWithoutLinebreakAnd2PartUtf16Help, whileCharIsOkay, s0.offset, s0.src);
				var whileContent = A3($elm$core$String$slice, s0.offset, s1Offset, s0.src);
				if (_Utils_eq(
					A3($elm$core$String$slice, s1Offset, s1Offset + mandatoryFinalSymbolLength, s0.src),
					mandatoryFinalSymbol + '') && whileResultIsOkay(whileContent)) {
					var s1Column = s0.col + (s1Offset - s0.offset);
					return A2(
						$stil4m$elm_syntax$ParserFast$Good,
						A2(
							whileRangeAndContentToRes,
							{
								end: {column: s1Column, row: s0.row},
								start: {column: s0.col, row: s0.row}
							},
							whileContent),
						{col: s1Column + mandatoryFinalSymbolLength, indent: s0.indent, offset: s1Offset + mandatoryFinalSymbolLength, row: s0.row, src: s0.src});
				} else {
					return A2(
						$stil4m$elm_syntax$ParserFast$Bad,
						false,
						A2($stil4m$elm_syntax$ParserFast$ExpectingStringSatisfyingPredicate, s0.row, s0.col + 1));
				}
			});
	});
var $stil4m$elm_syntax$Elm$Parser$Expression$allowedPrefixOperatorFollowedByClosingParensOneOf = A4(
	$stil4m$elm_syntax$ParserFast$whileWithoutLinebreakAnd2PartUtf16ValidateMapWithRangeBacktrackableFollowedBySymbol,
	F2(
		function (operatorRange, operator) {
			return {
				comments: $stil4m$elm_syntax$Rope$empty,
				syntax: A2(
					$stil4m$elm_syntax$Elm$Syntax$Node$Node,
					{
						end: {column: operatorRange.end.column + 1, row: operatorRange.end.row},
						start: {column: operatorRange.start.column - 1, row: operatorRange.start.row}
					},
					$stil4m$elm_syntax$Elm$Syntax$Expression$PrefixOperator(operator))
			};
		}),
	$stil4m$elm_syntax$Elm$Parser$Tokens$isOperatorSymbolChar,
	$stil4m$elm_syntax$Elm$Parser$Tokens$isAllowedOperatorToken,
	')');
var $stil4m$elm_syntax$Elm$Syntax$Expression$OperatorApplication = F4(
	function (a, b, c, d) {
		return {$: 'OperatorApplication', a: a, b: b, c: c, d: d};
	});
var $stil4m$elm_syntax$Elm$Parser$Expression$applyExtensionRight = F2(
	function (_v0, leftNode) {
		var operation = _v0.a;
		var leftRange = leftNode.a;
		var rightExpressionNode = operation.expression;
		var rightExpressionRange = rightExpressionNode.a;
		return A2(
			$stil4m$elm_syntax$Elm$Syntax$Node$Node,
			{end: rightExpressionRange.end, start: leftRange.start},
			A4($stil4m$elm_syntax$Elm$Syntax$Expression$OperatorApplication, operation.symbol, operation.direction, leftNode, rightExpressionNode));
	});
var $stil4m$elm_syntax$Elm$Syntax$Expression$CharLiteral = function (a) {
	return {$: 'CharLiteral', a: a};
};
var $stil4m$elm_syntax$ParserFast$anyChar = $stil4m$elm_syntax$ParserFast$Parser(
	function (s) {
		var newOffset = A2($stil4m$elm_syntax$ParserFast$charOrEnd, s.offset, s.src);
		if (_Utils_eq(newOffset, -1)) {
			return A2(
				$stil4m$elm_syntax$ParserFast$Bad,
				false,
				A2($stil4m$elm_syntax$ParserFast$ExpectingAnyChar, s.row, s.col));
		} else {
			if (_Utils_eq(newOffset, -2)) {
				return A2(
					$stil4m$elm_syntax$ParserFast$Good,
					_Utils_chr('\n'),
					{col: 1, indent: s.indent, offset: s.offset + 1, row: s.row + 1, src: s.src});
			} else {
				var _v0 = $elm$core$String$toList(
					A3($elm$core$String$slice, s.offset, newOffset, s.src));
				if (!_v0.b) {
					return A2(
						$stil4m$elm_syntax$ParserFast$Bad,
						false,
						A2($stil4m$elm_syntax$ParserFast$ExpectingAnyChar, s.row, s.col));
				} else {
					var c = _v0.a;
					return A2(
						$stil4m$elm_syntax$ParserFast$Good,
						c,
						{col: s.col + 1, indent: s.indent, offset: newOffset, row: s.row, src: s.src});
				}
			}
		}
	});
var $stil4m$elm_syntax$ParserFast$followedBySymbol = F2(
	function (str, _v0) {
		var parsePrevious = _v0.a;
		var strLength = $elm$core$String$length(str);
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s0) {
				var _v1 = parsePrevious(s0);
				if (_v1.$ === 'Good') {
					var res = _v1.a;
					var s1 = _v1.b;
					var newOffset = s1.offset + strLength;
					return _Utils_eq(
						A3($elm$core$String$slice, s1.offset, newOffset, s1.src),
						str + '') ? A2(
						$stil4m$elm_syntax$ParserFast$Good,
						res,
						{col: s1.col + strLength, indent: s1.indent, offset: newOffset, row: s1.row, src: s1.src}) : A2(
						$stil4m$elm_syntax$ParserFast$Bad,
						true,
						A3($stil4m$elm_syntax$ParserFast$ExpectingSymbol, s1.row, s1.col, str));
				} else {
					var bad = _v1;
					return bad;
				}
			});
	});
var $stil4m$elm_syntax$Elm$Parser$Tokens$charToHex = function (c) {
	switch (c.valueOf()) {
		case '0':
			return 0;
		case '1':
			return 1;
		case '2':
			return 2;
		case '3':
			return 3;
		case '4':
			return 4;
		case '5':
			return 5;
		case '6':
			return 6;
		case '7':
			return 7;
		case '8':
			return 8;
		case '9':
			return 9;
		case 'a':
			return 10;
		case 'b':
			return 11;
		case 'c':
			return 12;
		case 'd':
			return 13;
		case 'e':
			return 14;
		case 'f':
			return 15;
		case 'A':
			return 10;
		case 'B':
			return 11;
		case 'C':
			return 12;
		case 'D':
			return 13;
		case 'E':
			return 14;
		default:
			return 15;
	}
};
var $stil4m$elm_syntax$Elm$Parser$Tokens$hexStringToInt = function (string) {
	return A3(
		$elm$core$String$foldr,
		F2(
			function (c, soFar) {
				return {
					exponent: soFar.exponent + 1,
					result: soFar.result + (A2($elm$core$Basics$pow, 16, soFar.exponent) * $stil4m$elm_syntax$Elm$Parser$Tokens$charToHex(c))
				};
			}),
		{exponent: 0, result: 0},
		string).result;
};
var $stil4m$elm_syntax$ParserFast$ExpectingCharSatisfyingPredicate = F2(
	function (a, b) {
		return {$: 'ExpectingCharSatisfyingPredicate', a: a, b: b};
	});
var $stil4m$elm_syntax$ParserFast$isSubCharWithoutLinebreak = F3(
	function (predicate, offset, string) {
		var actualChar = A3($elm$core$String$slice, offset, offset + 1, string);
		return A2($elm$core$String$any, predicate, actualChar) ? (offset + 1) : (($stil4m$elm_syntax$ParserFast$charStringIsUtf16HighSurrogate(actualChar) && A2(
			$elm$core$String$any,
			predicate,
			A3($elm$core$String$slice, offset, offset + 2, string))) ? (offset + 2) : (-1));
	});
var $stil4m$elm_syntax$ParserFast$skipWhileWithoutLinebreakHelp = F6(
	function (isGood, offset, row, col, src, indent) {
		skipWhileWithoutLinebreakHelp:
		while (true) {
			var actualChar = A3($elm$core$String$slice, offset, offset + 1, src);
			if (A2($elm$core$String$any, isGood, actualChar)) {
				var $temp$isGood = isGood,
					$temp$offset = offset + 1,
					$temp$row = row,
					$temp$col = col + 1,
					$temp$src = src,
					$temp$indent = indent;
				isGood = $temp$isGood;
				offset = $temp$offset;
				row = $temp$row;
				col = $temp$col;
				src = $temp$src;
				indent = $temp$indent;
				continue skipWhileWithoutLinebreakHelp;
			} else {
				if ($stil4m$elm_syntax$ParserFast$charStringIsUtf16HighSurrogate(actualChar) && A2(
					$elm$core$String$any,
					isGood,
					A3($elm$core$String$slice, offset, offset + 2, src))) {
					var $temp$isGood = isGood,
						$temp$offset = offset + 2,
						$temp$row = row,
						$temp$col = col + 1,
						$temp$src = src,
						$temp$indent = indent;
					isGood = $temp$isGood;
					offset = $temp$offset;
					row = $temp$row;
					col = $temp$col;
					src = $temp$src;
					indent = $temp$indent;
					continue skipWhileWithoutLinebreakHelp;
				} else {
					return {col: col, indent: indent, offset: offset, row: row, src: src};
				}
			}
		}
	});
var $stil4m$elm_syntax$ParserFast$ifFollowedByWhileMapWithoutLinebreak = F3(
	function (consumedStringToRes, firstIsOkay, afterFirstIsOkay) {
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s0) {
				var firstOffset = A3($stil4m$elm_syntax$ParserFast$isSubCharWithoutLinebreak, firstIsOkay, s0.offset, s0.src);
				if (_Utils_eq(firstOffset, -1)) {
					return A2(
						$stil4m$elm_syntax$ParserFast$Bad,
						false,
						A2($stil4m$elm_syntax$ParserFast$ExpectingCharSatisfyingPredicate, s0.row, s0.col));
				} else {
					var s1 = A6($stil4m$elm_syntax$ParserFast$skipWhileWithoutLinebreakHelp, afterFirstIsOkay, firstOffset, s0.row, s0.col + 1, s0.src, s0.indent);
					return A2(
						$stil4m$elm_syntax$ParserFast$Good,
						consumedStringToRes(
							A3($elm$core$String$slice, s0.offset, s1.offset, s0.src)),
						s1);
				}
			});
	});
var $elm$core$Char$isHexDigit = function (_char) {
	var code = $elm$core$Char$toCode(_char);
	return ((48 <= code) && (code <= 57)) || (((65 <= code) && (code <= 70)) || ((97 <= code) && (code <= 102)));
};
var $stil4m$elm_syntax$ParserFast$oneOf7 = F7(
	function (_v0, _v1, _v2, _v3, _v4, _v5, _v6) {
		var attempt0 = _v0.a;
		var attempt1 = _v1.a;
		var attempt2 = _v2.a;
		var attempt3 = _v3.a;
		var attempt4 = _v4.a;
		var attempt5 = _v5.a;
		var attempt6 = _v6.a;
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s) {
				var _v7 = attempt0(s);
				if (_v7.$ === 'Good') {
					var good = _v7;
					return good;
				} else {
					var bad0 = _v7;
					var committed0 = bad0.a;
					var x0 = bad0.b;
					if (committed0) {
						return bad0;
					} else {
						var _v8 = attempt1(s);
						if (_v8.$ === 'Good') {
							var good = _v8;
							return good;
						} else {
							var bad1 = _v8;
							var committed1 = bad1.a;
							var x1 = bad1.b;
							if (committed1) {
								return bad1;
							} else {
								var _v9 = attempt2(s);
								if (_v9.$ === 'Good') {
									var good = _v9;
									return good;
								} else {
									var bad2 = _v9;
									var committed2 = bad2.a;
									var x2 = bad2.b;
									if (committed2) {
										return bad2;
									} else {
										var _v10 = attempt3(s);
										if (_v10.$ === 'Good') {
											var good = _v10;
											return good;
										} else {
											var bad3 = _v10;
											var committed3 = bad3.a;
											var x3 = bad3.b;
											if (committed3) {
												return bad3;
											} else {
												var _v11 = attempt4(s);
												if (_v11.$ === 'Good') {
													var good = _v11;
													return good;
												} else {
													var bad4 = _v11;
													var committed4 = bad4.a;
													var x4 = bad4.b;
													if (committed4) {
														return bad4;
													} else {
														var _v12 = attempt5(s);
														if (_v12.$ === 'Good') {
															var good = _v12;
															return good;
														} else {
															var bad5 = _v12;
															var committed5 = bad5.a;
															var x5 = bad5.b;
															if (committed5) {
																return bad5;
															} else {
																var _v13 = attempt6(s);
																if (_v13.$ === 'Good') {
																	var good = _v13;
																	return good;
																} else {
																	var bad6 = _v13;
																	var committed6 = bad6.a;
																	var x6 = bad6.b;
																	return committed6 ? bad6 : A2(
																		$stil4m$elm_syntax$ParserFast$Bad,
																		false,
																		A3(
																			$stil4m$elm_syntax$ParserFast$ExpectingOneOf,
																			x0,
																			x1,
																			_List_fromArray(
																				[x2, x3, x4, x5, x6])));
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			});
	});
var $stil4m$elm_syntax$Elm$Parser$Tokens$escapedCharValueMap = function (charToRes) {
	return A7(
		$stil4m$elm_syntax$ParserFast$oneOf7,
		A2(
			$stil4m$elm_syntax$ParserFast$symbol,
			'\'',
			charToRes(
				_Utils_chr('\''))),
		A2(
			$stil4m$elm_syntax$ParserFast$symbol,
			'\"',
			charToRes(
				_Utils_chr('\"'))),
		A2(
			$stil4m$elm_syntax$ParserFast$symbol,
			'n',
			charToRes(
				_Utils_chr('\n'))),
		A2(
			$stil4m$elm_syntax$ParserFast$symbol,
			't',
			charToRes(
				_Utils_chr('\t'))),
		A2(
			$stil4m$elm_syntax$ParserFast$symbol,
			'r',
			charToRes(
				_Utils_chr('\u000D'))),
		A2(
			$stil4m$elm_syntax$ParserFast$symbol,
			'\\',
			charToRes(
				_Utils_chr('\\'))),
		A2(
			$stil4m$elm_syntax$ParserFast$symbolFollowedBy,
			'u{',
			A2(
				$stil4m$elm_syntax$ParserFast$followedBySymbol,
				'}',
				A3(
					$stil4m$elm_syntax$ParserFast$ifFollowedByWhileMapWithoutLinebreak,
					function (hex) {
						return charToRes(
							$elm$core$Char$fromCode(
								$stil4m$elm_syntax$Elm$Parser$Tokens$hexStringToInt(hex)));
					},
					$elm$core$Char$isHexDigit,
					$elm$core$Char$isHexDigit))));
};
var $stil4m$elm_syntax$ParserFast$oneOf2MapWithStartRowColumnAndEndRowColumn = F4(
	function (firstToChoice, _v0, secondToChoice, _v1) {
		var attemptFirst = _v0.a;
		var attemptSecond = _v1.a;
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s) {
				var _v2 = attemptFirst(s);
				if (_v2.$ === 'Good') {
					var first = _v2.a;
					var s1 = _v2.b;
					return A2(
						$stil4m$elm_syntax$ParserFast$Good,
						A5(firstToChoice, s.row, s.col, first, s1.row, s1.col),
						s1);
				} else {
					var firstCommitted = _v2.a;
					var firstX = _v2.b;
					if (firstCommitted) {
						return A2($stil4m$elm_syntax$ParserFast$Bad, firstCommitted, firstX);
					} else {
						var _v3 = attemptSecond(s);
						if (_v3.$ === 'Good') {
							var second = _v3.a;
							var s1 = _v3.b;
							return A2(
								$stil4m$elm_syntax$ParserFast$Good,
								A5(secondToChoice, s.row, s.col, second, s1.row, s1.col),
								s1);
						} else {
							var secondCommitted = _v3.a;
							var secondX = _v3.b;
							return secondCommitted ? A2($stil4m$elm_syntax$ParserFast$Bad, secondCommitted, secondX) : A2(
								$stil4m$elm_syntax$ParserFast$Bad,
								false,
								A3($stil4m$elm_syntax$ParserFast$ExpectingOneOf, firstX, secondX, _List_Nil));
						}
					}
				}
			});
	});
var $stil4m$elm_syntax$Elm$Parser$Tokens$characterLiteralMapWithRange = function (rangeAndCharToRes) {
	return A2(
		$stil4m$elm_syntax$ParserFast$symbolFollowedBy,
		'\'',
		A2(
			$stil4m$elm_syntax$ParserFast$followedBySymbol,
			'\'',
			A4(
				$stil4m$elm_syntax$ParserFast$oneOf2MapWithStartRowColumnAndEndRowColumn,
				F5(
					function (startRow, startColumn, _char, endRow, endColumn) {
						return A2(
							rangeAndCharToRes,
							{
								end: {column: endColumn + 1, row: endRow},
								start: {column: startColumn - 1, row: startRow}
							},
							_char);
					}),
				A2(
					$stil4m$elm_syntax$ParserFast$symbolFollowedBy,
					'\\',
					$stil4m$elm_syntax$Elm$Parser$Tokens$escapedCharValueMap($elm$core$Basics$identity)),
				F5(
					function (startRow, startColumn, _char, endRow, endColumn) {
						return A2(
							rangeAndCharToRes,
							{
								end: {column: endColumn + 1, row: endRow},
								start: {column: startColumn - 1, row: startRow}
							},
							_char);
					}),
				$stil4m$elm_syntax$ParserFast$anyChar)));
};
var $stil4m$elm_syntax$Elm$Parser$Expression$charLiteralExpression = $stil4m$elm_syntax$Elm$Parser$Tokens$characterLiteralMapWithRange(
	F2(
		function (range, _char) {
			return {
				comments: $stil4m$elm_syntax$Rope$empty,
				syntax: A2(
					$stil4m$elm_syntax$Elm$Syntax$Node$Node,
					range,
					$stil4m$elm_syntax$Elm$Syntax$Expression$CharLiteral(_char))
			};
		}));
var $stil4m$elm_syntax$Elm$Parser$Expression$errUnknownInfixOperator = $elm$core$Result$Err('unknown infix operator');
var $stil4m$elm_syntax$ParserFast$ifFollowedByWhileValidateMapWithRangeWithoutLinebreak = F4(
	function (toResult, firstIsOkay, afterFirstIsOkay, resultIsOkay) {
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s0) {
				var firstOffset = A3($stil4m$elm_syntax$ParserFast$isSubCharWithoutLinebreak, firstIsOkay, s0.offset, s0.src);
				if (_Utils_eq(firstOffset, -1)) {
					return A2(
						$stil4m$elm_syntax$ParserFast$Bad,
						false,
						A2($stil4m$elm_syntax$ParserFast$ExpectingCharSatisfyingPredicate, s0.row, s0.col));
				} else {
					var s1 = A6($stil4m$elm_syntax$ParserFast$skipWhileWithoutLinebreakHelp, afterFirstIsOkay, firstOffset, s0.row, s0.col + 1, s0.src, s0.indent);
					var name = A3($elm$core$String$slice, s0.offset, s1.offset, s0.src);
					return resultIsOkay(name) ? A2(
						$stil4m$elm_syntax$ParserFast$Good,
						A2(
							toResult,
							{
								end: {column: s1.col, row: s1.row},
								start: {column: s0.col, row: s0.row}
							},
							name),
						s1) : A2(
						$stil4m$elm_syntax$ParserFast$Bad,
						false,
						A2($stil4m$elm_syntax$ParserFast$ExpectingStringSatisfyingPredicate, s0.row, s0.col + 1));
				}
			});
	});
var $stil4m$elm_syntax$Elm$Parser$Tokens$isNotReserved = function (name) {
	switch (name) {
		case 'module':
			return false;
		case 'exposing':
			return false;
		case 'import':
			return false;
		case 'as':
			return false;
		case 'if':
			return false;
		case 'then':
			return false;
		case 'else':
			return false;
		case 'let':
			return false;
		case 'in':
			return false;
		case 'case':
			return false;
		case 'of':
			return false;
		case 'port':
			return false;
		case 'type':
			return false;
		case 'where':
			return false;
		default:
			return true;
	}
};
var $stil4m$elm_syntax$Char$Extra$charCodeIsDigit = function (code) {
	return (code <= 57) && (48 <= code);
};
var $stil4m$elm_syntax$Char$Extra$charCodeIsLower = function (code) {
	return (97 <= code) && (code <= 122);
};
var $stil4m$elm_syntax$Char$Extra$charCodeIsUpper = function (code) {
	return (code <= 90) && (65 <= code);
};
var $stil4m$elm_syntax$Char$Extra$unicodeIsAlphaNumOrUnderscoreFast = function (c) {
	var code = $elm$core$Char$toCode(c);
	return $stil4m$elm_syntax$Char$Extra$charCodeIsLower(code) || ($stil4m$elm_syntax$Char$Extra$charCodeIsUpper(code) || ($stil4m$elm_syntax$Char$Extra$charCodeIsDigit(code) || ((code === 95) || (((code !== 32) && (code !== 10)) && ((code < 256) ? (((48 <= code) && (code <= 57)) || (((65 <= code) && (code <= 90)) || (((97 <= code) && (code <= 122)) || ((code === 170) || (((178 <= code) && (code <= 179)) || ((code === 181) || (((185 <= code) && (code <= 186)) || (((188 <= code) && (code <= 190)) || (((192 <= code) && (code <= 214)) || (((216 <= code) && (code <= 246)) || ((248 <= code) && (code <= 255)))))))))))) : ((code < 43700) ? ((code < 4347) ? ((code < 2868) ? ((code < 2364) ? ((code < 1648) ? ((code < 930) ? (((256 <= code) && (code <= 705)) || (((710 <= code) && (code <= 721)) || (((736 <= code) && (code <= 740)) || (((880 <= code) && (code <= 884)) || (((886 <= code) && (code <= 887)) || (((890 <= code) && (code <= 893)) || ((code === 895) || ((code === 902) || (((904 <= code) && (code <= 906)) || ((code === 908) || (((910 <= code) && (code <= 929)) || ((!A2($elm$core$Basics$modBy, 2, code)) && ((748 <= code) && (code <= 750)))))))))))))) : (((931 <= code) && (code <= 1013)) || (((1015 <= code) && (code <= 1153)) || (((1162 <= code) && (code <= 1327)) || (((1329 <= code) && (code <= 1366)) || ((code === 1369) || (((1376 <= code) && (code <= 1416)) || (((1488 <= code) && (code <= 1514)) || (((1519 <= code) && (code <= 1522)) || (((1568 <= code) && (code <= 1610)) || (((1632 <= code) && (code <= 1641)) || ((1646 <= code) && (code <= 1647))))))))))))) : ((code < 2041) ? (((1649 <= code) && (code <= 1747)) || ((code === 1749) || (((1765 <= code) && (code <= 1766)) || (((1774 <= code) && (code <= 1788)) || ((code === 1791) || ((code === 1808) || (((1810 <= code) && (code <= 1839)) || (((1869 <= code) && (code <= 1957)) || ((code === 1969) || (((1984 <= code) && (code <= 2026)) || ((2036 <= code) && (code <= 2037)))))))))))) : ((code === 2042) || (((2048 <= code) && (code <= 2069)) || ((code === 2074) || ((code === 2084) || ((code === 2088) || (((2112 <= code) && (code <= 2136)) || (((2144 <= code) && (code <= 2154)) || (((2160 <= code) && (code <= 2183)) || (((2185 <= code) && (code <= 2190)) || (((2208 <= code) && (code <= 2249)) || ((2308 <= code) && (code <= 2361)))))))))))))) : ((code < 2609) ? ((code < 2492) ? ((code === 2365) || ((code === 2384) || (((2392 <= code) && (code <= 2401)) || (((2406 <= code) && (code <= 2415)) || (((2417 <= code) && (code <= 2432)) || (((2437 <= code) && (code <= 2444)) || (((2447 <= code) && (code <= 2448)) || (((2451 <= code) && (code <= 2472)) || (((2474 <= code) && (code <= 2480)) || ((code === 2482) || ((2486 <= code) && (code <= 2489)))))))))))) : ((code === 2493) || ((code === 2510) || (((2524 <= code) && (code <= 2525)) || (((2527 <= code) && (code <= 2529)) || (((2534 <= code) && (code <= 2545)) || (((2548 <= code) && (code <= 2553)) || ((code === 2556) || (((2565 <= code) && (code <= 2570)) || (((2575 <= code) && (code <= 2576)) || (((2579 <= code) && (code <= 2600)) || ((2602 <= code) && (code <= 2608))))))))))))) : ((code < 2737) ? (((2610 <= code) && (code <= 2611)) || (((2613 <= code) && (code <= 2614)) || (((2616 <= code) && (code <= 2617)) || (((2649 <= code) && (code <= 2652)) || ((code === 2654) || (((2662 <= code) && (code <= 2671)) || (((2674 <= code) && (code <= 2676)) || (((2693 <= code) && (code <= 2701)) || (((2703 <= code) && (code <= 2705)) || (((2707 <= code) && (code <= 2728)) || ((2730 <= code) && (code <= 2736)))))))))))) : (((2738 <= code) && (code <= 2739)) || (((2741 <= code) && (code <= 2745)) || ((code === 2749) || ((code === 2768) || (((2784 <= code) && (code <= 2785)) || (((2790 <= code) && (code <= 2799)) || ((code === 2809) || (((2821 <= code) && (code <= 2828)) || (((2831 <= code) && (code <= 2832)) || (((2835 <= code) && (code <= 2856)) || (((2858 <= code) && (code <= 2864)) || ((2866 <= code) && (code <= 2867)))))))))))))))) : ((code < 3411) ? ((code < 3132) ? ((code < 2971) ? (((2869 <= code) && (code <= 2873)) || ((code === 2877) || (((2908 <= code) && (code <= 2909)) || (((2911 <= code) && (code <= 2913)) || (((2918 <= code) && (code <= 2927)) || (((2929 <= code) && (code <= 2935)) || ((code === 2947) || (((2949 <= code) && (code <= 2954)) || (((2958 <= code) && (code <= 2960)) || (((2962 <= code) && (code <= 2965)) || ((2969 <= code) && (code <= 2970)))))))))))) : ((code === 2972) || (((2974 <= code) && (code <= 2975)) || (((2979 <= code) && (code <= 2980)) || (((2984 <= code) && (code <= 2986)) || (((2990 <= code) && (code <= 3001)) || ((code === 3024) || (((3046 <= code) && (code <= 3058)) || (((3077 <= code) && (code <= 3084)) || (((3086 <= code) && (code <= 3088)) || (((3090 <= code) && (code <= 3112)) || ((3114 <= code) && (code <= 3129))))))))))))) : ((code < 3252) ? ((code === 3133) || (((3160 <= code) && (code <= 3162)) || ((code === 3165) || (((3168 <= code) && (code <= 3169)) || (((3174 <= code) && (code <= 3183)) || (((3192 <= code) && (code <= 3198)) || ((code === 3200) || (((3205 <= code) && (code <= 3212)) || (((3214 <= code) && (code <= 3216)) || (((3218 <= code) && (code <= 3240)) || ((3242 <= code) && (code <= 3251)))))))))))) : (((3253 <= code) && (code <= 3257)) || ((code === 3261) || (((3293 <= code) && (code <= 3294)) || (((3296 <= code) && (code <= 3297)) || (((3302 <= code) && (code <= 3311)) || (((3313 <= code) && (code <= 3314)) || (((3332 <= code) && (code <= 3340)) || (((3342 <= code) && (code <= 3344)) || (((3346 <= code) && (code <= 3386)) || ((code === 3389) || (code === 3406))))))))))))) : ((code < 3775) ? ((code < 3633) ? (((3412 <= code) && (code <= 3414)) || (((3416 <= code) && (code <= 3425)) || (((3430 <= code) && (code <= 3448)) || (((3450 <= code) && (code <= 3455)) || (((3461 <= code) && (code <= 3478)) || (((3482 <= code) && (code <= 3505)) || (((3507 <= code) && (code <= 3515)) || ((code === 3517) || (((3520 <= code) && (code <= 3526)) || (((3558 <= code) && (code <= 3567)) || ((3585 <= code) && (code <= 3632)))))))))))) : (((3634 <= code) && (code <= 3635)) || (((3648 <= code) && (code <= 3654)) || (((3664 <= code) && (code <= 3673)) || (((3713 <= code) && (code <= 3714)) || ((code === 3716) || (((3718 <= code) && (code <= 3722)) || (((3724 <= code) && (code <= 3747)) || ((code === 3749) || (((3751 <= code) && (code <= 3760)) || (((3762 <= code) && (code <= 3763)) || (code === 3773)))))))))))) : ((code < 4175) ? (((3776 <= code) && (code <= 3780)) || ((code === 3782) || (((3792 <= code) && (code <= 3801)) || (((3804 <= code) && (code <= 3807)) || ((code === 3840) || (((3872 <= code) && (code <= 3891)) || (((3904 <= code) && (code <= 3911)) || (((3913 <= code) && (code <= 3948)) || (((3976 <= code) && (code <= 3980)) || (((4096 <= code) && (code <= 4138)) || ((4159 <= code) && (code <= 4169)))))))))))) : (((4176 <= code) && (code <= 4181)) || (((4186 <= code) && (code <= 4189)) || ((code === 4193) || (((4197 <= code) && (code <= 4198)) || (((4206 <= code) && (code <= 4208)) || (((4213 <= code) && (code <= 4225)) || ((code === 4238) || (((4240 <= code) && (code <= 4249)) || (((4256 <= code) && (code <= 4293)) || ((code === 4295) || ((code === 4301) || ((4304 <= code) && (code <= 4346))))))))))))))))) : ((code < 8454) ? ((code < 6527) ? ((code < 5760) ? ((code < 4801) ? (((4348 <= code) && (code <= 4680)) || (((4682 <= code) && (code <= 4685)) || (((4688 <= code) && (code <= 4694)) || ((code === 4696) || (((4698 <= code) && (code <= 4701)) || (((4704 <= code) && (code <= 4744)) || (((4746 <= code) && (code <= 4749)) || (((4752 <= code) && (code <= 4784)) || (((4786 <= code) && (code <= 4789)) || (((4792 <= code) && (code <= 4798)) || (code === 4800))))))))))) : (((4802 <= code) && (code <= 4805)) || (((4808 <= code) && (code <= 4822)) || (((4824 <= code) && (code <= 4880)) || (((4882 <= code) && (code <= 4885)) || (((4888 <= code) && (code <= 4954)) || (((4969 <= code) && (code <= 4988)) || (((4992 <= code) && (code <= 5007)) || (((5024 <= code) && (code <= 5109)) || (((5112 <= code) && (code <= 5117)) || (((5121 <= code) && (code <= 5740)) || ((5743 <= code) && (code <= 5759))))))))))))) : ((code < 6111) ? (((5761 <= code) && (code <= 5786)) || (((5792 <= code) && (code <= 5866)) || (((5870 <= code) && (code <= 5880)) || (((5888 <= code) && (code <= 5905)) || (((5919 <= code) && (code <= 5937)) || (((5952 <= code) && (code <= 5969)) || (((5984 <= code) && (code <= 5996)) || (((5998 <= code) && (code <= 6000)) || (((6016 <= code) && (code <= 6067)) || ((code === 6103) || (code === 6108))))))))))) : (((6112 <= code) && (code <= 6121)) || (((6128 <= code) && (code <= 6137)) || (((6160 <= code) && (code <= 6169)) || (((6176 <= code) && (code <= 6264)) || (((6272 <= code) && (code <= 6276)) || (((6279 <= code) && (code <= 6312)) || ((code === 6314) || (((6320 <= code) && (code <= 6389)) || (((6400 <= code) && (code <= 6430)) || (((6470 <= code) && (code <= 6509)) || ((6512 <= code) && (code <= 6516)))))))))))))) : ((code < 7417) ? ((code < 7042) ? (((6528 <= code) && (code <= 6571)) || (((6576 <= code) && (code <= 6601)) || (((6608 <= code) && (code <= 6618)) || (((6656 <= code) && (code <= 6678)) || (((6688 <= code) && (code <= 6740)) || (((6784 <= code) && (code <= 6793)) || (((6800 <= code) && (code <= 6809)) || ((code === 6823) || (((6917 <= code) && (code <= 6963)) || (((6981 <= code) && (code <= 6988)) || ((6992 <= code) && (code <= 7001)))))))))))) : (((7043 <= code) && (code <= 7072)) || (((7086 <= code) && (code <= 7141)) || (((7168 <= code) && (code <= 7203)) || (((7232 <= code) && (code <= 7241)) || (((7245 <= code) && (code <= 7293)) || (((7296 <= code) && (code <= 7304)) || (((7312 <= code) && (code <= 7354)) || (((7357 <= code) && (code <= 7359)) || (((7401 <= code) && (code <= 7404)) || (((7406 <= code) && (code <= 7411)) || ((7413 <= code) && (code <= 7414))))))))))))) : ((code < 8129) ? ((code === 7418) || (((7424 <= code) && (code <= 7615)) || (((7680 <= code) && (code <= 7957)) || (((7960 <= code) && (code <= 7965)) || (((7968 <= code) && (code <= 8005)) || (((8008 <= code) && (code <= 8013)) || (((8016 <= code) && (code <= 8023)) || (((8032 <= code) && (code <= 8061)) || (((8064 <= code) && (code <= 8116)) || (((8118 <= code) && (code <= 8124)) || ((code === 8126) || ((A2($elm$core$Basics$modBy, 2, code) === 1) && ((8025 <= code) && (code <= 8031)))))))))))))) : (((8130 <= code) && (code <= 8132)) || (((8134 <= code) && (code <= 8140)) || (((8144 <= code) && (code <= 8147)) || (((8150 <= code) && (code <= 8155)) || (((8160 <= code) && (code <= 8172)) || (((8178 <= code) && (code <= 8180)) || (((8182 <= code) && (code <= 8188)) || (((8304 <= code) && (code <= 8305)) || (((8308 <= code) && (code <= 8313)) || (((8319 <= code) && (code <= 8329)) || (((8336 <= code) && (code <= 8348)) || (code === 8450))))))))))))))) : ((code < 12783) ? ((code < 11647) ? ((code < 9449) ? ((code === 8455) || (((8458 <= code) && (code <= 8467)) || ((code === 8469) || (((8473 <= code) && (code <= 8477)) || (((8490 <= code) && (code <= 8493)) || (((8495 <= code) && (code <= 8505)) || (((8508 <= code) && (code <= 8511)) || (((8517 <= code) && (code <= 8521)) || ((code === 8526) || (((8528 <= code) && (code <= 8585)) || (((9312 <= code) && (code <= 9371)) || ((!A2($elm$core$Basics$modBy, 2, code)) && ((8484 <= code) && (code <= 8488)))))))))))))) : (((9450 <= code) && (code <= 9471)) || (((10102 <= code) && (code <= 10131)) || (((11264 <= code) && (code <= 11492)) || (((11499 <= code) && (code <= 11502)) || (((11506 <= code) && (code <= 11507)) || ((code === 11517) || (((11520 <= code) && (code <= 11557)) || ((code === 11559) || ((code === 11565) || (((11568 <= code) && (code <= 11623)) || (code === 11631)))))))))))) : ((code < 12320) ? (((11648 <= code) && (code <= 11670)) || (((11680 <= code) && (code <= 11686)) || (((11688 <= code) && (code <= 11694)) || (((11696 <= code) && (code <= 11702)) || (((11704 <= code) && (code <= 11710)) || (((11712 <= code) && (code <= 11718)) || (((11720 <= code) && (code <= 11726)) || (((11728 <= code) && (code <= 11734)) || (((11736 <= code) && (code <= 11742)) || ((code === 11823) || ((12293 <= code) && (code <= 12295)))))))))))) : (((12321 <= code) && (code <= 12329)) || (((12337 <= code) && (code <= 12341)) || (((12344 <= code) && (code <= 12348)) || (((12353 <= code) && (code <= 12438)) || (((12445 <= code) && (code <= 12447)) || (((12449 <= code) && (code <= 12538)) || (((12540 <= code) && (code <= 12543)) || (((12549 <= code) && (code <= 12591)) || (((12593 <= code) && (code <= 12686)) || (((12690 <= code) && (code <= 12693)) || ((12704 <= code) && (code <= 12735)))))))))))))) : ((code < 43019) ? ((code < 42559) ? (((12784 <= code) && (code <= 12799)) || (((12832 <= code) && (code <= 12841)) || (((12872 <= code) && (code <= 12879)) || (((12881 <= code) && (code <= 12895)) || (((12928 <= code) && (code <= 12937)) || (((12977 <= code) && (code <= 12991)) || (((13312 <= code) && (code <= 19903)) || (((19968 <= code) && (code <= 42124)) || (((42192 <= code) && (code <= 42237)) || (((42240 <= code) && (code <= 42508)) || ((42512 <= code) && (code <= 42539)))))))))))) : (((42560 <= code) && (code <= 42606)) || (((42623 <= code) && (code <= 42653)) || (((42656 <= code) && (code <= 42735)) || (((42775 <= code) && (code <= 42783)) || (((42786 <= code) && (code <= 42888)) || (((42891 <= code) && (code <= 42954)) || (((42960 <= code) && (code <= 42961)) || (((42966 <= code) && (code <= 42969)) || (((42994 <= code) && (code <= 43009)) || (((43011 <= code) && (code <= 43013)) || (((43015 <= code) && (code <= 43018)) || ((A2($elm$core$Basics$modBy, 2, code) === 1) && ((42963 <= code) && (code <= 42965))))))))))))))) : ((code < 43395) ? (((43020 <= code) && (code <= 43042)) || (((43056 <= code) && (code <= 43061)) || (((43072 <= code) && (code <= 43123)) || (((43138 <= code) && (code <= 43187)) || (((43216 <= code) && (code <= 43225)) || (((43250 <= code) && (code <= 43255)) || ((code === 43259) || (((43261 <= code) && (code <= 43262)) || (((43264 <= code) && (code <= 43301)) || (((43312 <= code) && (code <= 43334)) || ((43360 <= code) && (code <= 43388)))))))))))) : (((43396 <= code) && (code <= 43442)) || (((43471 <= code) && (code <= 43481)) || (((43488 <= code) && (code <= 43492)) || (((43494 <= code) && (code <= 43518)) || (((43520 <= code) && (code <= 43560)) || (((43584 <= code) && (code <= 43586)) || (((43588 <= code) && (code <= 43595)) || (((43600 <= code) && (code <= 43609)) || (((43616 <= code) && (code <= 43638)) || ((code === 43642) || (((43646 <= code) && (code <= 43695)) || (code === 43697))))))))))))))))) : ((code < 71351) ? ((code < 67671) ? ((code < 65548) ? ((code < 64286) ? ((code < 43867) ? (((43701 <= code) && (code <= 43702)) || (((43705 <= code) && (code <= 43709)) || (((43739 <= code) && (code <= 43741)) || (((43744 <= code) && (code <= 43754)) || (((43762 <= code) && (code <= 43764)) || (((43777 <= code) && (code <= 43782)) || (((43785 <= code) && (code <= 43790)) || (((43793 <= code) && (code <= 43798)) || (((43808 <= code) && (code <= 43814)) || (((43816 <= code) && (code <= 43822)) || (((43824 <= code) && (code <= 43866)) || ((!A2($elm$core$Basics$modBy, 2, code)) && ((43712 <= code) && (code <= 43714)))))))))))))) : (((43868 <= code) && (code <= 43881)) || (((43888 <= code) && (code <= 44002)) || (((44016 <= code) && (code <= 44025)) || (((44032 <= code) && (code <= 55203)) || (((55216 <= code) && (code <= 55238)) || (((55243 <= code) && (code <= 55291)) || (((63744 <= code) && (code <= 64109)) || (((64112 <= code) && (code <= 64217)) || (((64256 <= code) && (code <= 64262)) || (((64275 <= code) && (code <= 64279)) || (code === 64285)))))))))))) : ((code < 65135) ? (((64287 <= code) && (code <= 64296)) || (((64298 <= code) && (code <= 64310)) || (((64312 <= code) && (code <= 64316)) || ((code === 64318) || (((64320 <= code) && (code <= 64321)) || (((64323 <= code) && (code <= 64324)) || (((64326 <= code) && (code <= 64433)) || (((64467 <= code) && (code <= 64829)) || (((64848 <= code) && (code <= 64911)) || (((64914 <= code) && (code <= 64967)) || ((65008 <= code) && (code <= 65019)))))))))))) : (((65136 <= code) && (code <= 65140)) || (((65142 <= code) && (code <= 65276)) || (((65296 <= code) && (code <= 65305)) || (((65313 <= code) && (code <= 65338)) || (((65345 <= code) && (code <= 65370)) || (((65382 <= code) && (code <= 65470)) || (((65474 <= code) && (code <= 65479)) || (((65482 <= code) && (code <= 65487)) || (((65490 <= code) && (code <= 65495)) || (((65498 <= code) && (code <= 65500)) || ((65536 <= code) && (code <= 65547)))))))))))))) : ((code < 66775) ? ((code < 66272) ? (((65549 <= code) && (code <= 65574)) || (((65576 <= code) && (code <= 65594)) || (((65596 <= code) && (code <= 65597)) || (((65599 <= code) && (code <= 65613)) || (((65616 <= code) && (code <= 65629)) || (((65664 <= code) && (code <= 65786)) || (((65799 <= code) && (code <= 65843)) || (((65856 <= code) && (code <= 65912)) || (((65930 <= code) && (code <= 65931)) || (((66176 <= code) && (code <= 66204)) || ((66208 <= code) && (code <= 66256)))))))))))) : (((66273 <= code) && (code <= 66299)) || (((66304 <= code) && (code <= 66339)) || (((66349 <= code) && (code <= 66378)) || (((66384 <= code) && (code <= 66421)) || (((66432 <= code) && (code <= 66461)) || (((66464 <= code) && (code <= 66499)) || (((66504 <= code) && (code <= 66511)) || (((66513 <= code) && (code <= 66517)) || (((66560 <= code) && (code <= 66717)) || (((66720 <= code) && (code <= 66729)) || ((66736 <= code) && (code <= 66771))))))))))))) : ((code < 67071) ? (((66776 <= code) && (code <= 66811)) || (((66816 <= code) && (code <= 66855)) || (((66864 <= code) && (code <= 66915)) || (((66928 <= code) && (code <= 66938)) || (((66940 <= code) && (code <= 66954)) || (((66956 <= code) && (code <= 66962)) || (((66964 <= code) && (code <= 66965)) || (((66967 <= code) && (code <= 66977)) || (((66979 <= code) && (code <= 66993)) || (((66995 <= code) && (code <= 67001)) || ((67003 <= code) && (code <= 67004)))))))))))) : (((67072 <= code) && (code <= 67382)) || (((67392 <= code) && (code <= 67413)) || (((67424 <= code) && (code <= 67431)) || (((67456 <= code) && (code <= 67461)) || (((67463 <= code) && (code <= 67504)) || (((67506 <= code) && (code <= 67514)) || (((67584 <= code) && (code <= 67589)) || ((code === 67592) || (((67594 <= code) && (code <= 67637)) || (((67639 <= code) && (code <= 67640)) || ((code === 67644) || ((67647 <= code) && (code <= 67669)))))))))))))))) : ((code < 69871) ? ((code < 68471) ? ((code < 68116) ? (((67672 <= code) && (code <= 67702)) || (((67705 <= code) && (code <= 67742)) || (((67751 <= code) && (code <= 67759)) || (((67808 <= code) && (code <= 67826)) || (((67828 <= code) && (code <= 67829)) || (((67835 <= code) && (code <= 67867)) || (((67872 <= code) && (code <= 67897)) || (((67968 <= code) && (code <= 68023)) || (((68028 <= code) && (code <= 68047)) || (((68050 <= code) && (code <= 68096)) || ((68112 <= code) && (code <= 68115)))))))))))) : (((68117 <= code) && (code <= 68119)) || (((68121 <= code) && (code <= 68149)) || (((68160 <= code) && (code <= 68168)) || (((68192 <= code) && (code <= 68222)) || (((68224 <= code) && (code <= 68255)) || (((68288 <= code) && (code <= 68295)) || (((68297 <= code) && (code <= 68324)) || (((68331 <= code) && (code <= 68335)) || (((68352 <= code) && (code <= 68405)) || (((68416 <= code) && (code <= 68437)) || ((68440 <= code) && (code <= 68466))))))))))))) : ((code < 69423) ? (((68472 <= code) && (code <= 68497)) || (((68521 <= code) && (code <= 68527)) || (((68608 <= code) && (code <= 68680)) || (((68736 <= code) && (code <= 68786)) || (((68800 <= code) && (code <= 68850)) || (((68858 <= code) && (code <= 68899)) || (((68912 <= code) && (code <= 68921)) || (((69216 <= code) && (code <= 69246)) || (((69248 <= code) && (code <= 69289)) || (((69296 <= code) && (code <= 69297)) || ((69376 <= code) && (code <= 69415)))))))))))) : (((69424 <= code) && (code <= 69445)) || (((69457 <= code) && (code <= 69460)) || (((69488 <= code) && (code <= 69505)) || (((69552 <= code) && (code <= 69579)) || (((69600 <= code) && (code <= 69622)) || (((69635 <= code) && (code <= 69687)) || (((69714 <= code) && (code <= 69743)) || (((69745 <= code) && (code <= 69746)) || ((code === 69749) || (((69763 <= code) && (code <= 69807)) || ((69840 <= code) && (code <= 69864)))))))))))))) : ((code < 70404) ? ((code < 70112) ? (((69872 <= code) && (code <= 69881)) || (((69891 <= code) && (code <= 69926)) || (((69942 <= code) && (code <= 69951)) || ((code === 69956) || ((code === 69959) || (((69968 <= code) && (code <= 70002)) || ((code === 70006) || (((70019 <= code) && (code <= 70066)) || (((70081 <= code) && (code <= 70084)) || (((70096 <= code) && (code <= 70106)) || (code === 70108))))))))))) : (((70113 <= code) && (code <= 70132)) || (((70144 <= code) && (code <= 70161)) || (((70163 <= code) && (code <= 70187)) || (((70207 <= code) && (code <= 70208)) || (((70272 <= code) && (code <= 70278)) || ((code === 70280) || (((70282 <= code) && (code <= 70285)) || (((70287 <= code) && (code <= 70301)) || (((70303 <= code) && (code <= 70312)) || (((70320 <= code) && (code <= 70366)) || ((70384 <= code) && (code <= 70393))))))))))))) : ((code < 70735) ? (((70405 <= code) && (code <= 70412)) || (((70415 <= code) && (code <= 70416)) || (((70419 <= code) && (code <= 70440)) || (((70442 <= code) && (code <= 70448)) || (((70450 <= code) && (code <= 70451)) || (((70453 <= code) && (code <= 70457)) || ((code === 70461) || ((code === 70480) || (((70493 <= code) && (code <= 70497)) || (((70656 <= code) && (code <= 70708)) || ((70727 <= code) && (code <= 70730)))))))))))) : (((70736 <= code) && (code <= 70745)) || (((70751 <= code) && (code <= 70753)) || (((70784 <= code) && (code <= 70831)) || (((70852 <= code) && (code <= 70853)) || ((code === 70855) || (((70864 <= code) && (code <= 70873)) || (((71040 <= code) && (code <= 71086)) || (((71128 <= code) && (code <= 71131)) || (((71168 <= code) && (code <= 71215)) || ((code === 71236) || (((71248 <= code) && (code <= 71257)) || ((71296 <= code) && (code <= 71338))))))))))))))))) : ((code < 119893) ? ((code < 73727) ? ((code < 72703) ? ((code < 71959) ? ((code === 71352) || (((71360 <= code) && (code <= 71369)) || (((71424 <= code) && (code <= 71450)) || (((71472 <= code) && (code <= 71483)) || (((71488 <= code) && (code <= 71494)) || (((71680 <= code) && (code <= 71723)) || (((71840 <= code) && (code <= 71922)) || (((71935 <= code) && (code <= 71942)) || ((code === 71945) || (((71948 <= code) && (code <= 71955)) || ((71957 <= code) && (code <= 71958)))))))))))) : (((71960 <= code) && (code <= 71983)) || (((72016 <= code) && (code <= 72025)) || (((72096 <= code) && (code <= 72103)) || (((72106 <= code) && (code <= 72144)) || ((code === 72192) || (((72203 <= code) && (code <= 72242)) || ((code === 72250) || ((code === 72272) || (((72284 <= code) && (code <= 72329)) || ((code === 72349) || (((72368 <= code) && (code <= 72440)) || ((A2($elm$core$Basics$modBy, 2, code) === 1) && (((71999 <= code) && (code <= 72001)) || ((72161 <= code) && (code <= 72163)))))))))))))))) : ((code < 73062) ? (((72704 <= code) && (code <= 72712)) || (((72714 <= code) && (code <= 72750)) || ((code === 72768) || (((72784 <= code) && (code <= 72812)) || (((72818 <= code) && (code <= 72847)) || (((72960 <= code) && (code <= 72966)) || (((72968 <= code) && (code <= 72969)) || (((72971 <= code) && (code <= 73008)) || ((code === 73030) || (((73040 <= code) && (code <= 73049)) || ((73056 <= code) && (code <= 73061)))))))))))) : (((73063 <= code) && (code <= 73064)) || (((73066 <= code) && (code <= 73097)) || ((code === 73112) || (((73120 <= code) && (code <= 73129)) || (((73440 <= code) && (code <= 73458)) || ((code === 73474) || (((73476 <= code) && (code <= 73488)) || (((73490 <= code) && (code <= 73523)) || (((73552 <= code) && (code <= 73561)) || ((code === 73648) || ((73664 <= code) && (code <= 73684)))))))))))))) : ((code < 94098) ? ((code < 92863) ? (((73728 <= code) && (code <= 74649)) || (((74752 <= code) && (code <= 74862)) || (((74880 <= code) && (code <= 75075)) || (((77712 <= code) && (code <= 77808)) || (((77824 <= code) && (code <= 78895)) || (((78913 <= code) && (code <= 78918)) || (((82944 <= code) && (code <= 83526)) || (((92160 <= code) && (code <= 92728)) || (((92736 <= code) && (code <= 92766)) || (((92768 <= code) && (code <= 92777)) || ((92784 <= code) && (code <= 92862)))))))))))) : (((92864 <= code) && (code <= 92873)) || (((92880 <= code) && (code <= 92909)) || (((92928 <= code) && (code <= 92975)) || (((92992 <= code) && (code <= 92995)) || (((93008 <= code) && (code <= 93017)) || (((93019 <= code) && (code <= 93025)) || (((93027 <= code) && (code <= 93047)) || (((93053 <= code) && (code <= 93071)) || (((93760 <= code) && (code <= 93846)) || (((93952 <= code) && (code <= 94026)) || (code === 94032)))))))))))) : ((code < 110927) ? (((94099 <= code) && (code <= 94111)) || (((94176 <= code) && (code <= 94177)) || ((code === 94179) || (((94208 <= code) && (code <= 100343)) || (((100352 <= code) && (code <= 101589)) || (((101632 <= code) && (code <= 101640)) || (((110576 <= code) && (code <= 110579)) || (((110581 <= code) && (code <= 110587)) || (((110589 <= code) && (code <= 110590)) || (((110592 <= code) && (code <= 110882)) || (code === 110898))))))))))) : (((110928 <= code) && (code <= 110930)) || ((code === 110933) || (((110948 <= code) && (code <= 110951)) || (((110960 <= code) && (code <= 111355)) || (((113664 <= code) && (code <= 113770)) || (((113776 <= code) && (code <= 113788)) || (((113792 <= code) && (code <= 113800)) || (((113808 <= code) && (code <= 113817)) || (((119488 <= code) && (code <= 119507)) || (((119520 <= code) && (code <= 119539)) || (((119648 <= code) && (code <= 119672)) || ((119808 <= code) && (code <= 119892)))))))))))))))) : ((code < 124911) ? ((code < 120597) ? ((code < 120085) ? (((119894 <= code) && (code <= 119964)) || (((119966 <= code) && (code <= 119967)) || ((code === 119970) || (((119973 <= code) && (code <= 119974)) || (((119977 <= code) && (code <= 119980)) || (((119982 <= code) && (code <= 119993)) || ((code === 119995) || (((119997 <= code) && (code <= 120003)) || (((120005 <= code) && (code <= 120069)) || (((120071 <= code) && (code <= 120074)) || ((120077 <= code) && (code <= 120084)))))))))))) : (((120086 <= code) && (code <= 120092)) || (((120094 <= code) && (code <= 120121)) || (((120123 <= code) && (code <= 120126)) || (((120128 <= code) && (code <= 120132)) || ((code === 120134) || (((120138 <= code) && (code <= 120144)) || (((120146 <= code) && (code <= 120485)) || (((120488 <= code) && (code <= 120512)) || (((120514 <= code) && (code <= 120538)) || (((120540 <= code) && (code <= 120570)) || ((120572 <= code) && (code <= 120596))))))))))))) : ((code < 123135) ? (((120598 <= code) && (code <= 120628)) || (((120630 <= code) && (code <= 120654)) || (((120656 <= code) && (code <= 120686)) || (((120688 <= code) && (code <= 120712)) || (((120714 <= code) && (code <= 120744)) || (((120746 <= code) && (code <= 120770)) || (((120772 <= code) && (code <= 120779)) || (((120782 <= code) && (code <= 120831)) || (((122624 <= code) && (code <= 122654)) || (((122661 <= code) && (code <= 122666)) || ((122928 <= code) && (code <= 122989)))))))))))) : (((123136 <= code) && (code <= 123180)) || (((123191 <= code) && (code <= 123197)) || (((123200 <= code) && (code <= 123209)) || ((code === 123214) || (((123536 <= code) && (code <= 123565)) || (((123584 <= code) && (code <= 123627)) || (((123632 <= code) && (code <= 123641)) || (((124112 <= code) && (code <= 124139)) || (((124144 <= code) && (code <= 124153)) || (((124896 <= code) && (code <= 124902)) || (((124904 <= code) && (code <= 124907)) || ((124909 <= code) && (code <= 124910))))))))))))))) : ((code < 126560) ? ((code < 126463) ? (((124912 <= code) && (code <= 124926)) || (((124928 <= code) && (code <= 125124)) || (((125127 <= code) && (code <= 125135)) || (((125184 <= code) && (code <= 125251)) || ((code === 125259) || (((125264 <= code) && (code <= 125273)) || (((126065 <= code) && (code <= 126123)) || (((126125 <= code) && (code <= 126127)) || (((126129 <= code) && (code <= 126132)) || (((126209 <= code) && (code <= 126253)) || ((126255 <= code) && (code <= 126269)))))))))))) : (((126464 <= code) && (code <= 126467)) || (((126469 <= code) && (code <= 126495)) || (((126497 <= code) && (code <= 126498)) || ((code === 126500) || ((code === 126503) || (((126505 <= code) && (code <= 126514)) || (((126516 <= code) && (code <= 126519)) || ((code === 126530) || (((126541 <= code) && (code <= 126543)) || (((126545 <= code) && (code <= 126546)) || ((code === 126548) || ((A2($elm$core$Basics$modBy, 2, code) === 1) && (((126521 <= code) && (code <= 126523)) || (((126535 <= code) && (code <= 126539)) || ((126551 <= code) && (code <= 126559))))))))))))))))) : ((code < 126634) ? (((126561 <= code) && (code <= 126562)) || ((code === 126564) || (((126567 <= code) && (code <= 126570)) || (((126572 <= code) && (code <= 126578)) || (((126580 <= code) && (code <= 126583)) || (((126585 <= code) && (code <= 126588)) || ((code === 126590) || (((126592 <= code) && (code <= 126601)) || (((126603 <= code) && (code <= 126619)) || (((126625 <= code) && (code <= 126627)) || ((126629 <= code) && (code <= 126633)))))))))))) : (((126635 <= code) && (code <= 126651)) || (((127232 <= code) && (code <= 127244)) || (((130032 <= code) && (code <= 130041)) || (((131072 <= code) && (code <= 173791)) || (((173824 <= code) && (code <= 177977)) || (((177984 <= code) && (code <= 178205)) || (((178208 <= code) && (code <= 183969)) || (((183984 <= code) && (code <= 191456)) || (((191472 <= code) && (code <= 192093)) || (((194560 <= code) && (code <= 195101)) || (((196608 <= code) && (code <= 201546)) || ((201552 <= code) && (code <= 205743))))))))))))))))))))))));
};
var $elm$core$String$toUpper = _String_toUpper;
var $stil4m$elm_syntax$Char$Extra$unicodeIsLowerFast = function (c) {
	var code = $elm$core$Char$toCode(c);
	var cString = $elm$core$String$fromChar(c);
	return $stil4m$elm_syntax$Char$Extra$charCodeIsLower(code) || ((_Utils_eq(
		$elm$core$String$toLower(cString),
		cString + '') && (!_Utils_eq(
		$elm$core$String$toUpper(cString),
		cString + ''))) ? ((code <= 836) || (((838 <= code) && (code <= 8559)) || (((8576 <= code) && (code <= 9423)) || ((9450 <= code) && (code <= 983040))))) : ((code < 43001) ? ((code < 8457) ? ((code < 590) ? (((311 <= code) && (code <= 312)) || (((396 <= code) && (code <= 397)) || (((409 <= code) && (code <= 411)) || (((426 <= code) && (code <= 427)) || (((441 <= code) && (code <= 442)) || (((445 <= code) && (code <= 447)) || ((code === 545) || ((563 <= code) && (code <= 569))))))))) : (((591 <= code) && (code <= 659)) || (((661 <= code) && (code <= 687)) || (((1019 <= code) && (code <= 1020)) || (((1376 <= code) && (code <= 1416)) || (((7424 <= code) && (code <= 7467)) || (((7531 <= code) && (code <= 7543)) || (((7545 <= code) && (code <= 7578)) || (((7829 <= code) && (code <= 7837)) || (code === 7839)))))))))) : ((code < 11376) ? ((code === 8458) || (((8462 <= code) && (code <= 8463)) || ((code === 8467) || ((code === 8495) || ((code === 8500) || ((code === 8505) || (((8508 <= code) && (code <= 8509)) || ((8518 <= code) && (code <= 8521))))))))) : ((code === 11377) || (((11379 <= code) && (code <= 11380)) || (((11382 <= code) && (code <= 11387)) || (((11491 <= code) && (code <= 11492)) || (((42799 <= code) && (code <= 42801)) || (((42865 <= code) && (code <= 42872)) || ((code === 42894) || (((42899 <= code) && (code <= 42901)) || ((code === 42927) || ((A2($elm$core$Basics$modBy, 2, code) === 1) && ((42963 <= code) && (code <= 42965)))))))))))))) : ((code < 120353) ? ((code < 119994) ? ((code === 43002) || (((43824 <= code) && (code <= 43866)) || (((43872 <= code) && (code <= 43880)) || (((119834 <= code) && (code <= 119859)) || (((119886 <= code) && (code <= 119892)) || (((119894 <= code) && (code <= 119911)) || (((119938 <= code) && (code <= 119963)) || ((119990 <= code) && (code <= 119993))))))))) : ((code === 119995) || (((119997 <= code) && (code <= 120003)) || (((120005 <= code) && (code <= 120015)) || (((120042 <= code) && (code <= 120067)) || (((120094 <= code) && (code <= 120119)) || (((120146 <= code) && (code <= 120171)) || (((120198 <= code) && (code <= 120223)) || (((120250 <= code) && (code <= 120275)) || ((120302 <= code) && (code <= 120327))))))))))) : ((code < 120655) ? (((120354 <= code) && (code <= 120379)) || (((120406 <= code) && (code <= 120431)) || (((120458 <= code) && (code <= 120485)) || (((120514 <= code) && (code <= 120538)) || (((120540 <= code) && (code <= 120545)) || (((120572 <= code) && (code <= 120596)) || (((120598 <= code) && (code <= 120603)) || ((120630 <= code) && (code <= 120654))))))))) : (((120656 <= code) && (code <= 120661)) || (((120688 <= code) && (code <= 120712)) || (((120714 <= code) && (code <= 120719)) || (((120746 <= code) && (code <= 120770)) || (((120772 <= code) && (code <= 120777)) || ((code === 120779) || (((122624 <= code) && (code <= 122633)) || (((122635 <= code) && (code <= 122654)) || ((122661 <= code) && (code <= 122666))))))))))))));
};
var $stil4m$elm_syntax$Elm$Parser$Tokens$functionNameNode = A4($stil4m$elm_syntax$ParserFast$ifFollowedByWhileValidateMapWithRangeWithoutLinebreak, $stil4m$elm_syntax$Elm$Syntax$Node$Node, $stil4m$elm_syntax$Char$Extra$unicodeIsLowerFast, $stil4m$elm_syntax$Char$Extra$unicodeIsAlphaNumOrUnderscoreFast, $stil4m$elm_syntax$Elm$Parser$Tokens$isNotReserved);
var $stil4m$elm_syntax$Elm$Syntax$Expression$GLSLExpression = function (a) {
	return {$: 'GLSLExpression', a: a};
};
var $stil4m$elm_syntax$ParserFast$loopUntilHelp = F7(
	function (committedSoFar, endParser, element, soFar, reduce, foldedToRes, s0) {
		loopUntilHelp:
		while (true) {
			var parseEnd = endParser.a;
			var parseElement = element.a;
			var _v0 = parseEnd(s0);
			if (_v0.$ === 'Good') {
				var s1 = _v0.b;
				return A2(
					$stil4m$elm_syntax$ParserFast$Good,
					foldedToRes(soFar),
					s1);
			} else {
				var endCommitted = _v0.a;
				var endX = _v0.b;
				if (endCommitted) {
					return A2($stil4m$elm_syntax$ParserFast$Bad, true, endX);
				} else {
					var _v1 = parseElement(s0);
					if (_v1.$ === 'Good') {
						var elementResult = _v1.a;
						var s1 = _v1.b;
						var $temp$committedSoFar = true,
							$temp$endParser = endParser,
							$temp$element = element,
							$temp$soFar = A2(reduce, elementResult, soFar),
							$temp$reduce = reduce,
							$temp$foldedToRes = foldedToRes,
							$temp$s0 = s1;
						committedSoFar = $temp$committedSoFar;
						endParser = $temp$endParser;
						element = $temp$element;
						soFar = $temp$soFar;
						reduce = $temp$reduce;
						foldedToRes = $temp$foldedToRes;
						s0 = $temp$s0;
						continue loopUntilHelp;
					} else {
						var elementCommitted = _v1.a;
						var x = _v1.b;
						return A2($stil4m$elm_syntax$ParserFast$Bad, committedSoFar || elementCommitted, x);
					}
				}
			}
		}
	});
var $stil4m$elm_syntax$ParserFast$loopUntil = F5(
	function (endParser, element, initialFolded, reduce, foldedToRes) {
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s) {
				return A7($stil4m$elm_syntax$ParserFast$loopUntilHelp, false, endParser, element, initialFolded, reduce, foldedToRes, s);
			});
	});
var $stil4m$elm_syntax$ParserFast$mapWithRange = F2(
	function (combineStartAndResult, _v0) {
		var parse = _v0.a;
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s0) {
				var _v1 = parse(s0);
				if (_v1.$ === 'Good') {
					var a = _v1.a;
					var s1 = _v1.b;
					return A2(
						$stil4m$elm_syntax$ParserFast$Good,
						A2(
							combineStartAndResult,
							{
								end: {column: s1.col, row: s1.row},
								start: {column: s0.col, row: s0.row}
							},
							a),
						s1);
				} else {
					var committed = _v1.a;
					var x = _v1.b;
					return A2($stil4m$elm_syntax$ParserFast$Bad, committed, x);
				}
			});
	});
var $stil4m$elm_syntax$Elm$Parser$Expression$glslExpressionAfterOpeningSquareBracket = A2(
	$stil4m$elm_syntax$ParserFast$symbolFollowedBy,
	'glsl|',
	A2(
		$stil4m$elm_syntax$ParserFast$mapWithRange,
		F2(
			function (range, s) {
				return {
					comments: $stil4m$elm_syntax$Rope$empty,
					syntax: A2(
						$stil4m$elm_syntax$Elm$Syntax$Node$Node,
						{
							end: {column: range.end.column + 2, row: range.end.row},
							start: {column: range.start.column - 6, row: range.start.row}
						},
						$stil4m$elm_syntax$Elm$Syntax$Expression$GLSLExpression(s))
				};
			}),
		A5(
			$stil4m$elm_syntax$ParserFast$loopUntil,
			A2($stil4m$elm_syntax$ParserFast$symbol, '|]', _Utils_Tuple0),
			A2(
				$stil4m$elm_syntax$ParserFast$oneOf2,
				A2($stil4m$elm_syntax$ParserFast$symbol, '|', '|'),
				$stil4m$elm_syntax$ParserFast$while(
					function (c) {
						return !_Utils_eq(
							c,
							_Utils_chr('|'));
					})),
			'',
			F2(
				function (extension, soFar) {
					return soFar + (extension + '');
				}),
			$elm$core$Basics$identity)));
var $stil4m$elm_syntax$ParserFast$ExpectingKeyword = F3(
	function (a, b, c) {
		return {$: 'ExpectingKeyword', a: a, b: b, c: c};
	});
var $stil4m$elm_syntax$Char$Extra$isLatinAlphaNumOrUnderscoreFast = function (c) {
	var code = $elm$core$Char$toCode(c);
	return $stil4m$elm_syntax$Char$Extra$charCodeIsLower(code) || ($stil4m$elm_syntax$Char$Extra$charCodeIsUpper(code) || ($stil4m$elm_syntax$Char$Extra$charCodeIsDigit(code) || (code === 95)));
};
var $stil4m$elm_syntax$ParserFast$isSubCharAlphaNumOrUnderscore = F2(
	function (offset, string) {
		return A2(
			$elm$core$String$any,
			$stil4m$elm_syntax$Char$Extra$isLatinAlphaNumOrUnderscoreFast,
			A3($elm$core$String$slice, offset, offset + 1, string));
	});
var $stil4m$elm_syntax$ParserFast$keyword = F2(
	function (kwd, res) {
		var kwdLength = $elm$core$String$length(kwd);
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s) {
				var newOffset = s.offset + kwdLength;
				return (_Utils_eq(
					A3($elm$core$String$slice, s.offset, newOffset, s.src),
					kwd + '') && (!A2($stil4m$elm_syntax$ParserFast$isSubCharAlphaNumOrUnderscore, newOffset, s.src))) ? A2(
					$stil4m$elm_syntax$ParserFast$Good,
					res,
					{col: s.col + kwdLength, indent: s.indent, offset: newOffset, row: s.row, src: s.src}) : A2(
					$stil4m$elm_syntax$ParserFast$Bad,
					false,
					A3($stil4m$elm_syntax$ParserFast$ExpectingKeyword, s.row, s.col, kwd));
			});
	});
var $stil4m$elm_syntax$Elm$Parser$Tokens$inToken = A2($stil4m$elm_syntax$ParserFast$keyword, 'in', _Utils_Tuple0);
var $stil4m$elm_syntax$ParserFast$keywordFollowedBy = F2(
	function (kwd, _v0) {
		var parseNext = _v0.a;
		var kwdLength = $elm$core$String$length(kwd);
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s) {
				var newOffset = s.offset + kwdLength;
				return (_Utils_eq(
					A3($elm$core$String$slice, s.offset, newOffset, s.src),
					kwd + '') && (!A2($stil4m$elm_syntax$ParserFast$isSubCharAlphaNumOrUnderscore, newOffset, s.src))) ? $stil4m$elm_syntax$ParserFast$pStepCommit(
					parseNext(
						{col: s.col + kwdLength, indent: s.indent, offset: newOffset, row: s.row, src: s.src})) : A2(
					$stil4m$elm_syntax$ParserFast$Bad,
					false,
					A3($stil4m$elm_syntax$ParserFast$ExpectingKeyword, s.row, s.col, kwd));
			});
	});
var $stil4m$elm_syntax$ParserFast$map2 = F3(
	function (func, _v0, _v1) {
		var parseA = _v0.a;
		var parseB = _v1.a;
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s0) {
				var _v2 = parseA(s0);
				if (_v2.$ === 'Bad') {
					var committed = _v2.a;
					var x = _v2.b;
					return A2($stil4m$elm_syntax$ParserFast$Bad, committed, x);
				} else {
					var a = _v2.a;
					var s1 = _v2.b;
					var _v3 = parseB(s1);
					if (_v3.$ === 'Bad') {
						var x = _v3.b;
						return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
					} else {
						var b = _v3.a;
						var s2 = _v3.b;
						return A2(
							$stil4m$elm_syntax$ParserFast$Good,
							A2(func, a, b),
							s2);
					}
				}
			});
	});
var $stil4m$elm_syntax$ParserFast$columnIndentAndThen = function (callback) {
	return $stil4m$elm_syntax$ParserFast$Parser(
		function (s) {
			var _v0 = A2(callback, s.col, s.indent);
			var parse = _v0.a;
			return parse(s);
		});
};
var $stil4m$elm_syntax$ParserFast$ExpectingCustom = F3(
	function (a, b, c) {
		return {$: 'ExpectingCustom', a: a, b: b, c: c};
	});
var $stil4m$elm_syntax$ParserFast$problem = function (msg) {
	return $stil4m$elm_syntax$ParserFast$Parser(
		function (s) {
			return A2(
				$stil4m$elm_syntax$ParserFast$Bad,
				false,
				A3($stil4m$elm_syntax$ParserFast$ExpectingCustom, s.row, s.col, msg));
		});
};
var $stil4m$elm_syntax$Elm$Parser$Layout$problemTopIndentation = $stil4m$elm_syntax$ParserFast$problem('must be on top indentation');
var $stil4m$elm_syntax$Elm$Parser$Layout$onTopIndentationFollowedBy = function (nextParser) {
	return $stil4m$elm_syntax$ParserFast$columnIndentAndThen(
		F2(
			function (column, indent) {
				return (!(column - indent)) ? nextParser : $stil4m$elm_syntax$Elm$Parser$Layout$problemTopIndentation;
			}));
};
var $stil4m$elm_syntax$ParserFast$skipWhileWhitespaceHelp = F5(
	function (offset, row, col, src, indent) {
		skipWhileWhitespaceHelp:
		while (true) {
			var _v0 = A3($elm$core$String$slice, offset, offset + 1, src);
			switch (_v0) {
				case ' ':
					var $temp$offset = offset + 1,
						$temp$row = row,
						$temp$col = col + 1,
						$temp$src = src,
						$temp$indent = indent;
					offset = $temp$offset;
					row = $temp$row;
					col = $temp$col;
					src = $temp$src;
					indent = $temp$indent;
					continue skipWhileWhitespaceHelp;
				case '\n':
					var $temp$offset = offset + 1,
						$temp$row = row + 1,
						$temp$col = 1,
						$temp$src = src,
						$temp$indent = indent;
					offset = $temp$offset;
					row = $temp$row;
					col = $temp$col;
					src = $temp$src;
					indent = $temp$indent;
					continue skipWhileWhitespaceHelp;
				case '\u000D':
					var $temp$offset = offset + 1,
						$temp$row = row,
						$temp$col = col + 1,
						$temp$src = src,
						$temp$indent = indent;
					offset = $temp$offset;
					row = $temp$row;
					col = $temp$col;
					src = $temp$src;
					indent = $temp$indent;
					continue skipWhileWhitespaceHelp;
				default:
					return {col: col, indent: indent, offset: offset, row: row, src: src};
			}
		}
	});
var $stil4m$elm_syntax$ParserFast$followedBySkipWhileWhitespace = function (_v0) {
	var parseBefore = _v0.a;
	return $stil4m$elm_syntax$ParserFast$Parser(
		function (s0) {
			var _v1 = parseBefore(s0);
			if (_v1.$ === 'Good') {
				var res = _v1.a;
				var s1 = _v1.b;
				var s2 = A5($stil4m$elm_syntax$ParserFast$skipWhileWhitespaceHelp, s1.offset, s1.row, s1.col, s1.src, s1.indent);
				return A2($stil4m$elm_syntax$ParserFast$Good, res, s2);
			} else {
				var bad = _v1;
				return bad;
			}
		});
};
var $stil4m$elm_syntax$ParserFast$map2OrSucceed = F4(
	function (func, _v0, _v1, fallback) {
		var parseA = _v0.a;
		var parseB = _v1.a;
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s0) {
				var _v2 = parseA(s0);
				if (_v2.$ === 'Bad') {
					var c1 = _v2.a;
					var x = _v2.b;
					return c1 ? A2($stil4m$elm_syntax$ParserFast$Bad, true, x) : A2($stil4m$elm_syntax$ParserFast$Good, fallback, s0);
				} else {
					var a = _v2.a;
					var s1 = _v2.b;
					var _v3 = parseB(s1);
					if (_v3.$ === 'Bad') {
						var x = _v3.b;
						return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
					} else {
						var b = _v3.a;
						var s2 = _v3.b;
						return A2(
							$stil4m$elm_syntax$ParserFast$Good,
							A2(func, a, b),
							s2);
					}
				}
			});
	});
var $stil4m$elm_syntax$ParserFast$offsetSourceAndThen = function (callback) {
	return $stil4m$elm_syntax$ParserFast$Parser(
		function (s) {
			var _v0 = A2(callback, s.offset, s.src);
			var parse = _v0.a;
			return parse(s);
		});
};
var $stil4m$elm_syntax$Elm$Parser$Comments$problemUnexpectedDocumentation = $stil4m$elm_syntax$ParserFast$problem('unexpected documentation comment');
var $stil4m$elm_syntax$Elm$Parser$Comments$multilineComment = $stil4m$elm_syntax$ParserFast$offsetSourceAndThen(
	F2(
		function (offset, source) {
			var _v0 = A3($elm$core$String$slice, offset + 2, offset + 3, source);
			if (_v0 === '|') {
				return $stil4m$elm_syntax$Elm$Parser$Comments$problemUnexpectedDocumentation;
			} else {
				return $stil4m$elm_syntax$Elm$Parser$Comments$multiLineCommentNoCheck;
			}
		}));
var $stil4m$elm_syntax$Rope$Leaf = F2(
	function (a, b) {
		return {$: 'Leaf', a: a, b: b};
	});
var $stil4m$elm_syntax$Rope$one = function (onlyElement) {
	return A2($stil4m$elm_syntax$Rope$Leaf, onlyElement, _Utils_Tuple0);
};
var $stil4m$elm_syntax$ParserFast$loopWhileSucceedsHelp = F5(
	function (element, soFar, reduce, foldedToRes, s0) {
		loopWhileSucceedsHelp:
		while (true) {
			var parseElement = element.a;
			var _v0 = parseElement(s0);
			if (_v0.$ === 'Good') {
				var elementResult = _v0.a;
				var s1 = _v0.b;
				var $temp$element = element,
					$temp$soFar = A2(reduce, elementResult, soFar),
					$temp$reduce = reduce,
					$temp$foldedToRes = foldedToRes,
					$temp$s0 = s1;
				element = $temp$element;
				soFar = $temp$soFar;
				reduce = $temp$reduce;
				foldedToRes = $temp$foldedToRes;
				s0 = $temp$s0;
				continue loopWhileSucceedsHelp;
			} else {
				var elementCommitted = _v0.a;
				var x = _v0.b;
				return elementCommitted ? A2($stil4m$elm_syntax$ParserFast$Bad, true, x) : A2(
					$stil4m$elm_syntax$ParserFast$Good,
					foldedToRes(soFar),
					s0);
			}
		}
	});
var $stil4m$elm_syntax$ParserFast$loopWhileSucceeds = F4(
	function (element, initialFolded, reduce, foldedToRes) {
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s) {
				return A5($stil4m$elm_syntax$ParserFast$loopWhileSucceedsHelp, element, initialFolded, reduce, foldedToRes, s);
			});
	});
var $stil4m$elm_syntax$Rope$prependToFilled = F2(
	function (rightLikelyFilled, left) {
		if (left.$ === 'Nothing') {
			return $elm$core$Maybe$Just(rightLikelyFilled);
		} else {
			var leftLikelyFilled = left.a;
			return $elm$core$Maybe$Just(
				A2($stil4m$elm_syntax$Rope$Branch2, leftLikelyFilled, rightLikelyFilled));
		}
	});
var $stil4m$elm_syntax$ParserFast$whileMapWithRange = F2(
	function (isGood, rangeAndConsumedStringToRes) {
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s0) {
				var s1 = A6($stil4m$elm_syntax$ParserFast$skipWhileHelp, isGood, s0.offset, s0.row, s0.col, s0.src, s0.indent);
				return A2(
					$stil4m$elm_syntax$ParserFast$Good,
					A2(
						rangeAndConsumedStringToRes,
						{
							end: {column: s1.col, row: s1.row},
							start: {column: s0.col, row: s0.row}
						},
						A3($elm$core$String$slice, s0.offset, s1.offset, s0.src)),
					s1);
			});
	});
var $stil4m$elm_syntax$Elm$Parser$Comments$singleLineComment = A2(
	$stil4m$elm_syntax$ParserFast$symbolFollowedBy,
	'--',
	A2(
		$stil4m$elm_syntax$ParserFast$whileMapWithRange,
		function (c) {
			switch (c.valueOf()) {
				case '\u000D':
					return false;
				case '\n':
					return false;
				default:
					return !$stil4m$elm_syntax$Char$Extra$isUtf16Surrogate(c);
			}
		},
		F2(
			function (range, content) {
				return A2(
					$stil4m$elm_syntax$Elm$Syntax$Node$Node,
					{
						end: {column: range.end.column, row: range.start.row},
						start: {column: range.start.column - 2, row: range.start.row}
					},
					'--' + content);
			})));
var $stil4m$elm_syntax$Elm$Parser$Layout$whitespaceAndCommentsOrEmptyLoop = A4(
	$stil4m$elm_syntax$ParserFast$loopWhileSucceeds,
	$stil4m$elm_syntax$ParserFast$followedBySkipWhileWhitespace(
		A2($stil4m$elm_syntax$ParserFast$oneOf2, $stil4m$elm_syntax$Elm$Parser$Comments$singleLineComment, $stil4m$elm_syntax$Elm$Parser$Comments$multilineComment)),
	$stil4m$elm_syntax$Rope$empty,
	F2(
		function (right, soFar) {
			return A2(
				$stil4m$elm_syntax$Rope$prependToFilled,
				$stil4m$elm_syntax$Rope$one(right),
				soFar);
		}),
	$elm$core$Basics$identity);
var $stil4m$elm_syntax$Elm$Parser$Layout$fromMultilineCommentNodeOrEmptyOnProblem = A4(
	$stil4m$elm_syntax$ParserFast$map2OrSucceed,
	F2(
		function (comment, commentsAfter) {
			return A2(
				$stil4m$elm_syntax$Rope$filledPrependTo,
				commentsAfter,
				$stil4m$elm_syntax$Rope$one(comment));
		}),
	$stil4m$elm_syntax$ParserFast$followedBySkipWhileWhitespace($stil4m$elm_syntax$Elm$Parser$Comments$multilineComment),
	$stil4m$elm_syntax$Elm$Parser$Layout$whitespaceAndCommentsOrEmptyLoop,
	$stil4m$elm_syntax$Rope$empty);
var $stil4m$elm_syntax$Elm$Parser$Layout$fromSingleLineCommentNode = A3(
	$stil4m$elm_syntax$ParserFast$map2,
	F2(
		function (content, commentsAfter) {
			return A2(
				$stil4m$elm_syntax$Rope$filledPrependTo,
				commentsAfter,
				$stil4m$elm_syntax$Rope$one(content));
		}),
	$stil4m$elm_syntax$ParserFast$followedBySkipWhileWhitespace($stil4m$elm_syntax$Elm$Parser$Comments$singleLineComment),
	$stil4m$elm_syntax$Elm$Parser$Layout$whitespaceAndCommentsOrEmptyLoop);
var $stil4m$elm_syntax$ParserFast$offsetSourceAndThenOrSucceed = F2(
	function (callback, fallback) {
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s) {
				var _v0 = A2(callback, s.offset, s.src);
				if (_v0.$ === 'Nothing') {
					return A2($stil4m$elm_syntax$ParserFast$Good, fallback, s);
				} else {
					var parse = _v0.a.a;
					return parse(s);
				}
			});
	});
var $stil4m$elm_syntax$ParserFast$skipWhileWhitespaceFollowedBy = function (_v0) {
	var parseNext = _v0.a;
	return $stil4m$elm_syntax$ParserFast$Parser(
		function (s0) {
			var s1 = A5($stil4m$elm_syntax$ParserFast$skipWhileWhitespaceHelp, s0.offset, s0.row, s0.col, s0.src, s0.indent);
			return $stil4m$elm_syntax$ParserFast$pStepCommit(
				parseNext(s1));
		});
};
var $stil4m$elm_syntax$Elm$Parser$Layout$whitespaceAndCommentsOrEmpty = $stil4m$elm_syntax$ParserFast$skipWhileWhitespaceFollowedBy(
	A2(
		$stil4m$elm_syntax$ParserFast$offsetSourceAndThenOrSucceed,
		F2(
			function (offset, source) {
				var _v0 = A3($elm$core$String$slice, offset, offset + 2, source);
				switch (_v0) {
					case '--':
						return $elm$core$Maybe$Just($stil4m$elm_syntax$Elm$Parser$Layout$fromSingleLineCommentNode);
					case '{-':
						return $elm$core$Maybe$Just($stil4m$elm_syntax$Elm$Parser$Layout$fromMultilineCommentNodeOrEmptyOnProblem);
					default:
						return $elm$core$Maybe$Nothing;
				}
			}),
		$stil4m$elm_syntax$Rope$empty));
var $stil4m$elm_syntax$Elm$Parser$Layout$optimisticLayout = $stil4m$elm_syntax$Elm$Parser$Layout$whitespaceAndCommentsOrEmpty;
var $stil4m$elm_syntax$Elm$Parser$Layout$layoutStrictFollowedBy = function (nextParser) {
	return A3(
		$stil4m$elm_syntax$ParserFast$map2,
		F2(
			function (commentsBefore, after) {
				return {comments: commentsBefore, syntax: after};
			}),
		$stil4m$elm_syntax$Elm$Parser$Layout$optimisticLayout,
		$stil4m$elm_syntax$Elm$Parser$Layout$onTopIndentationFollowedBy(nextParser));
};
var $stil4m$elm_syntax$ParserFast$lazy = function (thunk) {
	return $stil4m$elm_syntax$ParserFast$Parser(
		function (s) {
			var _v0 = thunk(_Utils_Tuple0);
			var parse = _v0.a;
			return parse(s);
		});
};
var $stil4m$elm_syntax$Elm$Syntax$Expression$Literal = function (a) {
	return {$: 'Literal', a: a};
};
var $stil4m$elm_syntax$ParserFast$whileWithoutLinebreak = function (isGood) {
	return $stil4m$elm_syntax$ParserFast$Parser(
		function (s0) {
			var s1 = A6($stil4m$elm_syntax$ParserFast$skipWhileWithoutLinebreakHelp, isGood, s0.offset, s0.row, s0.col, s0.src, s0.indent);
			return A2(
				$stil4m$elm_syntax$ParserFast$Good,
				A3($elm$core$String$slice, s0.offset, s1.offset, s0.src),
				s1);
		});
};
var $stil4m$elm_syntax$Elm$Parser$Tokens$singleQuotedStringLiteralAfterDoubleQuote = A5(
	$stil4m$elm_syntax$ParserFast$loopUntil,
	A2($stil4m$elm_syntax$ParserFast$symbol, '\"', _Utils_Tuple0),
	A2(
		$stil4m$elm_syntax$ParserFast$oneOf2,
		A2(
			$stil4m$elm_syntax$ParserFast$symbolFollowedBy,
			'\\',
			$stil4m$elm_syntax$Elm$Parser$Tokens$escapedCharValueMap($elm$core$String$fromChar)),
		$stil4m$elm_syntax$ParserFast$whileWithoutLinebreak(
			function (c) {
				switch (c.valueOf()) {
					case '\"':
						return false;
					case '\\':
						return false;
					default:
						return !$stil4m$elm_syntax$Char$Extra$isUtf16Surrogate(c);
				}
			})),
	'',
	F2(
		function (extension, soFar) {
			return soFar + (extension + '');
		}),
	$elm$core$Basics$identity);
var $stil4m$elm_syntax$Elm$Parser$Tokens$tripleQuotedStringLiteralOfterTripleDoubleQuote = A5(
	$stil4m$elm_syntax$ParserFast$loopUntil,
	A2($stil4m$elm_syntax$ParserFast$symbol, '\"\"\"', _Utils_Tuple0),
	A3(
		$stil4m$elm_syntax$ParserFast$oneOf3,
		A2($stil4m$elm_syntax$ParserFast$symbol, '\"', '\"'),
		A2(
			$stil4m$elm_syntax$ParserFast$symbolFollowedBy,
			'\\',
			$stil4m$elm_syntax$Elm$Parser$Tokens$escapedCharValueMap($elm$core$String$fromChar)),
		$stil4m$elm_syntax$ParserFast$while(
			function (c) {
				switch (c.valueOf()) {
					case '\"':
						return false;
					case '\\':
						return false;
					default:
						return !$stil4m$elm_syntax$Char$Extra$isUtf16Surrogate(c);
				}
			})),
	'',
	F2(
		function (extension, soFar) {
			return soFar + (extension + '');
		}),
	$elm$core$Basics$identity);
var $stil4m$elm_syntax$Elm$Parser$Tokens$singleOrTripleQuotedStringLiteralMapWithRange = function (rangeAndStringToRes) {
	return A2(
		$stil4m$elm_syntax$ParserFast$symbolFollowedBy,
		'\"',
		A4(
			$stil4m$elm_syntax$ParserFast$oneOf2MapWithStartRowColumnAndEndRowColumn,
			F5(
				function (startRow, startColumn, string, endRow, endColumn) {
					return A2(
						rangeAndStringToRes,
						{
							end: {column: endColumn, row: endRow},
							start: {column: startColumn - 1, row: startRow}
						},
						string);
				}),
			A2($stil4m$elm_syntax$ParserFast$symbolFollowedBy, '\"\"', $stil4m$elm_syntax$Elm$Parser$Tokens$tripleQuotedStringLiteralOfterTripleDoubleQuote),
			F5(
				function (startRow, startColumn, string, endRow, endColumn) {
					return A2(
						rangeAndStringToRes,
						{
							end: {column: endColumn, row: endRow},
							start: {column: startColumn - 1, row: startRow}
						},
						string);
				}),
			$stil4m$elm_syntax$Elm$Parser$Tokens$singleQuotedStringLiteralAfterDoubleQuote));
};
var $stil4m$elm_syntax$Elm$Parser$Expression$literalExpression = $stil4m$elm_syntax$Elm$Parser$Tokens$singleOrTripleQuotedStringLiteralMapWithRange(
	F2(
		function (range, string) {
			return {
				comments: $stil4m$elm_syntax$Rope$empty,
				syntax: A2(
					$stil4m$elm_syntax$Elm$Syntax$Node$Node,
					range,
					$stil4m$elm_syntax$Elm$Syntax$Expression$Literal(string))
			};
		}));
var $stil4m$elm_syntax$ParserFast$loopWhileSucceedsOntoResultFromParser = F4(
	function (element, _v0, reduce, foldedToRes) {
		var parseInitialFolded = _v0.a;
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s0) {
				var _v1 = parseInitialFolded(s0);
				if (_v1.$ === 'Good') {
					var initialFolded = _v1.a;
					var s1 = _v1.b;
					return A5($stil4m$elm_syntax$ParserFast$loopWhileSucceedsHelp, element, initialFolded, reduce, foldedToRes, s1);
				} else {
					var committed = _v1.a;
					var x = _v1.b;
					return A2($stil4m$elm_syntax$ParserFast$Bad, committed, x);
				}
			});
	});
var $stil4m$elm_syntax$Rope$prependTo = F2(
	function (right, left) {
		if (left.$ === 'Nothing') {
			return right;
		} else {
			var leftLikelyFilled = left.a;
			if (right.$ === 'Nothing') {
				return left;
			} else {
				var rightLikelyFilled = right.a;
				return $elm$core$Maybe$Just(
					A2($stil4m$elm_syntax$Rope$Branch2, leftLikelyFilled, rightLikelyFilled));
			}
		}
	});
var $stil4m$elm_syntax$ParserWithComments$many = function (p) {
	return A4(
		$stil4m$elm_syntax$ParserFast$loopWhileSucceeds,
		p,
		_Utils_Tuple2($stil4m$elm_syntax$Rope$empty, _List_Nil),
		F2(
			function (pResult, _v0) {
				var commentsSoFar = _v0.a;
				var itemsSoFar = _v0.b;
				return _Utils_Tuple2(
					A2($stil4m$elm_syntax$Rope$prependTo, pResult.comments, commentsSoFar),
					A2($elm$core$List$cons, pResult.syntax, itemsSoFar));
			}),
		function (_v1) {
			var commentsSoFar = _v1.a;
			var itemsSoFar = _v1.b;
			return {
				comments: commentsSoFar,
				syntax: $elm$core$List$reverse(itemsSoFar)
			};
		});
};
var $stil4m$elm_syntax$ParserWithComments$manyWithoutReverse = function (p) {
	return A4(
		$stil4m$elm_syntax$ParserFast$loopWhileSucceeds,
		p,
		_Utils_Tuple2($stil4m$elm_syntax$Rope$empty, _List_Nil),
		F2(
			function (pResult, _v0) {
				var commentsSoFar = _v0.a;
				var itemsSoFar = _v0.b;
				return _Utils_Tuple2(
					A2($stil4m$elm_syntax$Rope$prependTo, pResult.comments, commentsSoFar),
					A2($elm$core$List$cons, pResult.syntax, itemsSoFar));
			}),
		function (_v1) {
			var commentsSoFar = _v1.a;
			var itemsSoFar = _v1.b;
			return {comments: commentsSoFar, syntax: itemsSoFar};
		});
};
var $stil4m$elm_syntax$ParserFast$map = F2(
	function (func, _v0) {
		var parse = _v0.a;
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s0) {
				var _v1 = parse(s0);
				if (_v1.$ === 'Good') {
					var a = _v1.a;
					var s1 = _v1.b;
					return A2(
						$stil4m$elm_syntax$ParserFast$Good,
						func(a),
						s1);
				} else {
					var committed = _v1.a;
					var x = _v1.b;
					return A2($stil4m$elm_syntax$ParserFast$Bad, committed, x);
				}
			});
	});
var $stil4m$elm_syntax$ParserFast$map3 = F4(
	function (func, _v0, _v1, _v2) {
		var parseA = _v0.a;
		var parseB = _v1.a;
		var parseC = _v2.a;
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s0) {
				var _v3 = parseA(s0);
				if (_v3.$ === 'Bad') {
					var committed = _v3.a;
					var x = _v3.b;
					return A2($stil4m$elm_syntax$ParserFast$Bad, committed, x);
				} else {
					var a = _v3.a;
					var s1 = _v3.b;
					var _v4 = parseB(s1);
					if (_v4.$ === 'Bad') {
						var x = _v4.b;
						return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
					} else {
						var b = _v4.a;
						var s2 = _v4.b;
						var _v5 = parseC(s2);
						if (_v5.$ === 'Bad') {
							var x = _v5.b;
							return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
						} else {
							var c = _v5.a;
							var s3 = _v5.b;
							return A2(
								$stil4m$elm_syntax$ParserFast$Good,
								A3(func, a, b, c),
								s3);
						}
					}
				}
			});
	});
var $stil4m$elm_syntax$ParserFast$map3WithStartLocation = F4(
	function (func, _v0, _v1, _v2) {
		var parseA = _v0.a;
		var parseB = _v1.a;
		var parseC = _v2.a;
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s0) {
				var _v3 = parseA(s0);
				if (_v3.$ === 'Bad') {
					var committed = _v3.a;
					var x = _v3.b;
					return A2($stil4m$elm_syntax$ParserFast$Bad, committed, x);
				} else {
					var a = _v3.a;
					var s1 = _v3.b;
					var _v4 = parseB(s1);
					if (_v4.$ === 'Bad') {
						var x = _v4.b;
						return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
					} else {
						var b = _v4.a;
						var s2 = _v4.b;
						var _v5 = parseC(s2);
						if (_v5.$ === 'Bad') {
							var x = _v5.b;
							return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
						} else {
							var c = _v5.a;
							var s3 = _v5.b;
							return A2(
								$stil4m$elm_syntax$ParserFast$Good,
								A4(
									func,
									{column: s0.col, row: s0.row},
									a,
									b,
									c),
								s3);
						}
					}
				}
			});
	});
var $stil4m$elm_syntax$ParserFast$map4 = F5(
	function (func, _v0, _v1, _v2, _v3) {
		var parseA = _v0.a;
		var parseB = _v1.a;
		var parseC = _v2.a;
		var parseD = _v3.a;
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s0) {
				var _v4 = parseA(s0);
				if (_v4.$ === 'Bad') {
					var committed = _v4.a;
					var x = _v4.b;
					return A2($stil4m$elm_syntax$ParserFast$Bad, committed, x);
				} else {
					var a = _v4.a;
					var s1 = _v4.b;
					var _v5 = parseB(s1);
					if (_v5.$ === 'Bad') {
						var x = _v5.b;
						return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
					} else {
						var b = _v5.a;
						var s2 = _v5.b;
						var _v6 = parseC(s2);
						if (_v6.$ === 'Bad') {
							var x = _v6.b;
							return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
						} else {
							var c = _v6.a;
							var s3 = _v6.b;
							var _v7 = parseD(s3);
							if (_v7.$ === 'Bad') {
								var x = _v7.b;
								return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
							} else {
								var d = _v7.a;
								var s4 = _v7.b;
								return A2(
									$stil4m$elm_syntax$ParserFast$Good,
									A4(func, a, b, c, d),
									s4);
							}
						}
					}
				}
			});
	});
var $stil4m$elm_syntax$ParserFast$map4OrSucceed = F6(
	function (func, _v0, _v1, _v2, _v3, fallback) {
		var parseA = _v0.a;
		var parseB = _v1.a;
		var parseC = _v2.a;
		var parseD = _v3.a;
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s0) {
				var _v4 = parseA(s0);
				if (_v4.$ === 'Bad') {
					var c1 = _v4.a;
					var x = _v4.b;
					return c1 ? A2($stil4m$elm_syntax$ParserFast$Bad, true, x) : A2($stil4m$elm_syntax$ParserFast$Good, fallback, s0);
				} else {
					var a = _v4.a;
					var s1 = _v4.b;
					var _v5 = parseB(s1);
					if (_v5.$ === 'Bad') {
						var x = _v5.b;
						return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
					} else {
						var b = _v5.a;
						var s2 = _v5.b;
						var _v6 = parseC(s2);
						if (_v6.$ === 'Bad') {
							var x = _v6.b;
							return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
						} else {
							var c = _v6.a;
							var s3 = _v6.b;
							var _v7 = parseD(s3);
							if (_v7.$ === 'Bad') {
								var x = _v7.b;
								return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
							} else {
								var d = _v7.a;
								var s4 = _v7.b;
								return A2(
									$stil4m$elm_syntax$ParserFast$Good,
									A4(func, a, b, c, d),
									s4);
							}
						}
					}
				}
			});
	});
var $stil4m$elm_syntax$ParserFast$map4WithRange = F5(
	function (func, _v0, _v1, _v2, _v3) {
		var parseA = _v0.a;
		var parseB = _v1.a;
		var parseC = _v2.a;
		var parseD = _v3.a;
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s0) {
				var _v4 = parseA(s0);
				if (_v4.$ === 'Bad') {
					var committed = _v4.a;
					var x = _v4.b;
					return A2($stil4m$elm_syntax$ParserFast$Bad, committed, x);
				} else {
					var a = _v4.a;
					var s1 = _v4.b;
					var _v5 = parseB(s1);
					if (_v5.$ === 'Bad') {
						var x = _v5.b;
						return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
					} else {
						var b = _v5.a;
						var s2 = _v5.b;
						var _v6 = parseC(s2);
						if (_v6.$ === 'Bad') {
							var x = _v6.b;
							return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
						} else {
							var c = _v6.a;
							var s3 = _v6.b;
							var _v7 = parseD(s3);
							if (_v7.$ === 'Bad') {
								var x = _v7.b;
								return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
							} else {
								var d = _v7.a;
								var s4 = _v7.b;
								return A2(
									$stil4m$elm_syntax$ParserFast$Good,
									A5(
										func,
										{
											end: {column: s4.col, row: s4.row},
											start: {column: s0.col, row: s0.row}
										},
										a,
										b,
										c,
										d),
									s4);
							}
						}
					}
				}
			});
	});
var $stil4m$elm_syntax$ParserFast$map5 = F6(
	function (func, _v0, _v1, _v2, _v3, _v4) {
		var parseA = _v0.a;
		var parseB = _v1.a;
		var parseC = _v2.a;
		var parseD = _v3.a;
		var parseE = _v4.a;
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s0) {
				var _v5 = parseA(s0);
				if (_v5.$ === 'Bad') {
					var committed = _v5.a;
					var x = _v5.b;
					return A2($stil4m$elm_syntax$ParserFast$Bad, committed, x);
				} else {
					var a = _v5.a;
					var s1 = _v5.b;
					var _v6 = parseB(s1);
					if (_v6.$ === 'Bad') {
						var x = _v6.b;
						return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
					} else {
						var b = _v6.a;
						var s2 = _v6.b;
						var _v7 = parseC(s2);
						if (_v7.$ === 'Bad') {
							var x = _v7.b;
							return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
						} else {
							var c = _v7.a;
							var s3 = _v7.b;
							var _v8 = parseD(s3);
							if (_v8.$ === 'Bad') {
								var x = _v8.b;
								return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
							} else {
								var d = _v8.a;
								var s4 = _v8.b;
								var _v9 = parseE(s4);
								if (_v9.$ === 'Bad') {
									var x = _v9.b;
									return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
								} else {
									var e = _v9.a;
									var s5 = _v9.b;
									return A2(
										$stil4m$elm_syntax$ParserFast$Good,
										A5(func, a, b, c, d, e),
										s5);
								}
							}
						}
					}
				}
			});
	});
var $stil4m$elm_syntax$ParserFast$map5WithRange = F6(
	function (func, _v0, _v1, _v2, _v3, _v4) {
		var parseA = _v0.a;
		var parseB = _v1.a;
		var parseC = _v2.a;
		var parseD = _v3.a;
		var parseE = _v4.a;
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s0) {
				var _v5 = parseA(s0);
				if (_v5.$ === 'Bad') {
					var committed = _v5.a;
					var x = _v5.b;
					return A2($stil4m$elm_syntax$ParserFast$Bad, committed, x);
				} else {
					var a = _v5.a;
					var s1 = _v5.b;
					var _v6 = parseB(s1);
					if (_v6.$ === 'Bad') {
						var x = _v6.b;
						return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
					} else {
						var b = _v6.a;
						var s2 = _v6.b;
						var _v7 = parseC(s2);
						if (_v7.$ === 'Bad') {
							var x = _v7.b;
							return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
						} else {
							var c = _v7.a;
							var s3 = _v7.b;
							var _v8 = parseD(s3);
							if (_v8.$ === 'Bad') {
								var x = _v8.b;
								return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
							} else {
								var d = _v8.a;
								var s4 = _v8.b;
								var _v9 = parseE(s4);
								if (_v9.$ === 'Bad') {
									var x = _v9.b;
									return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
								} else {
									var e = _v9.a;
									var s5 = _v9.b;
									return A2(
										$stil4m$elm_syntax$ParserFast$Good,
										A6(
											func,
											{
												end: {column: s5.col, row: s5.row},
												start: {column: s0.col, row: s0.row}
											},
											a,
											b,
											c,
											d,
											e),
										s5);
								}
							}
						}
					}
				}
			});
	});
var $stil4m$elm_syntax$ParserFast$map5WithStartLocation = F6(
	function (func, _v0, _v1, _v2, _v3, _v4) {
		var parseA = _v0.a;
		var parseB = _v1.a;
		var parseC = _v2.a;
		var parseD = _v3.a;
		var parseE = _v4.a;
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s0) {
				var _v5 = parseA(s0);
				if (_v5.$ === 'Bad') {
					var committed = _v5.a;
					var x = _v5.b;
					return A2($stil4m$elm_syntax$ParserFast$Bad, committed, x);
				} else {
					var a = _v5.a;
					var s1 = _v5.b;
					var _v6 = parseB(s1);
					if (_v6.$ === 'Bad') {
						var x = _v6.b;
						return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
					} else {
						var b = _v6.a;
						var s2 = _v6.b;
						var _v7 = parseC(s2);
						if (_v7.$ === 'Bad') {
							var x = _v7.b;
							return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
						} else {
							var c = _v7.a;
							var s3 = _v7.b;
							var _v8 = parseD(s3);
							if (_v8.$ === 'Bad') {
								var x = _v8.b;
								return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
							} else {
								var d = _v8.a;
								var s4 = _v8.b;
								var _v9 = parseE(s4);
								if (_v9.$ === 'Bad') {
									var x = _v9.b;
									return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
								} else {
									var e = _v9.a;
									var s5 = _v9.b;
									return A2(
										$stil4m$elm_syntax$ParserFast$Good,
										A6(
											func,
											{column: s0.col, row: s0.row},
											a,
											b,
											c,
											d,
											e),
										s5);
								}
							}
						}
					}
				}
			});
	});
var $stil4m$elm_syntax$ParserFast$map6WithStartLocation = F7(
	function (func, _v0, _v1, _v2, _v3, _v4, _v5) {
		var parseA = _v0.a;
		var parseB = _v1.a;
		var parseC = _v2.a;
		var parseD = _v3.a;
		var parseE = _v4.a;
		var parseF = _v5.a;
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s0) {
				var _v6 = parseA(s0);
				if (_v6.$ === 'Bad') {
					var committed = _v6.a;
					var x = _v6.b;
					return A2($stil4m$elm_syntax$ParserFast$Bad, committed, x);
				} else {
					var a = _v6.a;
					var s1 = _v6.b;
					var _v7 = parseB(s1);
					if (_v7.$ === 'Bad') {
						var x = _v7.b;
						return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
					} else {
						var b = _v7.a;
						var s2 = _v7.b;
						var _v8 = parseC(s2);
						if (_v8.$ === 'Bad') {
							var x = _v8.b;
							return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
						} else {
							var c = _v8.a;
							var s3 = _v8.b;
							var _v9 = parseD(s3);
							if (_v9.$ === 'Bad') {
								var x = _v9.b;
								return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
							} else {
								var d = _v9.a;
								var s4 = _v9.b;
								var _v10 = parseE(s4);
								if (_v10.$ === 'Bad') {
									var x = _v10.b;
									return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
								} else {
									var e = _v10.a;
									var s5 = _v10.b;
									var _v11 = parseF(s5);
									if (_v11.$ === 'Bad') {
										var x = _v11.b;
										return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
									} else {
										var f = _v11.a;
										var s6 = _v11.b;
										return A2(
											$stil4m$elm_syntax$ParserFast$Good,
											A7(
												func,
												{column: s0.col, row: s0.row},
												a,
												b,
												c,
												d,
												e,
												f),
											s6);
									}
								}
							}
						}
					}
				}
			});
	});
var $stil4m$elm_syntax$ParserFast$map8WithStartLocation = F9(
	function (func, _v0, _v1, _v2, _v3, _v4, _v5, _v6, _v7) {
		var parseA = _v0.a;
		var parseB = _v1.a;
		var parseC = _v2.a;
		var parseD = _v3.a;
		var parseE = _v4.a;
		var parseF = _v5.a;
		var parseG = _v6.a;
		var parseH = _v7.a;
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s0) {
				var _v8 = parseA(s0);
				if (_v8.$ === 'Bad') {
					var committed = _v8.a;
					var x = _v8.b;
					return A2($stil4m$elm_syntax$ParserFast$Bad, committed, x);
				} else {
					var a = _v8.a;
					var s1 = _v8.b;
					var _v9 = parseB(s1);
					if (_v9.$ === 'Bad') {
						var x = _v9.b;
						return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
					} else {
						var b = _v9.a;
						var s2 = _v9.b;
						var _v10 = parseC(s2);
						if (_v10.$ === 'Bad') {
							var x = _v10.b;
							return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
						} else {
							var c = _v10.a;
							var s3 = _v10.b;
							var _v11 = parseD(s3);
							if (_v11.$ === 'Bad') {
								var x = _v11.b;
								return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
							} else {
								var d = _v11.a;
								var s4 = _v11.b;
								var _v12 = parseE(s4);
								if (_v12.$ === 'Bad') {
									var x = _v12.b;
									return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
								} else {
									var e = _v12.a;
									var s5 = _v12.b;
									var _v13 = parseF(s5);
									if (_v13.$ === 'Bad') {
										var x = _v13.b;
										return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
									} else {
										var f = _v13.a;
										var s6 = _v13.b;
										var _v14 = parseG(s6);
										if (_v14.$ === 'Bad') {
											var x = _v14.b;
											return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
										} else {
											var g = _v14.a;
											var s7 = _v14.b;
											var _v15 = parseH(s7);
											if (_v15.$ === 'Bad') {
												var x = _v15.b;
												return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
											} else {
												var h = _v15.a;
												var s8 = _v15.b;
												return A2(
													$stil4m$elm_syntax$ParserFast$Good,
													A9(
														func,
														{column: s0.col, row: s0.row},
														a,
														b,
														c,
														d,
														e,
														f,
														g,
														h),
													s8);
											}
										}
									}
								}
							}
						}
					}
				}
			});
	});
var $stil4m$elm_syntax$ParserFast$validateEndColumnIndentation = F3(
	function (isOkay, problemOnIsNotOkay, _v0) {
		var parse = _v0.a;
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s0) {
				var _v1 = parse(s0);
				if (_v1.$ === 'Good') {
					var good = _v1;
					var s1 = good.b;
					return A2(isOkay, s1.col, s1.indent) ? good : A2(
						$stil4m$elm_syntax$ParserFast$Bad,
						true,
						A3($stil4m$elm_syntax$ParserFast$ExpectingCustom, s1.row, s1.col, problemOnIsNotOkay));
				} else {
					var bad = _v1;
					return bad;
				}
			});
	});
var $stil4m$elm_syntax$Elm$Parser$Layout$endsPositivelyIndented = function (parser) {
	return A3(
		$stil4m$elm_syntax$ParserFast$validateEndColumnIndentation,
		F2(
			function (column, indent) {
				return _Utils_cmp(column, indent) > 0;
			}),
		'must be positively indented',
		parser);
};
var $stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout = $stil4m$elm_syntax$Elm$Parser$Layout$endsPositivelyIndented($stil4m$elm_syntax$Elm$Parser$Layout$whitespaceAndCommentsOrEmpty);
var $stil4m$elm_syntax$Elm$Parser$Layout$maybeAroundBothSides = function (x) {
	return A4(
		$stil4m$elm_syntax$ParserFast$map3,
		F3(
			function (before, v, after) {
				return {
					comments: A2(
						$stil4m$elm_syntax$Rope$prependTo,
						after,
						A2($stil4m$elm_syntax$Rope$prependTo, v.comments, before)),
					syntax: v.syntax
				};
			}),
		$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
		x,
		$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout);
};
var $stil4m$elm_syntax$Elm$Parser$Expression$multiRecordAccess = A4(
	$stil4m$elm_syntax$ParserFast$loopWhileSucceeds,
	A2($stil4m$elm_syntax$ParserFast$symbolFollowedBy, '.', $stil4m$elm_syntax$Elm$Parser$Tokens$functionNameNode),
	_List_Nil,
	$elm$core$List$cons,
	$elm$core$List$reverse);
var $stil4m$elm_syntax$Elm$Parser$Expression$multiRecordAccessMap = function (fieldsToRes) {
	return A4(
		$stil4m$elm_syntax$ParserFast$loopWhileSucceeds,
		A2($stil4m$elm_syntax$ParserFast$symbolFollowedBy, '.', $stil4m$elm_syntax$Elm$Parser$Tokens$functionNameNode),
		_List_Nil,
		$elm$core$List$cons,
		function (reversed) {
			return fieldsToRes(
				$elm$core$List$reverse(reversed));
		});
};
var $stil4m$elm_syntax$Elm$Parser$Expression$negationWhitespaceProblem = $stil4m$elm_syntax$ParserFast$problem('if a negation sign is not preceded by whitespace, it\'s considered subtraction');
var $stil4m$elm_syntax$Elm$Parser$Tokens$equal = A2($stil4m$elm_syntax$ParserFast$symbol, '=', _Utils_Tuple0);
var $stil4m$elm_syntax$Elm$Syntax$Pattern$AsPattern = F2(
	function (a, b) {
		return {$: 'AsPattern', a: a, b: b};
	});
var $stil4m$elm_syntax$Elm$Syntax$Pattern$ListPattern = function (a) {
	return {$: 'ListPattern', a: a};
};
var $stil4m$elm_syntax$Elm$Syntax$Pattern$NamedPattern = F2(
	function (a, b) {
		return {$: 'NamedPattern', a: a, b: b};
	});
var $stil4m$elm_syntax$Elm$Syntax$Pattern$ParenthesizedPattern = function (a) {
	return {$: 'ParenthesizedPattern', a: a};
};
var $stil4m$elm_syntax$Elm$Parser$Patterns$PatternComposedWithAs = function (a) {
	return {$: 'PatternComposedWithAs', a: a};
};
var $stil4m$elm_syntax$Elm$Parser$Patterns$PatternComposedWithCons = function (a) {
	return {$: 'PatternComposedWithCons', a: a};
};
var $stil4m$elm_syntax$Elm$Parser$Patterns$PatternComposedWithNothing = function (a) {
	return {$: 'PatternComposedWithNothing', a: a};
};
var $stil4m$elm_syntax$Elm$Syntax$Pattern$TuplePattern = function (a) {
	return {$: 'TuplePattern', a: a};
};
var $stil4m$elm_syntax$Elm$Syntax$Pattern$UnConsPattern = F2(
	function (a, b) {
		return {$: 'UnConsPattern', a: a, b: b};
	});
var $stil4m$elm_syntax$Elm$Syntax$Pattern$UnitPattern = {$: 'UnitPattern'};
var $stil4m$elm_syntax$Elm$Syntax$Pattern$AllPattern = {$: 'AllPattern'};
var $stil4m$elm_syntax$ParserFast$symbolWithRange = F2(
	function (str, startAndEndLocationToRes) {
		var strLength = $elm$core$String$length(str);
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s) {
				var newOffset = s.offset + strLength;
				if (_Utils_eq(
					A3($elm$core$String$slice, s.offset, newOffset, s.src),
					str + '')) {
					var newCol = s.col + strLength;
					return A2(
						$stil4m$elm_syntax$ParserFast$Good,
						startAndEndLocationToRes(
							{
								end: {column: newCol, row: s.row},
								start: {column: s.col, row: s.row}
							}),
						{col: newCol, indent: s.indent, offset: newOffset, row: s.row, src: s.src});
				} else {
					return A2(
						$stil4m$elm_syntax$ParserFast$Bad,
						false,
						A3($stil4m$elm_syntax$ParserFast$ExpectingSymbol, s.row, s.col, str));
				}
			});
	});
var $stil4m$elm_syntax$Elm$Parser$Patterns$allPattern = A2(
	$stil4m$elm_syntax$ParserFast$symbolWithRange,
	'_',
	function (range) {
		return {
			comments: $stil4m$elm_syntax$Rope$empty,
			syntax: A2($stil4m$elm_syntax$Elm$Syntax$Node$Node, range, $stil4m$elm_syntax$Elm$Syntax$Pattern$AllPattern)
		};
	});
var $stil4m$elm_syntax$Elm$Syntax$Pattern$CharPattern = function (a) {
	return {$: 'CharPattern', a: a};
};
var $stil4m$elm_syntax$Elm$Parser$Patterns$charPattern = $stil4m$elm_syntax$Elm$Parser$Tokens$characterLiteralMapWithRange(
	F2(
		function (range, _char) {
			return {
				comments: $stil4m$elm_syntax$Rope$empty,
				syntax: A2(
					$stil4m$elm_syntax$Elm$Syntax$Node$Node,
					range,
					$stil4m$elm_syntax$Elm$Syntax$Pattern$CharPattern(_char))
			};
		}));
var $stil4m$elm_syntax$Elm$Syntax$Pattern$HexPattern = function (a) {
	return {$: 'HexPattern', a: a};
};
var $stil4m$elm_syntax$Elm$Syntax$Pattern$IntPattern = function (a) {
	return {$: 'IntPattern', a: a};
};
var $stil4m$elm_syntax$ParserFast$ExpectingNumber = F2(
	function (a, b) {
		return {$: 'ExpectingNumber', a: a, b: b};
	});
var $stil4m$elm_syntax$ParserFast$Decimal = {$: 'Decimal'};
var $stil4m$elm_syntax$ParserFast$Hexadecimal = {$: 'Hexadecimal'};
var $stil4m$elm_syntax$ParserFast$convert0OrMore0To9s = F3(
	function (soFar, offset, src) {
		convert0OrMore0To9s:
		while (true) {
			var _v0 = A3($elm$core$String$slice, offset, offset + 1, src);
			switch (_v0) {
				case '0':
					var $temp$soFar = soFar * 10,
						$temp$offset = offset + 1,
						$temp$src = src;
					soFar = $temp$soFar;
					offset = $temp$offset;
					src = $temp$src;
					continue convert0OrMore0To9s;
				case '1':
					var $temp$soFar = (soFar * 10) + 1,
						$temp$offset = offset + 1,
						$temp$src = src;
					soFar = $temp$soFar;
					offset = $temp$offset;
					src = $temp$src;
					continue convert0OrMore0To9s;
				case '2':
					var $temp$soFar = (soFar * 10) + 2,
						$temp$offset = offset + 1,
						$temp$src = src;
					soFar = $temp$soFar;
					offset = $temp$offset;
					src = $temp$src;
					continue convert0OrMore0To9s;
				case '3':
					var $temp$soFar = (soFar * 10) + 3,
						$temp$offset = offset + 1,
						$temp$src = src;
					soFar = $temp$soFar;
					offset = $temp$offset;
					src = $temp$src;
					continue convert0OrMore0To9s;
				case '4':
					var $temp$soFar = (soFar * 10) + 4,
						$temp$offset = offset + 1,
						$temp$src = src;
					soFar = $temp$soFar;
					offset = $temp$offset;
					src = $temp$src;
					continue convert0OrMore0To9s;
				case '5':
					var $temp$soFar = (soFar * 10) + 5,
						$temp$offset = offset + 1,
						$temp$src = src;
					soFar = $temp$soFar;
					offset = $temp$offset;
					src = $temp$src;
					continue convert0OrMore0To9s;
				case '6':
					var $temp$soFar = (soFar * 10) + 6,
						$temp$offset = offset + 1,
						$temp$src = src;
					soFar = $temp$soFar;
					offset = $temp$offset;
					src = $temp$src;
					continue convert0OrMore0To9s;
				case '7':
					var $temp$soFar = (soFar * 10) + 7,
						$temp$offset = offset + 1,
						$temp$src = src;
					soFar = $temp$soFar;
					offset = $temp$offset;
					src = $temp$src;
					continue convert0OrMore0To9s;
				case '8':
					var $temp$soFar = (soFar * 10) + 8,
						$temp$offset = offset + 1,
						$temp$src = src;
					soFar = $temp$soFar;
					offset = $temp$offset;
					src = $temp$src;
					continue convert0OrMore0To9s;
				case '9':
					var $temp$soFar = (soFar * 10) + 9,
						$temp$offset = offset + 1,
						$temp$src = src;
					soFar = $temp$soFar;
					offset = $temp$offset;
					src = $temp$src;
					continue convert0OrMore0To9s;
				default:
					return {_int: soFar, offset: offset};
			}
		}
	});
var $stil4m$elm_syntax$ParserFast$convert0OrMoreHexadecimal = F3(
	function (soFar, offset, src) {
		convert0OrMoreHexadecimal:
		while (true) {
			var _v0 = A3($elm$core$String$slice, offset, offset + 1, src);
			switch (_v0) {
				case '0':
					var $temp$soFar = soFar * 16,
						$temp$offset = offset + 1,
						$temp$src = src;
					soFar = $temp$soFar;
					offset = $temp$offset;
					src = $temp$src;
					continue convert0OrMoreHexadecimal;
				case '1':
					var $temp$soFar = (soFar * 16) + 1,
						$temp$offset = offset + 1,
						$temp$src = src;
					soFar = $temp$soFar;
					offset = $temp$offset;
					src = $temp$src;
					continue convert0OrMoreHexadecimal;
				case '2':
					var $temp$soFar = (soFar * 16) + 2,
						$temp$offset = offset + 1,
						$temp$src = src;
					soFar = $temp$soFar;
					offset = $temp$offset;
					src = $temp$src;
					continue convert0OrMoreHexadecimal;
				case '3':
					var $temp$soFar = (soFar * 16) + 3,
						$temp$offset = offset + 1,
						$temp$src = src;
					soFar = $temp$soFar;
					offset = $temp$offset;
					src = $temp$src;
					continue convert0OrMoreHexadecimal;
				case '4':
					var $temp$soFar = (soFar * 16) + 4,
						$temp$offset = offset + 1,
						$temp$src = src;
					soFar = $temp$soFar;
					offset = $temp$offset;
					src = $temp$src;
					continue convert0OrMoreHexadecimal;
				case '5':
					var $temp$soFar = (soFar * 16) + 5,
						$temp$offset = offset + 1,
						$temp$src = src;
					soFar = $temp$soFar;
					offset = $temp$offset;
					src = $temp$src;
					continue convert0OrMoreHexadecimal;
				case '6':
					var $temp$soFar = (soFar * 16) + 6,
						$temp$offset = offset + 1,
						$temp$src = src;
					soFar = $temp$soFar;
					offset = $temp$offset;
					src = $temp$src;
					continue convert0OrMoreHexadecimal;
				case '7':
					var $temp$soFar = (soFar * 16) + 7,
						$temp$offset = offset + 1,
						$temp$src = src;
					soFar = $temp$soFar;
					offset = $temp$offset;
					src = $temp$src;
					continue convert0OrMoreHexadecimal;
				case '8':
					var $temp$soFar = (soFar * 16) + 8,
						$temp$offset = offset + 1,
						$temp$src = src;
					soFar = $temp$soFar;
					offset = $temp$offset;
					src = $temp$src;
					continue convert0OrMoreHexadecimal;
				case '9':
					var $temp$soFar = (soFar * 16) + 9,
						$temp$offset = offset + 1,
						$temp$src = src;
					soFar = $temp$soFar;
					offset = $temp$offset;
					src = $temp$src;
					continue convert0OrMoreHexadecimal;
				case 'a':
					var $temp$soFar = (soFar * 16) + 10,
						$temp$offset = offset + 1,
						$temp$src = src;
					soFar = $temp$soFar;
					offset = $temp$offset;
					src = $temp$src;
					continue convert0OrMoreHexadecimal;
				case 'A':
					var $temp$soFar = (soFar * 16) + 10,
						$temp$offset = offset + 1,
						$temp$src = src;
					soFar = $temp$soFar;
					offset = $temp$offset;
					src = $temp$src;
					continue convert0OrMoreHexadecimal;
				case 'b':
					var $temp$soFar = (soFar * 16) + 11,
						$temp$offset = offset + 1,
						$temp$src = src;
					soFar = $temp$soFar;
					offset = $temp$offset;
					src = $temp$src;
					continue convert0OrMoreHexadecimal;
				case 'B':
					var $temp$soFar = (soFar * 16) + 11,
						$temp$offset = offset + 1,
						$temp$src = src;
					soFar = $temp$soFar;
					offset = $temp$offset;
					src = $temp$src;
					continue convert0OrMoreHexadecimal;
				case 'c':
					var $temp$soFar = (soFar * 16) + 12,
						$temp$offset = offset + 1,
						$temp$src = src;
					soFar = $temp$soFar;
					offset = $temp$offset;
					src = $temp$src;
					continue convert0OrMoreHexadecimal;
				case 'C':
					var $temp$soFar = (soFar * 16) + 12,
						$temp$offset = offset + 1,
						$temp$src = src;
					soFar = $temp$soFar;
					offset = $temp$offset;
					src = $temp$src;
					continue convert0OrMoreHexadecimal;
				case 'd':
					var $temp$soFar = (soFar * 16) + 13,
						$temp$offset = offset + 1,
						$temp$src = src;
					soFar = $temp$soFar;
					offset = $temp$offset;
					src = $temp$src;
					continue convert0OrMoreHexadecimal;
				case 'D':
					var $temp$soFar = (soFar * 16) + 13,
						$temp$offset = offset + 1,
						$temp$src = src;
					soFar = $temp$soFar;
					offset = $temp$offset;
					src = $temp$src;
					continue convert0OrMoreHexadecimal;
				case 'e':
					var $temp$soFar = (soFar * 16) + 14,
						$temp$offset = offset + 1,
						$temp$src = src;
					soFar = $temp$soFar;
					offset = $temp$offset;
					src = $temp$src;
					continue convert0OrMoreHexadecimal;
				case 'E':
					var $temp$soFar = (soFar * 16) + 14,
						$temp$offset = offset + 1,
						$temp$src = src;
					soFar = $temp$soFar;
					offset = $temp$offset;
					src = $temp$src;
					continue convert0OrMoreHexadecimal;
				case 'f':
					var $temp$soFar = (soFar * 16) + 15,
						$temp$offset = offset + 1,
						$temp$src = src;
					soFar = $temp$soFar;
					offset = $temp$offset;
					src = $temp$src;
					continue convert0OrMoreHexadecimal;
				case 'F':
					var $temp$soFar = (soFar * 16) + 15,
						$temp$offset = offset + 1,
						$temp$src = src;
					soFar = $temp$soFar;
					offset = $temp$offset;
					src = $temp$src;
					continue convert0OrMoreHexadecimal;
				default:
					return {_int: soFar, offset: offset};
			}
		}
	});
var $stil4m$elm_syntax$ParserFast$convert1OrMoreHexadecimal = F2(
	function (offset, src) {
		var _v0 = A3($elm$core$String$slice, offset, offset + 1, src);
		switch (_v0) {
			case '0':
				return A3($stil4m$elm_syntax$ParserFast$convert0OrMoreHexadecimal, 0, offset + 1, src);
			case '1':
				return A3($stil4m$elm_syntax$ParserFast$convert0OrMoreHexadecimal, 1, offset + 1, src);
			case '2':
				return A3($stil4m$elm_syntax$ParserFast$convert0OrMoreHexadecimal, 2, offset + 1, src);
			case '3':
				return A3($stil4m$elm_syntax$ParserFast$convert0OrMoreHexadecimal, 3, offset + 1, src);
			case '4':
				return A3($stil4m$elm_syntax$ParserFast$convert0OrMoreHexadecimal, 4, offset + 1, src);
			case '5':
				return A3($stil4m$elm_syntax$ParserFast$convert0OrMoreHexadecimal, 5, offset + 1, src);
			case '6':
				return A3($stil4m$elm_syntax$ParserFast$convert0OrMoreHexadecimal, 6, offset + 1, src);
			case '7':
				return A3($stil4m$elm_syntax$ParserFast$convert0OrMoreHexadecimal, 7, offset + 1, src);
			case '8':
				return A3($stil4m$elm_syntax$ParserFast$convert0OrMoreHexadecimal, 8, offset + 1, src);
			case '9':
				return A3($stil4m$elm_syntax$ParserFast$convert0OrMoreHexadecimal, 9, offset + 1, src);
			case 'a':
				return A3($stil4m$elm_syntax$ParserFast$convert0OrMoreHexadecimal, 10, offset + 1, src);
			case 'A':
				return A3($stil4m$elm_syntax$ParserFast$convert0OrMoreHexadecimal, 10, offset + 1, src);
			case 'b':
				return A3($stil4m$elm_syntax$ParserFast$convert0OrMoreHexadecimal, 11, offset + 1, src);
			case 'B':
				return A3($stil4m$elm_syntax$ParserFast$convert0OrMoreHexadecimal, 11, offset + 1, src);
			case 'c':
				return A3($stil4m$elm_syntax$ParserFast$convert0OrMoreHexadecimal, 12, offset + 1, src);
			case 'C':
				return A3($stil4m$elm_syntax$ParserFast$convert0OrMoreHexadecimal, 12, offset + 1, src);
			case 'd':
				return A3($stil4m$elm_syntax$ParserFast$convert0OrMoreHexadecimal, 13, offset + 1, src);
			case 'D':
				return A3($stil4m$elm_syntax$ParserFast$convert0OrMoreHexadecimal, 13, offset + 1, src);
			case 'e':
				return A3($stil4m$elm_syntax$ParserFast$convert0OrMoreHexadecimal, 14, offset + 1, src);
			case 'E':
				return A3($stil4m$elm_syntax$ParserFast$convert0OrMoreHexadecimal, 14, offset + 1, src);
			case 'f':
				return A3($stil4m$elm_syntax$ParserFast$convert0OrMoreHexadecimal, 15, offset + 1, src);
			case 'F':
				return A3($stil4m$elm_syntax$ParserFast$convert0OrMoreHexadecimal, 15, offset + 1, src);
			default:
				return {_int: 0, offset: -1};
		}
	});
var $stil4m$elm_syntax$ParserFast$errorAsBaseOffsetAndInt = {
	base: $stil4m$elm_syntax$ParserFast$Decimal,
	offsetAndInt: {_int: 0, offset: -1}
};
var $stil4m$elm_syntax$ParserFast$convertIntegerDecimalOrHexadecimal = F2(
	function (offset, src) {
		var _v0 = A3($elm$core$String$slice, offset, offset + 1, src);
		switch (_v0) {
			case '0':
				var _v1 = A3($elm$core$String$slice, offset + 1, offset + 2, src);
				if (_v1 === 'x') {
					var hex = A2($stil4m$elm_syntax$ParserFast$convert1OrMoreHexadecimal, offset + 2, src);
					return {
						base: $stil4m$elm_syntax$ParserFast$Hexadecimal,
						offsetAndInt: {_int: hex._int, offset: hex.offset}
					};
				} else {
					return {
						base: $stil4m$elm_syntax$ParserFast$Decimal,
						offsetAndInt: {_int: 0, offset: offset + 1}
					};
				}
			case '1':
				return {
					base: $stil4m$elm_syntax$ParserFast$Decimal,
					offsetAndInt: A3($stil4m$elm_syntax$ParserFast$convert0OrMore0To9s, 1, offset + 1, src)
				};
			case '2':
				return {
					base: $stil4m$elm_syntax$ParserFast$Decimal,
					offsetAndInt: A3($stil4m$elm_syntax$ParserFast$convert0OrMore0To9s, 2, offset + 1, src)
				};
			case '3':
				return {
					base: $stil4m$elm_syntax$ParserFast$Decimal,
					offsetAndInt: A3($stil4m$elm_syntax$ParserFast$convert0OrMore0To9s, 3, offset + 1, src)
				};
			case '4':
				return {
					base: $stil4m$elm_syntax$ParserFast$Decimal,
					offsetAndInt: A3($stil4m$elm_syntax$ParserFast$convert0OrMore0To9s, 4, offset + 1, src)
				};
			case '5':
				return {
					base: $stil4m$elm_syntax$ParserFast$Decimal,
					offsetAndInt: A3($stil4m$elm_syntax$ParserFast$convert0OrMore0To9s, 5, offset + 1, src)
				};
			case '6':
				return {
					base: $stil4m$elm_syntax$ParserFast$Decimal,
					offsetAndInt: A3($stil4m$elm_syntax$ParserFast$convert0OrMore0To9s, 6, offset + 1, src)
				};
			case '7':
				return {
					base: $stil4m$elm_syntax$ParserFast$Decimal,
					offsetAndInt: A3($stil4m$elm_syntax$ParserFast$convert0OrMore0To9s, 7, offset + 1, src)
				};
			case '8':
				return {
					base: $stil4m$elm_syntax$ParserFast$Decimal,
					offsetAndInt: A3($stil4m$elm_syntax$ParserFast$convert0OrMore0To9s, 8, offset + 1, src)
				};
			case '9':
				return {
					base: $stil4m$elm_syntax$ParserFast$Decimal,
					offsetAndInt: A3($stil4m$elm_syntax$ParserFast$convert0OrMore0To9s, 9, offset + 1, src)
				};
			default:
				return $stil4m$elm_syntax$ParserFast$errorAsBaseOffsetAndInt;
		}
	});
var $stil4m$elm_syntax$ParserFast$integerDecimalOrHexadecimalMapWithRange = F2(
	function (rangeAndIntDecimalToRes, rangeAndIntHexadecimalToRes) {
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s0) {
				var s1 = A2($stil4m$elm_syntax$ParserFast$convertIntegerDecimalOrHexadecimal, s0.offset, s0.src);
				if (_Utils_eq(s1.offsetAndInt.offset, -1)) {
					return A2(
						$stil4m$elm_syntax$ParserFast$Bad,
						false,
						A2($stil4m$elm_syntax$ParserFast$ExpectingNumber, s0.row, s0.col));
				} else {
					var newColumn = s0.col + (s1.offsetAndInt.offset - s0.offset);
					var range = {
						end: {column: newColumn, row: s0.row},
						start: {column: s0.col, row: s0.row}
					};
					return A2(
						$stil4m$elm_syntax$ParserFast$Good,
						function () {
							var _v0 = s1.base;
							if (_v0.$ === 'Decimal') {
								return A2(rangeAndIntDecimalToRes, range, s1.offsetAndInt._int);
							} else {
								return A2(rangeAndIntHexadecimalToRes, range, s1.offsetAndInt._int);
							}
						}(),
						{col: newColumn, indent: s0.indent, offset: s1.offsetAndInt.offset, row: s0.row, src: s0.src});
				}
			});
	});
var $stil4m$elm_syntax$Elm$Parser$Patterns$numberPart = A2(
	$stil4m$elm_syntax$ParserFast$integerDecimalOrHexadecimalMapWithRange,
	F2(
		function (range, n) {
			return {
				comments: $stil4m$elm_syntax$Rope$empty,
				syntax: A2(
					$stil4m$elm_syntax$Elm$Syntax$Node$Node,
					range,
					$stil4m$elm_syntax$Elm$Syntax$Pattern$IntPattern(n))
			};
		}),
	F2(
		function (range, n) {
			return {
				comments: $stil4m$elm_syntax$Rope$empty,
				syntax: A2(
					$stil4m$elm_syntax$Elm$Syntax$Node$Node,
					range,
					$stil4m$elm_syntax$Elm$Syntax$Pattern$HexPattern(n))
			};
		}));
var $stil4m$elm_syntax$ParserFast$oneOf2OrSucceed = F3(
	function (_v0, _v1, thirdRes) {
		var attemptFirst = _v0.a;
		var attemptSecond = _v1.a;
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s) {
				var _v2 = attemptFirst(s);
				if (_v2.$ === 'Good') {
					var firstGood = _v2;
					return firstGood;
				} else {
					var firstBad = _v2;
					var firstCommitted = firstBad.a;
					if (firstCommitted) {
						return firstBad;
					} else {
						var _v3 = attemptSecond(s);
						if (_v3.$ === 'Good') {
							var secondGood = _v3;
							return secondGood;
						} else {
							var secondBad = _v3;
							var secondCommitted = secondBad.a;
							return secondCommitted ? secondBad : A2($stil4m$elm_syntax$ParserFast$Good, thirdRes, s);
						}
					}
				}
			});
	});
var $stil4m$elm_syntax$ParserFast$oneOf9 = F9(
	function (_v0, _v1, _v2, _v3, _v4, _v5, _v6, _v7, _v8) {
		var attempt0 = _v0.a;
		var attempt1 = _v1.a;
		var attempt2 = _v2.a;
		var attempt3 = _v3.a;
		var attempt4 = _v4.a;
		var attempt5 = _v5.a;
		var attempt6 = _v6.a;
		var attempt7 = _v7.a;
		var attempt8 = _v8.a;
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s) {
				var _v9 = attempt0(s);
				if (_v9.$ === 'Good') {
					var good = _v9;
					return good;
				} else {
					var bad0 = _v9;
					var committed0 = bad0.a;
					var x0 = bad0.b;
					if (committed0) {
						return bad0;
					} else {
						var _v10 = attempt1(s);
						if (_v10.$ === 'Good') {
							var good = _v10;
							return good;
						} else {
							var bad1 = _v10;
							var committed1 = bad1.a;
							var x1 = bad1.b;
							if (committed1) {
								return bad1;
							} else {
								var _v11 = attempt2(s);
								if (_v11.$ === 'Good') {
									var good = _v11;
									return good;
								} else {
									var bad2 = _v11;
									var committed2 = bad2.a;
									var x2 = bad2.b;
									if (committed2) {
										return bad2;
									} else {
										var _v12 = attempt3(s);
										if (_v12.$ === 'Good') {
											var good = _v12;
											return good;
										} else {
											var bad3 = _v12;
											var committed3 = bad3.a;
											var x3 = bad3.b;
											if (committed3) {
												return bad3;
											} else {
												var _v13 = attempt4(s);
												if (_v13.$ === 'Good') {
													var good = _v13;
													return good;
												} else {
													var bad4 = _v13;
													var committed4 = bad4.a;
													var x4 = bad4.b;
													if (committed4) {
														return bad4;
													} else {
														var _v14 = attempt5(s);
														if (_v14.$ === 'Good') {
															var good = _v14;
															return good;
														} else {
															var bad5 = _v14;
															var committed5 = bad5.a;
															var x5 = bad5.b;
															if (committed5) {
																return bad5;
															} else {
																var _v15 = attempt6(s);
																if (_v15.$ === 'Good') {
																	var good = _v15;
																	return good;
																} else {
																	var bad6 = _v15;
																	var committed6 = bad6.a;
																	var x6 = bad6.b;
																	if (committed6) {
																		return bad6;
																	} else {
																		var _v16 = attempt7(s);
																		if (_v16.$ === 'Good') {
																			var good = _v16;
																			return good;
																		} else {
																			var bad7 = _v16;
																			var committed7 = bad7.a;
																			var x7 = bad7.b;
																			if (committed7) {
																				return bad7;
																			} else {
																				var _v17 = attempt8(s);
																				if (_v17.$ === 'Good') {
																					var good = _v17;
																					return good;
																				} else {
																					var bad8 = _v17;
																					var committed8 = bad8.a;
																					var x8 = bad8.b;
																					return committed8 ? bad8 : A2(
																						$stil4m$elm_syntax$ParserFast$Bad,
																						false,
																						A3(
																							$stil4m$elm_syntax$ParserFast$ExpectingOneOf,
																							x0,
																							x1,
																							_List_fromArray(
																								[x2, x3, x4, x5, x6, x7, x8])));
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			});
	});
var $stil4m$elm_syntax$Elm$Parser$Patterns$patternListEmpty = $stil4m$elm_syntax$Elm$Syntax$Pattern$ListPattern(_List_Nil);
var $stil4m$elm_syntax$Elm$Parser$Layout$problemPositivelyIndented = $stil4m$elm_syntax$ParserFast$problem('must be positively indented');
var $stil4m$elm_syntax$Elm$Parser$Layout$positivelyIndentedFollowedBy = function (nextParser) {
	return $stil4m$elm_syntax$ParserFast$columnIndentAndThen(
		F2(
			function (column, indent) {
				return (_Utils_cmp(column, indent) > 0) ? nextParser : $stil4m$elm_syntax$Elm$Parser$Layout$problemPositivelyIndented;
			}));
};
var $stil4m$elm_syntax$ParserFast$ifFollowedByWhileWithoutLinebreak = F2(
	function (firstIsOkay, afterFirstIsOkay) {
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s) {
				var firstOffset = A3($stil4m$elm_syntax$ParserFast$isSubCharWithoutLinebreak, firstIsOkay, s.offset, s.src);
				if (_Utils_eq(firstOffset, -1)) {
					return A2(
						$stil4m$elm_syntax$ParserFast$Bad,
						false,
						A2($stil4m$elm_syntax$ParserFast$ExpectingCharSatisfyingPredicate, s.row, s.col));
				} else {
					var s1 = A6($stil4m$elm_syntax$ParserFast$skipWhileWithoutLinebreakHelp, afterFirstIsOkay, firstOffset, s.row, s.col + 1, s.src, s.indent);
					return A2(
						$stil4m$elm_syntax$ParserFast$Good,
						A3($elm$core$String$slice, s.offset, s1.offset, s.src),
						s1);
				}
			});
	});
var $stil4m$elm_syntax$Char$Extra$unicodeIsUpperFast = function (c) {
	var code = $elm$core$Char$toCode(c);
	return $stil4m$elm_syntax$Char$Extra$charCodeIsUpper(code) || function () {
		var cString = $elm$core$String$fromChar(c);
		return (_Utils_eq(
			$elm$core$String$toUpper(cString),
			cString + '') && (!_Utils_eq(
			$elm$core$String$toLower(cString),
			cString + ''))) ? ((code <= 8543) || (((8560 <= code) && (code <= 9397)) || ((9424 <= code) && (code <= 983040)))) : ((code < 120015) ? ((code < 8509) ? (((978 <= code) && (code <= 980)) || ((code === 8450) || ((code === 8455) || (((8459 <= code) && (code <= 8461)) || (((8464 <= code) && (code <= 8466)) || ((code === 8469) || (((8473 <= code) && (code <= 8477)) || ((code === 8484) || ((code === 8488) || (((8490 <= code) && (code <= 8493)) || ((8496 <= code) && (code <= 8499)))))))))))) : (((8510 <= code) && (code <= 8511)) || ((code === 8517) || (((119808 <= code) && (code <= 119833)) || (((119860 <= code) && (code <= 119885)) || (((119912 <= code) && (code <= 119937)) || ((code === 119964) || (((119966 <= code) && (code <= 119967)) || ((code === 119970) || (((119973 <= code) && (code <= 119974)) || (((119977 <= code) && (code <= 119980)) || ((119982 <= code) && (code <= 119989))))))))))))) : ((code < 120223) ? (((120016 <= code) && (code <= 120041)) || (((120068 <= code) && (code <= 120069)) || (((120071 <= code) && (code <= 120074)) || (((120077 <= code) && (code <= 120084)) || (((120086 <= code) && (code <= 120092)) || (((120120 <= code) && (code <= 120121)) || (((120123 <= code) && (code <= 120126)) || (((120128 <= code) && (code <= 120132)) || ((code === 120134) || (((120138 <= code) && (code <= 120144)) || ((120172 <= code) && (code <= 120197)))))))))))) : (((120224 <= code) && (code <= 120249)) || (((120276 <= code) && (code <= 120301)) || (((120328 <= code) && (code <= 120353)) || (((120380 <= code) && (code <= 120405)) || (((120432 <= code) && (code <= 120457)) || (((120488 <= code) && (code <= 120512)) || (((120546 <= code) && (code <= 120570)) || (((120604 <= code) && (code <= 120628)) || (((120662 <= code) && (code <= 120686)) || (((120720 <= code) && (code <= 120744)) || (code === 120778)))))))))))));
	}();
};
var $stil4m$elm_syntax$Elm$Parser$Tokens$typeName = A2($stil4m$elm_syntax$ParserFast$ifFollowedByWhileWithoutLinebreak, $stil4m$elm_syntax$Char$Extra$unicodeIsUpperFast, $stil4m$elm_syntax$Char$Extra$unicodeIsAlphaNumOrUnderscoreFast);
function $stil4m$elm_syntax$Elm$Parser$Patterns$cyclic$maybeDotTypeNamesTuple() {
	return A4(
		$stil4m$elm_syntax$ParserFast$map2OrSucceed,
		F2(
			function (startName, afterStartName) {
				if (afterStartName.$ === 'Nothing') {
					return $elm$core$Maybe$Just(
						_Utils_Tuple2(_List_Nil, startName));
				} else {
					var _v1 = afterStartName.a;
					var qualificationAfter = _v1.a;
					var unqualified = _v1.b;
					return $elm$core$Maybe$Just(
						_Utils_Tuple2(
							A2($elm$core$List$cons, startName, qualificationAfter),
							unqualified));
				}
			}),
		A2($stil4m$elm_syntax$ParserFast$symbolFollowedBy, '.', $stil4m$elm_syntax$Elm$Parser$Tokens$typeName),
		$stil4m$elm_syntax$ParserFast$lazy(
			function (_v2) {
				return $stil4m$elm_syntax$Elm$Parser$Patterns$cyclic$maybeDotTypeNamesTuple();
			}),
		$elm$core$Maybe$Nothing);
}
try {
	var $stil4m$elm_syntax$Elm$Parser$Patterns$maybeDotTypeNamesTuple = $stil4m$elm_syntax$Elm$Parser$Patterns$cyclic$maybeDotTypeNamesTuple();
	$stil4m$elm_syntax$Elm$Parser$Patterns$cyclic$maybeDotTypeNamesTuple = function () {
		return $stil4m$elm_syntax$Elm$Parser$Patterns$maybeDotTypeNamesTuple;
	};
} catch ($) {
	throw 'Some top-level definitions from `Elm.Parser.Patterns` are causing infinite recursion:\n\n  ┌─────┐\n  │    maybeDotTypeNamesTuple\n  └─────┘\n\nThese errors are very tricky, so read https://elm-lang.org/0.19.1/bad-recursion to learn how to fix it!';}
var $stil4m$elm_syntax$Elm$Parser$Patterns$qualifiedNameRefNode = A3(
	$stil4m$elm_syntax$ParserFast$map2WithRange,
	F3(
		function (range, firstName, after) {
			return A2(
				$stil4m$elm_syntax$Elm$Syntax$Node$Node,
				range,
				function () {
					if (after.$ === 'Nothing') {
						return {moduleName: _List_Nil, name: firstName};
					} else {
						var _v1 = after.a;
						var qualificationAfter = _v1.a;
						var unqualified = _v1.b;
						return {
							moduleName: A2($elm$core$List$cons, firstName, qualificationAfter),
							name: unqualified
						};
					}
				}());
		}),
	$stil4m$elm_syntax$Elm$Parser$Tokens$typeName,
	$stil4m$elm_syntax$Elm$Parser$Patterns$maybeDotTypeNamesTuple);
var $stil4m$elm_syntax$Elm$Parser$Patterns$qualifiedPatternWithoutConsumeArgs = A3(
	$stil4m$elm_syntax$ParserFast$map2WithRange,
	F3(
		function (range, firstName, after) {
			return {
				comments: $stil4m$elm_syntax$Rope$empty,
				syntax: A2(
					$stil4m$elm_syntax$Elm$Syntax$Node$Node,
					range,
					A2(
						$stil4m$elm_syntax$Elm$Syntax$Pattern$NamedPattern,
						function () {
							if (after.$ === 'Nothing') {
								return {moduleName: _List_Nil, name: firstName};
							} else {
								var _v1 = after.a;
								var qualificationAfter = _v1.a;
								var unqualified = _v1.b;
								return {
									moduleName: A2($elm$core$List$cons, firstName, qualificationAfter),
									name: unqualified
								};
							}
						}(),
						_List_Nil))
			};
		}),
	$stil4m$elm_syntax$Elm$Parser$Tokens$typeName,
	$stil4m$elm_syntax$Elm$Parser$Patterns$maybeDotTypeNamesTuple);
var $stil4m$elm_syntax$Elm$Syntax$Pattern$RecordPattern = function (a) {
	return {$: 'RecordPattern', a: a};
};
var $stil4m$elm_syntax$Elm$Parser$Patterns$recordPattern = A3(
	$stil4m$elm_syntax$ParserFast$map2WithRange,
	F3(
		function (range, commentsBeforeElements, elements) {
			return {
				comments: A2($stil4m$elm_syntax$Rope$prependTo, elements.comments, commentsBeforeElements),
				syntax: A2(
					$stil4m$elm_syntax$Elm$Syntax$Node$Node,
					range,
					$stil4m$elm_syntax$Elm$Syntax$Pattern$RecordPattern(elements.syntax))
			};
		}),
	A2($stil4m$elm_syntax$ParserFast$symbolFollowedBy, '{', $stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout),
	A2(
		$stil4m$elm_syntax$ParserFast$oneOf2,
		A2(
			$stil4m$elm_syntax$ParserFast$followedBySymbol,
			'}',
			A4(
				$stil4m$elm_syntax$ParserFast$map3,
				F3(
					function (head, commentsAfterHead, tail) {
						return {
							comments: A2($stil4m$elm_syntax$Rope$prependTo, tail.comments, commentsAfterHead),
							syntax: A2($elm$core$List$cons, head, tail.syntax)
						};
					}),
				$stil4m$elm_syntax$Elm$Parser$Tokens$functionNameNode,
				$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
				$stil4m$elm_syntax$ParserWithComments$many(
					A2(
						$stil4m$elm_syntax$ParserFast$symbolFollowedBy,
						',',
						A4(
							$stil4m$elm_syntax$ParserFast$map3,
							F3(
								function (beforeName, name, afterName) {
									return {
										comments: A2($stil4m$elm_syntax$Rope$prependTo, afterName, beforeName),
										syntax: name
									};
								}),
							$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
							$stil4m$elm_syntax$Elm$Parser$Tokens$functionNameNode,
							$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout))))),
		A2(
			$stil4m$elm_syntax$ParserFast$symbol,
			'}',
			{comments: $stil4m$elm_syntax$Rope$empty, syntax: _List_Nil})));
var $stil4m$elm_syntax$Elm$Syntax$Pattern$StringPattern = function (a) {
	return {$: 'StringPattern', a: a};
};
var $stil4m$elm_syntax$Elm$Parser$Patterns$stringPattern = $stil4m$elm_syntax$Elm$Parser$Tokens$singleOrTripleQuotedStringLiteralMapWithRange(
	F2(
		function (range, string) {
			return {
				comments: $stil4m$elm_syntax$Rope$empty,
				syntax: A2(
					$stil4m$elm_syntax$Elm$Syntax$Node$Node,
					range,
					$stil4m$elm_syntax$Elm$Syntax$Pattern$StringPattern(string))
			};
		}));
var $stil4m$elm_syntax$Elm$Syntax$Pattern$VarPattern = function (a) {
	return {$: 'VarPattern', a: a};
};
var $stil4m$elm_syntax$Elm$Parser$Tokens$functionNameMapWithRange = function (rangeAndNameToResult) {
	return A4($stil4m$elm_syntax$ParserFast$ifFollowedByWhileValidateMapWithRangeWithoutLinebreak, rangeAndNameToResult, $stil4m$elm_syntax$Char$Extra$unicodeIsLowerFast, $stil4m$elm_syntax$Char$Extra$unicodeIsAlphaNumOrUnderscoreFast, $stil4m$elm_syntax$Elm$Parser$Tokens$isNotReserved);
};
var $stil4m$elm_syntax$Elm$Parser$Patterns$varPattern = $stil4m$elm_syntax$Elm$Parser$Tokens$functionNameMapWithRange(
	F2(
		function (range, _var) {
			return {
				comments: $stil4m$elm_syntax$Rope$empty,
				syntax: A2(
					$stil4m$elm_syntax$Elm$Syntax$Node$Node,
					range,
					$stil4m$elm_syntax$Elm$Syntax$Pattern$VarPattern(_var))
			};
		}));
function $stil4m$elm_syntax$Elm$Parser$Patterns$cyclic$composablePatternTryToCompose() {
	return A4(
		$stil4m$elm_syntax$ParserFast$map3,
		F3(
			function (x, commentsAfterLeft, maybeComposedWithResult) {
				return {
					comments: A2(
						$stil4m$elm_syntax$Rope$prependTo,
						maybeComposedWithResult.comments,
						A2($stil4m$elm_syntax$Rope$prependTo, commentsAfterLeft, x.comments)),
					syntax: function () {
						var _v7 = maybeComposedWithResult.syntax;
						switch (_v7.$) {
							case 'PatternComposedWithNothing':
								return x.syntax;
							case 'PatternComposedWithAs':
								var anotherName = _v7.a;
								return A3($stil4m$elm_syntax$Elm$Syntax$Node$combine, $stil4m$elm_syntax$Elm$Syntax$Pattern$AsPattern, x.syntax, anotherName);
							default:
								var y = _v7.a;
								return A3($stil4m$elm_syntax$Elm$Syntax$Node$combine, $stil4m$elm_syntax$Elm$Syntax$Pattern$UnConsPattern, x.syntax, y);
						}
					}()
				};
			}),
		$stil4m$elm_syntax$Elm$Parser$Patterns$cyclic$composablePattern(),
		$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
		$stil4m$elm_syntax$Elm$Parser$Patterns$cyclic$maybeComposedWith());
}
function $stil4m$elm_syntax$Elm$Parser$Patterns$cyclic$composablePattern() {
	return A9(
		$stil4m$elm_syntax$ParserFast$oneOf9,
		$stil4m$elm_syntax$Elm$Parser$Patterns$varPattern,
		$stil4m$elm_syntax$Elm$Parser$Patterns$cyclic$qualifiedPatternWithConsumeArgs(),
		$stil4m$elm_syntax$Elm$Parser$Patterns$allPattern,
		$stil4m$elm_syntax$Elm$Parser$Patterns$cyclic$parensPattern(),
		$stil4m$elm_syntax$Elm$Parser$Patterns$recordPattern,
		$stil4m$elm_syntax$Elm$Parser$Patterns$stringPattern,
		$stil4m$elm_syntax$Elm$Parser$Patterns$cyclic$listPattern(),
		$stil4m$elm_syntax$Elm$Parser$Patterns$numberPart,
		$stil4m$elm_syntax$Elm$Parser$Patterns$charPattern);
}
function $stil4m$elm_syntax$Elm$Parser$Patterns$cyclic$qualifiedPatternWithConsumeArgs() {
	return A4(
		$stil4m$elm_syntax$ParserFast$map3,
		F3(
			function (_v4, afterStartName, argsReverse) {
				var nameRange = _v4.a;
				var name = _v4.b;
				var range = function () {
					var _v5 = argsReverse.syntax;
					if (!_v5.b) {
						return nameRange;
					} else {
						var _v6 = _v5.a;
						var lastArgRange = _v6.a;
						return {end: lastArgRange.end, start: nameRange.start};
					}
				}();
				return {
					comments: A2($stil4m$elm_syntax$Rope$prependTo, argsReverse.comments, afterStartName),
					syntax: A2(
						$stil4m$elm_syntax$Elm$Syntax$Node$Node,
						range,
						A2(
							$stil4m$elm_syntax$Elm$Syntax$Pattern$NamedPattern,
							name,
							$elm$core$List$reverse(argsReverse.syntax)))
				};
			}),
		$stil4m$elm_syntax$Elm$Parser$Patterns$qualifiedNameRefNode,
		$stil4m$elm_syntax$Elm$Parser$Layout$optimisticLayout,
		$stil4m$elm_syntax$ParserWithComments$manyWithoutReverse(
			$stil4m$elm_syntax$Elm$Parser$Layout$positivelyIndentedFollowedBy(
				A3(
					$stil4m$elm_syntax$ParserFast$map2,
					F2(
						function (arg, commentsAfterArg) {
							return {
								comments: A2($stil4m$elm_syntax$Rope$prependTo, commentsAfterArg, arg.comments),
								syntax: arg.syntax
							};
						}),
					$stil4m$elm_syntax$Elm$Parser$Patterns$cyclic$patternNotDirectlyComposing(),
					$stil4m$elm_syntax$Elm$Parser$Layout$optimisticLayout))));
}
function $stil4m$elm_syntax$Elm$Parser$Patterns$cyclic$patternNotDirectlyComposing() {
	return A9(
		$stil4m$elm_syntax$ParserFast$oneOf9,
		$stil4m$elm_syntax$Elm$Parser$Patterns$varPattern,
		$stil4m$elm_syntax$Elm$Parser$Patterns$qualifiedPatternWithoutConsumeArgs,
		$stil4m$elm_syntax$Elm$Parser$Patterns$allPattern,
		$stil4m$elm_syntax$Elm$Parser$Patterns$cyclic$parensPattern(),
		$stil4m$elm_syntax$Elm$Parser$Patterns$recordPattern,
		$stil4m$elm_syntax$Elm$Parser$Patterns$stringPattern,
		$stil4m$elm_syntax$Elm$Parser$Patterns$cyclic$listPattern(),
		$stil4m$elm_syntax$Elm$Parser$Patterns$numberPart,
		$stil4m$elm_syntax$Elm$Parser$Patterns$charPattern);
}
function $stil4m$elm_syntax$Elm$Parser$Patterns$cyclic$listPattern() {
	return A3(
		$stil4m$elm_syntax$ParserFast$map2WithRange,
		F3(
			function (range, commentsBeforeElements, maybeElements) {
				if (maybeElements.$ === 'Nothing') {
					return {
						comments: commentsBeforeElements,
						syntax: A2($stil4m$elm_syntax$Elm$Syntax$Node$Node, range, $stil4m$elm_syntax$Elm$Parser$Patterns$patternListEmpty)
					};
				} else {
					var elements = maybeElements.a;
					return {
						comments: A2($stil4m$elm_syntax$Rope$prependTo, elements.comments, commentsBeforeElements),
						syntax: A2(
							$stil4m$elm_syntax$Elm$Syntax$Node$Node,
							range,
							$stil4m$elm_syntax$Elm$Syntax$Pattern$ListPattern(elements.syntax))
					};
				}
			}),
		A2($stil4m$elm_syntax$ParserFast$symbolFollowedBy, '[', $stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout),
		A2(
			$stil4m$elm_syntax$ParserFast$oneOf2,
			A2($stil4m$elm_syntax$ParserFast$symbol, ']', $elm$core$Maybe$Nothing),
			A2(
				$stil4m$elm_syntax$ParserFast$followedBySymbol,
				']',
				A4(
					$stil4m$elm_syntax$ParserFast$map3,
					F3(
						function (head, commentsAfterHead, tail) {
							return $elm$core$Maybe$Just(
								{
									comments: A2(
										$stil4m$elm_syntax$Rope$prependTo,
										commentsAfterHead,
										A2($stil4m$elm_syntax$Rope$prependTo, tail.comments, head.comments)),
									syntax: A2($elm$core$List$cons, head.syntax, tail.syntax)
								});
						}),
					$stil4m$elm_syntax$Elm$Parser$Patterns$cyclic$pattern(),
					$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
					$stil4m$elm_syntax$ParserWithComments$many(
						A2(
							$stil4m$elm_syntax$ParserFast$symbolFollowedBy,
							',',
							$stil4m$elm_syntax$Elm$Parser$Layout$maybeAroundBothSides(
								$stil4m$elm_syntax$Elm$Parser$Patterns$cyclic$pattern())))))));
}
function $stil4m$elm_syntax$Elm$Parser$Patterns$cyclic$maybeComposedWith() {
	return A3(
		$stil4m$elm_syntax$ParserFast$oneOf2OrSucceed,
		A2(
			$stil4m$elm_syntax$ParserFast$keywordFollowedBy,
			'as',
			A3(
				$stil4m$elm_syntax$ParserFast$map2,
				F2(
					function (commentsAfterAs, name) {
						return {
							comments: commentsAfterAs,
							syntax: $stil4m$elm_syntax$Elm$Parser$Patterns$PatternComposedWithAs(name)
						};
					}),
				$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
				$stil4m$elm_syntax$Elm$Parser$Tokens$functionNameNode)),
		A2(
			$stil4m$elm_syntax$ParserFast$symbolFollowedBy,
			'::',
			A3(
				$stil4m$elm_syntax$ParserFast$map2,
				F2(
					function (commentsAfterCons, patternResult) {
						return {
							comments: A2($stil4m$elm_syntax$Rope$prependTo, patternResult.comments, commentsAfterCons),
							syntax: $stil4m$elm_syntax$Elm$Parser$Patterns$PatternComposedWithCons(patternResult.syntax)
						};
					}),
				$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
				$stil4m$elm_syntax$Elm$Parser$Patterns$cyclic$pattern())),
		{
			comments: $stil4m$elm_syntax$Rope$empty,
			syntax: $stil4m$elm_syntax$Elm$Parser$Patterns$PatternComposedWithNothing(_Utils_Tuple0)
		});
}
function $stil4m$elm_syntax$Elm$Parser$Patterns$cyclic$parensPattern() {
	return A2(
		$stil4m$elm_syntax$ParserFast$symbolFollowedBy,
		'(',
		A3(
			$stil4m$elm_syntax$ParserFast$map2WithRange,
			F3(
				function (range, commentsBeforeHead, contentResult) {
					return {
						comments: A2($stil4m$elm_syntax$Rope$prependTo, contentResult.comments, commentsBeforeHead),
						syntax: A2(
							$stil4m$elm_syntax$Elm$Syntax$Node$Node,
							{
								end: range.end,
								start: {column: range.start.column - 1, row: range.start.row}
							},
							contentResult.syntax)
					};
				}),
			$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
			A2(
				$stil4m$elm_syntax$ParserFast$oneOf2,
				A2(
					$stil4m$elm_syntax$ParserFast$symbol,
					')',
					{comments: $stil4m$elm_syntax$Rope$empty, syntax: $stil4m$elm_syntax$Elm$Syntax$Pattern$UnitPattern}),
				A4(
					$stil4m$elm_syntax$ParserFast$map3,
					F3(
						function (headResult, commentsAfterHead, tailResult) {
							return {
								comments: A2(
									$stil4m$elm_syntax$Rope$prependTo,
									tailResult.comments,
									A2($stil4m$elm_syntax$Rope$prependTo, commentsAfterHead, headResult.comments)),
								syntax: function () {
									var _v1 = tailResult.syntax;
									if (_v1.$ === 'Nothing') {
										return $stil4m$elm_syntax$Elm$Syntax$Pattern$ParenthesizedPattern(headResult.syntax);
									} else {
										var secondAndMaybeThirdPart = _v1.a;
										var _v2 = secondAndMaybeThirdPart.maybeThirdPart;
										if (_v2.$ === 'Nothing') {
											return $stil4m$elm_syntax$Elm$Syntax$Pattern$TuplePattern(
												_List_fromArray(
													[headResult.syntax, secondAndMaybeThirdPart.secondPart]));
										} else {
											var thirdPart = _v2.a;
											return $stil4m$elm_syntax$Elm$Syntax$Pattern$TuplePattern(
												_List_fromArray(
													[headResult.syntax, secondAndMaybeThirdPart.secondPart, thirdPart]));
										}
									}
								}()
							};
						}),
					$stil4m$elm_syntax$Elm$Parser$Patterns$cyclic$pattern(),
					$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
					A2(
						$stil4m$elm_syntax$ParserFast$oneOf2,
						A2(
							$stil4m$elm_syntax$ParserFast$symbol,
							')',
							{comments: $stil4m$elm_syntax$Rope$empty, syntax: $elm$core$Maybe$Nothing}),
						A2(
							$stil4m$elm_syntax$ParserFast$symbolFollowedBy,
							',',
							A5(
								$stil4m$elm_syntax$ParserFast$map4,
								F4(
									function (commentsBefore, secondPart, commentsAfter, maybeThirdPart) {
										return {
											comments: A2(
												$stil4m$elm_syntax$Rope$prependTo,
												maybeThirdPart.comments,
												A2(
													$stil4m$elm_syntax$Rope$prependTo,
													commentsAfter,
													A2($stil4m$elm_syntax$Rope$prependTo, secondPart.comments, commentsBefore))),
											syntax: $elm$core$Maybe$Just(
												{maybeThirdPart: maybeThirdPart.syntax, secondPart: secondPart.syntax})
										};
									}),
								$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
								$stil4m$elm_syntax$Elm$Parser$Patterns$cyclic$pattern(),
								$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
								A2(
									$stil4m$elm_syntax$ParserFast$oneOf2,
									A2(
										$stil4m$elm_syntax$ParserFast$symbol,
										')',
										{comments: $stil4m$elm_syntax$Rope$empty, syntax: $elm$core$Maybe$Nothing}),
									A2(
										$stil4m$elm_syntax$ParserFast$symbolFollowedBy,
										',',
										A2(
											$stil4m$elm_syntax$ParserFast$followedBySymbol,
											')',
											A4(
												$stil4m$elm_syntax$ParserFast$map3,
												F3(
													function (commentsBefore, thirdPart, commentsAfter) {
														return {
															comments: A2(
																$stil4m$elm_syntax$Rope$prependTo,
																commentsAfter,
																A2($stil4m$elm_syntax$Rope$prependTo, thirdPart.comments, commentsBefore)),
															syntax: $elm$core$Maybe$Just(thirdPart.syntax)
														};
													}),
												$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
												$stil4m$elm_syntax$Elm$Parser$Patterns$cyclic$pattern(),
												$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout)))))))))));
}
function $stil4m$elm_syntax$Elm$Parser$Patterns$cyclic$pattern() {
	return $stil4m$elm_syntax$ParserFast$lazy(
		function (_v0) {
			return $stil4m$elm_syntax$Elm$Parser$Patterns$cyclic$composablePatternTryToCompose();
		});
}
try {
	var $stil4m$elm_syntax$Elm$Parser$Patterns$composablePatternTryToCompose = $stil4m$elm_syntax$Elm$Parser$Patterns$cyclic$composablePatternTryToCompose();
	$stil4m$elm_syntax$Elm$Parser$Patterns$cyclic$composablePatternTryToCompose = function () {
		return $stil4m$elm_syntax$Elm$Parser$Patterns$composablePatternTryToCompose;
	};
	var $stil4m$elm_syntax$Elm$Parser$Patterns$composablePattern = $stil4m$elm_syntax$Elm$Parser$Patterns$cyclic$composablePattern();
	$stil4m$elm_syntax$Elm$Parser$Patterns$cyclic$composablePattern = function () {
		return $stil4m$elm_syntax$Elm$Parser$Patterns$composablePattern;
	};
	var $stil4m$elm_syntax$Elm$Parser$Patterns$qualifiedPatternWithConsumeArgs = $stil4m$elm_syntax$Elm$Parser$Patterns$cyclic$qualifiedPatternWithConsumeArgs();
	$stil4m$elm_syntax$Elm$Parser$Patterns$cyclic$qualifiedPatternWithConsumeArgs = function () {
		return $stil4m$elm_syntax$Elm$Parser$Patterns$qualifiedPatternWithConsumeArgs;
	};
	var $stil4m$elm_syntax$Elm$Parser$Patterns$patternNotDirectlyComposing = $stil4m$elm_syntax$Elm$Parser$Patterns$cyclic$patternNotDirectlyComposing();
	$stil4m$elm_syntax$Elm$Parser$Patterns$cyclic$patternNotDirectlyComposing = function () {
		return $stil4m$elm_syntax$Elm$Parser$Patterns$patternNotDirectlyComposing;
	};
	var $stil4m$elm_syntax$Elm$Parser$Patterns$listPattern = $stil4m$elm_syntax$Elm$Parser$Patterns$cyclic$listPattern();
	$stil4m$elm_syntax$Elm$Parser$Patterns$cyclic$listPattern = function () {
		return $stil4m$elm_syntax$Elm$Parser$Patterns$listPattern;
	};
	var $stil4m$elm_syntax$Elm$Parser$Patterns$maybeComposedWith = $stil4m$elm_syntax$Elm$Parser$Patterns$cyclic$maybeComposedWith();
	$stil4m$elm_syntax$Elm$Parser$Patterns$cyclic$maybeComposedWith = function () {
		return $stil4m$elm_syntax$Elm$Parser$Patterns$maybeComposedWith;
	};
	var $stil4m$elm_syntax$Elm$Parser$Patterns$parensPattern = $stil4m$elm_syntax$Elm$Parser$Patterns$cyclic$parensPattern();
	$stil4m$elm_syntax$Elm$Parser$Patterns$cyclic$parensPattern = function () {
		return $stil4m$elm_syntax$Elm$Parser$Patterns$parensPattern;
	};
	var $stil4m$elm_syntax$Elm$Parser$Patterns$pattern = $stil4m$elm_syntax$Elm$Parser$Patterns$cyclic$pattern();
	$stil4m$elm_syntax$Elm$Parser$Patterns$cyclic$pattern = function () {
		return $stil4m$elm_syntax$Elm$Parser$Patterns$pattern;
	};
} catch ($) {
	throw 'Some top-level definitions from `Elm.Parser.Patterns` are causing infinite recursion:\n\n  ┌─────┐\n  │    composablePatternTryToCompose\n  │     ↓\n  │    composablePattern\n  │     ↓\n  │    qualifiedPatternWithConsumeArgs\n  │     ↓\n  │    patternNotDirectlyComposing\n  │     ↓\n  │    listPattern\n  │     ↓\n  │    maybeComposedWith\n  │     ↓\n  │    parensPattern\n  │     ↓\n  │    pattern\n  └─────┘\n\nThese errors are very tricky, so read https://elm-lang.org/0.19.1/bad-recursion to learn how to fix it!';}
var $stil4m$elm_syntax$ParserWithComments$until = F2(
	function (end, element) {
		return A5(
			$stil4m$elm_syntax$ParserFast$loopUntil,
			end,
			element,
			_Utils_Tuple2($stil4m$elm_syntax$Rope$empty, _List_Nil),
			F2(
				function (pResult, _v0) {
					var commentsSoFar = _v0.a;
					var itemsSoFar = _v0.b;
					return _Utils_Tuple2(
						A2($stil4m$elm_syntax$Rope$prependTo, pResult.comments, commentsSoFar),
						A2($elm$core$List$cons, pResult.syntax, itemsSoFar));
				}),
			function (_v1) {
				var commentsSoFar = _v1.a;
				var itemsSoFar = _v1.b;
				return {
					comments: commentsSoFar,
					syntax: $elm$core$List$reverse(itemsSoFar)
				};
			});
	});
var $stil4m$elm_syntax$Elm$Parser$Expression$parameterPatternsEqual = A2(
	$stil4m$elm_syntax$ParserWithComments$until,
	$stil4m$elm_syntax$Elm$Parser$Tokens$equal,
	A3(
		$stil4m$elm_syntax$ParserFast$map2,
		F2(
			function (patternResult, commentsAfterPattern) {
				return {
					comments: A2($stil4m$elm_syntax$Rope$prependTo, commentsAfterPattern, patternResult.comments),
					syntax: patternResult.syntax
				};
			}),
		$stil4m$elm_syntax$Elm$Parser$Patterns$patternNotDirectlyComposing,
		$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout));
var $stil4m$elm_syntax$Elm$Parser$Layout$positivelyIndentedPlusFollowedBy = F2(
	function (extraIndent, nextParser) {
		return $stil4m$elm_syntax$ParserFast$columnIndentAndThen(
			F2(
				function (column, indent) {
					return (_Utils_cmp(column, indent + extraIndent) > 0) ? nextParser : $stil4m$elm_syntax$Elm$Parser$Layout$problemPositivelyIndented;
				}));
	});
var $stil4m$elm_syntax$Elm$Parser$Expression$problemCannotMixNonAssociativeInfixOperators = $stil4m$elm_syntax$ParserFast$problem('cannot mix non-associative infix operators without parenthesis');
var $stil4m$elm_syntax$Elm$Parser$Expression$rangeMoveStartLeftByOneColumn = function (range) {
	return {
		end: range.end,
		start: {column: range.start.column - 1, row: range.start.row}
	};
};
var $stil4m$elm_syntax$Elm$Syntax$Expression$RecordAccessFunction = function (a) {
	return {$: 'RecordAccessFunction', a: a};
};
var $stil4m$elm_syntax$Elm$Parser$Expression$recordAccessFunctionExpression = A2(
	$stil4m$elm_syntax$ParserFast$symbolFollowedBy,
	'.',
	$stil4m$elm_syntax$Elm$Parser$Tokens$functionNameMapWithRange(
		F2(
			function (range, field) {
				return {
					comments: $stil4m$elm_syntax$Rope$empty,
					syntax: A2(
						$stil4m$elm_syntax$Elm$Syntax$Node$Node,
						$stil4m$elm_syntax$Elm$Parser$Expression$rangeMoveStartLeftByOneColumn(range),
						$stil4m$elm_syntax$Elm$Syntax$Expression$RecordAccessFunction('.' + field))
				};
			})));
var $stil4m$elm_syntax$Elm$Syntax$Expression$Floatable = function (a) {
	return {$: 'Floatable', a: a};
};
var $stil4m$elm_syntax$Elm$Syntax$Expression$Hex = function (a) {
	return {$: 'Hex', a: a};
};
var $stil4m$elm_syntax$Elm$Syntax$Expression$Integer = function (a) {
	return {$: 'Integer', a: a};
};
var $stil4m$elm_syntax$ParserFast$skip0OrMoreDigits0To9 = F2(
	function (offset, src) {
		skip0OrMoreDigits0To9:
		while (true) {
			var _v0 = A3($elm$core$String$slice, offset, offset + 1, src);
			switch (_v0) {
				case '0':
					var $temp$offset = offset + 1,
						$temp$src = src;
					offset = $temp$offset;
					src = $temp$src;
					continue skip0OrMoreDigits0To9;
				case '1':
					var $temp$offset = offset + 1,
						$temp$src = src;
					offset = $temp$offset;
					src = $temp$src;
					continue skip0OrMoreDigits0To9;
				case '2':
					var $temp$offset = offset + 1,
						$temp$src = src;
					offset = $temp$offset;
					src = $temp$src;
					continue skip0OrMoreDigits0To9;
				case '3':
					var $temp$offset = offset + 1,
						$temp$src = src;
					offset = $temp$offset;
					src = $temp$src;
					continue skip0OrMoreDigits0To9;
				case '4':
					var $temp$offset = offset + 1,
						$temp$src = src;
					offset = $temp$offset;
					src = $temp$src;
					continue skip0OrMoreDigits0To9;
				case '5':
					var $temp$offset = offset + 1,
						$temp$src = src;
					offset = $temp$offset;
					src = $temp$src;
					continue skip0OrMoreDigits0To9;
				case '6':
					var $temp$offset = offset + 1,
						$temp$src = src;
					offset = $temp$offset;
					src = $temp$src;
					continue skip0OrMoreDigits0To9;
				case '7':
					var $temp$offset = offset + 1,
						$temp$src = src;
					offset = $temp$offset;
					src = $temp$src;
					continue skip0OrMoreDigits0To9;
				case '8':
					var $temp$offset = offset + 1,
						$temp$src = src;
					offset = $temp$offset;
					src = $temp$src;
					continue skip0OrMoreDigits0To9;
				case '9':
					var $temp$offset = offset + 1,
						$temp$src = src;
					offset = $temp$offset;
					src = $temp$src;
					continue skip0OrMoreDigits0To9;
				default:
					return offset;
			}
		}
	});
var $stil4m$elm_syntax$ParserFast$skip1OrMoreDigits0To9 = F2(
	function (offset, src) {
		var _v0 = A3($elm$core$String$slice, offset, offset + 1, src);
		switch (_v0) {
			case '0':
				return A2($stil4m$elm_syntax$ParserFast$skip0OrMoreDigits0To9, offset + 1, src);
			case '1':
				return A2($stil4m$elm_syntax$ParserFast$skip0OrMoreDigits0To9, offset + 1, src);
			case '2':
				return A2($stil4m$elm_syntax$ParserFast$skip0OrMoreDigits0To9, offset + 1, src);
			case '3':
				return A2($stil4m$elm_syntax$ParserFast$skip0OrMoreDigits0To9, offset + 1, src);
			case '4':
				return A2($stil4m$elm_syntax$ParserFast$skip0OrMoreDigits0To9, offset + 1, src);
			case '5':
				return A2($stil4m$elm_syntax$ParserFast$skip0OrMoreDigits0To9, offset + 1, src);
			case '6':
				return A2($stil4m$elm_syntax$ParserFast$skip0OrMoreDigits0To9, offset + 1, src);
			case '7':
				return A2($stil4m$elm_syntax$ParserFast$skip0OrMoreDigits0To9, offset + 1, src);
			case '8':
				return A2($stil4m$elm_syntax$ParserFast$skip0OrMoreDigits0To9, offset + 1, src);
			case '9':
				return A2($stil4m$elm_syntax$ParserFast$skip0OrMoreDigits0To9, offset + 1, src);
			default:
				return -1;
		}
	});
var $stil4m$elm_syntax$ParserFast$skipAfterFloatExponentMark = F2(
	function (offset, src) {
		var _v0 = A3($elm$core$String$slice, offset, offset + 1, src);
		switch (_v0) {
			case '+':
				return A2($stil4m$elm_syntax$ParserFast$skip1OrMoreDigits0To9, offset + 1, src);
			case '-':
				return A2($stil4m$elm_syntax$ParserFast$skip1OrMoreDigits0To9, offset + 1, src);
			default:
				return A2($stil4m$elm_syntax$ParserFast$skip1OrMoreDigits0To9, offset, src);
		}
	});
var $stil4m$elm_syntax$ParserFast$skipFloatAfterIntegerDecimal = F2(
	function (offset, src) {
		var _v0 = A3($elm$core$String$slice, offset, offset + 1, src);
		switch (_v0) {
			case '.':
				var offsetAfterDigits = A2($stil4m$elm_syntax$ParserFast$skip1OrMoreDigits0To9, offset + 1, src);
				if (_Utils_eq(offsetAfterDigits, -1)) {
					return -1;
				} else {
					var _v1 = A3($elm$core$String$slice, offsetAfterDigits, offsetAfterDigits + 1, src);
					switch (_v1) {
						case 'e':
							return A2($stil4m$elm_syntax$ParserFast$skipAfterFloatExponentMark, offsetAfterDigits + 1, src);
						case 'E':
							return A2($stil4m$elm_syntax$ParserFast$skipAfterFloatExponentMark, offsetAfterDigits + 1, src);
						default:
							return offsetAfterDigits;
					}
				}
			case 'e':
				return A2($stil4m$elm_syntax$ParserFast$skipAfterFloatExponentMark, offset + 1, src);
			case 'E':
				return A2($stil4m$elm_syntax$ParserFast$skipAfterFloatExponentMark, offset + 1, src);
			default:
				return -1;
		}
	});
var $elm$core$String$toFloat = _String_toFloat;
var $stil4m$elm_syntax$ParserFast$floatOrIntegerDecimalOrHexadecimalMapWithRange = F3(
	function (rangeAndFloatToRes, rangeAndIntDecimalToRes, rangeAndIntHexadecimalToRes) {
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s0) {
				var s1 = A2($stil4m$elm_syntax$ParserFast$convertIntegerDecimalOrHexadecimal, s0.offset, s0.src);
				if (_Utils_eq(s1.offsetAndInt.offset, -1)) {
					return A2(
						$stil4m$elm_syntax$ParserFast$Bad,
						false,
						A2($stil4m$elm_syntax$ParserFast$ExpectingNumber, s0.row, s0.col));
				} else {
					var offsetAfterFloat = A2($stil4m$elm_syntax$ParserFast$skipFloatAfterIntegerDecimal, s1.offsetAndInt.offset, s0.src);
					if (_Utils_eq(offsetAfterFloat, -1)) {
						var newColumn = s0.col + (s1.offsetAndInt.offset - s0.offset);
						var range = {
							end: {column: newColumn, row: s0.row},
							start: {column: s0.col, row: s0.row}
						};
						return A2(
							$stil4m$elm_syntax$ParserFast$Good,
							function () {
								var _v0 = s1.base;
								if (_v0.$ === 'Decimal') {
									return A2(rangeAndIntDecimalToRes, range, s1.offsetAndInt._int);
								} else {
									return A2(rangeAndIntHexadecimalToRes, range, s1.offsetAndInt._int);
								}
							}(),
							{col: newColumn, indent: s0.indent, offset: s1.offsetAndInt.offset, row: s0.row, src: s0.src});
					} else {
						var _v1 = $elm$core$String$toFloat(
							A3($elm$core$String$slice, s0.offset, offsetAfterFloat, s0.src));
						if (_v1.$ === 'Just') {
							var _float = _v1.a;
							var newColumn = s0.col + (offsetAfterFloat - s0.offset);
							return A2(
								$stil4m$elm_syntax$ParserFast$Good,
								A2(
									rangeAndFloatToRes,
									{
										end: {column: newColumn, row: s0.row},
										start: {column: s0.col, row: s0.row}
									},
									_float),
								{col: newColumn, indent: s0.indent, offset: offsetAfterFloat, row: s0.row, src: s0.src});
						} else {
							return A2(
								$stil4m$elm_syntax$ParserFast$Bad,
								false,
								A2($stil4m$elm_syntax$ParserFast$ExpectingNumber, s0.row, s0.col));
						}
					}
				}
			});
	});
var $stil4m$elm_syntax$Elm$Parser$Expression$numberExpression = A3(
	$stil4m$elm_syntax$ParserFast$floatOrIntegerDecimalOrHexadecimalMapWithRange,
	F2(
		function (range, n) {
			return {
				comments: $stil4m$elm_syntax$Rope$empty,
				syntax: A2(
					$stil4m$elm_syntax$Elm$Syntax$Node$Node,
					range,
					$stil4m$elm_syntax$Elm$Syntax$Expression$Floatable(n))
			};
		}),
	F2(
		function (range, n) {
			return {
				comments: $stil4m$elm_syntax$Rope$empty,
				syntax: A2(
					$stil4m$elm_syntax$Elm$Syntax$Node$Node,
					range,
					$stil4m$elm_syntax$Elm$Syntax$Expression$Integer(n))
			};
		}),
	F2(
		function (range, n) {
			return {
				comments: $stil4m$elm_syntax$Rope$empty,
				syntax: A2(
					$stil4m$elm_syntax$Elm$Syntax$Node$Node,
					range,
					$stil4m$elm_syntax$Elm$Syntax$Expression$Hex(n))
			};
		}));
var $stil4m$elm_syntax$Elm$Syntax$Expression$FunctionOrValue = F2(
	function (a, b) {
		return {$: 'FunctionOrValue', a: a, b: b};
	});
var $stil4m$elm_syntax$ParserFast$ifFollowedByWhileValidateWithoutLinebreak = F3(
	function (firstIsOkay, afterFirstIsOkay, resultIsOkay) {
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s) {
				var firstOffset = A3($stil4m$elm_syntax$ParserFast$isSubCharWithoutLinebreak, firstIsOkay, s.offset, s.src);
				if (_Utils_eq(firstOffset, -1)) {
					return A2(
						$stil4m$elm_syntax$ParserFast$Bad,
						false,
						A2($stil4m$elm_syntax$ParserFast$ExpectingCharSatisfyingPredicate, s.row, s.col));
				} else {
					var s1 = A6($stil4m$elm_syntax$ParserFast$skipWhileWithoutLinebreakHelp, afterFirstIsOkay, firstOffset, s.row, s.col + 1, s.src, s.indent);
					var name = A3($elm$core$String$slice, s.offset, s1.offset, s.src);
					return resultIsOkay(name) ? A2($stil4m$elm_syntax$ParserFast$Good, name, s1) : A2(
						$stil4m$elm_syntax$ParserFast$Bad,
						false,
						A2($stil4m$elm_syntax$ParserFast$ExpectingStringSatisfyingPredicate, s.row, s.col + 1));
				}
			});
	});
var $stil4m$elm_syntax$Elm$Parser$Tokens$functionName = A3($stil4m$elm_syntax$ParserFast$ifFollowedByWhileValidateWithoutLinebreak, $stil4m$elm_syntax$Char$Extra$unicodeIsLowerFast, $stil4m$elm_syntax$Char$Extra$unicodeIsAlphaNumOrUnderscoreFast, $stil4m$elm_syntax$Elm$Parser$Tokens$isNotReserved);
var $stil4m$elm_syntax$ParserFast$oneOf2Map = F4(
	function (firstToChoice, _v0, secondToChoice, _v1) {
		var attemptFirst = _v0.a;
		var attemptSecond = _v1.a;
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s) {
				var _v2 = attemptFirst(s);
				if (_v2.$ === 'Good') {
					var first = _v2.a;
					var s1 = _v2.b;
					return A2(
						$stil4m$elm_syntax$ParserFast$Good,
						firstToChoice(first),
						s1);
				} else {
					var firstCommitted = _v2.a;
					var firstX = _v2.b;
					if (firstCommitted) {
						return A2($stil4m$elm_syntax$ParserFast$Bad, firstCommitted, firstX);
					} else {
						var _v3 = attemptSecond(s);
						if (_v3.$ === 'Good') {
							var second = _v3.a;
							var s1 = _v3.b;
							return A2(
								$stil4m$elm_syntax$ParserFast$Good,
								secondToChoice(second),
								s1);
						} else {
							var secondCommitted = _v3.a;
							var secondX = _v3.b;
							return secondCommitted ? A2($stil4m$elm_syntax$ParserFast$Bad, secondCommitted, secondX) : A2(
								$stil4m$elm_syntax$ParserFast$Bad,
								false,
								A3($stil4m$elm_syntax$ParserFast$ExpectingOneOf, firstX, secondX, _List_Nil));
						}
					}
				}
			});
	});
var $stil4m$elm_syntax$ParserFast$orSucceed = F2(
	function (_v0, secondRes) {
		var attemptFirst = _v0.a;
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s) {
				var _v1 = attemptFirst(s);
				if (_v1.$ === 'Good') {
					var firstGood = _v1;
					return firstGood;
				} else {
					var firstBad = _v1;
					var firstCommitted = firstBad.a;
					return firstCommitted ? firstBad : A2($stil4m$elm_syntax$ParserFast$Good, secondRes, s);
				}
			});
	});
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$maybeDotReferenceExpressionTuple() {
	return A2(
		$stil4m$elm_syntax$ParserFast$orSucceed,
		A2(
			$stil4m$elm_syntax$ParserFast$symbolFollowedBy,
			'.',
			A4(
				$stil4m$elm_syntax$ParserFast$oneOf2Map,
				$elm$core$Maybe$Just,
				A3(
					$stil4m$elm_syntax$ParserFast$map2,
					F2(
						function (firstName, after) {
							if (after.$ === 'Nothing') {
								return _Utils_Tuple3(_List_Nil, firstName, _List_Nil);
							} else {
								var _v1 = after.a;
								var qualificationAfter = _v1.a;
								var unqualified = _v1.b;
								var recordAccess = _v1.c;
								return _Utils_Tuple3(
									A2($elm$core$List$cons, firstName, qualificationAfter),
									unqualified,
									recordAccess);
							}
						}),
					$stil4m$elm_syntax$Elm$Parser$Tokens$typeName,
					$stil4m$elm_syntax$ParserFast$lazy(
						function (_v2) {
							return $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$maybeDotReferenceExpressionTuple();
						})),
				$elm$core$Basics$identity,
				A3(
					$stil4m$elm_syntax$ParserFast$map2,
					F2(
						function (name, recordAccesses) {
							return $elm$core$Maybe$Just(
								_Utils_Tuple3(_List_Nil, name, recordAccesses));
						}),
					$stil4m$elm_syntax$Elm$Parser$Tokens$functionName,
					$stil4m$elm_syntax$Elm$Parser$Expression$multiRecordAccess))),
		$elm$core$Maybe$Nothing);
}
try {
	var $stil4m$elm_syntax$Elm$Parser$Expression$maybeDotReferenceExpressionTuple = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$maybeDotReferenceExpressionTuple();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$maybeDotReferenceExpressionTuple = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$maybeDotReferenceExpressionTuple;
	};
} catch ($) {
	throw 'Some top-level definitions from `Elm.Parser.Expression` are causing infinite recursion:\n\n  ┌─────┐\n  │    maybeDotReferenceExpressionTuple\n  └─────┘\n\nThese errors are very tricky, so read https://elm-lang.org/0.19.1/bad-recursion to learn how to fix it!';}
var $stil4m$elm_syntax$Elm$Parser$Expression$qualifiedOrVariantOrRecordConstructorReferenceExpressionFollowedByRecordAccess = A3(
	$stil4m$elm_syntax$ParserFast$map2WithRange,
	F3(
		function (range, firstName, after) {
			return {
				comments: $stil4m$elm_syntax$Rope$empty,
				syntax: function () {
					if (after.$ === 'Nothing') {
						return A2(
							$stil4m$elm_syntax$Elm$Syntax$Node$Node,
							range,
							A2($stil4m$elm_syntax$Elm$Syntax$Expression$FunctionOrValue, _List_Nil, firstName));
					} else {
						var _v1 = after.a;
						var qualificationAfter = _v1.a;
						var unqualified = _v1.b;
						var recordAccesses = _v1.c;
						if (!recordAccesses.b) {
							return A2(
								$stil4m$elm_syntax$Elm$Syntax$Node$Node,
								range,
								A2(
									$stil4m$elm_syntax$Elm$Syntax$Expression$FunctionOrValue,
									A2($elm$core$List$cons, firstName, qualificationAfter),
									unqualified));
						} else {
							var _v3 = recordAccesses.a;
							var firstRecordAccessRange = _v3.a;
							var referenceNode = A2(
								$stil4m$elm_syntax$Elm$Syntax$Node$Node,
								{
									end: {column: firstRecordAccessRange.start.column - 1, row: firstRecordAccessRange.start.row},
									start: range.start
								},
								A2(
									$stil4m$elm_syntax$Elm$Syntax$Expression$FunctionOrValue,
									A2($elm$core$List$cons, firstName, qualificationAfter),
									unqualified));
							return A3(
								$elm$core$List$foldl,
								F2(
									function (fieldNode, leftNode) {
										var fieldRange = fieldNode.a;
										var leftRange = leftNode.a;
										return A2(
											$stil4m$elm_syntax$Elm$Syntax$Node$Node,
											{end: fieldRange.end, start: leftRange.start},
											A2($stil4m$elm_syntax$Elm$Syntax$Expression$RecordAccess, leftNode, fieldNode));
									}),
								referenceNode,
								recordAccesses);
						}
					}
				}()
			};
		}),
	$stil4m$elm_syntax$Elm$Parser$Tokens$typeName,
	$stil4m$elm_syntax$Elm$Parser$Expression$maybeDotReferenceExpressionTuple);
var $stil4m$elm_syntax$Elm$Parser$Expression$unqualifiedFunctionReferenceExpressionFollowedByRecordAccess = A3(
	$stil4m$elm_syntax$ParserFast$map2,
	F2(
		function (leftestResult, recordAccesses) {
			if (!recordAccesses.b) {
				return leftestResult;
			} else {
				return {
					comments: leftestResult.comments,
					syntax: A3(
						$elm$core$List$foldl,
						F2(
							function (fieldNode, leftNode) {
								var fieldRange = fieldNode.a;
								var leftRange = leftNode.a;
								return A2(
									$stil4m$elm_syntax$Elm$Syntax$Node$Node,
									{end: fieldRange.end, start: leftRange.start},
									A2($stil4m$elm_syntax$Elm$Syntax$Expression$RecordAccess, leftNode, fieldNode));
							}),
						leftestResult.syntax,
						recordAccesses)
				};
			}
		}),
	$stil4m$elm_syntax$Elm$Parser$Tokens$functionNameMapWithRange(
		F2(
			function (range, unqualified) {
				return {
					comments: $stil4m$elm_syntax$Rope$empty,
					syntax: A2(
						$stil4m$elm_syntax$Elm$Syntax$Node$Node,
						range,
						A2($stil4m$elm_syntax$Elm$Syntax$Expression$FunctionOrValue, _List_Nil, unqualified))
				};
			})),
	$stil4m$elm_syntax$Elm$Parser$Expression$multiRecordAccess);
var $stil4m$elm_syntax$Elm$Parser$Expression$referenceOrNumberExpression = A3($stil4m$elm_syntax$ParserFast$oneOf3, $stil4m$elm_syntax$Elm$Parser$Expression$qualifiedOrVariantOrRecordConstructorReferenceExpressionFollowedByRecordAccess, $stil4m$elm_syntax$Elm$Parser$Expression$unqualifiedFunctionReferenceExpressionFollowedByRecordAccess, $stil4m$elm_syntax$Elm$Parser$Expression$numberExpression);
var $stil4m$elm_syntax$ParserFast$symbolBacktrackableFollowedBy = F2(
	function (str, _v0) {
		var parseNext = _v0.a;
		var strLength = $elm$core$String$length(str);
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s) {
				var newOffset = s.offset + strLength;
				return _Utils_eq(
					A3($elm$core$String$slice, s.offset, newOffset, s.src),
					str + '') ? parseNext(
					{col: s.col + strLength, indent: s.indent, offset: newOffset, row: s.row, src: s.src}) : A2(
					$stil4m$elm_syntax$ParserFast$Bad,
					false,
					A3($stil4m$elm_syntax$ParserFast$ExpectingSymbol, s.row, s.col, str));
			});
	});
var $stil4m$elm_syntax$ParserFast$symbolWithEndLocation = F2(
	function (str, endLocationToRes) {
		var strLength = $elm$core$String$length(str);
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s) {
				var newOffset = s.offset + strLength;
				if (_Utils_eq(
					A3($elm$core$String$slice, s.offset, newOffset, s.src),
					str + '')) {
					var newCol = s.col + strLength;
					return A2(
						$stil4m$elm_syntax$ParserFast$Good,
						endLocationToRes(
							{column: newCol, row: s.row}),
						{col: newCol, indent: s.indent, offset: newOffset, row: s.row, src: s.src});
				} else {
					return A2(
						$stil4m$elm_syntax$ParserFast$Bad,
						false,
						A3($stil4m$elm_syntax$ParserFast$ExpectingSymbol, s.row, s.col, str));
				}
			});
	});
var $stil4m$elm_syntax$Elm$Parser$Expression$temporaryErrPrecedenceTooHigh = $elm$core$Result$Err('infix operator precedence too high');
var $stil4m$elm_syntax$Elm$Parser$TypeAnnotation$FieldsAfterName = function (a) {
	return {$: 'FieldsAfterName', a: a};
};
var $stil4m$elm_syntax$Elm$Syntax$TypeAnnotation$FunctionTypeAnnotation = F2(
	function (a, b) {
		return {$: 'FunctionTypeAnnotation', a: a, b: b};
	});
var $stil4m$elm_syntax$Elm$Syntax$TypeAnnotation$GenericRecord = F2(
	function (a, b) {
		return {$: 'GenericRecord', a: a, b: b};
	});
var $stil4m$elm_syntax$Elm$Syntax$TypeAnnotation$Record = function (a) {
	return {$: 'Record', a: a};
};
var $stil4m$elm_syntax$Elm$Parser$TypeAnnotation$RecordExtensionExpressionAfterName = function (a) {
	return {$: 'RecordExtensionExpressionAfterName', a: a};
};
var $stil4m$elm_syntax$Elm$Syntax$TypeAnnotation$Tupled = function (a) {
	return {$: 'Tupled', a: a};
};
var $stil4m$elm_syntax$Elm$Syntax$TypeAnnotation$Typed = F2(
	function (a, b) {
		return {$: 'Typed', a: a, b: b};
	});
var $stil4m$elm_syntax$Elm$Syntax$TypeAnnotation$Unit = {$: 'Unit'};
var $stil4m$elm_syntax$Elm$Syntax$TypeAnnotation$GenericType = function (a) {
	return {$: 'GenericType', a: a};
};
var $stil4m$elm_syntax$Elm$Parser$TypeAnnotation$genericTypeAnnotation = $stil4m$elm_syntax$Elm$Parser$Tokens$functionNameMapWithRange(
	F2(
		function (range, _var) {
			return {
				comments: $stil4m$elm_syntax$Rope$empty,
				syntax: A2(
					$stil4m$elm_syntax$Elm$Syntax$Node$Node,
					range,
					$stil4m$elm_syntax$Elm$Syntax$TypeAnnotation$GenericType(_var))
			};
		}));
var $stil4m$elm_syntax$ParserFast$map3WithRange = F4(
	function (func, _v0, _v1, _v2) {
		var parseA = _v0.a;
		var parseB = _v1.a;
		var parseC = _v2.a;
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s0) {
				var _v3 = parseA(s0);
				if (_v3.$ === 'Bad') {
					var committed = _v3.a;
					var x = _v3.b;
					return A2($stil4m$elm_syntax$ParserFast$Bad, committed, x);
				} else {
					var a = _v3.a;
					var s1 = _v3.b;
					var _v4 = parseB(s1);
					if (_v4.$ === 'Bad') {
						var x = _v4.b;
						return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
					} else {
						var b = _v4.a;
						var s2 = _v4.b;
						var _v5 = parseC(s2);
						if (_v5.$ === 'Bad') {
							var x = _v5.b;
							return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
						} else {
							var c = _v5.a;
							var s3 = _v5.b;
							return A2(
								$stil4m$elm_syntax$ParserFast$Good,
								A4(
									func,
									{
										end: {column: s3.col, row: s3.row},
										start: {column: s0.col, row: s0.row}
									},
									a,
									b,
									c),
								s3);
						}
					}
				}
			});
	});
var $stil4m$elm_syntax$ParserFast$map6WithRange = F7(
	function (func, _v0, _v1, _v2, _v3, _v4, _v5) {
		var parseA = _v0.a;
		var parseB = _v1.a;
		var parseC = _v2.a;
		var parseD = _v3.a;
		var parseE = _v4.a;
		var parseF = _v5.a;
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s0) {
				var _v6 = parseA(s0);
				if (_v6.$ === 'Bad') {
					var committed = _v6.a;
					var x = _v6.b;
					return A2($stil4m$elm_syntax$ParserFast$Bad, committed, x);
				} else {
					var a = _v6.a;
					var s1 = _v6.b;
					var _v7 = parseB(s1);
					if (_v7.$ === 'Bad') {
						var x = _v7.b;
						return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
					} else {
						var b = _v7.a;
						var s2 = _v7.b;
						var _v8 = parseC(s2);
						if (_v8.$ === 'Bad') {
							var x = _v8.b;
							return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
						} else {
							var c = _v8.a;
							var s3 = _v8.b;
							var _v9 = parseD(s3);
							if (_v9.$ === 'Bad') {
								var x = _v9.b;
								return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
							} else {
								var d = _v9.a;
								var s4 = _v9.b;
								var _v10 = parseE(s4);
								if (_v10.$ === 'Bad') {
									var x = _v10.b;
									return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
								} else {
									var e = _v10.a;
									var s5 = _v10.b;
									var _v11 = parseF(s5);
									if (_v11.$ === 'Bad') {
										var x = _v11.b;
										return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
									} else {
										var f = _v11.a;
										var s6 = _v11.b;
										return A2(
											$stil4m$elm_syntax$ParserFast$Good,
											A7(
												func,
												{
													end: {column: s6.col, row: s6.row},
													start: {column: s0.col, row: s0.row}
												},
												a,
												b,
												c,
												d,
												e,
												f),
											s6);
									}
								}
							}
						}
					}
				}
			});
	});
function $stil4m$elm_syntax$Elm$Parser$TypeAnnotation$cyclic$maybeDotTypeNamesTuple() {
	return A4(
		$stil4m$elm_syntax$ParserFast$map2OrSucceed,
		F2(
			function (firstName, afterFirstName) {
				if (afterFirstName.$ === 'Nothing') {
					return $elm$core$Maybe$Just(
						_Utils_Tuple2(_List_Nil, firstName));
				} else {
					var _v1 = afterFirstName.a;
					var qualificationAfter = _v1.a;
					var unqualified = _v1.b;
					return $elm$core$Maybe$Just(
						_Utils_Tuple2(
							A2($elm$core$List$cons, firstName, qualificationAfter),
							unqualified));
				}
			}),
		A2($stil4m$elm_syntax$ParserFast$symbolFollowedBy, '.', $stil4m$elm_syntax$Elm$Parser$Tokens$typeName),
		$stil4m$elm_syntax$ParserFast$lazy(
			function (_v2) {
				return $stil4m$elm_syntax$Elm$Parser$TypeAnnotation$cyclic$maybeDotTypeNamesTuple();
			}),
		$elm$core$Maybe$Nothing);
}
try {
	var $stil4m$elm_syntax$Elm$Parser$TypeAnnotation$maybeDotTypeNamesTuple = $stil4m$elm_syntax$Elm$Parser$TypeAnnotation$cyclic$maybeDotTypeNamesTuple();
	$stil4m$elm_syntax$Elm$Parser$TypeAnnotation$cyclic$maybeDotTypeNamesTuple = function () {
		return $stil4m$elm_syntax$Elm$Parser$TypeAnnotation$maybeDotTypeNamesTuple;
	};
} catch ($) {
	throw 'Some top-level definitions from `Elm.Parser.TypeAnnotation` are causing infinite recursion:\n\n  ┌─────┐\n  │    maybeDotTypeNamesTuple\n  └─────┘\n\nThese errors are very tricky, so read https://elm-lang.org/0.19.1/bad-recursion to learn how to fix it!';}
var $stil4m$elm_syntax$ParserFast$oneOf4 = F4(
	function (_v0, _v1, _v2, _v3) {
		var attemptFirst = _v0.a;
		var attemptSecond = _v1.a;
		var attemptThird = _v2.a;
		var attemptFourth = _v3.a;
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s) {
				var _v4 = attemptFirst(s);
				if (_v4.$ === 'Good') {
					var firstGood = _v4;
					return firstGood;
				} else {
					var firstBad = _v4;
					var firstCommitted = firstBad.a;
					var firstX = firstBad.b;
					if (firstCommitted) {
						return firstBad;
					} else {
						var _v5 = attemptSecond(s);
						if (_v5.$ === 'Good') {
							var secondGood = _v5;
							return secondGood;
						} else {
							var secondBad = _v5;
							var secondCommitted = secondBad.a;
							var secondX = secondBad.b;
							if (secondCommitted) {
								return secondBad;
							} else {
								var _v6 = attemptThird(s);
								if (_v6.$ === 'Good') {
									var thirdGood = _v6;
									return thirdGood;
								} else {
									var thirdBad = _v6;
									var thirdCommitted = thirdBad.a;
									var thirdX = thirdBad.b;
									if (thirdCommitted) {
										return thirdBad;
									} else {
										var _v7 = attemptFourth(s);
										if (_v7.$ === 'Good') {
											var fourthGood = _v7;
											return fourthGood;
										} else {
											var fourthBad = _v7;
											var fourthCommitted = fourthBad.a;
											var fourthX = fourthBad.b;
											return fourthCommitted ? fourthBad : A2(
												$stil4m$elm_syntax$ParserFast$Bad,
												false,
												A3(
													$stil4m$elm_syntax$ParserFast$ExpectingOneOf,
													firstX,
													secondX,
													_List_fromArray(
														[thirdX, fourthX])));
										}
									}
								}
							}
						}
					}
				}
			});
	});
var $stil4m$elm_syntax$Elm$Parser$TypeAnnotation$typeAnnotationRecordEmpty = $stil4m$elm_syntax$Elm$Syntax$TypeAnnotation$Record(_List_Nil);
var $stil4m$elm_syntax$Elm$Parser$TypeAnnotation$typedTypeAnnotationWithoutArguments = A3(
	$stil4m$elm_syntax$ParserFast$map2WithRange,
	F3(
		function (range, startName, afterStartName) {
			var name = function () {
				if (afterStartName.$ === 'Nothing') {
					return _Utils_Tuple2(_List_Nil, startName);
				} else {
					var _v1 = afterStartName.a;
					var qualificationAfterStartName = _v1.a;
					var unqualified = _v1.b;
					return _Utils_Tuple2(
						A2($elm$core$List$cons, startName, qualificationAfterStartName),
						unqualified);
				}
			}();
			return {
				comments: $stil4m$elm_syntax$Rope$empty,
				syntax: A2(
					$stil4m$elm_syntax$Elm$Syntax$Node$Node,
					range,
					A2(
						$stil4m$elm_syntax$Elm$Syntax$TypeAnnotation$Typed,
						A2($stil4m$elm_syntax$Elm$Syntax$Node$Node, range, name),
						_List_Nil))
			};
		}),
	$stil4m$elm_syntax$Elm$Parser$Tokens$typeName,
	$stil4m$elm_syntax$Elm$Parser$TypeAnnotation$maybeDotTypeNamesTuple);
function $stil4m$elm_syntax$Elm$Parser$TypeAnnotation$cyclic$typeAnnotationNoFnIncludingTypedWithArguments() {
	return A4(
		$stil4m$elm_syntax$ParserFast$oneOf4,
		$stil4m$elm_syntax$Elm$Parser$TypeAnnotation$cyclic$parensTypeAnnotation(),
		$stil4m$elm_syntax$Elm$Parser$TypeAnnotation$cyclic$typedTypeAnnotationWithArgumentsOptimisticLayout(),
		$stil4m$elm_syntax$Elm$Parser$TypeAnnotation$genericTypeAnnotation,
		$stil4m$elm_syntax$Elm$Parser$TypeAnnotation$cyclic$recordTypeAnnotation());
}
function $stil4m$elm_syntax$Elm$Parser$TypeAnnotation$cyclic$typedTypeAnnotationWithArgumentsOptimisticLayout() {
	return A4(
		$stil4m$elm_syntax$ParserFast$map3,
		F3(
			function (nameNode, commentsAfterName, argsReverse) {
				var nameRange = nameNode.a;
				var range = function () {
					var _v8 = argsReverse.syntax;
					if (!_v8.b) {
						return nameRange;
					} else {
						var _v9 = _v8.a;
						var lastArgRange = _v9.a;
						return {end: lastArgRange.end, start: nameRange.start};
					}
				}();
				return {
					comments: A2($stil4m$elm_syntax$Rope$prependTo, argsReverse.comments, commentsAfterName),
					syntax: A2(
						$stil4m$elm_syntax$Elm$Syntax$Node$Node,
						range,
						A2(
							$stil4m$elm_syntax$Elm$Syntax$TypeAnnotation$Typed,
							nameNode,
							$elm$core$List$reverse(argsReverse.syntax)))
				};
			}),
		A3(
			$stil4m$elm_syntax$ParserFast$map2WithRange,
			F3(
				function (range, startName, afterStartName) {
					var name = function () {
						if (afterStartName.$ === 'Nothing') {
							return _Utils_Tuple2(_List_Nil, startName);
						} else {
							var _v11 = afterStartName.a;
							var qualificationAfterStartName = _v11.a;
							var unqualified = _v11.b;
							return _Utils_Tuple2(
								A2($elm$core$List$cons, startName, qualificationAfterStartName),
								unqualified);
						}
					}();
					return A2($stil4m$elm_syntax$Elm$Syntax$Node$Node, range, name);
				}),
			$stil4m$elm_syntax$Elm$Parser$Tokens$typeName,
			$stil4m$elm_syntax$Elm$Parser$TypeAnnotation$maybeDotTypeNamesTuple),
		$stil4m$elm_syntax$Elm$Parser$Layout$optimisticLayout,
		$stil4m$elm_syntax$ParserWithComments$manyWithoutReverse(
			$stil4m$elm_syntax$Elm$Parser$Layout$positivelyIndentedFollowedBy(
				A3(
					$stil4m$elm_syntax$ParserFast$map2,
					F2(
						function (typeAnnotationResult, commentsAfter) {
							return {
								comments: A2($stil4m$elm_syntax$Rope$prependTo, commentsAfter, typeAnnotationResult.comments),
								syntax: typeAnnotationResult.syntax
							};
						}),
					$stil4m$elm_syntax$Elm$Parser$TypeAnnotation$cyclic$typeAnnotationNoFnExcludingTypedWithArguments(),
					$stil4m$elm_syntax$Elm$Parser$Layout$optimisticLayout))));
}
function $stil4m$elm_syntax$Elm$Parser$TypeAnnotation$cyclic$typeAnnotationNoFnExcludingTypedWithArguments() {
	return A4(
		$stil4m$elm_syntax$ParserFast$oneOf4,
		$stil4m$elm_syntax$Elm$Parser$TypeAnnotation$cyclic$parensTypeAnnotation(),
		$stil4m$elm_syntax$Elm$Parser$TypeAnnotation$typedTypeAnnotationWithoutArguments,
		$stil4m$elm_syntax$Elm$Parser$TypeAnnotation$genericTypeAnnotation,
		$stil4m$elm_syntax$Elm$Parser$TypeAnnotation$cyclic$recordTypeAnnotation());
}
function $stil4m$elm_syntax$Elm$Parser$TypeAnnotation$cyclic$parensTypeAnnotation() {
	return A2(
		$stil4m$elm_syntax$ParserFast$symbolFollowedBy,
		'(',
		A2(
			$stil4m$elm_syntax$ParserFast$oneOf2,
			A2(
				$stil4m$elm_syntax$ParserFast$symbolWithEndLocation,
				')',
				function (end) {
					return {
						comments: $stil4m$elm_syntax$Rope$empty,
						syntax: A2(
							$stil4m$elm_syntax$Elm$Syntax$Node$Node,
							{
								end: end,
								start: {column: end.column - 2, row: end.row}
							},
							$stil4m$elm_syntax$Elm$Syntax$TypeAnnotation$Unit)
					};
				}),
			A5(
				$stil4m$elm_syntax$ParserFast$map4WithRange,
				F5(
					function (rangeAfterOpeningParens, commentsBeforeFirstPart, firstPart, commentsAfterFirstPart, lastToSecondPart) {
						return {
							comments: A2(
								$stil4m$elm_syntax$Rope$prependTo,
								lastToSecondPart.comments,
								A2(
									$stil4m$elm_syntax$Rope$prependTo,
									commentsAfterFirstPart,
									A2($stil4m$elm_syntax$Rope$prependTo, firstPart.comments, commentsBeforeFirstPart))),
							syntax: A2(
								$stil4m$elm_syntax$Elm$Syntax$Node$Node,
								{
									end: rangeAfterOpeningParens.end,
									start: {column: rangeAfterOpeningParens.start.column - 1, row: rangeAfterOpeningParens.start.row}
								},
								function () {
									var _v5 = lastToSecondPart.syntax;
									if (_v5.$ === 'Nothing') {
										var _v6 = firstPart.syntax;
										var firstPartType = _v6.b;
										return firstPartType;
									} else {
										var firstAndMaybeThirdPart = _v5.a;
										var _v7 = firstAndMaybeThirdPart.maybeThirdPart;
										if (_v7.$ === 'Nothing') {
											return $stil4m$elm_syntax$Elm$Syntax$TypeAnnotation$Tupled(
												_List_fromArray(
													[firstPart.syntax, firstAndMaybeThirdPart.secondPart]));
										} else {
											var thirdPart = _v7.a;
											return $stil4m$elm_syntax$Elm$Syntax$TypeAnnotation$Tupled(
												_List_fromArray(
													[firstPart.syntax, firstAndMaybeThirdPart.secondPart, thirdPart]));
										}
									}
								}())
						};
					}),
				$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
				$stil4m$elm_syntax$Elm$Parser$TypeAnnotation$cyclic$typeAnnotation(),
				$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
				A2(
					$stil4m$elm_syntax$ParserFast$oneOf2,
					A2(
						$stil4m$elm_syntax$ParserFast$symbol,
						')',
						{comments: $stil4m$elm_syntax$Rope$empty, syntax: $elm$core$Maybe$Nothing}),
					A2(
						$stil4m$elm_syntax$ParserFast$symbolFollowedBy,
						',',
						A5(
							$stil4m$elm_syntax$ParserFast$map4,
							F4(
								function (commentsBefore, secondPartResult, commentsAfter, maybeThirdPartResult) {
									return {
										comments: A2(
											$stil4m$elm_syntax$Rope$prependTo,
											commentsAfter,
											A2($stil4m$elm_syntax$Rope$prependTo, secondPartResult.comments, commentsBefore)),
										syntax: $elm$core$Maybe$Just(
											{maybeThirdPart: maybeThirdPartResult.syntax, secondPart: secondPartResult.syntax})
									};
								}),
							$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
							$stil4m$elm_syntax$Elm$Parser$TypeAnnotation$cyclic$typeAnnotation(),
							$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
							A2(
								$stil4m$elm_syntax$ParserFast$oneOf2,
								A2(
									$stil4m$elm_syntax$ParserFast$symbol,
									')',
									{comments: $stil4m$elm_syntax$Rope$empty, syntax: $elm$core$Maybe$Nothing}),
								A2(
									$stil4m$elm_syntax$ParserFast$symbolFollowedBy,
									',',
									A2(
										$stil4m$elm_syntax$ParserFast$followedBySymbol,
										')',
										A4(
											$stil4m$elm_syntax$ParserFast$map3,
											F3(
												function (commentsBefore, thirdPartResult, commentsAfter) {
													return {
														comments: A2(
															$stil4m$elm_syntax$Rope$prependTo,
															commentsAfter,
															A2($stil4m$elm_syntax$Rope$prependTo, thirdPartResult.comments, commentsBefore)),
														syntax: $elm$core$Maybe$Just(thirdPartResult.syntax)
													};
												}),
											$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
											$stil4m$elm_syntax$Elm$Parser$TypeAnnotation$cyclic$typeAnnotation(),
											$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout))))))))));
}
function $stil4m$elm_syntax$Elm$Parser$TypeAnnotation$cyclic$recordTypeAnnotation() {
	return A3(
		$stil4m$elm_syntax$ParserFast$map2WithRange,
		F3(
			function (range, commentsBefore, afterCurly) {
				return {
					comments: A2($stil4m$elm_syntax$Rope$prependTo, afterCurly.comments, commentsBefore),
					syntax: function () {
						var _v3 = afterCurly.syntax;
						if (_v3.$ === 'Nothing') {
							return A2($stil4m$elm_syntax$Elm$Syntax$Node$Node, range, $stil4m$elm_syntax$Elm$Parser$TypeAnnotation$typeAnnotationRecordEmpty);
						} else {
							var afterCurlyResult = _v3.a;
							return A2($stil4m$elm_syntax$Elm$Syntax$Node$Node, range, afterCurlyResult);
						}
					}()
				};
			}),
		A2($stil4m$elm_syntax$ParserFast$symbolFollowedBy, '{', $stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout),
		A2(
			$stil4m$elm_syntax$ParserFast$oneOf2,
			A2(
				$stil4m$elm_syntax$ParserFast$followedBySymbol,
				'}',
				A4(
					$stil4m$elm_syntax$ParserFast$map3,
					F3(
						function (firstNameNode, commentsAfterFirstName, afterFirstName) {
							return {
								comments: A2($stil4m$elm_syntax$Rope$prependTo, afterFirstName.comments, commentsAfterFirstName),
								syntax: $elm$core$Maybe$Just(
									function () {
										var _v4 = afterFirstName.syntax;
										if (_v4.$ === 'RecordExtensionExpressionAfterName') {
											var fields = _v4.a;
											return A2($stil4m$elm_syntax$Elm$Syntax$TypeAnnotation$GenericRecord, firstNameNode, fields);
										} else {
											var fieldsAfterName = _v4.a;
											return $stil4m$elm_syntax$Elm$Syntax$TypeAnnotation$Record(
												A2(
													$elm$core$List$cons,
													A3($stil4m$elm_syntax$Elm$Syntax$Node$combine, $elm$core$Tuple$pair, firstNameNode, fieldsAfterName.firstFieldValue),
													fieldsAfterName.tailFields));
										}
									}())
							};
						}),
					$stil4m$elm_syntax$Elm$Parser$Tokens$functionNameNode,
					$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
					A2(
						$stil4m$elm_syntax$ParserFast$oneOf2,
						A2(
							$stil4m$elm_syntax$ParserFast$symbolFollowedBy,
							'|',
							A4(
								$stil4m$elm_syntax$ParserFast$map3WithRange,
								F4(
									function (range, commentsBefore, head, tail) {
										return {
											comments: A2(
												$stil4m$elm_syntax$Rope$prependTo,
												tail.comments,
												A2($stil4m$elm_syntax$Rope$prependTo, head.comments, commentsBefore)),
											syntax: $stil4m$elm_syntax$Elm$Parser$TypeAnnotation$RecordExtensionExpressionAfterName(
												A2(
													$stil4m$elm_syntax$Elm$Syntax$Node$Node,
													range,
													A2($elm$core$List$cons, head.syntax, tail.syntax)))
										};
									}),
								$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
								$stil4m$elm_syntax$Elm$Parser$TypeAnnotation$cyclic$recordFieldDefinition(),
								$stil4m$elm_syntax$ParserWithComments$many(
									A2(
										$stil4m$elm_syntax$ParserFast$symbolFollowedBy,
										',',
										A3(
											$stil4m$elm_syntax$ParserFast$map2,
											F2(
												function (commentsBefore, field) {
													return {
														comments: A2($stil4m$elm_syntax$Rope$prependTo, field.comments, commentsBefore),
														syntax: field.syntax
													};
												}),
											$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
											$stil4m$elm_syntax$Elm$Parser$TypeAnnotation$cyclic$recordFieldDefinition()))))),
						A2(
							$stil4m$elm_syntax$ParserFast$symbolFollowedBy,
							':',
							A5(
								$stil4m$elm_syntax$ParserFast$map4,
								F4(
									function (commentsBeforeFirstFieldValue, firstFieldValue, commentsAfterFirstFieldValue, tailFields) {
										return {
											comments: A2(
												$stil4m$elm_syntax$Rope$prependTo,
												tailFields.comments,
												A2(
													$stil4m$elm_syntax$Rope$prependTo,
													commentsAfterFirstFieldValue,
													A2($stil4m$elm_syntax$Rope$prependTo, firstFieldValue.comments, commentsBeforeFirstFieldValue))),
											syntax: $stil4m$elm_syntax$Elm$Parser$TypeAnnotation$FieldsAfterName(
												{firstFieldValue: firstFieldValue.syntax, tailFields: tailFields.syntax})
										};
									}),
								$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
								$stil4m$elm_syntax$Elm$Parser$TypeAnnotation$cyclic$typeAnnotation(),
								$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
								A2(
									$stil4m$elm_syntax$ParserFast$orSucceed,
									A2(
										$stil4m$elm_syntax$ParserFast$symbolFollowedBy,
										',',
										$stil4m$elm_syntax$Elm$Parser$TypeAnnotation$cyclic$recordFieldsTypeAnnotation()),
									{comments: $stil4m$elm_syntax$Rope$empty, syntax: _List_Nil})))))),
			A2(
				$stil4m$elm_syntax$ParserFast$symbol,
				'}',
				{comments: $stil4m$elm_syntax$Rope$empty, syntax: $elm$core$Maybe$Nothing})));
}
function $stil4m$elm_syntax$Elm$Parser$TypeAnnotation$cyclic$recordFieldsTypeAnnotation() {
	return A4(
		$stil4m$elm_syntax$ParserFast$map3,
		F3(
			function (commentsBefore, head, tail) {
				return {
					comments: A2(
						$stil4m$elm_syntax$Rope$prependTo,
						tail.comments,
						A2($stil4m$elm_syntax$Rope$prependTo, head.comments, commentsBefore)),
					syntax: A2($elm$core$List$cons, head.syntax, tail.syntax)
				};
			}),
		$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
		$stil4m$elm_syntax$Elm$Parser$TypeAnnotation$cyclic$recordFieldDefinition(),
		$stil4m$elm_syntax$ParserWithComments$many(
			A2(
				$stil4m$elm_syntax$ParserFast$symbolFollowedBy,
				',',
				A3(
					$stil4m$elm_syntax$ParserFast$map2,
					F2(
						function (commentsBefore, field) {
							return {
								comments: A2($stil4m$elm_syntax$Rope$prependTo, field.comments, commentsBefore),
								syntax: field.syntax
							};
						}),
					$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
					$stil4m$elm_syntax$Elm$Parser$TypeAnnotation$cyclic$recordFieldDefinition()))));
}
function $stil4m$elm_syntax$Elm$Parser$TypeAnnotation$cyclic$recordFieldDefinition() {
	return A7(
		$stil4m$elm_syntax$ParserFast$map6WithRange,
		F7(
			function (range, commentsBeforeFunctionName, name, commentsAfterFunctionName, commentsAfterColon, value, commentsAfterValue) {
				return {
					comments: A2(
						$stil4m$elm_syntax$Rope$prependTo,
						commentsAfterValue,
						A2(
							$stil4m$elm_syntax$Rope$prependTo,
							value.comments,
							A2(
								$stil4m$elm_syntax$Rope$prependTo,
								commentsAfterColon,
								A2($stil4m$elm_syntax$Rope$prependTo, commentsAfterFunctionName, commentsBeforeFunctionName)))),
					syntax: A2(
						$stil4m$elm_syntax$Elm$Syntax$Node$Node,
						range,
						_Utils_Tuple2(name, value.syntax))
				};
			}),
		$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
		$stil4m$elm_syntax$Elm$Parser$Tokens$functionNameNode,
		$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
		A2($stil4m$elm_syntax$ParserFast$symbolFollowedBy, ':', $stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout),
		$stil4m$elm_syntax$Elm$Parser$TypeAnnotation$cyclic$typeAnnotation(),
		$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout);
}
function $stil4m$elm_syntax$Elm$Parser$TypeAnnotation$cyclic$typeAnnotation() {
	return A4(
		$stil4m$elm_syntax$ParserFast$map3,
		F3(
			function (inType, commentsAfterIn, maybeOut) {
				return {
					comments: A2(
						$stil4m$elm_syntax$Rope$prependTo,
						maybeOut.comments,
						A2($stil4m$elm_syntax$Rope$prependTo, commentsAfterIn, inType.comments)),
					syntax: function () {
						var _v0 = maybeOut.syntax;
						if (_v0.$ === 'Nothing') {
							return inType.syntax;
						} else {
							var out = _v0.a;
							return A3($stil4m$elm_syntax$Elm$Syntax$Node$combine, $stil4m$elm_syntax$Elm$Syntax$TypeAnnotation$FunctionTypeAnnotation, inType.syntax, out);
						}
					}()
				};
			}),
		$stil4m$elm_syntax$ParserFast$lazy(
			function (_v1) {
				return $stil4m$elm_syntax$Elm$Parser$TypeAnnotation$cyclic$typeAnnotationNoFnIncludingTypedWithArguments();
			}),
		$stil4m$elm_syntax$Elm$Parser$Layout$optimisticLayout,
		A4(
			$stil4m$elm_syntax$ParserFast$map2OrSucceed,
			F2(
				function (commentsAfterArrow, typeAnnotationResult) {
					return {
						comments: A2($stil4m$elm_syntax$Rope$prependTo, typeAnnotationResult.comments, commentsAfterArrow),
						syntax: $elm$core$Maybe$Just(typeAnnotationResult.syntax)
					};
				}),
			A2(
				$stil4m$elm_syntax$ParserFast$symbolFollowedBy,
				'->',
				A2($stil4m$elm_syntax$Elm$Parser$Layout$positivelyIndentedPlusFollowedBy, 2, $stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout)),
			$stil4m$elm_syntax$ParserFast$lazy(
				function (_v2) {
					return $stil4m$elm_syntax$Elm$Parser$TypeAnnotation$cyclic$typeAnnotation();
				}),
			{comments: $stil4m$elm_syntax$Rope$empty, syntax: $elm$core$Maybe$Nothing}));
}
try {
	var $stil4m$elm_syntax$Elm$Parser$TypeAnnotation$typeAnnotationNoFnIncludingTypedWithArguments = $stil4m$elm_syntax$Elm$Parser$TypeAnnotation$cyclic$typeAnnotationNoFnIncludingTypedWithArguments();
	$stil4m$elm_syntax$Elm$Parser$TypeAnnotation$cyclic$typeAnnotationNoFnIncludingTypedWithArguments = function () {
		return $stil4m$elm_syntax$Elm$Parser$TypeAnnotation$typeAnnotationNoFnIncludingTypedWithArguments;
	};
	var $stil4m$elm_syntax$Elm$Parser$TypeAnnotation$typedTypeAnnotationWithArgumentsOptimisticLayout = $stil4m$elm_syntax$Elm$Parser$TypeAnnotation$cyclic$typedTypeAnnotationWithArgumentsOptimisticLayout();
	$stil4m$elm_syntax$Elm$Parser$TypeAnnotation$cyclic$typedTypeAnnotationWithArgumentsOptimisticLayout = function () {
		return $stil4m$elm_syntax$Elm$Parser$TypeAnnotation$typedTypeAnnotationWithArgumentsOptimisticLayout;
	};
	var $stil4m$elm_syntax$Elm$Parser$TypeAnnotation$typeAnnotationNoFnExcludingTypedWithArguments = $stil4m$elm_syntax$Elm$Parser$TypeAnnotation$cyclic$typeAnnotationNoFnExcludingTypedWithArguments();
	$stil4m$elm_syntax$Elm$Parser$TypeAnnotation$cyclic$typeAnnotationNoFnExcludingTypedWithArguments = function () {
		return $stil4m$elm_syntax$Elm$Parser$TypeAnnotation$typeAnnotationNoFnExcludingTypedWithArguments;
	};
	var $stil4m$elm_syntax$Elm$Parser$TypeAnnotation$parensTypeAnnotation = $stil4m$elm_syntax$Elm$Parser$TypeAnnotation$cyclic$parensTypeAnnotation();
	$stil4m$elm_syntax$Elm$Parser$TypeAnnotation$cyclic$parensTypeAnnotation = function () {
		return $stil4m$elm_syntax$Elm$Parser$TypeAnnotation$parensTypeAnnotation;
	};
	var $stil4m$elm_syntax$Elm$Parser$TypeAnnotation$recordTypeAnnotation = $stil4m$elm_syntax$Elm$Parser$TypeAnnotation$cyclic$recordTypeAnnotation();
	$stil4m$elm_syntax$Elm$Parser$TypeAnnotation$cyclic$recordTypeAnnotation = function () {
		return $stil4m$elm_syntax$Elm$Parser$TypeAnnotation$recordTypeAnnotation;
	};
	var $stil4m$elm_syntax$Elm$Parser$TypeAnnotation$recordFieldsTypeAnnotation = $stil4m$elm_syntax$Elm$Parser$TypeAnnotation$cyclic$recordFieldsTypeAnnotation();
	$stil4m$elm_syntax$Elm$Parser$TypeAnnotation$cyclic$recordFieldsTypeAnnotation = function () {
		return $stil4m$elm_syntax$Elm$Parser$TypeAnnotation$recordFieldsTypeAnnotation;
	};
	var $stil4m$elm_syntax$Elm$Parser$TypeAnnotation$recordFieldDefinition = $stil4m$elm_syntax$Elm$Parser$TypeAnnotation$cyclic$recordFieldDefinition();
	$stil4m$elm_syntax$Elm$Parser$TypeAnnotation$cyclic$recordFieldDefinition = function () {
		return $stil4m$elm_syntax$Elm$Parser$TypeAnnotation$recordFieldDefinition;
	};
	var $stil4m$elm_syntax$Elm$Parser$TypeAnnotation$typeAnnotation = $stil4m$elm_syntax$Elm$Parser$TypeAnnotation$cyclic$typeAnnotation();
	$stil4m$elm_syntax$Elm$Parser$TypeAnnotation$cyclic$typeAnnotation = function () {
		return $stil4m$elm_syntax$Elm$Parser$TypeAnnotation$typeAnnotation;
	};
} catch ($) {
	throw 'Some top-level definitions from `Elm.Parser.TypeAnnotation` are causing infinite recursion:\n\n  ┌─────┐\n  │    typeAnnotationNoFnIncludingTypedWithArguments\n  │     ↓\n  │    typedTypeAnnotationWithArgumentsOptimisticLayout\n  │     ↓\n  │    typeAnnotationNoFnExcludingTypedWithArguments\n  │     ↓\n  │    parensTypeAnnotation\n  │     ↓\n  │    recordTypeAnnotation\n  │     ↓\n  │    recordFieldsTypeAnnotation\n  │     ↓\n  │    recordFieldDefinition\n  │     ↓\n  │    typeAnnotation\n  └─────┘\n\nThese errors are very tricky, so read https://elm-lang.org/0.19.1/bad-recursion to learn how to fix it!';}
var $stil4m$elm_syntax$ParserFast$validate = F3(
	function (isOkay, problemOnNotOkay, _v0) {
		var parseA = _v0.a;
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s0) {
				var _v1 = parseA(s0);
				if (_v1.$ === 'Bad') {
					var committed = _v1.a;
					var x = _v1.b;
					return A2($stil4m$elm_syntax$ParserFast$Bad, committed, x);
				} else {
					var good = _v1;
					var a = good.a;
					var s1 = good.b;
					return isOkay(a) ? good : A2(
						$stil4m$elm_syntax$ParserFast$Bad,
						true,
						A3($stil4m$elm_syntax$ParserFast$ExpectingCustom, s1.row, s1.col, problemOnNotOkay));
				}
			});
	});
var $stil4m$elm_syntax$ParserFast$whileWithoutLinebreakAnd2PartUtf16ToResultAndThen = F3(
	function (whileCharIsOkay, consumedStringToIntermediateOrErr, intermediateToFollowupParser) {
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s0) {
				var s1Offset = A3($stil4m$elm_syntax$ParserFast$skipWhileWithoutLinebreakAnd2PartUtf16Help, whileCharIsOkay, s0.offset, s0.src);
				var whileContent = A3($elm$core$String$slice, s0.offset, s1Offset, s0.src);
				var _v0 = consumedStringToIntermediateOrErr(whileContent);
				if (_v0.$ === 'Err') {
					var problemMessage = _v0.a;
					return A2(
						$stil4m$elm_syntax$ParserFast$Bad,
						false,
						A3($stil4m$elm_syntax$ParserFast$ExpectingCustom, s0.row, s0.col, problemMessage));
				} else {
					var intermediate = _v0.a;
					var s1Column = s0.col + (s1Offset - s0.offset);
					var _v1 = intermediateToFollowupParser(intermediate);
					var parseFollowup = _v1.a;
					return $stil4m$elm_syntax$ParserFast$pStepCommit(
						parseFollowup(
							{col: s1Column, indent: s0.indent, offset: s1Offset, row: s0.row, src: s0.src}));
				}
			});
	});
var $stil4m$elm_syntax$ParserFast$changeIndent = F2(
	function (newIndent, s) {
		return {col: s.col, indent: newIndent, offset: s.offset, row: s.row, src: s.src};
	});
var $stil4m$elm_syntax$ParserFast$withIndentSetToColumn = function (_v0) {
	var parse = _v0.a;
	return $stil4m$elm_syntax$ParserFast$Parser(
		function (s0) {
			var _v1 = parse(
				A2($stil4m$elm_syntax$ParserFast$changeIndent, s0.col, s0));
			if (_v1.$ === 'Good') {
				var a = _v1.a;
				var s1 = _v1.b;
				return A2(
					$stil4m$elm_syntax$ParserFast$Good,
					a,
					A2($stil4m$elm_syntax$ParserFast$changeIndent, s0.indent, s1));
			} else {
				var bad = _v1;
				return bad;
			}
		});
};
var $stil4m$elm_syntax$ParserFast$withIndentSetToColumnMinus = F2(
	function (columnToMoveIndentationBaseBackBy, _v0) {
		var parse = _v0.a;
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s0) {
				var _v1 = parse(
					A2($stil4m$elm_syntax$ParserFast$changeIndent, s0.col - columnToMoveIndentationBaseBackBy, s0));
				if (_v1.$ === 'Good') {
					var a = _v1.a;
					var s1 = _v1.b;
					return A2(
						$stil4m$elm_syntax$ParserFast$Good,
						a,
						A2($stil4m$elm_syntax$ParserFast$changeIndent, s0.indent, s1));
				} else {
					var bad = _v1;
					return bad;
				}
			});
	});
var $stil4m$elm_syntax$Elm$Parser$Expression$extendedSubExpressionOptimisticLayout = F2(
	function (toResult, afterCommitting) {
		return A4(
			$stil4m$elm_syntax$ParserFast$loopWhileSucceedsOntoResultFromParser,
			$stil4m$elm_syntax$Elm$Parser$Layout$positivelyIndentedFollowedBy(
				A2($stil4m$elm_syntax$Elm$Parser$Expression$infixOperatorAndThen, toResult, afterCommitting)),
			$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$subExpressionMaybeAppliedOptimisticLayout(),
			F2(
				function (extensionRightResult, leftNodeWithComments) {
					return {
						comments: A2($stil4m$elm_syntax$Rope$prependTo, extensionRightResult.comments, leftNodeWithComments.comments),
						syntax: A2($stil4m$elm_syntax$Elm$Parser$Expression$applyExtensionRight, extensionRightResult.syntax, leftNodeWithComments.syntax)
					};
				}),
			$elm$core$Basics$identity);
	});
var $stil4m$elm_syntax$Elm$Parser$Expression$infixLeft = F2(
	function (leftPrecedence, symbol) {
		return {
			extensionRight: A3(
				$stil4m$elm_syntax$ParserFast$map2,
				F2(
					function (commentsBeforeFirst, first) {
						return {
							comments: A2($stil4m$elm_syntax$Rope$prependTo, first.comments, commentsBeforeFirst),
							syntax: $stil4m$elm_syntax$Elm$Parser$Expression$ExtendRightByOperation(
								{direction: $stil4m$elm_syntax$Elm$Syntax$Infix$Left, expression: first.syntax, symbol: symbol})
						};
					}),
				$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
				A2(
					$stil4m$elm_syntax$Elm$Parser$Expression$extendedSubExpressionOptimisticLayout,
					function (info) {
						return (_Utils_cmp(info.leftPrecedence, leftPrecedence) > 0) ? $elm$core$Result$Ok(info) : $stil4m$elm_syntax$Elm$Parser$Expression$temporaryErrPrecedenceTooHigh;
					},
					function ($) {
						return $.extensionRight;
					})),
			leftPrecedence: leftPrecedence,
			symbol: symbol
		};
	});
var $stil4m$elm_syntax$Elm$Parser$Expression$infixNonAssociative = F2(
	function (leftPrecedence, symbol) {
		return {
			extensionRight: A3(
				$stil4m$elm_syntax$ParserFast$map2,
				F2(
					function (commentsBefore, right) {
						return {
							comments: A2($stil4m$elm_syntax$Rope$prependTo, right.comments, commentsBefore),
							syntax: $stil4m$elm_syntax$Elm$Parser$Expression$ExtendRightByOperation(
								{direction: $stil4m$elm_syntax$Elm$Syntax$Infix$Non, expression: right.syntax, symbol: symbol})
						};
					}),
				$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
				A2(
					$stil4m$elm_syntax$Elm$Parser$Expression$extendedSubExpressionOptimisticLayout,
					function (info) {
						return (_Utils_cmp(info.leftPrecedence, leftPrecedence) > -1) ? $elm$core$Result$Ok(info) : $stil4m$elm_syntax$Elm$Parser$Expression$temporaryErrPrecedenceTooHigh;
					},
					function (info) {
						return _Utils_eq(info.leftPrecedence, leftPrecedence) ? $stil4m$elm_syntax$Elm$Parser$Expression$problemCannotMixNonAssociativeInfixOperators : info.extensionRight;
					})),
			leftPrecedence: leftPrecedence,
			symbol: symbol
		};
	});
var $stil4m$elm_syntax$Elm$Parser$Expression$infixOperatorAndThen = F2(
	function (toResult, afterCommitting) {
		return A3(
			$stil4m$elm_syntax$ParserFast$whileWithoutLinebreakAnd2PartUtf16ToResultAndThen,
			$stil4m$elm_syntax$Elm$Parser$Tokens$isOperatorSymbolChar,
			function (operator) {
				switch (operator) {
					case '|>':
						return toResult(
							$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence1ApR());
					case '++':
						return toResult(
							$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence5append());
					case '<|':
						return toResult(
							$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence1ApL());
					case '>>':
						return toResult(
							$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence9ComposeR());
					case '==':
						return toResult(
							$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence4Eq());
					case '*':
						return toResult(
							$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence7Mul());
					case '::':
						return toResult(
							$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence5Cons());
					case '+':
						return toResult(
							$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence6Add());
					case '-':
						return toResult(
							$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence6Sub());
					case '|.':
						return toResult(
							$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence6Ignore());
					case '&&':
						return toResult(
							$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence3And());
					case '|=':
						return toResult(
							$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence5Keep());
					case '<<':
						return toResult(
							$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence9ComposeL());
					case '/=':
						return toResult(
							$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence4Neq());
					case '//':
						return toResult(
							$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence7Idiv());
					case '/':
						return toResult(
							$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence7Fdiv());
					case '</>':
						return toResult(
							$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence7Slash());
					case '||':
						return toResult(
							$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence2Or());
					case '<=':
						return toResult(
							$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence4Le());
					case '>=':
						return toResult(
							$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence4Ge());
					case '>':
						return toResult(
							$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence4Gt());
					case '<?>':
						return toResult(
							$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence8QuestionMark());
					case '<':
						return toResult(
							$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence4Lt());
					case '^':
						return toResult(
							$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence8Pow());
					default:
						return $stil4m$elm_syntax$Elm$Parser$Expression$errUnknownInfixOperator;
				}
			},
			afterCommitting);
	});
var $stil4m$elm_syntax$Elm$Parser$Expression$infixRight = F2(
	function (leftPrecedence, symbol) {
		return {
			extensionRight: A3(
				$stil4m$elm_syntax$ParserFast$map2,
				F2(
					function (commentsBeforeFirst, first) {
						return {
							comments: A2($stil4m$elm_syntax$Rope$prependTo, first.comments, commentsBeforeFirst),
							syntax: $stil4m$elm_syntax$Elm$Parser$Expression$ExtendRightByOperation(
								{direction: $stil4m$elm_syntax$Elm$Syntax$Infix$Right, expression: first.syntax, symbol: symbol})
						};
					}),
				$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
				A2(
					$stil4m$elm_syntax$Elm$Parser$Expression$extendedSubExpressionOptimisticLayout,
					function (info) {
						return (_Utils_cmp(info.leftPrecedence, leftPrecedence) > -1) ? $elm$core$Result$Ok(info) : $stil4m$elm_syntax$Elm$Parser$Expression$temporaryErrPrecedenceTooHigh;
					},
					function ($) {
						return $.extensionRight;
					})),
			leftPrecedence: leftPrecedence,
			symbol: symbol
		};
	});
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$letOrUnqualifiedReferenceExpression() {
	return A2(
		$stil4m$elm_syntax$ParserFast$oneOf2,
		$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$letExpression(),
		$stil4m$elm_syntax$Elm$Parser$Expression$unqualifiedFunctionReferenceExpressionFollowedByRecordAccess);
}
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$letExpression() {
	return A2(
		$stil4m$elm_syntax$ParserFast$keywordFollowedBy,
		'let',
		A4(
			$stil4m$elm_syntax$ParserFast$map3WithStartLocation,
			F4(
				function (start, declarations, commentsAfterIn, expressionResult) {
					var _v38 = expressionResult.syntax;
					var expressionRange = _v38.a;
					return {
						comments: A2(
							$stil4m$elm_syntax$Rope$prependTo,
							expressionResult.comments,
							A2($stil4m$elm_syntax$Rope$prependTo, commentsAfterIn, declarations.comments)),
						syntax: A2(
							$stil4m$elm_syntax$Elm$Syntax$Node$Node,
							{
								end: expressionRange.end,
								start: {column: start.column - 3, row: start.row}
							},
							$stil4m$elm_syntax$Elm$Syntax$Expression$LetExpression(
								{declarations: declarations.declarations, expression: expressionResult.syntax}))
					};
				}),
			A2(
				$stil4m$elm_syntax$ParserFast$withIndentSetToColumnMinus,
				3,
				A3(
					$stil4m$elm_syntax$ParserFast$map2,
					F2(
						function (commentsAfterLet, declarations) {
							return {
								comments: A2($stil4m$elm_syntax$Rope$prependTo, declarations.comments, commentsAfterLet),
								declarations: declarations.syntax
							};
						}),
					$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
					$stil4m$elm_syntax$ParserFast$withIndentSetToColumn(
						$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$letDeclarationsIn()))),
			A2($stil4m$elm_syntax$Elm$Parser$Layout$positivelyIndentedPlusFollowedBy, 2, $stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout),
			$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$expression()));
}
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$letDeclarationsIn() {
	return $stil4m$elm_syntax$Elm$Parser$Layout$onTopIndentationFollowedBy(
		A4(
			$stil4m$elm_syntax$ParserFast$map3,
			F3(
				function (headLetResult, commentsAfter, tailLetResult) {
					return {
						comments: A2(
							$stil4m$elm_syntax$Rope$prependTo,
							tailLetResult.comments,
							A2($stil4m$elm_syntax$Rope$prependTo, commentsAfter, headLetResult.comments)),
						syntax: A2($elm$core$List$cons, headLetResult.syntax, tailLetResult.syntax)
					};
				}),
			A2(
				$stil4m$elm_syntax$ParserFast$oneOf2,
				$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$letFunction(),
				$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$letDestructuringDeclaration()),
			$stil4m$elm_syntax$Elm$Parser$Layout$optimisticLayout,
			A2(
				$stil4m$elm_syntax$ParserWithComments$until,
				$stil4m$elm_syntax$Elm$Parser$Tokens$inToken,
				$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$blockElement())));
}
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$blockElement() {
	return $stil4m$elm_syntax$Elm$Parser$Layout$onTopIndentationFollowedBy(
		A3(
			$stil4m$elm_syntax$ParserFast$map2,
			F2(
				function (letDeclarationResult, commentsAfter) {
					return {
						comments: A2($stil4m$elm_syntax$Rope$prependTo, commentsAfter, letDeclarationResult.comments),
						syntax: letDeclarationResult.syntax
					};
				}),
			A2(
				$stil4m$elm_syntax$ParserFast$oneOf2,
				$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$letFunction(),
				$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$letDestructuringDeclaration()),
			$stil4m$elm_syntax$Elm$Parser$Layout$optimisticLayout));
}
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$caseOrUnqualifiedReferenceExpression() {
	return A2(
		$stil4m$elm_syntax$ParserFast$oneOf2,
		$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$caseExpression(),
		$stil4m$elm_syntax$Elm$Parser$Expression$unqualifiedFunctionReferenceExpressionFollowedByRecordAccess);
}
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$caseExpression() {
	return A2(
		$stil4m$elm_syntax$ParserFast$keywordFollowedBy,
		'case',
		A6(
			$stil4m$elm_syntax$ParserFast$map5WithStartLocation,
			F6(
				function (start, commentsAfterCase, casedExpressionResult, commentsBeforeOf, commentsAfterOf, casesResult) {
					var _v32 = casesResult.syntax;
					var firstCase = _v32.a;
					var lastToSecondCase = _v32.b;
					return {
						comments: A2(
							$stil4m$elm_syntax$Rope$prependTo,
							casesResult.comments,
							A2(
								$stil4m$elm_syntax$Rope$prependTo,
								commentsAfterOf,
								A2(
									$stil4m$elm_syntax$Rope$prependTo,
									commentsBeforeOf,
									A2($stil4m$elm_syntax$Rope$prependTo, casedExpressionResult.comments, commentsAfterCase)))),
						syntax: A2(
							$stil4m$elm_syntax$Elm$Syntax$Node$Node,
							{
								end: function () {
									if (lastToSecondCase.b) {
										var _v34 = lastToSecondCase.a;
										var _v35 = _v34.b;
										var lastCaseExpressionRange = _v35.a;
										return lastCaseExpressionRange.end;
									} else {
										var _v36 = firstCase;
										var _v37 = _v36.b;
										var firstCaseExpressionRange = _v37.a;
										return firstCaseExpressionRange.end;
									}
								}(),
								start: {column: start.column - 4, row: start.row}
							},
							$stil4m$elm_syntax$Elm$Syntax$Expression$CaseExpression(
								{
									cases: A2(
										$elm$core$List$cons,
										firstCase,
										$elm$core$List$reverse(lastToSecondCase)),
									expression: casedExpressionResult.syntax
								}))
					};
				}),
			$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
			$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$expression(),
			$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
			A2($stil4m$elm_syntax$ParserFast$keywordFollowedBy, 'of', $stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout),
			$stil4m$elm_syntax$ParserFast$withIndentSetToColumn(
				$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$caseStatements())));
}
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$caseStatements() {
	return A6(
		$stil4m$elm_syntax$ParserFast$map5,
		F5(
			function (firstCasePatternResult, commentsAfterFirstCasePattern, commentsAfterFirstCaseArrowRight, firstCaseExpressionResult, lastToSecondCase) {
				return {
					comments: A2(
						$stil4m$elm_syntax$Rope$prependTo,
						lastToSecondCase.comments,
						A2(
							$stil4m$elm_syntax$Rope$prependTo,
							firstCaseExpressionResult.comments,
							A2(
								$stil4m$elm_syntax$Rope$prependTo,
								commentsAfterFirstCaseArrowRight,
								A2($stil4m$elm_syntax$Rope$prependTo, commentsAfterFirstCasePattern, firstCasePatternResult.comments)))),
					syntax: _Utils_Tuple2(
						_Utils_Tuple2(firstCasePatternResult.syntax, firstCaseExpressionResult.syntax),
						lastToSecondCase.syntax)
				};
			}),
		$stil4m$elm_syntax$Elm$Parser$Patterns$pattern,
		$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
		A2($stil4m$elm_syntax$ParserFast$symbolFollowedBy, '->', $stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout),
		$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$expression(),
		$stil4m$elm_syntax$ParserWithComments$manyWithoutReverse(
			$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$caseStatement()));
}
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$caseStatement() {
	return $stil4m$elm_syntax$Elm$Parser$Layout$onTopIndentationFollowedBy(
		A5(
			$stil4m$elm_syntax$ParserFast$map4,
			F4(
				function (pattern, commentsBeforeArrowRight, commentsAfterArrowRight, expr) {
					return {
						comments: A2(
							$stil4m$elm_syntax$Rope$prependTo,
							expr.comments,
							A2(
								$stil4m$elm_syntax$Rope$prependTo,
								commentsAfterArrowRight,
								A2($stil4m$elm_syntax$Rope$prependTo, commentsBeforeArrowRight, pattern.comments))),
						syntax: _Utils_Tuple2(pattern.syntax, expr.syntax)
					};
				}),
			$stil4m$elm_syntax$Elm$Parser$Patterns$pattern,
			$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
			A2($stil4m$elm_syntax$ParserFast$symbolFollowedBy, '->', $stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout),
			$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$expression()));
}
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$tupledExpressionIfNecessaryFollowedByRecordAccess() {
	return A2(
		$stil4m$elm_syntax$ParserFast$symbolFollowedBy,
		'(',
		A3(
			$stil4m$elm_syntax$ParserFast$oneOf3,
			A2(
				$stil4m$elm_syntax$ParserFast$symbolWithEndLocation,
				')',
				function (end) {
					return {
						comments: $stil4m$elm_syntax$Rope$empty,
						syntax: A2(
							$stil4m$elm_syntax$Elm$Syntax$Node$Node,
							{
								end: end,
								start: {column: end.column - 2, row: end.row}
							},
							$stil4m$elm_syntax$Elm$Syntax$Expression$UnitExpr)
					};
				}),
			$stil4m$elm_syntax$Elm$Parser$Expression$allowedPrefixOperatorFollowedByClosingParensOneOf,
			$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$tupledExpressionInnerAfterOpeningParens()));
}
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$tupledExpressionInnerAfterOpeningParens() {
	return A5(
		$stil4m$elm_syntax$ParserFast$map4WithRange,
		F5(
			function (rangeAfterOpeningParens, commentsBeforeFirstPart, firstPart, commentsAfterFirstPart, tailParts) {
				return {
					comments: A2(
						$stil4m$elm_syntax$Rope$prependTo,
						tailParts.comments,
						A2(
							$stil4m$elm_syntax$Rope$prependTo,
							commentsAfterFirstPart,
							A2($stil4m$elm_syntax$Rope$prependTo, firstPart.comments, commentsBeforeFirstPart))),
					syntax: function () {
						var _v27 = tailParts.syntax;
						if (_v27.$ === 'TupledParenthesizedFollowedByRecordAccesses') {
							var recordAccesses = _v27.a;
							if (!recordAccesses.b) {
								return A2(
									$stil4m$elm_syntax$Elm$Syntax$Node$Node,
									{
										end: rangeAfterOpeningParens.end,
										start: {column: rangeAfterOpeningParens.start.column - 1, row: rangeAfterOpeningParens.start.row}
									},
									$stil4m$elm_syntax$Elm$Syntax$Expression$ParenthesizedExpression(firstPart.syntax));
							} else {
								var _v29 = recordAccesses.a;
								var firstRecordAccessRange = _v29.a;
								var range = {
									end: {column: firstRecordAccessRange.start.column - 1, row: firstRecordAccessRange.start.row},
									start: {column: rangeAfterOpeningParens.start.column - 1, row: rangeAfterOpeningParens.start.row}
								};
								var parenthesizedNode = A2(
									$stil4m$elm_syntax$Elm$Syntax$Node$Node,
									range,
									$stil4m$elm_syntax$Elm$Syntax$Expression$ParenthesizedExpression(firstPart.syntax));
								return A3(
									$elm$core$List$foldl,
									F2(
										function (fieldNode, leftNode) {
											var fieldRange = fieldNode.a;
											var leftRange = leftNode.a;
											return A2(
												$stil4m$elm_syntax$Elm$Syntax$Node$Node,
												{end: fieldRange.end, start: leftRange.start},
												A2($stil4m$elm_syntax$Elm$Syntax$Expression$RecordAccess, leftNode, fieldNode));
										}),
									parenthesizedNode,
									recordAccesses);
							}
						} else {
							var _v30 = _v27.a;
							var secondPart = _v30.a;
							var maybeThirdPart = _v30.b;
							return A2(
								$stil4m$elm_syntax$Elm$Syntax$Node$Node,
								{
									end: rangeAfterOpeningParens.end,
									start: {column: rangeAfterOpeningParens.start.column - 1, row: rangeAfterOpeningParens.start.row}
								},
								function () {
									if (maybeThirdPart.$ === 'Nothing') {
										return $stil4m$elm_syntax$Elm$Syntax$Expression$TupledExpression(
											_List_fromArray(
												[firstPart.syntax, secondPart]));
									} else {
										var thirdPart = maybeThirdPart.a;
										return $stil4m$elm_syntax$Elm$Syntax$Expression$TupledExpression(
											_List_fromArray(
												[firstPart.syntax, secondPart, thirdPart]));
									}
								}());
						}
					}()
				};
			}),
		$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
		$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$expression(),
		$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
		A2(
			$stil4m$elm_syntax$ParserFast$oneOf2,
			A2(
				$stil4m$elm_syntax$ParserFast$symbolFollowedBy,
				')',
				$stil4m$elm_syntax$Elm$Parser$Expression$multiRecordAccessMap(
					function (recordAccesses) {
						return {
							comments: $stil4m$elm_syntax$Rope$empty,
							syntax: $stil4m$elm_syntax$Elm$Parser$Expression$TupledParenthesizedFollowedByRecordAccesses(recordAccesses)
						};
					})),
			A2(
				$stil4m$elm_syntax$ParserFast$symbolFollowedBy,
				',',
				A5(
					$stil4m$elm_syntax$ParserFast$map4,
					F4(
						function (commentsBefore, partResult, commentsAfter, maybeThirdPart) {
							return {
								comments: A2(
									$stil4m$elm_syntax$Rope$prependTo,
									maybeThirdPart.comments,
									A2(
										$stil4m$elm_syntax$Rope$prependTo,
										commentsAfter,
										A2($stil4m$elm_syntax$Rope$prependTo, partResult.comments, commentsBefore))),
								syntax: $stil4m$elm_syntax$Elm$Parser$Expression$TupledTwoOrThree(
									_Utils_Tuple2(partResult.syntax, maybeThirdPart.syntax))
							};
						}),
					$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
					$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$expression(),
					$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
					A2(
						$stil4m$elm_syntax$ParserFast$oneOf2,
						A2(
							$stil4m$elm_syntax$ParserFast$symbol,
							')',
							{comments: $stil4m$elm_syntax$Rope$empty, syntax: $elm$core$Maybe$Nothing}),
						A2(
							$stil4m$elm_syntax$ParserFast$symbolFollowedBy,
							',',
							A2(
								$stil4m$elm_syntax$ParserFast$followedBySymbol,
								')',
								A4(
									$stil4m$elm_syntax$ParserFast$map3,
									F3(
										function (commentsBefore, partResult, commentsAfter) {
											return {
												comments: A2(
													$stil4m$elm_syntax$Rope$prependTo,
													commentsAfter,
													A2($stil4m$elm_syntax$Rope$prependTo, partResult.comments, commentsBefore)),
												syntax: $elm$core$Maybe$Just(partResult.syntax)
											};
										}),
									$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
									$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$expression(),
									$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout))))))));
}
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$recordExpressionFollowedByRecordAccess() {
	return A2(
		$stil4m$elm_syntax$ParserFast$symbolFollowedBy,
		'{',
		A3(
			$stil4m$elm_syntax$ParserFast$map2,
			F2(
				function (leftestResult, recordAccesses) {
					if (!recordAccesses.b) {
						return leftestResult;
					} else {
						return {
							comments: leftestResult.comments,
							syntax: A3(
								$elm$core$List$foldl,
								F2(
									function (fieldNode, leftNode) {
										var fieldRange = fieldNode.a;
										var leftRange = leftNode.a;
										return A2(
											$stil4m$elm_syntax$Elm$Syntax$Node$Node,
											{end: fieldRange.end, start: leftRange.start},
											A2($stil4m$elm_syntax$Elm$Syntax$Expression$RecordAccess, leftNode, fieldNode));
									}),
								leftestResult.syntax,
								recordAccesses)
						};
					}
				}),
			A3(
				$stil4m$elm_syntax$ParserFast$map2WithRange,
				F3(
					function (range, commentsBefore, afterCurly) {
						return {
							comments: A2($stil4m$elm_syntax$Rope$prependTo, afterCurly.comments, commentsBefore),
							syntax: A2(
								$stil4m$elm_syntax$Elm$Syntax$Node$Node,
								$stil4m$elm_syntax$Elm$Parser$Expression$rangeMoveStartLeftByOneColumn(range),
								afterCurly.syntax)
						};
					}),
				$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
				$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$recordContentsCurlyEnd()),
			$stil4m$elm_syntax$Elm$Parser$Expression$multiRecordAccess));
}
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$recordContentsCurlyEnd() {
	return A2(
		$stil4m$elm_syntax$ParserFast$oneOf2,
		A6(
			$stil4m$elm_syntax$ParserFast$map5,
			F5(
				function (nameNode, commentsAfterFunctionName, afterNameBeforeFields, tailFields, commentsBeforeClosingCurly) {
					return {
						comments: A2(
							$stil4m$elm_syntax$Rope$prependTo,
							commentsBeforeClosingCurly,
							A2(
								$stil4m$elm_syntax$Rope$prependTo,
								tailFields.comments,
								A2($stil4m$elm_syntax$Rope$prependTo, afterNameBeforeFields.comments, commentsAfterFunctionName))),
						syntax: function () {
							var _v25 = afterNameBeforeFields.syntax;
							if (_v25.$ === 'RecordUpdateFirstSetter') {
								var firstField = _v25.a;
								return A2(
									$stil4m$elm_syntax$Elm$Syntax$Expression$RecordUpdateExpression,
									nameNode,
									A2($elm$core$List$cons, firstField, tailFields.syntax));
							} else {
								var firstFieldValue = _v25.a;
								return $stil4m$elm_syntax$Elm$Syntax$Expression$RecordExpr(
									A2(
										$elm$core$List$cons,
										A3($stil4m$elm_syntax$Elm$Syntax$Node$combine, $elm$core$Tuple$pair, nameNode, firstFieldValue),
										tailFields.syntax));
							}
						}()
					};
				}),
			$stil4m$elm_syntax$Elm$Parser$Tokens$functionNameNode,
			$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
			A2(
				$stil4m$elm_syntax$ParserFast$oneOf2,
				A2(
					$stil4m$elm_syntax$ParserFast$symbolFollowedBy,
					'|',
					A3(
						$stil4m$elm_syntax$ParserFast$map2,
						F2(
							function (commentsBefore, setterResult) {
								return {
									comments: A2($stil4m$elm_syntax$Rope$prependTo, setterResult.comments, commentsBefore),
									syntax: $stil4m$elm_syntax$Elm$Parser$Expression$RecordUpdateFirstSetter(setterResult.syntax)
								};
							}),
						$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
						$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$recordSetterNodeWithLayout())),
				A2(
					$stil4m$elm_syntax$ParserFast$symbolFollowedBy,
					'=',
					A4(
						$stil4m$elm_syntax$ParserFast$map3,
						F3(
							function (commentsBefore, expressionResult, commentsAfter) {
								return {
									comments: A2(
										$stil4m$elm_syntax$Rope$prependTo,
										commentsAfter,
										A2($stil4m$elm_syntax$Rope$prependTo, expressionResult.comments, commentsBefore)),
									syntax: $stil4m$elm_syntax$Elm$Parser$Expression$FieldsFirstValue(expressionResult.syntax)
								};
							}),
						$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
						$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$expression(),
						$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout))),
			$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$recordFields(),
			A2($stil4m$elm_syntax$ParserFast$followedBySymbol, '}', $stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout)),
		A2(
			$stil4m$elm_syntax$ParserFast$symbol,
			'}',
			{
				comments: $stil4m$elm_syntax$Rope$empty,
				syntax: $stil4m$elm_syntax$Elm$Syntax$Expression$RecordExpr(_List_Nil)
			}));
}
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$recordFields() {
	return $stil4m$elm_syntax$ParserWithComments$many(
		A2(
			$stil4m$elm_syntax$ParserFast$symbolFollowedBy,
			',',
			A3(
				$stil4m$elm_syntax$ParserFast$map2,
				F2(
					function (commentsBefore, setterResult) {
						return {
							comments: A2($stil4m$elm_syntax$Rope$prependTo, setterResult.comments, commentsBefore),
							syntax: setterResult.syntax
						};
					}),
				$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
				$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$recordSetterNodeWithLayout())));
}
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$recordSetterNodeWithLayout() {
	return A6(
		$stil4m$elm_syntax$ParserFast$map5WithRange,
		F6(
			function (range, name, commentsAfterFunctionName, commentsAfterEquals, expressionResult, commentsAfterExpression) {
				return {
					comments: A2(
						$stil4m$elm_syntax$Rope$prependTo,
						commentsAfterExpression,
						A2(
							$stil4m$elm_syntax$Rope$prependTo,
							expressionResult.comments,
							A2($stil4m$elm_syntax$Rope$prependTo, commentsAfterEquals, commentsAfterFunctionName))),
					syntax: A2(
						$stil4m$elm_syntax$Elm$Syntax$Node$Node,
						range,
						_Utils_Tuple2(name, expressionResult.syntax))
				};
			}),
		$stil4m$elm_syntax$Elm$Parser$Tokens$functionNameNode,
		$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
		A2($stil4m$elm_syntax$ParserFast$symbolFollowedBy, '=', $stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout),
		$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$expression(),
		$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout);
}
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$letFunction() {
	return A3(
		$stil4m$elm_syntax$ParserFast$validate,
		function (result) {
			var _v18 = result.syntax;
			var letDeclaration = _v18.b;
			if (letDeclaration.$ === 'LetDestructuring') {
				return true;
			} else {
				var letFunctionDeclaration = letDeclaration.a;
				var _v20 = letFunctionDeclaration.signature;
				if (_v20.$ === 'Nothing') {
					return true;
				} else {
					var _v21 = _v20.a;
					var signature = _v21.b;
					var _v22 = signature.name;
					var signatureName = _v22.b;
					var _v23 = letFunctionDeclaration.declaration;
					var implementation = _v23.b;
					var _v24 = implementation.name;
					var implementationName = _v24.b;
					return _Utils_eq(implementationName, signatureName + '');
				}
			}
		},
		'Expected to find the same name for declaration and signature',
		A7(
			$stil4m$elm_syntax$ParserFast$map6WithStartLocation,
			F7(
				function (startNameStart, startNameNode, commentsAfterStartName, maybeSignature, _arguments, commentsAfterEqual, expressionResult) {
					var allComments = A2(
						$stil4m$elm_syntax$Rope$prependTo,
						expressionResult.comments,
						A2(
							$stil4m$elm_syntax$Rope$prependTo,
							commentsAfterEqual,
							A2(
								$stil4m$elm_syntax$Rope$prependTo,
								_arguments.comments,
								function () {
									if (maybeSignature.$ === 'Nothing') {
										return commentsAfterStartName;
									} else {
										var signature = maybeSignature.a;
										return A2($stil4m$elm_syntax$Rope$prependTo, signature.comments, commentsAfterStartName);
									}
								}())));
					if (maybeSignature.$ === 'Nothing') {
						var _v14 = expressionResult.syntax;
						var expressionRange = _v14.a;
						return {
							comments: allComments,
							syntax: A2(
								$stil4m$elm_syntax$Elm$Syntax$Node$Node,
								{end: expressionRange.end, start: startNameStart},
								$stil4m$elm_syntax$Elm$Syntax$Expression$LetFunction(
									{
										declaration: A2(
											$stil4m$elm_syntax$Elm$Syntax$Node$Node,
											{end: expressionRange.end, start: startNameStart},
											{_arguments: _arguments.syntax, expression: expressionResult.syntax, name: startNameNode}),
										documentation: $elm$core$Maybe$Nothing,
										signature: $elm$core$Maybe$Nothing
									}))
						};
					} else {
						var signature = maybeSignature.a;
						var _v15 = signature.implementationName;
						var implementationNameRange = _v15.a;
						var _v16 = expressionResult.syntax;
						var expressionRange = _v16.a;
						return {
							comments: allComments,
							syntax: A2(
								$stil4m$elm_syntax$Elm$Syntax$Node$Node,
								{end: expressionRange.end, start: startNameStart},
								$stil4m$elm_syntax$Elm$Syntax$Expression$LetFunction(
									{
										declaration: A2(
											$stil4m$elm_syntax$Elm$Syntax$Node$Node,
											{end: expressionRange.end, start: implementationNameRange.start},
											{_arguments: _arguments.syntax, expression: expressionResult.syntax, name: signature.implementationName}),
										documentation: $elm$core$Maybe$Nothing,
										signature: $elm$core$Maybe$Just(
											A3($stil4m$elm_syntax$Elm$Syntax$Node$combine, $stil4m$elm_syntax$Elm$Syntax$Signature$Signature, startNameNode, signature.typeAnnotation))
									}))
						};
					}
				}),
			$stil4m$elm_syntax$Elm$Parser$Tokens$functionNameNode,
			$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
			A6(
				$stil4m$elm_syntax$ParserFast$map4OrSucceed,
				F4(
					function (commentsBeforeTypeAnnotation, typeAnnotationResult, implementationName, afterImplementationName) {
						return $elm$core$Maybe$Just(
							{
								comments: A2(
									$stil4m$elm_syntax$Rope$prependTo,
									afterImplementationName,
									A2(
										$stil4m$elm_syntax$Rope$prependTo,
										implementationName.comments,
										A2($stil4m$elm_syntax$Rope$prependTo, typeAnnotationResult.comments, commentsBeforeTypeAnnotation))),
								implementationName: implementationName.syntax,
								typeAnnotation: typeAnnotationResult.syntax
							});
					}),
				A2($stil4m$elm_syntax$ParserFast$symbolFollowedBy, ':', $stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout),
				$stil4m$elm_syntax$Elm$Parser$TypeAnnotation$typeAnnotation,
				$stil4m$elm_syntax$Elm$Parser$Layout$layoutStrictFollowedBy($stil4m$elm_syntax$Elm$Parser$Tokens$functionNameNode),
				$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
				$elm$core$Maybe$Nothing),
			$stil4m$elm_syntax$Elm$Parser$Expression$parameterPatternsEqual,
			$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
			$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$expression()));
}
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$letDestructuringDeclaration() {
	return A5(
		$stil4m$elm_syntax$ParserFast$map4,
		F4(
			function (pattern, commentsAfterPattern, commentsAfterEquals, expressionResult) {
				var _v11 = pattern.syntax;
				var start = _v11.a.start;
				var _v12 = expressionResult.syntax;
				var end = _v12.a.end;
				return {
					comments: A2(
						$stil4m$elm_syntax$Rope$prependTo,
						expressionResult.comments,
						A2(
							$stil4m$elm_syntax$Rope$prependTo,
							commentsAfterEquals,
							A2($stil4m$elm_syntax$Rope$prependTo, commentsAfterPattern, pattern.comments))),
					syntax: A2(
						$stil4m$elm_syntax$Elm$Syntax$Node$Node,
						{end: end, start: start},
						A2($stil4m$elm_syntax$Elm$Syntax$Expression$LetDestructuring, pattern.syntax, expressionResult.syntax))
				};
			}),
		$stil4m$elm_syntax$Elm$Parser$Patterns$patternNotDirectlyComposing,
		$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
		A2($stil4m$elm_syntax$ParserFast$symbolFollowedBy, '=', $stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout),
		$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$expression());
}
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$lambdaExpression() {
	return A2(
		$stil4m$elm_syntax$ParserFast$symbolFollowedBy,
		'\\',
		A7(
			$stil4m$elm_syntax$ParserFast$map6WithStartLocation,
			F7(
				function (start, commentsAfterBackslash, firstArg, commentsAfterFirstArg, secondUpArgs, commentsAfterArrow, expressionResult) {
					var _v10 = expressionResult.syntax;
					var expressionRange = _v10.a;
					return {
						comments: A2(
							$stil4m$elm_syntax$Rope$prependTo,
							expressionResult.comments,
							A2(
								$stil4m$elm_syntax$Rope$prependTo,
								commentsAfterArrow,
								A2(
									$stil4m$elm_syntax$Rope$prependTo,
									secondUpArgs.comments,
									A2(
										$stil4m$elm_syntax$Rope$prependTo,
										commentsAfterFirstArg,
										A2($stil4m$elm_syntax$Rope$prependTo, firstArg.comments, commentsAfterBackslash))))),
						syntax: A2(
							$stil4m$elm_syntax$Elm$Syntax$Node$Node,
							{
								end: expressionRange.end,
								start: {column: start.column - 1, row: start.row}
							},
							$stil4m$elm_syntax$Elm$Syntax$Expression$LambdaExpression(
								{
									args: A2($elm$core$List$cons, firstArg.syntax, secondUpArgs.syntax),
									expression: expressionResult.syntax
								}))
					};
				}),
			$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
			$stil4m$elm_syntax$Elm$Parser$Patterns$patternNotDirectlyComposing,
			$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
			A2(
				$stil4m$elm_syntax$ParserWithComments$until,
				A2($stil4m$elm_syntax$ParserFast$symbol, '->', _Utils_Tuple0),
				A3(
					$stil4m$elm_syntax$ParserFast$map2,
					F2(
						function (patternResult, commentsAfter) {
							return {
								comments: A2($stil4m$elm_syntax$Rope$prependTo, commentsAfter, patternResult.comments),
								syntax: patternResult.syntax
							};
						}),
					$stil4m$elm_syntax$Elm$Parser$Patterns$patternNotDirectlyComposing,
					$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout)),
			$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
			$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$expression()));
}
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$ifOrUnqualifiedReferenceExpression() {
	return A2(
		$stil4m$elm_syntax$ParserFast$oneOf2,
		$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$ifBlockExpression(),
		$stil4m$elm_syntax$Elm$Parser$Expression$unqualifiedFunctionReferenceExpressionFollowedByRecordAccess);
}
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$ifBlockExpression() {
	return A2(
		$stil4m$elm_syntax$ParserFast$keywordFollowedBy,
		'if',
		A9(
			$stil4m$elm_syntax$ParserFast$map8WithStartLocation,
			F9(
				function (start, commentsAfterIf, condition, commentsBeforeThen, commentsAfterThen, ifTrue, commentsBeforeElse, commentsAfterElse, ifFalse) {
					var _v9 = ifFalse.syntax;
					var ifFalseRange = _v9.a;
					return {
						comments: A2(
							$stil4m$elm_syntax$Rope$prependTo,
							ifFalse.comments,
							A2(
								$stil4m$elm_syntax$Rope$prependTo,
								commentsAfterElse,
								A2(
									$stil4m$elm_syntax$Rope$prependTo,
									commentsBeforeElse,
									A2(
										$stil4m$elm_syntax$Rope$prependTo,
										ifTrue.comments,
										A2(
											$stil4m$elm_syntax$Rope$prependTo,
											commentsAfterThen,
											A2(
												$stil4m$elm_syntax$Rope$prependTo,
												commentsBeforeThen,
												A2($stil4m$elm_syntax$Rope$prependTo, condition.comments, commentsAfterIf))))))),
						syntax: A2(
							$stil4m$elm_syntax$Elm$Syntax$Node$Node,
							{
								end: ifFalseRange.end,
								start: {column: start.column - 2, row: start.row}
							},
							A3($stil4m$elm_syntax$Elm$Syntax$Expression$IfBlock, condition.syntax, ifTrue.syntax, ifFalse.syntax))
					};
				}),
			$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
			$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$expression(),
			$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
			A2($stil4m$elm_syntax$ParserFast$keywordFollowedBy, 'then', $stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout),
			$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$expression(),
			$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
			A2($stil4m$elm_syntax$ParserFast$keywordFollowedBy, 'else', $stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout),
			$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$expression()));
}
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$listOrGlslExpression() {
	return A2(
		$stil4m$elm_syntax$ParserFast$symbolFollowedBy,
		'[',
		$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$expressionAfterOpeningSquareBracket());
}
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$expressionAfterOpeningSquareBracket() {
	return A2(
		$stil4m$elm_syntax$ParserFast$oneOf2,
		$stil4m$elm_syntax$Elm$Parser$Expression$glslExpressionAfterOpeningSquareBracket,
		A3(
			$stil4m$elm_syntax$ParserFast$map2WithRange,
			F3(
				function (range, commentsBefore, elements) {
					return {
						comments: A2($stil4m$elm_syntax$Rope$prependTo, elements.comments, commentsBefore),
						syntax: A2(
							$stil4m$elm_syntax$Elm$Syntax$Node$Node,
							{
								end: range.end,
								start: {column: range.start.column - 1, row: range.start.row}
							},
							elements.syntax)
					};
				}),
			$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
			A2(
				$stil4m$elm_syntax$ParserFast$oneOf2,
				A2(
					$stil4m$elm_syntax$ParserFast$symbol,
					']',
					{
						comments: $stil4m$elm_syntax$Rope$empty,
						syntax: $stil4m$elm_syntax$Elm$Syntax$Expression$ListExpr(_List_Nil)
					}),
				A2(
					$stil4m$elm_syntax$ParserFast$followedBySymbol,
					']',
					A4(
						$stil4m$elm_syntax$ParserFast$map3,
						F3(
							function (head, commentsAfterHead, tail) {
								return {
									comments: A2(
										$stil4m$elm_syntax$Rope$prependTo,
										tail.comments,
										A2($stil4m$elm_syntax$Rope$prependTo, commentsAfterHead, head.comments)),
									syntax: $stil4m$elm_syntax$Elm$Syntax$Expression$ListExpr(
										A2($elm$core$List$cons, head.syntax, tail.syntax))
								};
							}),
						$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$expression(),
						$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
						$stil4m$elm_syntax$ParserWithComments$many(
							A2(
								$stil4m$elm_syntax$ParserFast$symbolFollowedBy,
								',',
								$stil4m$elm_syntax$Elm$Parser$Layout$maybeAroundBothSides(
									$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$expression()))))))));
}
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$expression() {
	return A2(
		$stil4m$elm_syntax$Elm$Parser$Expression$extendedSubExpressionOptimisticLayout,
		$elm$core$Result$Ok,
		function ($) {
			return $.extensionRight;
		});
}
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence9ComposeL() {
	return A2($stil4m$elm_syntax$Elm$Parser$Expression$infixLeft, 9, '<<');
}
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence8QuestionMark() {
	return A2($stil4m$elm_syntax$Elm$Parser$Expression$infixLeft, 8, '<?>');
}
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence7Mul() {
	return A2($stil4m$elm_syntax$Elm$Parser$Expression$infixLeft, 7, '*');
}
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence7Idiv() {
	return A2($stil4m$elm_syntax$Elm$Parser$Expression$infixLeft, 7, '//');
}
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence7Fdiv() {
	return A2($stil4m$elm_syntax$Elm$Parser$Expression$infixLeft, 7, '/');
}
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence6Sub() {
	return A2($stil4m$elm_syntax$Elm$Parser$Expression$infixLeft, 6, '-');
}
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence6Ignore() {
	return A2($stil4m$elm_syntax$Elm$Parser$Expression$infixLeft, 6, '|.');
}
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence6Add() {
	return A2($stil4m$elm_syntax$Elm$Parser$Expression$infixLeft, 6, '+');
}
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence5Keep() {
	return A2($stil4m$elm_syntax$Elm$Parser$Expression$infixLeft, 5, '|=');
}
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence1ApR() {
	return A2($stil4m$elm_syntax$Elm$Parser$Expression$infixLeft, 1, '|>');
}
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence4Neq() {
	return A2($stil4m$elm_syntax$Elm$Parser$Expression$infixNonAssociative, 4, '/=');
}
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence4Lt() {
	return A2($stil4m$elm_syntax$Elm$Parser$Expression$infixNonAssociative, 4, '<');
}
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence4Le() {
	return A2($stil4m$elm_syntax$Elm$Parser$Expression$infixNonAssociative, 4, '<=');
}
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence4Gt() {
	return A2($stil4m$elm_syntax$Elm$Parser$Expression$infixNonAssociative, 4, '>');
}
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence4Ge() {
	return A2($stil4m$elm_syntax$Elm$Parser$Expression$infixNonAssociative, 4, '>=');
}
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence4Eq() {
	return A2($stil4m$elm_syntax$Elm$Parser$Expression$infixNonAssociative, 4, '==');
}
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence9ComposeR() {
	return A2($stil4m$elm_syntax$Elm$Parser$Expression$infixRight, 9, '>>');
}
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence8Pow() {
	return A2($stil4m$elm_syntax$Elm$Parser$Expression$infixRight, 8, '^');
}
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence7Slash() {
	return A2($stil4m$elm_syntax$Elm$Parser$Expression$infixRight, 7, '</>');
}
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence5append() {
	return A2($stil4m$elm_syntax$Elm$Parser$Expression$infixRight, 5, '++');
}
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence5Cons() {
	return A2($stil4m$elm_syntax$Elm$Parser$Expression$infixRight, 5, '::');
}
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence3And() {
	return A2($stil4m$elm_syntax$Elm$Parser$Expression$infixRight, 3, '&&');
}
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence2Or() {
	return A2($stil4m$elm_syntax$Elm$Parser$Expression$infixRight, 2, '||');
}
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence1ApL() {
	return A2($stil4m$elm_syntax$Elm$Parser$Expression$infixRight, 1, '<|');
}
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$negationAfterMinus() {
	return A2(
		$stil4m$elm_syntax$ParserFast$map,
		function (subExpressionResult) {
			var _v6 = subExpressionResult.syntax;
			var subExpressionRange = _v6.a;
			return {
				comments: subExpressionResult.comments,
				syntax: A2(
					$stil4m$elm_syntax$Elm$Syntax$Node$Node,
					{
						end: subExpressionRange.end,
						start: {column: subExpressionRange.start.column - 1, row: subExpressionRange.start.row}
					},
					$stil4m$elm_syntax$Elm$Syntax$Expression$Negation(subExpressionResult.syntax))
			};
		},
		$stil4m$elm_syntax$ParserFast$lazy(
			function (_v7) {
				return $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$subExpression();
			}));
}
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$negationOperation() {
	return A2(
		$stil4m$elm_syntax$ParserFast$symbolBacktrackableFollowedBy,
		'-',
		$stil4m$elm_syntax$ParserFast$offsetSourceAndThen(
			F2(
				function (offset, source) {
					var _v5 = A3($elm$core$String$slice, offset - 2, offset - 1, source);
					switch (_v5) {
						case ' ':
							return $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$negationAfterMinus();
						case '(':
							return $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$negationAfterMinus();
						case ')':
							return $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$negationAfterMinus();
						case '}':
							return $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$negationAfterMinus();
						case '':
							return $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$negationAfterMinus();
						default:
							return $stil4m$elm_syntax$Elm$Parser$Expression$negationWhitespaceProblem;
					}
				})));
}
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$subExpression() {
	return $stil4m$elm_syntax$ParserFast$offsetSourceAndThen(
		F2(
			function (offset, source) {
				var _v4 = A3($elm$core$String$slice, offset, offset + 1, source);
				switch (_v4) {
					case '\"':
						return $stil4m$elm_syntax$Elm$Parser$Expression$literalExpression;
					case '(':
						return $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$tupledExpressionIfNecessaryFollowedByRecordAccess();
					case '[':
						return $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$listOrGlslExpression();
					case '{':
						return $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$recordExpressionFollowedByRecordAccess();
					case 'c':
						return $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$caseOrUnqualifiedReferenceExpression();
					case '\\':
						return $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$lambdaExpression();
					case 'l':
						return $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$letOrUnqualifiedReferenceExpression();
					case 'i':
						return $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$ifOrUnqualifiedReferenceExpression();
					case '.':
						return $stil4m$elm_syntax$Elm$Parser$Expression$recordAccessFunctionExpression;
					case '-':
						return $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$negationOperation();
					case '\'':
						return $stil4m$elm_syntax$Elm$Parser$Expression$charLiteralExpression;
					default:
						return $stil4m$elm_syntax$Elm$Parser$Expression$referenceOrNumberExpression;
				}
			}));
}
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$subExpressionMaybeAppliedOptimisticLayout() {
	return A4(
		$stil4m$elm_syntax$ParserFast$map3,
		F3(
			function (leftExpressionResult, commentsBeforeExtension, maybeArgsReverse) {
				return {
					comments: A2(
						$stil4m$elm_syntax$Rope$prependTo,
						maybeArgsReverse.comments,
						A2($stil4m$elm_syntax$Rope$prependTo, commentsBeforeExtension, leftExpressionResult.comments)),
					syntax: function () {
						var _v0 = maybeArgsReverse.syntax;
						if (!_v0.b) {
							return leftExpressionResult.syntax;
						} else {
							var argsReverse = _v0;
							var _v1 = argsReverse.a;
							var lastArgRange = _v1.a;
							var leftNode = leftExpressionResult.syntax;
							var leftRange = leftNode.a;
							return A2(
								$stil4m$elm_syntax$Elm$Syntax$Node$Node,
								{end: lastArgRange.end, start: leftRange.start},
								$stil4m$elm_syntax$Elm$Syntax$Expression$Application(
									A2(
										$elm$core$List$cons,
										leftNode,
										$elm$core$List$reverse(argsReverse))));
						}
					}()
				};
			}),
		$stil4m$elm_syntax$ParserFast$lazy(
			function (_v2) {
				return $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$subExpression();
			}),
		$stil4m$elm_syntax$Elm$Parser$Layout$optimisticLayout,
		$stil4m$elm_syntax$ParserWithComments$manyWithoutReverse(
			A3(
				$stil4m$elm_syntax$ParserFast$map2,
				F2(
					function (arg, commentsAfter) {
						return {
							comments: A2($stil4m$elm_syntax$Rope$prependTo, commentsAfter, arg.comments),
							syntax: arg.syntax
						};
					}),
				$stil4m$elm_syntax$Elm$Parser$Layout$positivelyIndentedFollowedBy(
					$stil4m$elm_syntax$ParserFast$lazy(
						function (_v3) {
							return $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$subExpression();
						})),
				$stil4m$elm_syntax$Elm$Parser$Layout$optimisticLayout)));
}
try {
	var $stil4m$elm_syntax$Elm$Parser$Expression$letOrUnqualifiedReferenceExpression = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$letOrUnqualifiedReferenceExpression();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$letOrUnqualifiedReferenceExpression = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$letOrUnqualifiedReferenceExpression;
	};
	var $stil4m$elm_syntax$Elm$Parser$Expression$letExpression = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$letExpression();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$letExpression = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$letExpression;
	};
	var $stil4m$elm_syntax$Elm$Parser$Expression$letDeclarationsIn = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$letDeclarationsIn();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$letDeclarationsIn = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$letDeclarationsIn;
	};
	var $stil4m$elm_syntax$Elm$Parser$Expression$blockElement = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$blockElement();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$blockElement = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$blockElement;
	};
	var $stil4m$elm_syntax$Elm$Parser$Expression$caseOrUnqualifiedReferenceExpression = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$caseOrUnqualifiedReferenceExpression();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$caseOrUnqualifiedReferenceExpression = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$caseOrUnqualifiedReferenceExpression;
	};
	var $stil4m$elm_syntax$Elm$Parser$Expression$caseExpression = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$caseExpression();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$caseExpression = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$caseExpression;
	};
	var $stil4m$elm_syntax$Elm$Parser$Expression$caseStatements = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$caseStatements();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$caseStatements = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$caseStatements;
	};
	var $stil4m$elm_syntax$Elm$Parser$Expression$caseStatement = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$caseStatement();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$caseStatement = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$caseStatement;
	};
	var $stil4m$elm_syntax$Elm$Parser$Expression$tupledExpressionIfNecessaryFollowedByRecordAccess = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$tupledExpressionIfNecessaryFollowedByRecordAccess();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$tupledExpressionIfNecessaryFollowedByRecordAccess = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$tupledExpressionIfNecessaryFollowedByRecordAccess;
	};
	var $stil4m$elm_syntax$Elm$Parser$Expression$tupledExpressionInnerAfterOpeningParens = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$tupledExpressionInnerAfterOpeningParens();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$tupledExpressionInnerAfterOpeningParens = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$tupledExpressionInnerAfterOpeningParens;
	};
	var $stil4m$elm_syntax$Elm$Parser$Expression$recordExpressionFollowedByRecordAccess = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$recordExpressionFollowedByRecordAccess();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$recordExpressionFollowedByRecordAccess = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$recordExpressionFollowedByRecordAccess;
	};
	var $stil4m$elm_syntax$Elm$Parser$Expression$recordContentsCurlyEnd = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$recordContentsCurlyEnd();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$recordContentsCurlyEnd = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$recordContentsCurlyEnd;
	};
	var $stil4m$elm_syntax$Elm$Parser$Expression$recordFields = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$recordFields();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$recordFields = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$recordFields;
	};
	var $stil4m$elm_syntax$Elm$Parser$Expression$recordSetterNodeWithLayout = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$recordSetterNodeWithLayout();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$recordSetterNodeWithLayout = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$recordSetterNodeWithLayout;
	};
	var $stil4m$elm_syntax$Elm$Parser$Expression$letFunction = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$letFunction();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$letFunction = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$letFunction;
	};
	var $stil4m$elm_syntax$Elm$Parser$Expression$letDestructuringDeclaration = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$letDestructuringDeclaration();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$letDestructuringDeclaration = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$letDestructuringDeclaration;
	};
	var $stil4m$elm_syntax$Elm$Parser$Expression$lambdaExpression = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$lambdaExpression();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$lambdaExpression = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$lambdaExpression;
	};
	var $stil4m$elm_syntax$Elm$Parser$Expression$ifOrUnqualifiedReferenceExpression = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$ifOrUnqualifiedReferenceExpression();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$ifOrUnqualifiedReferenceExpression = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$ifOrUnqualifiedReferenceExpression;
	};
	var $stil4m$elm_syntax$Elm$Parser$Expression$ifBlockExpression = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$ifBlockExpression();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$ifBlockExpression = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$ifBlockExpression;
	};
	var $stil4m$elm_syntax$Elm$Parser$Expression$listOrGlslExpression = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$listOrGlslExpression();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$listOrGlslExpression = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$listOrGlslExpression;
	};
	var $stil4m$elm_syntax$Elm$Parser$Expression$expressionAfterOpeningSquareBracket = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$expressionAfterOpeningSquareBracket();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$expressionAfterOpeningSquareBracket = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$expressionAfterOpeningSquareBracket;
	};
	var $stil4m$elm_syntax$Elm$Parser$Expression$expression = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$expression();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$expression = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$expression;
	};
	var $stil4m$elm_syntax$Elm$Parser$Expression$precedence9ComposeL = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence9ComposeL();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence9ComposeL = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$precedence9ComposeL;
	};
	var $stil4m$elm_syntax$Elm$Parser$Expression$precedence8QuestionMark = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence8QuestionMark();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence8QuestionMark = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$precedence8QuestionMark;
	};
	var $stil4m$elm_syntax$Elm$Parser$Expression$precedence7Mul = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence7Mul();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence7Mul = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$precedence7Mul;
	};
	var $stil4m$elm_syntax$Elm$Parser$Expression$precedence7Idiv = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence7Idiv();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence7Idiv = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$precedence7Idiv;
	};
	var $stil4m$elm_syntax$Elm$Parser$Expression$precedence7Fdiv = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence7Fdiv();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence7Fdiv = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$precedence7Fdiv;
	};
	var $stil4m$elm_syntax$Elm$Parser$Expression$precedence6Sub = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence6Sub();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence6Sub = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$precedence6Sub;
	};
	var $stil4m$elm_syntax$Elm$Parser$Expression$precedence6Ignore = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence6Ignore();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence6Ignore = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$precedence6Ignore;
	};
	var $stil4m$elm_syntax$Elm$Parser$Expression$precedence6Add = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence6Add();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence6Add = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$precedence6Add;
	};
	var $stil4m$elm_syntax$Elm$Parser$Expression$precedence5Keep = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence5Keep();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence5Keep = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$precedence5Keep;
	};
	var $stil4m$elm_syntax$Elm$Parser$Expression$precedence1ApR = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence1ApR();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence1ApR = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$precedence1ApR;
	};
	var $stil4m$elm_syntax$Elm$Parser$Expression$precedence4Neq = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence4Neq();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence4Neq = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$precedence4Neq;
	};
	var $stil4m$elm_syntax$Elm$Parser$Expression$precedence4Lt = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence4Lt();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence4Lt = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$precedence4Lt;
	};
	var $stil4m$elm_syntax$Elm$Parser$Expression$precedence4Le = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence4Le();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence4Le = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$precedence4Le;
	};
	var $stil4m$elm_syntax$Elm$Parser$Expression$precedence4Gt = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence4Gt();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence4Gt = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$precedence4Gt;
	};
	var $stil4m$elm_syntax$Elm$Parser$Expression$precedence4Ge = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence4Ge();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence4Ge = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$precedence4Ge;
	};
	var $stil4m$elm_syntax$Elm$Parser$Expression$precedence4Eq = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence4Eq();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence4Eq = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$precedence4Eq;
	};
	var $stil4m$elm_syntax$Elm$Parser$Expression$precedence9ComposeR = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence9ComposeR();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence9ComposeR = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$precedence9ComposeR;
	};
	var $stil4m$elm_syntax$Elm$Parser$Expression$precedence8Pow = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence8Pow();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence8Pow = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$precedence8Pow;
	};
	var $stil4m$elm_syntax$Elm$Parser$Expression$precedence7Slash = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence7Slash();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence7Slash = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$precedence7Slash;
	};
	var $stil4m$elm_syntax$Elm$Parser$Expression$precedence5append = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence5append();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence5append = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$precedence5append;
	};
	var $stil4m$elm_syntax$Elm$Parser$Expression$precedence5Cons = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence5Cons();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence5Cons = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$precedence5Cons;
	};
	var $stil4m$elm_syntax$Elm$Parser$Expression$precedence3And = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence3And();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence3And = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$precedence3And;
	};
	var $stil4m$elm_syntax$Elm$Parser$Expression$precedence2Or = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence2Or();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence2Or = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$precedence2Or;
	};
	var $stil4m$elm_syntax$Elm$Parser$Expression$precedence1ApL = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence1ApL();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence1ApL = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$precedence1ApL;
	};
	var $stil4m$elm_syntax$Elm$Parser$Expression$negationAfterMinus = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$negationAfterMinus();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$negationAfterMinus = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$negationAfterMinus;
	};
	var $stil4m$elm_syntax$Elm$Parser$Expression$negationOperation = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$negationOperation();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$negationOperation = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$negationOperation;
	};
	var $stil4m$elm_syntax$Elm$Parser$Expression$subExpression = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$subExpression();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$subExpression = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$subExpression;
	};
	var $stil4m$elm_syntax$Elm$Parser$Expression$subExpressionMaybeAppliedOptimisticLayout = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$subExpressionMaybeAppliedOptimisticLayout();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$subExpressionMaybeAppliedOptimisticLayout = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$subExpressionMaybeAppliedOptimisticLayout;
	};
} catch ($) {
	throw 'Some top-level definitions from `Elm.Parser.Expression` are causing infinite recursion:\n\n  ┌─────┐\n  │    letOrUnqualifiedReferenceExpression\n  │     ↓\n  │    letExpression\n  │     ↓\n  │    letDeclarationsIn\n  │     ↓\n  │    blockElement\n  │     ↓\n  │    caseOrUnqualifiedReferenceExpression\n  │     ↓\n  │    caseExpression\n  │     ↓\n  │    caseStatements\n  │     ↓\n  │    caseStatement\n  │     ↓\n  │    tupledExpressionIfNecessaryFollowedByRecordAccess\n  │     ↓\n  │    tupledExpressionInnerAfterOpeningParens\n  │     ↓\n  │    recordExpressionFollowedByRecordAccess\n  │     ↓\n  │    recordContentsCurlyEnd\n  │     ↓\n  │    recordFields\n  │     ↓\n  │    recordSetterNodeWithLayout\n  │     ↓\n  │    letFunction\n  │     ↓\n  │    letDestructuringDeclaration\n  │     ↓\n  │    lambdaExpression\n  │     ↓\n  │    ifOrUnqualifiedReferenceExpression\n  │     ↓\n  │    ifBlockExpression\n  │     ↓\n  │    listOrGlslExpression\n  │     ↓\n  │    expressionAfterOpeningSquareBracket\n  │     ↓\n  │    expression\n  │     ↓\n  │    extendedSubExpressionOptimisticLayout\n  │     ↓\n  │    precedence9ComposeL\n  │     ↓\n  │    precedence8QuestionMark\n  │     ↓\n  │    precedence7Mul\n  │     ↓\n  │    precedence7Idiv\n  │     ↓\n  │    precedence7Fdiv\n  │     ↓\n  │    precedence6Sub\n  │     ↓\n  │    precedence6Ignore\n  │     ↓\n  │    precedence6Add\n  │     ↓\n  │    precedence5Keep\n  │     ↓\n  │    precedence1ApR\n  │     ↓\n  │    infixLeft\n  │     ↓\n  │    precedence4Neq\n  │     ↓\n  │    precedence4Lt\n  │     ↓\n  │    precedence4Le\n  │     ↓\n  │    precedence4Gt\n  │     ↓\n  │    precedence4Ge\n  │     ↓\n  │    precedence4Eq\n  │     ↓\n  │    infixNonAssociative\n  │     ↓\n  │    infixOperatorAndThen\n  │     ↓\n  │    precedence9ComposeR\n  │     ↓\n  │    precedence8Pow\n  │     ↓\n  │    precedence7Slash\n  │     ↓\n  │    precedence5append\n  │     ↓\n  │    precedence5Cons\n  │     ↓\n  │    precedence3And\n  │     ↓\n  │    precedence2Or\n  │     ↓\n  │    precedence1ApL\n  │     ↓\n  │    infixRight\n  │     ↓\n  │    negationAfterMinus\n  │     ↓\n  │    negationOperation\n  │     ↓\n  │    subExpression\n  │     ↓\n  │    subExpressionMaybeAppliedOptimisticLayout\n  └─────┘\n\nThese errors are very tricky, so read https://elm-lang.org/0.19.1/bad-recursion to learn how to fix it!';}
var $stil4m$elm_syntax$ParserFast$map6 = F7(
	function (func, _v0, _v1, _v2, _v3, _v4, _v5) {
		var parseA = _v0.a;
		var parseB = _v1.a;
		var parseC = _v2.a;
		var parseD = _v3.a;
		var parseE = _v4.a;
		var parseF = _v5.a;
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s0) {
				var _v6 = parseA(s0);
				if (_v6.$ === 'Bad') {
					var committed = _v6.a;
					var x = _v6.b;
					return A2($stil4m$elm_syntax$ParserFast$Bad, committed, x);
				} else {
					var a = _v6.a;
					var s1 = _v6.b;
					var _v7 = parseB(s1);
					if (_v7.$ === 'Bad') {
						var x = _v7.b;
						return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
					} else {
						var b = _v7.a;
						var s2 = _v7.b;
						var _v8 = parseC(s2);
						if (_v8.$ === 'Bad') {
							var x = _v8.b;
							return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
						} else {
							var c = _v8.a;
							var s3 = _v8.b;
							var _v9 = parseD(s3);
							if (_v9.$ === 'Bad') {
								var x = _v9.b;
								return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
							} else {
								var d = _v9.a;
								var s4 = _v9.b;
								var _v10 = parseE(s4);
								if (_v10.$ === 'Bad') {
									var x = _v10.b;
									return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
								} else {
									var e = _v10.a;
									var s5 = _v10.b;
									var _v11 = parseF(s5);
									if (_v11.$ === 'Bad') {
										var x = _v11.b;
										return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
									} else {
										var f = _v11.a;
										var s6 = _v11.b;
										return A2(
											$stil4m$elm_syntax$ParserFast$Good,
											A6(func, a, b, c, d, e, f),
											s6);
									}
								}
							}
						}
					}
				}
			});
	});
var $stil4m$elm_syntax$Elm$Parser$Declarations$parameterPatternsEqual = A2(
	$stil4m$elm_syntax$ParserWithComments$until,
	$stil4m$elm_syntax$Elm$Parser$Tokens$equal,
	A3(
		$stil4m$elm_syntax$ParserFast$map2,
		F2(
			function (patternResult, commentsAfterPattern) {
				return {
					comments: A2($stil4m$elm_syntax$Rope$prependTo, commentsAfterPattern, patternResult.comments),
					syntax: patternResult.syntax
				};
			}),
		$stil4m$elm_syntax$Elm$Parser$Patterns$patternNotDirectlyComposing,
		$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout));
var $stil4m$elm_syntax$Elm$Parser$Declarations$functionAfterDocumentation = A7(
	$stil4m$elm_syntax$ParserFast$map6,
	F6(
		function (startName, commentsAfterStartName, maybeSignature, _arguments, commentsAfterEqual, result) {
			return {
				comments: A2(
					$stil4m$elm_syntax$Rope$prependTo,
					result.comments,
					A2(
						$stil4m$elm_syntax$Rope$prependTo,
						commentsAfterEqual,
						A2(
							$stil4m$elm_syntax$Rope$prependTo,
							_arguments.comments,
							function () {
								if (maybeSignature.$ === 'Nothing') {
									return commentsAfterStartName;
								} else {
									var signature = maybeSignature.a;
									return A2($stil4m$elm_syntax$Rope$prependTo, signature.comments, commentsAfterStartName);
								}
							}()))),
				syntax: $stil4m$elm_syntax$Elm$Parser$Declarations$FunctionDeclarationAfterDocumentation(
					{
						_arguments: _arguments.syntax,
						expression: result.syntax,
						signature: A2(
							$elm$core$Maybe$map,
							function ($) {
								return $.syntax;
							},
							maybeSignature),
						startName: startName
					})
			};
		}),
	$stil4m$elm_syntax$Elm$Parser$Tokens$functionNameNode,
	$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
	A6(
		$stil4m$elm_syntax$ParserFast$map4OrSucceed,
		F4(
			function (commentsBeforeTypeAnnotation, typeAnnotationResult, implementationName, afterImplementationName) {
				return $elm$core$Maybe$Just(
					{
						comments: A2(
							$stil4m$elm_syntax$Rope$prependTo,
							afterImplementationName,
							A2(
								$stil4m$elm_syntax$Rope$prependTo,
								implementationName.comments,
								A2($stil4m$elm_syntax$Rope$prependTo, typeAnnotationResult.comments, commentsBeforeTypeAnnotation))),
						syntax: {implementationName: implementationName.syntax, typeAnnotation: typeAnnotationResult.syntax}
					});
			}),
		A2($stil4m$elm_syntax$ParserFast$symbolFollowedBy, ':', $stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout),
		$stil4m$elm_syntax$Elm$Parser$TypeAnnotation$typeAnnotation,
		$stil4m$elm_syntax$Elm$Parser$Layout$layoutStrictFollowedBy($stil4m$elm_syntax$Elm$Parser$Tokens$functionNameNode),
		$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
		$elm$core$Maybe$Nothing),
	$stil4m$elm_syntax$Elm$Parser$Declarations$parameterPatternsEqual,
	$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
	$stil4m$elm_syntax$Elm$Parser$Expression$expression);
var $stil4m$elm_syntax$Elm$Parser$Layout$layoutStrictFollowedByWithComments = function (nextParser) {
	return A3(
		$stil4m$elm_syntax$ParserFast$map2,
		F2(
			function (commentsBefore, after) {
				return {
					comments: A2($stil4m$elm_syntax$Rope$prependTo, after.comments, commentsBefore),
					syntax: after.syntax
				};
			}),
		$stil4m$elm_syntax$Elm$Parser$Layout$optimisticLayout,
		$stil4m$elm_syntax$Elm$Parser$Layout$onTopIndentationFollowedBy(nextParser));
};
var $stil4m$elm_syntax$Elm$Parser$Declarations$PortDeclarationAfterDocumentation = function (a) {
	return {$: 'PortDeclarationAfterDocumentation', a: a};
};
var $stil4m$elm_syntax$Elm$Parser$Declarations$portDeclarationAfterDocumentation = A6(
	$stil4m$elm_syntax$ParserFast$map5,
	F5(
		function (commentsAfterPort, name, commentsAfterName, commentsAfterColon, typeAnnotationResult) {
			var nameRange = name.a;
			return {
				comments: A2(
					$stil4m$elm_syntax$Rope$prependTo,
					commentsAfterColon,
					A2(
						$stil4m$elm_syntax$Rope$prependTo,
						typeAnnotationResult.comments,
						A2($stil4m$elm_syntax$Rope$prependTo, commentsAfterName, commentsAfterPort))),
				syntax: $stil4m$elm_syntax$Elm$Parser$Declarations$PortDeclarationAfterDocumentation(
					{
						name: name,
						startLocation: {column: 1, row: nameRange.start.row},
						typeAnnotation: typeAnnotationResult.syntax
					})
			};
		}),
	A2($stil4m$elm_syntax$ParserFast$keywordFollowedBy, 'port', $stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout),
	$stil4m$elm_syntax$Elm$Parser$Tokens$functionNameNode,
	$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
	A2($stil4m$elm_syntax$ParserFast$symbolFollowedBy, ':', $stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout),
	$stil4m$elm_syntax$Elm$Parser$TypeAnnotation$typeAnnotation);
var $stil4m$elm_syntax$Elm$Syntax$Node$range = function (_v0) {
	var r = _v0.a;
	return r;
};
var $stil4m$elm_syntax$Elm$Parser$Declarations$TypeDeclarationAfterDocumentation = function (a) {
	return {$: 'TypeDeclarationAfterDocumentation', a: a};
};
var $stil4m$elm_syntax$Elm$Parser$Declarations$typeGenericListEquals = A2(
	$stil4m$elm_syntax$ParserWithComments$until,
	$stil4m$elm_syntax$Elm$Parser$Tokens$equal,
	A3(
		$stil4m$elm_syntax$ParserFast$map2,
		F2(
			function (name, commentsAfterName) {
				return {comments: commentsAfterName, syntax: name};
			}),
		$stil4m$elm_syntax$Elm$Parser$Tokens$functionNameNode,
		$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout));
var $stil4m$elm_syntax$ParserFast$ifFollowedByWhileMapWithRangeWithoutLinebreak = F3(
	function (rangeAndConsumedStringToRes, firstIsOkay, afterFirstIsOkay) {
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s0) {
				var firstOffset = A3($stil4m$elm_syntax$ParserFast$isSubCharWithoutLinebreak, firstIsOkay, s0.offset, s0.src);
				if (_Utils_eq(firstOffset, -1)) {
					return A2(
						$stil4m$elm_syntax$ParserFast$Bad,
						false,
						A2($stil4m$elm_syntax$ParserFast$ExpectingCharSatisfyingPredicate, s0.row, s0.col));
				} else {
					var s1 = A6($stil4m$elm_syntax$ParserFast$skipWhileWithoutLinebreakHelp, afterFirstIsOkay, firstOffset, s0.row, s0.col + 1, s0.src, s0.indent);
					return A2(
						$stil4m$elm_syntax$ParserFast$Good,
						A2(
							rangeAndConsumedStringToRes,
							{
								end: {column: s1.col, row: s1.row},
								start: {column: s0.col, row: s0.row}
							},
							A3($elm$core$String$slice, s0.offset, s1.offset, s0.src)),
						s1);
				}
			});
	});
var $stil4m$elm_syntax$Elm$Parser$Tokens$typeNameNode = A3($stil4m$elm_syntax$ParserFast$ifFollowedByWhileMapWithRangeWithoutLinebreak, $stil4m$elm_syntax$Elm$Syntax$Node$Node, $stil4m$elm_syntax$Char$Extra$unicodeIsUpperFast, $stil4m$elm_syntax$Char$Extra$unicodeIsAlphaNumOrUnderscoreFast);
var $stil4m$elm_syntax$Elm$Parser$Declarations$valueConstructorOptimisticLayout = A4(
	$stil4m$elm_syntax$ParserFast$map3,
	F3(
		function (name, commentsAfterName, argumentsReverse) {
			var nameRange = name.a;
			var fullRange = function () {
				var _v0 = argumentsReverse.syntax;
				if (_v0.b) {
					var _v1 = _v0.a;
					var lastArgRange = _v1.a;
					return {end: lastArgRange.end, start: nameRange.start};
				} else {
					return nameRange;
				}
			}();
			return {
				comments: A2($stil4m$elm_syntax$Rope$prependTo, argumentsReverse.comments, commentsAfterName),
				syntax: A2(
					$stil4m$elm_syntax$Elm$Syntax$Node$Node,
					fullRange,
					{
						_arguments: $elm$core$List$reverse(argumentsReverse.syntax),
						name: name
					})
			};
		}),
	$stil4m$elm_syntax$Elm$Parser$Tokens$typeNameNode,
	$stil4m$elm_syntax$Elm$Parser$Layout$optimisticLayout,
	$stil4m$elm_syntax$ParserWithComments$manyWithoutReverse(
		$stil4m$elm_syntax$Elm$Parser$Layout$positivelyIndentedFollowedBy(
			A3(
				$stil4m$elm_syntax$ParserFast$map2,
				F2(
					function (typeAnnotationResult, commentsAfter) {
						return {
							comments: A2($stil4m$elm_syntax$Rope$prependTo, commentsAfter, typeAnnotationResult.comments),
							syntax: typeAnnotationResult.syntax
						};
					}),
				$stil4m$elm_syntax$Elm$Parser$TypeAnnotation$typeAnnotationNoFnExcludingTypedWithArguments,
				$stil4m$elm_syntax$Elm$Parser$Layout$optimisticLayout))));
var $stil4m$elm_syntax$Elm$Parser$Declarations$customTypeDefinitionAfterDocumentationAfterTypePrefix = A7(
	$stil4m$elm_syntax$ParserFast$map6,
	F6(
		function (name, commentsAfterName, parameters, commentsAfterEqual, headVariant, tailVariantsReverse) {
			return {
				comments: A2(
					$stil4m$elm_syntax$Rope$prependTo,
					tailVariantsReverse.comments,
					A2(
						$stil4m$elm_syntax$Rope$prependTo,
						headVariant.comments,
						A2(
							$stil4m$elm_syntax$Rope$prependTo,
							commentsAfterEqual,
							A2($stil4m$elm_syntax$Rope$prependTo, parameters.comments, commentsAfterName)))),
				syntax: $stil4m$elm_syntax$Elm$Parser$Declarations$TypeDeclarationAfterDocumentation(
					{headVariant: headVariant.syntax, name: name, parameters: parameters.syntax, tailVariantsReverse: tailVariantsReverse.syntax})
			};
		}),
	$stil4m$elm_syntax$Elm$Parser$Tokens$typeNameNode,
	$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
	$stil4m$elm_syntax$Elm$Parser$Declarations$typeGenericListEquals,
	$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
	$stil4m$elm_syntax$Elm$Parser$Declarations$valueConstructorOptimisticLayout,
	$stil4m$elm_syntax$ParserWithComments$manyWithoutReverse(
		A2(
			$stil4m$elm_syntax$ParserFast$symbolFollowedBy,
			'|',
			A2(
				$stil4m$elm_syntax$Elm$Parser$Layout$positivelyIndentedPlusFollowedBy,
				1,
				A3(
					$stil4m$elm_syntax$ParserFast$map2,
					F2(
						function (commentsBeforePipe, variantResult) {
							return {
								comments: A2($stil4m$elm_syntax$Rope$prependTo, variantResult.comments, commentsBeforePipe),
								syntax: variantResult.syntax
							};
						}),
					$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
					$stil4m$elm_syntax$Elm$Parser$Declarations$valueConstructorOptimisticLayout)))));
var $stil4m$elm_syntax$Elm$Parser$Declarations$TypeAliasDeclarationAfterDocumentation = function (a) {
	return {$: 'TypeAliasDeclarationAfterDocumentation', a: a};
};
var $stil4m$elm_syntax$Elm$Parser$Declarations$typeAliasDefinitionAfterDocumentationAfterTypePrefix = A7(
	$stil4m$elm_syntax$ParserFast$map6,
	F6(
		function (commentsAfterAlias, name, commentsAfterName, parameters, commentsAfterEquals, typeAnnotationResult) {
			return {
				comments: A2(
					$stil4m$elm_syntax$Rope$prependTo,
					typeAnnotationResult.comments,
					A2(
						$stil4m$elm_syntax$Rope$prependTo,
						commentsAfterEquals,
						A2(
							$stil4m$elm_syntax$Rope$prependTo,
							parameters.comments,
							A2($stil4m$elm_syntax$Rope$prependTo, commentsAfterName, commentsAfterAlias)))),
				syntax: $stil4m$elm_syntax$Elm$Parser$Declarations$TypeAliasDeclarationAfterDocumentation(
					{name: name, parameters: parameters.syntax, typeAnnotation: typeAnnotationResult.syntax})
			};
		}),
	A2($stil4m$elm_syntax$ParserFast$keywordFollowedBy, 'alias', $stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout),
	$stil4m$elm_syntax$Elm$Parser$Tokens$typeNameNode,
	$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
	$stil4m$elm_syntax$Elm$Parser$Declarations$typeGenericListEquals,
	$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
	$stil4m$elm_syntax$Elm$Parser$TypeAnnotation$typeAnnotation);
var $stil4m$elm_syntax$Elm$Parser$Declarations$typeOrTypeAliasDefinitionAfterDocumentation = A3(
	$stil4m$elm_syntax$ParserFast$map2,
	F2(
		function (commentsAfterType, declarationAfterDocumentation) {
			return {
				comments: A2($stil4m$elm_syntax$Rope$prependTo, declarationAfterDocumentation.comments, commentsAfterType),
				syntax: declarationAfterDocumentation.syntax
			};
		}),
	A2($stil4m$elm_syntax$ParserFast$keywordFollowedBy, 'type', $stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout),
	A2($stil4m$elm_syntax$ParserFast$oneOf2, $stil4m$elm_syntax$Elm$Parser$Declarations$typeAliasDefinitionAfterDocumentationAfterTypePrefix, $stil4m$elm_syntax$Elm$Parser$Declarations$customTypeDefinitionAfterDocumentationAfterTypePrefix));
var $stil4m$elm_syntax$Elm$Parser$Declarations$declarationWithDocumentation = A3(
	$stil4m$elm_syntax$ParserFast$validate,
	function (result) {
		var _v11 = result.syntax;
		var decl = _v11.b;
		if (decl.$ === 'FunctionDeclaration') {
			var letFunctionDeclaration = decl.a;
			var _v13 = letFunctionDeclaration.signature;
			if (_v13.$ === 'Nothing') {
				return true;
			} else {
				var _v14 = _v13.a;
				var signature = _v14.b;
				var _v15 = signature.name;
				var signatureName = _v15.b;
				var _v16 = letFunctionDeclaration.declaration;
				var implementation = _v16.b;
				var _v17 = implementation.name;
				var implementationName = _v17.b;
				return _Utils_eq(implementationName, signatureName + '');
			}
		} else {
			return true;
		}
	},
	'Expected to find the same name for declaration and signature',
	A3(
		$stil4m$elm_syntax$ParserFast$map2,
		F2(
			function (documentation, afterDocumentation) {
				var start = $stil4m$elm_syntax$Elm$Syntax$Node$range(documentation).start;
				var _v0 = afterDocumentation.syntax;
				switch (_v0.$) {
					case 'FunctionDeclarationAfterDocumentation':
						var functionDeclarationAfterDocumentation = _v0.a;
						var _v1 = functionDeclarationAfterDocumentation.signature;
						if (_v1.$ === 'Just') {
							var signature = _v1.a;
							var _v2 = signature.implementationName;
							var implementationNameRange = _v2.a;
							var _v3 = functionDeclarationAfterDocumentation.expression;
							var expressionRange = _v3.a;
							return {
								comments: afterDocumentation.comments,
								syntax: A2(
									$stil4m$elm_syntax$Elm$Syntax$Node$Node,
									{end: expressionRange.end, start: start},
									$stil4m$elm_syntax$Elm$Syntax$Declaration$FunctionDeclaration(
										{
											declaration: A2(
												$stil4m$elm_syntax$Elm$Syntax$Node$Node,
												{end: expressionRange.end, start: implementationNameRange.start},
												{_arguments: functionDeclarationAfterDocumentation._arguments, expression: functionDeclarationAfterDocumentation.expression, name: signature.implementationName}),
											documentation: $elm$core$Maybe$Just(documentation),
											signature: $elm$core$Maybe$Just(
												A3($stil4m$elm_syntax$Elm$Syntax$Node$combine, $stil4m$elm_syntax$Elm$Syntax$Signature$Signature, functionDeclarationAfterDocumentation.startName, signature.typeAnnotation))
										}))
							};
						} else {
							var _v4 = functionDeclarationAfterDocumentation.startName;
							var startNameRange = _v4.a;
							var _v5 = functionDeclarationAfterDocumentation.expression;
							var expressionRange = _v5.a;
							return {
								comments: afterDocumentation.comments,
								syntax: A2(
									$stil4m$elm_syntax$Elm$Syntax$Node$Node,
									{end: expressionRange.end, start: start},
									$stil4m$elm_syntax$Elm$Syntax$Declaration$FunctionDeclaration(
										{
											declaration: A2(
												$stil4m$elm_syntax$Elm$Syntax$Node$Node,
												{end: expressionRange.end, start: startNameRange.start},
												{_arguments: functionDeclarationAfterDocumentation._arguments, expression: functionDeclarationAfterDocumentation.expression, name: functionDeclarationAfterDocumentation.startName}),
											documentation: $elm$core$Maybe$Just(documentation),
											signature: $elm$core$Maybe$Nothing
										}))
							};
						}
					case 'TypeDeclarationAfterDocumentation':
						var typeDeclarationAfterDocumentation = _v0.a;
						var end = function () {
							var _v6 = typeDeclarationAfterDocumentation.tailVariantsReverse;
							if (_v6.b) {
								var _v7 = _v6.a;
								var range = _v7.a;
								return range.end;
							} else {
								var _v8 = typeDeclarationAfterDocumentation.headVariant;
								var headVariantRange = _v8.a;
								return headVariantRange.end;
							}
						}();
						return {
							comments: afterDocumentation.comments,
							syntax: A2(
								$stil4m$elm_syntax$Elm$Syntax$Node$Node,
								{end: end, start: start},
								$stil4m$elm_syntax$Elm$Syntax$Declaration$CustomTypeDeclaration(
									{
										constructors: A2(
											$elm$core$List$cons,
											typeDeclarationAfterDocumentation.headVariant,
											$elm$core$List$reverse(typeDeclarationAfterDocumentation.tailVariantsReverse)),
										documentation: $elm$core$Maybe$Just(documentation),
										generics: typeDeclarationAfterDocumentation.parameters,
										name: typeDeclarationAfterDocumentation.name
									}))
						};
					case 'TypeAliasDeclarationAfterDocumentation':
						var typeAliasDeclarationAfterDocumentation = _v0.a;
						var _v9 = typeAliasDeclarationAfterDocumentation.typeAnnotation;
						var typeAnnotationRange = _v9.a;
						return {
							comments: afterDocumentation.comments,
							syntax: A2(
								$stil4m$elm_syntax$Elm$Syntax$Node$Node,
								{end: typeAnnotationRange.end, start: start},
								$stil4m$elm_syntax$Elm$Syntax$Declaration$AliasDeclaration(
									{
										documentation: $elm$core$Maybe$Just(documentation),
										generics: typeAliasDeclarationAfterDocumentation.parameters,
										name: typeAliasDeclarationAfterDocumentation.name,
										typeAnnotation: typeAliasDeclarationAfterDocumentation.typeAnnotation
									}))
						};
					default:
						var portDeclarationAfterName = _v0.a;
						var _v10 = portDeclarationAfterName.typeAnnotation;
						var typeAnnotationRange = _v10.a;
						return {
							comments: A2(
								$stil4m$elm_syntax$Rope$filledPrependTo,
								afterDocumentation.comments,
								$stil4m$elm_syntax$Rope$one(documentation)),
							syntax: A2(
								$stil4m$elm_syntax$Elm$Syntax$Node$Node,
								{end: typeAnnotationRange.end, start: portDeclarationAfterName.startLocation},
								$stil4m$elm_syntax$Elm$Syntax$Declaration$PortDeclaration(
									{name: portDeclarationAfterName.name, typeAnnotation: portDeclarationAfterName.typeAnnotation}))
						};
				}
			}),
		$stil4m$elm_syntax$Elm$Parser$Comments$declarationDocumentation,
		$stil4m$elm_syntax$Elm$Parser$Layout$layoutStrictFollowedByWithComments(
			A3($stil4m$elm_syntax$ParserFast$oneOf3, $stil4m$elm_syntax$Elm$Parser$Declarations$functionAfterDocumentation, $stil4m$elm_syntax$Elm$Parser$Declarations$typeOrTypeAliasDefinitionAfterDocumentation, $stil4m$elm_syntax$Elm$Parser$Declarations$portDeclarationAfterDocumentation))));
var $stil4m$elm_syntax$Elm$Parser$Tokens$functionNameNotInfixNode = A4(
	$stil4m$elm_syntax$ParserFast$ifFollowedByWhileValidateMapWithRangeWithoutLinebreak,
	$stil4m$elm_syntax$Elm$Syntax$Node$Node,
	$stil4m$elm_syntax$Char$Extra$unicodeIsLowerFast,
	$stil4m$elm_syntax$Char$Extra$unicodeIsAlphaNumOrUnderscoreFast,
	function (name) {
		return (name !== 'infix') && $stil4m$elm_syntax$Elm$Parser$Tokens$isNotReserved(name);
	});
var $stil4m$elm_syntax$Elm$Parser$Declarations$functionDeclarationWithoutDocumentation = A3(
	$stil4m$elm_syntax$ParserFast$validate,
	function (result) {
		var _v5 = result.syntax;
		var decl = _v5.b;
		if (decl.$ === 'FunctionDeclaration') {
			var letFunctionDeclaration = decl.a;
			var _v7 = letFunctionDeclaration.signature;
			if (_v7.$ === 'Nothing') {
				return true;
			} else {
				var _v8 = _v7.a;
				var signature = _v8.b;
				var _v9 = signature.name;
				var signatureName = _v9.b;
				var _v10 = letFunctionDeclaration.declaration;
				var implementation = _v10.b;
				var _v11 = implementation.name;
				var implementationName = _v11.b;
				return _Utils_eq(implementationName, signatureName + '');
			}
		} else {
			return true;
		}
	},
	'Expected to find the same name for declaration and signature',
	A7(
		$stil4m$elm_syntax$ParserFast$map6WithStartLocation,
		F7(
			function (startNameStart, startNameNode, commentsAfterStartName, maybeSignature, _arguments, commentsAfterEqual, result) {
				var allComments = A2(
					$stil4m$elm_syntax$Rope$prependTo,
					result.comments,
					A2(
						$stil4m$elm_syntax$Rope$prependTo,
						commentsAfterEqual,
						A2(
							$stil4m$elm_syntax$Rope$prependTo,
							_arguments.comments,
							function () {
								if (maybeSignature.$ === 'Nothing') {
									return commentsAfterStartName;
								} else {
									var signature = maybeSignature.a;
									return A2($stil4m$elm_syntax$Rope$prependTo, signature.comments, commentsAfterStartName);
								}
							}())));
				if (maybeSignature.$ === 'Nothing') {
					var _v1 = result.syntax;
					var expressionRange = _v1.a;
					return {
						comments: allComments,
						syntax: A2(
							$stil4m$elm_syntax$Elm$Syntax$Node$Node,
							{end: expressionRange.end, start: startNameStart},
							$stil4m$elm_syntax$Elm$Syntax$Declaration$FunctionDeclaration(
								{
									declaration: A2(
										$stil4m$elm_syntax$Elm$Syntax$Node$Node,
										{end: expressionRange.end, start: startNameStart},
										{_arguments: _arguments.syntax, expression: result.syntax, name: startNameNode}),
									documentation: $elm$core$Maybe$Nothing,
									signature: $elm$core$Maybe$Nothing
								}))
					};
				} else {
					var signature = maybeSignature.a;
					var _v2 = signature.implementationName;
					var implementationNameRange = _v2.a;
					var _v3 = result.syntax;
					var expressionRange = _v3.a;
					return {
						comments: allComments,
						syntax: A2(
							$stil4m$elm_syntax$Elm$Syntax$Node$Node,
							{end: expressionRange.end, start: startNameStart},
							$stil4m$elm_syntax$Elm$Syntax$Declaration$FunctionDeclaration(
								{
									declaration: A2(
										$stil4m$elm_syntax$Elm$Syntax$Node$Node,
										{end: expressionRange.end, start: implementationNameRange.start},
										{_arguments: _arguments.syntax, expression: result.syntax, name: signature.implementationName}),
									documentation: $elm$core$Maybe$Nothing,
									signature: $elm$core$Maybe$Just(
										A3($stil4m$elm_syntax$Elm$Syntax$Node$combine, $stil4m$elm_syntax$Elm$Syntax$Signature$Signature, startNameNode, signature.typeAnnotation))
								}))
					};
				}
			}),
		$stil4m$elm_syntax$Elm$Parser$Tokens$functionNameNotInfixNode,
		$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
		A6(
			$stil4m$elm_syntax$ParserFast$map4OrSucceed,
			F4(
				function (commentsBeforeTypeAnnotation, typeAnnotationResult, implementationName, afterImplementationName) {
					return $elm$core$Maybe$Just(
						{
							comments: A2(
								$stil4m$elm_syntax$Rope$prependTo,
								afterImplementationName,
								A2(
									$stil4m$elm_syntax$Rope$prependTo,
									implementationName.comments,
									A2($stil4m$elm_syntax$Rope$prependTo, typeAnnotationResult.comments, commentsBeforeTypeAnnotation))),
							implementationName: implementationName.syntax,
							typeAnnotation: typeAnnotationResult.syntax
						});
				}),
			A2($stil4m$elm_syntax$ParserFast$symbolFollowedBy, ':', $stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout),
			$stil4m$elm_syntax$Elm$Parser$TypeAnnotation$typeAnnotation,
			$stil4m$elm_syntax$Elm$Parser$Layout$layoutStrictFollowedBy($stil4m$elm_syntax$Elm$Parser$Tokens$functionNameNode),
			$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
			$elm$core$Maybe$Nothing),
		$stil4m$elm_syntax$Elm$Parser$Declarations$parameterPatternsEqual,
		$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
		$stil4m$elm_syntax$Elm$Parser$Expression$expression));
var $stil4m$elm_syntax$Elm$Syntax$Declaration$InfixDeclaration = function (a) {
	return {$: 'InfixDeclaration', a: a};
};
var $stil4m$elm_syntax$Elm$Parser$Declarations$infixDirection = A3(
	$stil4m$elm_syntax$ParserFast$oneOf3,
	A2(
		$stil4m$elm_syntax$ParserFast$mapWithRange,
		$stil4m$elm_syntax$Elm$Syntax$Node$Node,
		A2($stil4m$elm_syntax$ParserFast$keyword, 'right', $stil4m$elm_syntax$Elm$Syntax$Infix$Right)),
	A2(
		$stil4m$elm_syntax$ParserFast$mapWithRange,
		$stil4m$elm_syntax$Elm$Syntax$Node$Node,
		A2($stil4m$elm_syntax$ParserFast$keyword, 'left', $stil4m$elm_syntax$Elm$Syntax$Infix$Left)),
	A2(
		$stil4m$elm_syntax$ParserFast$mapWithRange,
		$stil4m$elm_syntax$Elm$Syntax$Node$Node,
		A2($stil4m$elm_syntax$ParserFast$keyword, 'non', $stil4m$elm_syntax$Elm$Syntax$Infix$Non)));
var $stil4m$elm_syntax$ParserFast$errorAsOffsetAndInt = {_int: 0, offset: -1};
var $stil4m$elm_syntax$ParserFast$convertIntegerDecimal = F2(
	function (offset, src) {
		var _v0 = A3($elm$core$String$slice, offset, offset + 1, src);
		switch (_v0) {
			case '0':
				return {_int: 0, offset: offset + 1};
			case '1':
				return A3($stil4m$elm_syntax$ParserFast$convert0OrMore0To9s, 1, offset + 1, src);
			case '2':
				return A3($stil4m$elm_syntax$ParserFast$convert0OrMore0To9s, 2, offset + 1, src);
			case '3':
				return A3($stil4m$elm_syntax$ParserFast$convert0OrMore0To9s, 3, offset + 1, src);
			case '4':
				return A3($stil4m$elm_syntax$ParserFast$convert0OrMore0To9s, 4, offset + 1, src);
			case '5':
				return A3($stil4m$elm_syntax$ParserFast$convert0OrMore0To9s, 5, offset + 1, src);
			case '6':
				return A3($stil4m$elm_syntax$ParserFast$convert0OrMore0To9s, 6, offset + 1, src);
			case '7':
				return A3($stil4m$elm_syntax$ParserFast$convert0OrMore0To9s, 7, offset + 1, src);
			case '8':
				return A3($stil4m$elm_syntax$ParserFast$convert0OrMore0To9s, 8, offset + 1, src);
			case '9':
				return A3($stil4m$elm_syntax$ParserFast$convert0OrMore0To9s, 9, offset + 1, src);
			default:
				return $stil4m$elm_syntax$ParserFast$errorAsOffsetAndInt;
		}
	});
var $stil4m$elm_syntax$ParserFast$integerDecimalMapWithRange = function (rangeAndIntToRes) {
	return $stil4m$elm_syntax$ParserFast$Parser(
		function (s0) {
			var s1 = A2($stil4m$elm_syntax$ParserFast$convertIntegerDecimal, s0.offset, s0.src);
			if (_Utils_eq(s1.offset, -1)) {
				return A2(
					$stil4m$elm_syntax$ParserFast$Bad,
					false,
					A2($stil4m$elm_syntax$ParserFast$ExpectingNumber, s0.row, s0.col));
			} else {
				var newColumn = s0.col + (s1.offset - s0.offset);
				return A2(
					$stil4m$elm_syntax$ParserFast$Good,
					A2(
						rangeAndIntToRes,
						{
							end: {column: newColumn, row: s0.row},
							start: {column: s0.col, row: s0.row}
						},
						s1._int),
					{col: newColumn, indent: s0.indent, offset: s1.offset, row: s0.row, src: s0.src});
			}
		});
};
var $stil4m$elm_syntax$ParserFast$map9WithRange = function (func) {
	return function (_v0) {
		return function (_v1) {
			return function (_v2) {
				return function (_v3) {
					return function (_v4) {
						return function (_v5) {
							return function (_v6) {
								return function (_v7) {
									return function (_v8) {
										var parseA = _v0.a;
										var parseB = _v1.a;
										var parseC = _v2.a;
										var parseD = _v3.a;
										var parseE = _v4.a;
										var parseF = _v5.a;
										var parseG = _v6.a;
										var parseH = _v7.a;
										var parseI = _v8.a;
										return $stil4m$elm_syntax$ParserFast$Parser(
											function (s0) {
												var _v9 = parseA(s0);
												if (_v9.$ === 'Bad') {
													var committed = _v9.a;
													var x = _v9.b;
													return A2($stil4m$elm_syntax$ParserFast$Bad, committed, x);
												} else {
													var a = _v9.a;
													var s1 = _v9.b;
													var _v10 = parseB(s1);
													if (_v10.$ === 'Bad') {
														var x = _v10.b;
														return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
													} else {
														var b = _v10.a;
														var s2 = _v10.b;
														var _v11 = parseC(s2);
														if (_v11.$ === 'Bad') {
															var x = _v11.b;
															return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
														} else {
															var c = _v11.a;
															var s3 = _v11.b;
															var _v12 = parseD(s3);
															if (_v12.$ === 'Bad') {
																var x = _v12.b;
																return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
															} else {
																var d = _v12.a;
																var s4 = _v12.b;
																var _v13 = parseE(s4);
																if (_v13.$ === 'Bad') {
																	var x = _v13.b;
																	return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
																} else {
																	var e = _v13.a;
																	var s5 = _v13.b;
																	var _v14 = parseF(s5);
																	if (_v14.$ === 'Bad') {
																		var x = _v14.b;
																		return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
																	} else {
																		var f = _v14.a;
																		var s6 = _v14.b;
																		var _v15 = parseG(s6);
																		if (_v15.$ === 'Bad') {
																			var x = _v15.b;
																			return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
																		} else {
																			var g = _v15.a;
																			var s7 = _v15.b;
																			var _v16 = parseH(s7);
																			if (_v16.$ === 'Bad') {
																				var x = _v16.b;
																				return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
																			} else {
																				var h = _v16.a;
																				var s8 = _v16.b;
																				var _v17 = parseI(s8);
																				if (_v17.$ === 'Bad') {
																					var x = _v17.b;
																					return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
																				} else {
																					var i = _v17.a;
																					var s9 = _v17.b;
																					return A2(
																						$stil4m$elm_syntax$ParserFast$Good,
																						func(
																							{
																								end: {column: s9.col, row: s9.row},
																								start: {column: s0.col, row: s0.row}
																							})(a)(b)(c)(d)(e)(f)(g)(h)(i),
																						s9);
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											});
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var $stil4m$elm_syntax$Elm$Parser$Declarations$infixDeclaration = $stil4m$elm_syntax$ParserFast$map9WithRange(
	function (range) {
		return function (commentsAfterInfix) {
			return function (direction) {
				return function (commentsAfterDirection) {
					return function (precedence) {
						return function (commentsAfterPrecedence) {
							return function (operator) {
								return function (commentsAfterOperator) {
									return function (commentsAfterEqual) {
										return function (fn) {
											return {
												comments: A2(
													$stil4m$elm_syntax$Rope$prependTo,
													commentsAfterEqual,
													A2(
														$stil4m$elm_syntax$Rope$prependTo,
														commentsAfterOperator,
														A2(
															$stil4m$elm_syntax$Rope$prependTo,
															commentsAfterPrecedence,
															A2($stil4m$elm_syntax$Rope$prependTo, commentsAfterDirection, commentsAfterInfix)))),
												syntax: A2(
													$stil4m$elm_syntax$Elm$Syntax$Node$Node,
													range,
													$stil4m$elm_syntax$Elm$Syntax$Declaration$InfixDeclaration(
														{direction: direction, _function: fn, operator: operator, precedence: precedence}))
											};
										};
									};
								};
							};
						};
					};
				};
			};
		};
	})(
	A2($stil4m$elm_syntax$ParserFast$keywordFollowedBy, 'infix', $stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout))($stil4m$elm_syntax$Elm$Parser$Declarations$infixDirection)($stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout)(
	$stil4m$elm_syntax$ParserFast$integerDecimalMapWithRange($stil4m$elm_syntax$Elm$Syntax$Node$Node))($stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout)(
	A2(
		$stil4m$elm_syntax$ParserFast$symbolFollowedBy,
		'(',
		A4(
			$stil4m$elm_syntax$ParserFast$whileWithoutLinebreakAnd2PartUtf16ValidateMapWithRangeBacktrackableFollowedBySymbol,
			F2(
				function (operatorRange, operator) {
					return A2(
						$stil4m$elm_syntax$Elm$Syntax$Node$Node,
						{
							end: {column: operatorRange.end.column + 1, row: operatorRange.end.row},
							start: {column: operatorRange.start.column - 1, row: operatorRange.start.row}
						},
						operator);
				}),
			$stil4m$elm_syntax$Elm$Parser$Tokens$isOperatorSymbolChar,
			$stil4m$elm_syntax$Elm$Parser$Tokens$isAllowedOperatorToken,
			')')))($stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout)(
	A2($stil4m$elm_syntax$ParserFast$symbolFollowedBy, '=', $stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout))($stil4m$elm_syntax$Elm$Parser$Tokens$functionNameNode);
var $stil4m$elm_syntax$ParserFast$oneOf5 = F5(
	function (_v0, _v1, _v2, _v3, _v4) {
		var attemptFirst = _v0.a;
		var attemptSecond = _v1.a;
		var attemptThird = _v2.a;
		var attemptFourth = _v3.a;
		var attemptFifth = _v4.a;
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s) {
				var _v5 = attemptFirst(s);
				if (_v5.$ === 'Good') {
					var firstGood = _v5;
					return firstGood;
				} else {
					var firstBad = _v5;
					var firstCommitted = firstBad.a;
					var firstX = firstBad.b;
					if (firstCommitted) {
						return firstBad;
					} else {
						var _v6 = attemptSecond(s);
						if (_v6.$ === 'Good') {
							var secondGood = _v6;
							return secondGood;
						} else {
							var secondBad = _v6;
							var secondCommitted = secondBad.a;
							var secondX = secondBad.b;
							if (secondCommitted) {
								return secondBad;
							} else {
								var _v7 = attemptThird(s);
								if (_v7.$ === 'Good') {
									var thirdGood = _v7;
									return thirdGood;
								} else {
									var thirdBad = _v7;
									var thirdCommitted = thirdBad.a;
									var thirdX = thirdBad.b;
									if (thirdCommitted) {
										return thirdBad;
									} else {
										var _v8 = attemptFourth(s);
										if (_v8.$ === 'Good') {
											var fourthGood = _v8;
											return fourthGood;
										} else {
											var fourthBad = _v8;
											var fourthCommitted = fourthBad.a;
											var fourthX = fourthBad.b;
											if (fourthCommitted) {
												return fourthBad;
											} else {
												var _v9 = attemptFifth(s);
												if (_v9.$ === 'Good') {
													var fifthGood = _v9;
													return fifthGood;
												} else {
													var fifthBad = _v9;
													var fifthCommitted = fifthBad.a;
													var fifthX = fifthBad.b;
													return fifthCommitted ? fifthBad : A2(
														$stil4m$elm_syntax$ParserFast$Bad,
														false,
														A3(
															$stil4m$elm_syntax$ParserFast$ExpectingOneOf,
															firstX,
															secondX,
															_List_fromArray(
																[thirdX, fourthX, fifthX])));
												}
											}
										}
									}
								}
							}
						}
					}
				}
			});
	});
var $stil4m$elm_syntax$Elm$Parser$Declarations$portDeclarationWithoutDocumentation = A6(
	$stil4m$elm_syntax$ParserFast$map5,
	F5(
		function (commentsAfterPort, name, commentsAfterName, commentsAfterColon, typeAnnotationResult) {
			var nameRange = name.a;
			var _v0 = typeAnnotationResult.syntax;
			var end = _v0.a.end;
			return {
				comments: A2(
					$stil4m$elm_syntax$Rope$prependTo,
					typeAnnotationResult.comments,
					A2(
						$stil4m$elm_syntax$Rope$prependTo,
						commentsAfterColon,
						A2($stil4m$elm_syntax$Rope$prependTo, commentsAfterName, commentsAfterPort))),
				syntax: A2(
					$stil4m$elm_syntax$Elm$Syntax$Node$Node,
					{
						end: end,
						start: {column: 1, row: nameRange.start.row}
					},
					$stil4m$elm_syntax$Elm$Syntax$Declaration$PortDeclaration(
						{name: name, typeAnnotation: typeAnnotationResult.syntax}))
			};
		}),
	A2($stil4m$elm_syntax$ParserFast$keywordFollowedBy, 'port', $stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout),
	$stil4m$elm_syntax$Elm$Parser$Tokens$functionNameNode,
	$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
	A2($stil4m$elm_syntax$ParserFast$symbolFollowedBy, ':', $stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout),
	$stil4m$elm_syntax$Elm$Parser$TypeAnnotation$typeAnnotation);
var $stil4m$elm_syntax$Elm$Parser$Declarations$TypeDeclarationWithoutDocumentation = function (a) {
	return {$: 'TypeDeclarationWithoutDocumentation', a: a};
};
var $stil4m$elm_syntax$Elm$Parser$Declarations$customTypeDefinitionWithoutDocumentationAfterTypePrefix = A7(
	$stil4m$elm_syntax$ParserFast$map6,
	F6(
		function (name, commentsAfterName, parameters, commentsAfterEqual, headVariant, tailVariantsReverse) {
			return {
				comments: A2(
					$stil4m$elm_syntax$Rope$prependTo,
					tailVariantsReverse.comments,
					A2(
						$stil4m$elm_syntax$Rope$prependTo,
						headVariant.comments,
						A2(
							$stil4m$elm_syntax$Rope$prependTo,
							commentsAfterEqual,
							A2($stil4m$elm_syntax$Rope$prependTo, parameters.comments, commentsAfterName)))),
				syntax: $stil4m$elm_syntax$Elm$Parser$Declarations$TypeDeclarationWithoutDocumentation(
					{headVariant: headVariant.syntax, name: name, parameters: parameters.syntax, tailVariantsReverse: tailVariantsReverse.syntax})
			};
		}),
	$stil4m$elm_syntax$Elm$Parser$Tokens$typeNameNode,
	$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
	$stil4m$elm_syntax$Elm$Parser$Declarations$typeGenericListEquals,
	$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
	$stil4m$elm_syntax$Elm$Parser$Declarations$valueConstructorOptimisticLayout,
	$stil4m$elm_syntax$ParserWithComments$manyWithoutReverse(
		A2(
			$stil4m$elm_syntax$ParserFast$symbolFollowedBy,
			'|',
			A2(
				$stil4m$elm_syntax$Elm$Parser$Layout$positivelyIndentedPlusFollowedBy,
				1,
				A3(
					$stil4m$elm_syntax$ParserFast$map2,
					F2(
						function (commentsBeforePipe, variantResult) {
							return {
								comments: A2($stil4m$elm_syntax$Rope$prependTo, variantResult.comments, commentsBeforePipe),
								syntax: variantResult.syntax
							};
						}),
					$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
					$stil4m$elm_syntax$Elm$Parser$Declarations$valueConstructorOptimisticLayout)))));
var $stil4m$elm_syntax$ParserFast$map2WithStartLocation = F3(
	function (func, _v0, _v1) {
		var parseA = _v0.a;
		var parseB = _v1.a;
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s0) {
				var _v2 = parseA(s0);
				if (_v2.$ === 'Bad') {
					var committed = _v2.a;
					var x = _v2.b;
					return A2($stil4m$elm_syntax$ParserFast$Bad, committed, x);
				} else {
					var a = _v2.a;
					var s1 = _v2.b;
					var _v3 = parseB(s1);
					if (_v3.$ === 'Bad') {
						var x = _v3.b;
						return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
					} else {
						var b = _v3.a;
						var s2 = _v3.b;
						return A2(
							$stil4m$elm_syntax$ParserFast$Good,
							A3(
								func,
								{column: s0.col, row: s0.row},
								a,
								b),
							s2);
					}
				}
			});
	});
var $stil4m$elm_syntax$Elm$Parser$Declarations$TypeAliasDeclarationWithoutDocumentation = function (a) {
	return {$: 'TypeAliasDeclarationWithoutDocumentation', a: a};
};
var $stil4m$elm_syntax$Elm$Parser$Declarations$typeAliasDefinitionWithoutDocumentationAfterTypePrefix = A7(
	$stil4m$elm_syntax$ParserFast$map6,
	F6(
		function (commentsAfterAlias, name, commentsAfterName, parameters, commentsAfterEqual, typeAnnotationResult) {
			return {
				comments: A2(
					$stil4m$elm_syntax$Rope$prependTo,
					typeAnnotationResult.comments,
					A2(
						$stil4m$elm_syntax$Rope$prependTo,
						commentsAfterEqual,
						A2(
							$stil4m$elm_syntax$Rope$prependTo,
							parameters.comments,
							A2($stil4m$elm_syntax$Rope$prependTo, commentsAfterName, commentsAfterAlias)))),
				syntax: $stil4m$elm_syntax$Elm$Parser$Declarations$TypeAliasDeclarationWithoutDocumentation(
					{name: name, parameters: parameters.syntax, typeAnnotation: typeAnnotationResult.syntax})
			};
		}),
	A2($stil4m$elm_syntax$ParserFast$keywordFollowedBy, 'alias', $stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout),
	$stil4m$elm_syntax$Elm$Parser$Tokens$typeNameNode,
	$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
	$stil4m$elm_syntax$Elm$Parser$Declarations$typeGenericListEquals,
	$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
	$stil4m$elm_syntax$Elm$Parser$TypeAnnotation$typeAnnotation);
var $stil4m$elm_syntax$Elm$Parser$Declarations$typeOrTypeAliasDefinitionWithoutDocumentation = A3(
	$stil4m$elm_syntax$ParserFast$map2WithStartLocation,
	F3(
		function (start, commentsAfterType, afterStart) {
			var allComments = A2($stil4m$elm_syntax$Rope$prependTo, afterStart.comments, commentsAfterType);
			var _v0 = afterStart.syntax;
			if (_v0.$ === 'TypeDeclarationWithoutDocumentation') {
				var typeDeclarationAfterDocumentation = _v0.a;
				var end = function () {
					var _v1 = typeDeclarationAfterDocumentation.tailVariantsReverse;
					if (_v1.b) {
						var _v2 = _v1.a;
						var range = _v2.a;
						return range.end;
					} else {
						var _v3 = typeDeclarationAfterDocumentation.headVariant;
						var headVariantRange = _v3.a;
						return headVariantRange.end;
					}
				}();
				return {
					comments: allComments,
					syntax: A2(
						$stil4m$elm_syntax$Elm$Syntax$Node$Node,
						{end: end, start: start},
						$stil4m$elm_syntax$Elm$Syntax$Declaration$CustomTypeDeclaration(
							{
								constructors: A2(
									$elm$core$List$cons,
									typeDeclarationAfterDocumentation.headVariant,
									$elm$core$List$reverse(typeDeclarationAfterDocumentation.tailVariantsReverse)),
								documentation: $elm$core$Maybe$Nothing,
								generics: typeDeclarationAfterDocumentation.parameters,
								name: typeDeclarationAfterDocumentation.name
							}))
				};
			} else {
				var typeAliasDeclarationAfterDocumentation = _v0.a;
				var _v4 = typeAliasDeclarationAfterDocumentation.typeAnnotation;
				var typeAnnotationRange = _v4.a;
				return {
					comments: allComments,
					syntax: A2(
						$stil4m$elm_syntax$Elm$Syntax$Node$Node,
						{end: typeAnnotationRange.end, start: start},
						$stil4m$elm_syntax$Elm$Syntax$Declaration$AliasDeclaration(
							{documentation: $elm$core$Maybe$Nothing, generics: typeAliasDeclarationAfterDocumentation.parameters, name: typeAliasDeclarationAfterDocumentation.name, typeAnnotation: typeAliasDeclarationAfterDocumentation.typeAnnotation}))
				};
			}
		}),
	A2($stil4m$elm_syntax$ParserFast$keywordFollowedBy, 'type', $stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout),
	A2($stil4m$elm_syntax$ParserFast$oneOf2, $stil4m$elm_syntax$Elm$Parser$Declarations$typeAliasDefinitionWithoutDocumentationAfterTypePrefix, $stil4m$elm_syntax$Elm$Parser$Declarations$customTypeDefinitionWithoutDocumentationAfterTypePrefix));
var $stil4m$elm_syntax$Elm$Parser$Declarations$declaration = A5($stil4m$elm_syntax$ParserFast$oneOf5, $stil4m$elm_syntax$Elm$Parser$Declarations$functionDeclarationWithoutDocumentation, $stil4m$elm_syntax$Elm$Parser$Declarations$declarationWithDocumentation, $stil4m$elm_syntax$Elm$Parser$Declarations$typeOrTypeAliasDefinitionWithoutDocumentation, $stil4m$elm_syntax$Elm$Parser$Declarations$portDeclarationWithoutDocumentation, $stil4m$elm_syntax$Elm$Parser$Declarations$infixDeclaration);
var $stil4m$elm_syntax$ParserFast$columnAndThen = function (callback) {
	return $stil4m$elm_syntax$ParserFast$Parser(
		function (s) {
			var _v0 = callback(s.col);
			var parse = _v0.a;
			return parse(s);
		});
};
var $stil4m$elm_syntax$Elm$Parser$Layout$problemModuleLevelIndentation = $stil4m$elm_syntax$ParserFast$problem('must be on module-level indentation');
var $stil4m$elm_syntax$Elm$Parser$Layout$moduleLevelIndentationFollowedBy = function (nextParser) {
	return $stil4m$elm_syntax$ParserFast$columnAndThen(
		function (column) {
			return (column === 1) ? nextParser : $stil4m$elm_syntax$Elm$Parser$Layout$problemModuleLevelIndentation;
		});
};
var $stil4m$elm_syntax$Elm$Parser$File$fileDeclarations = $stil4m$elm_syntax$ParserWithComments$many(
	$stil4m$elm_syntax$Elm$Parser$Layout$moduleLevelIndentationFollowedBy(
		A3(
			$stil4m$elm_syntax$ParserFast$map2,
			F2(
				function (declarationParsed, commentsAfter) {
					return {
						comments: A2($stil4m$elm_syntax$Rope$prependTo, commentsAfter, declarationParsed.comments),
						syntax: declarationParsed.syntax
					};
				}),
			$stil4m$elm_syntax$Elm$Parser$Declarations$declaration,
			$stil4m$elm_syntax$Elm$Parser$Layout$optimisticLayout)));
var $stil4m$elm_syntax$Elm$Syntax$Exposing$All = function (a) {
	return {$: 'All', a: a};
};
var $stil4m$elm_syntax$Elm$Syntax$Exposing$Explicit = function (a) {
	return {$: 'Explicit', a: a};
};
var $stil4m$elm_syntax$Elm$Syntax$Exposing$FunctionExpose = function (a) {
	return {$: 'FunctionExpose', a: a};
};
var $stil4m$elm_syntax$Elm$Parser$Expose$functionExpose = $stil4m$elm_syntax$Elm$Parser$Tokens$functionNameMapWithRange(
	F2(
		function (range, name) {
			return {
				comments: $stil4m$elm_syntax$Rope$empty,
				syntax: A2(
					$stil4m$elm_syntax$Elm$Syntax$Node$Node,
					range,
					$stil4m$elm_syntax$Elm$Syntax$Exposing$FunctionExpose(name))
			};
		}));
var $stil4m$elm_syntax$Elm$Syntax$Exposing$InfixExpose = function (a) {
	return {$: 'InfixExpose', a: a};
};
var $stil4m$elm_syntax$Elm$Parser$Tokens$parensEnd = A2($stil4m$elm_syntax$ParserFast$symbol, ')', _Utils_Tuple0);
var $stil4m$elm_syntax$Elm$Parser$Expose$infixExpose = A3(
	$stil4m$elm_syntax$ParserFast$map2WithRange,
	F3(
		function (range, infixName, _v0) {
			return {
				comments: $stil4m$elm_syntax$Rope$empty,
				syntax: A2(
					$stil4m$elm_syntax$Elm$Syntax$Node$Node,
					range,
					$stil4m$elm_syntax$Elm$Syntax$Exposing$InfixExpose(infixName))
			};
		}),
	A2(
		$stil4m$elm_syntax$ParserFast$symbolFollowedBy,
		'(',
		A2(
			$stil4m$elm_syntax$ParserFast$ifFollowedByWhileWithoutLinebreak,
			function (c) {
				switch (c.valueOf()) {
					case ')':
						return false;
					case '\n':
						return false;
					case ' ':
						return false;
					default:
						return true;
				}
			},
			function (c) {
				switch (c.valueOf()) {
					case ')':
						return false;
					case '\n':
						return false;
					case ' ':
						return false;
					default:
						return true;
				}
			})),
	$stil4m$elm_syntax$Elm$Parser$Tokens$parensEnd);
var $stil4m$elm_syntax$Elm$Syntax$Exposing$TypeExpose = function (a) {
	return {$: 'TypeExpose', a: a};
};
var $stil4m$elm_syntax$Elm$Syntax$Exposing$TypeOrAliasExpose = function (a) {
	return {$: 'TypeOrAliasExpose', a: a};
};
var $stil4m$elm_syntax$ParserFast$map2WithRangeOrSucceed = F4(
	function (func, _v0, _v1, fallback) {
		var parseA = _v0.a;
		var parseB = _v1.a;
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s0) {
				var _v2 = parseA(s0);
				if (_v2.$ === 'Bad') {
					var c1 = _v2.a;
					var x = _v2.b;
					return c1 ? A2($stil4m$elm_syntax$ParserFast$Bad, true, x) : A2($stil4m$elm_syntax$ParserFast$Good, fallback, s0);
				} else {
					var a = _v2.a;
					var s1 = _v2.b;
					var _v3 = parseB(s1);
					if (_v3.$ === 'Bad') {
						var x = _v3.b;
						return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
					} else {
						var b = _v3.a;
						var s2 = _v3.b;
						return A2(
							$stil4m$elm_syntax$ParserFast$Good,
							A3(
								func,
								{
									end: {column: s2.col, row: s2.row},
									start: {column: s0.col, row: s0.row}
								},
								a,
								b),
							s2);
					}
				}
			});
	});
var $stil4m$elm_syntax$Elm$Parser$Expose$typeExpose = A4(
	$stil4m$elm_syntax$ParserFast$map3,
	F3(
		function (_v0, commentsBeforeMaybeOpen, maybeOpen) {
			var typeNameRange = _v0.a;
			var typeName = _v0.b;
			return {
				comments: A2($stil4m$elm_syntax$Rope$prependTo, maybeOpen.comments, commentsBeforeMaybeOpen),
				syntax: function () {
					var _v1 = maybeOpen.syntax;
					if (_v1.$ === 'Nothing') {
						return A2(
							$stil4m$elm_syntax$Elm$Syntax$Node$Node,
							typeNameRange,
							$stil4m$elm_syntax$Elm$Syntax$Exposing$TypeOrAliasExpose(typeName));
					} else {
						var openRange = _v1.a;
						return A2(
							$stil4m$elm_syntax$Elm$Syntax$Node$Node,
							{end: openRange.end, start: typeNameRange.start},
							$stil4m$elm_syntax$Elm$Syntax$Exposing$TypeExpose(
								{name: typeName, open: maybeOpen.syntax}));
					}
				}()
			};
		}),
	$stil4m$elm_syntax$Elm$Parser$Tokens$typeNameNode,
	$stil4m$elm_syntax$Elm$Parser$Layout$optimisticLayout,
	A4(
		$stil4m$elm_syntax$ParserFast$map2WithRangeOrSucceed,
		F3(
			function (range, left, right) {
				return {
					comments: A2($stil4m$elm_syntax$Rope$prependTo, right, left),
					syntax: $elm$core$Maybe$Just(range)
				};
			}),
		A2($stil4m$elm_syntax$ParserFast$symbolFollowedBy, '(', $stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout),
		A2(
			$stil4m$elm_syntax$ParserFast$followedBySymbol,
			')',
			A2($stil4m$elm_syntax$ParserFast$symbolFollowedBy, '..', $stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout)),
		{comments: $stil4m$elm_syntax$Rope$empty, syntax: $elm$core$Maybe$Nothing}));
var $stil4m$elm_syntax$Elm$Parser$Expose$exposable = A3($stil4m$elm_syntax$ParserFast$oneOf3, $stil4m$elm_syntax$Elm$Parser$Expose$functionExpose, $stil4m$elm_syntax$Elm$Parser$Expose$typeExpose, $stil4m$elm_syntax$Elm$Parser$Expose$infixExpose);
var $stil4m$elm_syntax$Elm$Parser$Expose$exposingListInner = A2(
	$stil4m$elm_syntax$ParserFast$oneOf2,
	A4(
		$stil4m$elm_syntax$ParserFast$map3,
		F3(
			function (headElement, commentsAfterHeadElement, tailElements) {
				return {
					comments: A2(
						$stil4m$elm_syntax$Rope$prependTo,
						tailElements.comments,
						A2($stil4m$elm_syntax$Rope$prependTo, commentsAfterHeadElement, headElement.comments)),
					syntax: $stil4m$elm_syntax$Elm$Syntax$Exposing$Explicit(
						A2($elm$core$List$cons, headElement.syntax, tailElements.syntax))
				};
			}),
		$stil4m$elm_syntax$Elm$Parser$Expose$exposable,
		$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
		$stil4m$elm_syntax$ParserWithComments$many(
			A2(
				$stil4m$elm_syntax$ParserFast$symbolFollowedBy,
				',',
				$stil4m$elm_syntax$Elm$Parser$Layout$maybeAroundBothSides($stil4m$elm_syntax$Elm$Parser$Expose$exposable)))),
	A2(
		$stil4m$elm_syntax$ParserFast$mapWithRange,
		F2(
			function (range, commentsAfterDotDot) {
				return {
					comments: commentsAfterDotDot,
					syntax: $stil4m$elm_syntax$Elm$Syntax$Exposing$All(range)
				};
			}),
		A2($stil4m$elm_syntax$ParserFast$symbolFollowedBy, '..', $stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout)));
var $stil4m$elm_syntax$Elm$Parser$Expose$exposeDefinition = A4(
	$stil4m$elm_syntax$ParserFast$map3WithRange,
	F4(
		function (range, commentsAfterExposing, commentsBefore, exposingListInnerResult) {
			return {
				comments: A2(
					$stil4m$elm_syntax$Rope$prependTo,
					exposingListInnerResult.comments,
					A2($stil4m$elm_syntax$Rope$prependTo, commentsBefore, commentsAfterExposing)),
				syntax: A2($stil4m$elm_syntax$Elm$Syntax$Node$Node, range, exposingListInnerResult.syntax)
			};
		}),
	A2($stil4m$elm_syntax$ParserFast$symbolFollowedBy, 'exposing', $stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout),
	A2($stil4m$elm_syntax$ParserFast$symbolFollowedBy, '(', $stil4m$elm_syntax$Elm$Parser$Layout$optimisticLayout),
	A2($stil4m$elm_syntax$ParserFast$followedBySymbol, ')', $stil4m$elm_syntax$Elm$Parser$Expose$exposingListInner));
var $stil4m$elm_syntax$ParserFast$map3OrSucceed = F5(
	function (func, _v0, _v1, _v2, fallback) {
		var parseA = _v0.a;
		var parseB = _v1.a;
		var parseC = _v2.a;
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s0) {
				var _v3 = parseA(s0);
				if (_v3.$ === 'Bad') {
					var c1 = _v3.a;
					var x = _v3.b;
					return c1 ? A2($stil4m$elm_syntax$ParserFast$Bad, true, x) : A2($stil4m$elm_syntax$ParserFast$Good, fallback, s0);
				} else {
					var a = _v3.a;
					var s1 = _v3.b;
					var _v4 = parseB(s1);
					if (_v4.$ === 'Bad') {
						var x = _v4.b;
						return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
					} else {
						var b = _v4.a;
						var s2 = _v4.b;
						var _v5 = parseC(s2);
						if (_v5.$ === 'Bad') {
							var x = _v5.b;
							return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
						} else {
							var c = _v5.a;
							var s3 = _v5.b;
							return A2(
								$stil4m$elm_syntax$ParserFast$Good,
								A3(func, a, b, c),
								s3);
						}
					}
				}
			});
	});
function $stil4m$elm_syntax$Elm$Parser$Base$cyclic$moduleNameOrEmpty() {
	return A4(
		$stil4m$elm_syntax$ParserFast$map2OrSucceed,
		F2(
			function (head, tail) {
				return A2($elm$core$List$cons, head, tail);
			}),
		A2($stil4m$elm_syntax$ParserFast$symbolFollowedBy, '.', $stil4m$elm_syntax$Elm$Parser$Tokens$typeName),
		$stil4m$elm_syntax$ParserFast$lazy(
			function (_v0) {
				return $stil4m$elm_syntax$Elm$Parser$Base$cyclic$moduleNameOrEmpty();
			}),
		_List_Nil);
}
try {
	var $stil4m$elm_syntax$Elm$Parser$Base$moduleNameOrEmpty = $stil4m$elm_syntax$Elm$Parser$Base$cyclic$moduleNameOrEmpty();
	$stil4m$elm_syntax$Elm$Parser$Base$cyclic$moduleNameOrEmpty = function () {
		return $stil4m$elm_syntax$Elm$Parser$Base$moduleNameOrEmpty;
	};
} catch ($) {
	throw 'Some top-level definitions from `Elm.Parser.Base` are causing infinite recursion:\n\n  ┌─────┐\n  │    moduleNameOrEmpty\n  └─────┘\n\nThese errors are very tricky, so read https://elm-lang.org/0.19.1/bad-recursion to learn how to fix it!';}
var $stil4m$elm_syntax$Elm$Parser$Base$moduleName = A3(
	$stil4m$elm_syntax$ParserFast$map2WithRange,
	F3(
		function (range, head, tail) {
			return A2(
				$stil4m$elm_syntax$Elm$Syntax$Node$Node,
				range,
				A2($elm$core$List$cons, head, tail));
		}),
	$stil4m$elm_syntax$Elm$Parser$Tokens$typeName,
	$stil4m$elm_syntax$Elm$Parser$Base$moduleNameOrEmpty);
var $stil4m$elm_syntax$Elm$Parser$Tokens$typeNameMapWithRange = function (rangeAndNameToRes) {
	return A3($stil4m$elm_syntax$ParserFast$ifFollowedByWhileMapWithRangeWithoutLinebreak, rangeAndNameToRes, $stil4m$elm_syntax$Char$Extra$unicodeIsUpperFast, $stil4m$elm_syntax$Char$Extra$unicodeIsAlphaNumOrUnderscoreFast);
};
var $stil4m$elm_syntax$Elm$Parser$Imports$importDefinition = A6(
	$stil4m$elm_syntax$ParserFast$map5WithStartLocation,
	F6(
		function (start, commentsAfterImport, mod, commentsAfterModuleName, maybeModuleAlias, maybeExposingList) {
			var commentsBeforeAlias = A2($stil4m$elm_syntax$Rope$prependTo, commentsAfterModuleName, commentsAfterImport);
			if (maybeModuleAlias.$ === 'Nothing') {
				if (maybeExposingList.$ === 'Nothing') {
					var _v2 = mod;
					var modRange = _v2.a;
					return {
						comments: commentsBeforeAlias,
						syntax: A2(
							$stil4m$elm_syntax$Elm$Syntax$Node$Node,
							{end: modRange.end, start: start},
							{exposingList: $elm$core$Maybe$Nothing, moduleAlias: $elm$core$Maybe$Nothing, moduleName: mod})
					};
				} else {
					var exposingListValue = maybeExposingList.a;
					var _v3 = exposingListValue.syntax;
					var exposingRange = _v3.a;
					return {
						comments: A2($stil4m$elm_syntax$Rope$prependTo, exposingListValue.comments, commentsBeforeAlias),
						syntax: A2(
							$stil4m$elm_syntax$Elm$Syntax$Node$Node,
							{end: exposingRange.end, start: start},
							{
								exposingList: $elm$core$Maybe$Just(exposingListValue.syntax),
								moduleAlias: $elm$core$Maybe$Nothing,
								moduleName: mod
							})
					};
				}
			} else {
				var moduleAliasResult = maybeModuleAlias.a;
				if (maybeExposingList.$ === 'Nothing') {
					var _v5 = moduleAliasResult.syntax;
					var aliasRange = _v5.a;
					return {
						comments: A2($stil4m$elm_syntax$Rope$prependTo, moduleAliasResult.comments, commentsBeforeAlias),
						syntax: A2(
							$stil4m$elm_syntax$Elm$Syntax$Node$Node,
							{end: aliasRange.end, start: start},
							{
								exposingList: $elm$core$Maybe$Nothing,
								moduleAlias: $elm$core$Maybe$Just(moduleAliasResult.syntax),
								moduleName: mod
							})
					};
				} else {
					var exposingListValue = maybeExposingList.a;
					var _v6 = exposingListValue.syntax;
					var exposingRange = _v6.a;
					return {
						comments: A2(
							$stil4m$elm_syntax$Rope$prependTo,
							exposingListValue.comments,
							A2($stil4m$elm_syntax$Rope$prependTo, moduleAliasResult.comments, commentsBeforeAlias)),
						syntax: A2(
							$stil4m$elm_syntax$Elm$Syntax$Node$Node,
							{end: exposingRange.end, start: start},
							{
								exposingList: $elm$core$Maybe$Just(exposingListValue.syntax),
								moduleAlias: $elm$core$Maybe$Just(moduleAliasResult.syntax),
								moduleName: mod
							})
					};
				}
			}
		}),
	A2($stil4m$elm_syntax$ParserFast$keywordFollowedBy, 'import', $stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout),
	$stil4m$elm_syntax$Elm$Parser$Base$moduleName,
	$stil4m$elm_syntax$Elm$Parser$Layout$optimisticLayout,
	A5(
		$stil4m$elm_syntax$ParserFast$map3OrSucceed,
		F3(
			function (commentsBefore, moduleAliasNode, commentsAfter) {
				return $elm$core$Maybe$Just(
					{
						comments: A2($stil4m$elm_syntax$Rope$prependTo, commentsAfter, commentsBefore),
						syntax: moduleAliasNode
					});
			}),
		A2($stil4m$elm_syntax$ParserFast$keywordFollowedBy, 'as', $stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout),
		$stil4m$elm_syntax$Elm$Parser$Tokens$typeNameMapWithRange(
			F2(
				function (range, moduleAlias) {
					return A2(
						$stil4m$elm_syntax$Elm$Syntax$Node$Node,
						range,
						_List_fromArray(
							[moduleAlias]));
				})),
		$stil4m$elm_syntax$Elm$Parser$Layout$optimisticLayout,
		$elm$core$Maybe$Nothing),
	A4(
		$stil4m$elm_syntax$ParserFast$map2OrSucceed,
		F2(
			function (exposingResult, commentsAfter) {
				return $elm$core$Maybe$Just(
					{
						comments: A2($stil4m$elm_syntax$Rope$prependTo, commentsAfter, exposingResult.comments),
						syntax: exposingResult.syntax
					});
			}),
		$stil4m$elm_syntax$Elm$Parser$Expose$exposeDefinition,
		$stil4m$elm_syntax$Elm$Parser$Layout$optimisticLayout,
		$elm$core$Maybe$Nothing));
var $stil4m$elm_syntax$Elm$Parser$Layout$endsTopIndented = function (parser) {
	return A3(
		$stil4m$elm_syntax$ParserFast$validateEndColumnIndentation,
		F2(
			function (column, indent) {
				return !(column - indent);
			}),
		'must be on top indentation',
		parser);
};
var $stil4m$elm_syntax$Elm$Parser$Layout$layoutStrict = $stil4m$elm_syntax$Elm$Parser$Layout$endsTopIndented($stil4m$elm_syntax$Elm$Parser$Layout$optimisticLayout);
var $stil4m$elm_syntax$Elm$Parser$Layout$layoutStrictFollowedByComments = function (nextParser) {
	return A3(
		$stil4m$elm_syntax$ParserFast$map2,
		F2(
			function (commentsBefore, afterComments) {
				return A2($stil4m$elm_syntax$Rope$prependTo, afterComments, commentsBefore);
			}),
		$stil4m$elm_syntax$Elm$Parser$Layout$optimisticLayout,
		$stil4m$elm_syntax$Elm$Parser$Layout$onTopIndentationFollowedBy(nextParser));
};
var $stil4m$elm_syntax$Elm$Syntax$Module$EffectModule = function (a) {
	return {$: 'EffectModule', a: a};
};
var $stil4m$elm_syntax$Elm$Parser$Modules$effectWhereClause = A5(
	$stil4m$elm_syntax$ParserFast$map4,
	F4(
		function (fnName, commentsAfterFnName, commentsAfterEqual, typeName_) {
			return {
				comments: A2($stil4m$elm_syntax$Rope$prependTo, commentsAfterEqual, commentsAfterFnName),
				syntax: _Utils_Tuple2(fnName, typeName_)
			};
		}),
	$stil4m$elm_syntax$Elm$Parser$Tokens$functionName,
	$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
	A2($stil4m$elm_syntax$ParserFast$symbolFollowedBy, '=', $stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout),
	$stil4m$elm_syntax$Elm$Parser$Tokens$typeNameNode);
var $stil4m$elm_syntax$List$Extra$find = F2(
	function (predicate, list) {
		find:
		while (true) {
			if (!list.b) {
				return $elm$core$Maybe$Nothing;
			} else {
				var x = list.a;
				var xs = list.b;
				if (predicate(x)) {
					return $elm$core$Maybe$Just(x);
				} else {
					var $temp$predicate = predicate,
						$temp$list = xs;
					predicate = $temp$predicate;
					list = $temp$list;
					continue find;
				}
			}
		}
	});
var $stil4m$elm_syntax$Elm$Parser$Modules$whereBlock = A2(
	$stil4m$elm_syntax$ParserFast$followedBySymbol,
	'}',
	A2(
		$stil4m$elm_syntax$ParserFast$symbolFollowedBy,
		'{',
		A5(
			$stil4m$elm_syntax$ParserFast$map4,
			F4(
				function (commentsBeforeHead, head, commentsAfterHead, tail) {
					var pairs = A2($elm$core$List$cons, head.syntax, tail.syntax);
					return {
						comments: A2(
							$stil4m$elm_syntax$Rope$prependTo,
							tail.comments,
							A2(
								$stil4m$elm_syntax$Rope$prependTo,
								commentsAfterHead,
								A2($stil4m$elm_syntax$Rope$prependTo, head.comments, commentsBeforeHead))),
						syntax: {
							command: A2(
								$elm$core$Maybe$map,
								$elm$core$Tuple$second,
								A2(
									$stil4m$elm_syntax$List$Extra$find,
									function (_v0) {
										var fnName = _v0.a;
										return fnName === 'command';
									},
									pairs)),
							subscription: A2(
								$elm$core$Maybe$map,
								$elm$core$Tuple$second,
								A2(
									$stil4m$elm_syntax$List$Extra$find,
									function (_v1) {
										var fnName = _v1.a;
										return fnName === 'subscription';
									},
									pairs))
						}
					};
				}),
			$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
			$stil4m$elm_syntax$Elm$Parser$Modules$effectWhereClause,
			$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
			$stil4m$elm_syntax$ParserWithComments$many(
				A2(
					$stil4m$elm_syntax$ParserFast$symbolFollowedBy,
					',',
					$stil4m$elm_syntax$Elm$Parser$Layout$maybeAroundBothSides($stil4m$elm_syntax$Elm$Parser$Modules$effectWhereClause))))));
var $stil4m$elm_syntax$Elm$Parser$Modules$effectWhereClauses = A3(
	$stil4m$elm_syntax$ParserFast$map2,
	F2(
		function (commentsBefore, whereResult) {
			return {
				comments: A2($stil4m$elm_syntax$Rope$prependTo, whereResult.comments, commentsBefore),
				syntax: whereResult.syntax
			};
		}),
	A2($stil4m$elm_syntax$ParserFast$keywordFollowedBy, 'where', $stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout),
	$stil4m$elm_syntax$Elm$Parser$Modules$whereBlock);
var $stil4m$elm_syntax$ParserFast$map7WithRange = F8(
	function (func, _v0, _v1, _v2, _v3, _v4, _v5, _v6) {
		var parseA = _v0.a;
		var parseB = _v1.a;
		var parseC = _v2.a;
		var parseD = _v3.a;
		var parseE = _v4.a;
		var parseF = _v5.a;
		var parseG = _v6.a;
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s0) {
				var _v7 = parseA(s0);
				if (_v7.$ === 'Bad') {
					var committed = _v7.a;
					var x = _v7.b;
					return A2($stil4m$elm_syntax$ParserFast$Bad, committed, x);
				} else {
					var a = _v7.a;
					var s1 = _v7.b;
					var _v8 = parseB(s1);
					if (_v8.$ === 'Bad') {
						var x = _v8.b;
						return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
					} else {
						var b = _v8.a;
						var s2 = _v8.b;
						var _v9 = parseC(s2);
						if (_v9.$ === 'Bad') {
							var x = _v9.b;
							return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
						} else {
							var c = _v9.a;
							var s3 = _v9.b;
							var _v10 = parseD(s3);
							if (_v10.$ === 'Bad') {
								var x = _v10.b;
								return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
							} else {
								var d = _v10.a;
								var s4 = _v10.b;
								var _v11 = parseE(s4);
								if (_v11.$ === 'Bad') {
									var x = _v11.b;
									return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
								} else {
									var e = _v11.a;
									var s5 = _v11.b;
									var _v12 = parseF(s5);
									if (_v12.$ === 'Bad') {
										var x = _v12.b;
										return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
									} else {
										var f = _v12.a;
										var s6 = _v12.b;
										var _v13 = parseG(s6);
										if (_v13.$ === 'Bad') {
											var x = _v13.b;
											return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
										} else {
											var g = _v13.a;
											var s7 = _v13.b;
											return A2(
												$stil4m$elm_syntax$ParserFast$Good,
												A8(
													func,
													{
														end: {column: s7.col, row: s7.row},
														start: {column: s0.col, row: s0.row}
													},
													a,
													b,
													c,
													d,
													e,
													f,
													g),
												s7);
										}
									}
								}
							}
						}
					}
				}
			});
	});
var $stil4m$elm_syntax$Elm$Parser$Modules$effectModuleDefinition = A8(
	$stil4m$elm_syntax$ParserFast$map7WithRange,
	F8(
		function (range, commentsAfterEffect, commentsAfterModule, name, commentsAfterName, whereClauses, commentsAfterWhereClauses, exp) {
			return {
				comments: A2(
					$stil4m$elm_syntax$Rope$prependTo,
					exp.comments,
					A2(
						$stil4m$elm_syntax$Rope$prependTo,
						commentsAfterWhereClauses,
						A2(
							$stil4m$elm_syntax$Rope$prependTo,
							whereClauses.comments,
							A2(
								$stil4m$elm_syntax$Rope$prependTo,
								commentsAfterName,
								A2($stil4m$elm_syntax$Rope$prependTo, commentsAfterModule, commentsAfterEffect))))),
				syntax: A2(
					$stil4m$elm_syntax$Elm$Syntax$Node$Node,
					range,
					$stil4m$elm_syntax$Elm$Syntax$Module$EffectModule(
						{command: whereClauses.syntax.command, exposingList: exp.syntax, moduleName: name, subscription: whereClauses.syntax.subscription}))
			};
		}),
	A2($stil4m$elm_syntax$ParserFast$keywordFollowedBy, 'effect', $stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout),
	A2($stil4m$elm_syntax$ParserFast$keywordFollowedBy, 'module', $stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout),
	$stil4m$elm_syntax$Elm$Parser$Base$moduleName,
	$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
	$stil4m$elm_syntax$Elm$Parser$Modules$effectWhereClauses,
	$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
	$stil4m$elm_syntax$Elm$Parser$Expose$exposeDefinition);
var $stil4m$elm_syntax$Elm$Syntax$Module$NormalModule = function (a) {
	return {$: 'NormalModule', a: a};
};
var $stil4m$elm_syntax$Elm$Parser$Modules$normalModuleDefinition = A5(
	$stil4m$elm_syntax$ParserFast$map4WithRange,
	F5(
		function (range, commentsAfterModule, moduleName, commentsAfterModuleName, exposingList) {
			return {
				comments: A2(
					$stil4m$elm_syntax$Rope$prependTo,
					exposingList.comments,
					A2($stil4m$elm_syntax$Rope$prependTo, commentsAfterModuleName, commentsAfterModule)),
				syntax: A2(
					$stil4m$elm_syntax$Elm$Syntax$Node$Node,
					range,
					$stil4m$elm_syntax$Elm$Syntax$Module$NormalModule(
						{exposingList: exposingList.syntax, moduleName: moduleName}))
			};
		}),
	A2($stil4m$elm_syntax$ParserFast$keywordFollowedBy, 'module', $stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout),
	$stil4m$elm_syntax$Elm$Parser$Base$moduleName,
	$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
	$stil4m$elm_syntax$Elm$Parser$Expose$exposeDefinition);
var $stil4m$elm_syntax$Elm$Syntax$Module$PortModule = function (a) {
	return {$: 'PortModule', a: a};
};
var $stil4m$elm_syntax$Elm$Parser$Modules$portModuleDefinition = A6(
	$stil4m$elm_syntax$ParserFast$map5WithRange,
	F6(
		function (range, commentsAfterPort, commentsAfterModule, moduleName, commentsAfterModuleName, exposingList) {
			return {
				comments: A2(
					$stil4m$elm_syntax$Rope$prependTo,
					exposingList.comments,
					A2(
						$stil4m$elm_syntax$Rope$prependTo,
						commentsAfterModuleName,
						A2($stil4m$elm_syntax$Rope$prependTo, commentsAfterModule, commentsAfterPort))),
				syntax: A2(
					$stil4m$elm_syntax$Elm$Syntax$Node$Node,
					range,
					$stil4m$elm_syntax$Elm$Syntax$Module$PortModule(
						{exposingList: exposingList.syntax, moduleName: moduleName}))
			};
		}),
	A2($stil4m$elm_syntax$ParserFast$keywordFollowedBy, 'port', $stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout),
	A2($stil4m$elm_syntax$ParserFast$keywordFollowedBy, 'module', $stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout),
	$stil4m$elm_syntax$Elm$Parser$Base$moduleName,
	$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
	$stil4m$elm_syntax$Elm$Parser$Expose$exposeDefinition);
var $stil4m$elm_syntax$Elm$Parser$Modules$moduleDefinition = A3($stil4m$elm_syntax$ParserFast$oneOf3, $stil4m$elm_syntax$Elm$Parser$Modules$normalModuleDefinition, $stil4m$elm_syntax$Elm$Parser$Modules$portModuleDefinition, $stil4m$elm_syntax$Elm$Parser$Modules$effectModuleDefinition);
var $stil4m$elm_syntax$Elm$Parser$Comments$moduleDocumentation = $stil4m$elm_syntax$Elm$Parser$Comments$declarationDocumentation;
var $stil4m$elm_syntax$Rope$ropeLikelyFilledToListInto = F2(
	function (initialAcc, ropeLikelyFilled) {
		ropeLikelyFilledToListInto:
		while (true) {
			if (ropeLikelyFilled.$ === 'Leaf') {
				var onlyElement = ropeLikelyFilled.a;
				return A2($elm$core$List$cons, onlyElement, initialAcc);
			} else {
				var left = ropeLikelyFilled.a;
				var right = ropeLikelyFilled.b;
				var $temp$initialAcc = A2($stil4m$elm_syntax$Rope$ropeLikelyFilledToListInto, initialAcc, right),
					$temp$ropeLikelyFilled = left;
				initialAcc = $temp$initialAcc;
				ropeLikelyFilled = $temp$ropeLikelyFilled;
				continue ropeLikelyFilledToListInto;
			}
		}
	});
var $stil4m$elm_syntax$Rope$toList = function (rope) {
	if (rope.$ === 'Nothing') {
		return _List_Nil;
	} else {
		var ropeLikelyFilled = rope.a;
		return A2($stil4m$elm_syntax$Rope$ropeLikelyFilledToListInto, _List_Nil, ropeLikelyFilled);
	}
};
var $stil4m$elm_syntax$Elm$Parser$File$file = A5(
	$stil4m$elm_syntax$ParserFast$map4,
	F4(
		function (moduleDefinition, moduleComments, imports, declarations) {
			return {
				comments: $stil4m$elm_syntax$Rope$toList(
					A2(
						$stil4m$elm_syntax$Rope$prependTo,
						declarations.comments,
						A2(
							$stil4m$elm_syntax$Rope$prependTo,
							imports.comments,
							A2($stil4m$elm_syntax$Rope$prependTo, moduleComments, moduleDefinition.comments)))),
				declarations: declarations.syntax,
				imports: imports.syntax,
				moduleDefinition: moduleDefinition.syntax
			};
		}),
	$stil4m$elm_syntax$Elm$Parser$Layout$layoutStrictFollowedByWithComments($stil4m$elm_syntax$Elm$Parser$Modules$moduleDefinition),
	$stil4m$elm_syntax$Elm$Parser$Layout$layoutStrictFollowedByComments(
		A4(
			$stil4m$elm_syntax$ParserFast$map2OrSucceed,
			F2(
				function (moduleDocumentation, commentsAfter) {
					return A2(
						$stil4m$elm_syntax$Rope$filledPrependTo,
						commentsAfter,
						$stil4m$elm_syntax$Rope$one(moduleDocumentation));
				}),
			$stil4m$elm_syntax$Elm$Parser$Comments$moduleDocumentation,
			$stil4m$elm_syntax$Elm$Parser$Layout$layoutStrict,
			$stil4m$elm_syntax$Rope$empty)),
	$stil4m$elm_syntax$ParserWithComments$many($stil4m$elm_syntax$Elm$Parser$Imports$importDefinition),
	$stil4m$elm_syntax$Elm$Parser$File$fileDeclarations);
var $elm$parser$Parser$ExpectingEnd = {$: 'ExpectingEnd'};
var $elm$parser$Parser$ExpectingKeyword = function (a) {
	return {$: 'ExpectingKeyword', a: a};
};
var $elm$parser$Parser$ExpectingNumber = {$: 'ExpectingNumber'};
var $elm$parser$Parser$ExpectingSymbol = function (a) {
	return {$: 'ExpectingSymbol', a: a};
};
var $elm$parser$Parser$Problem = function (a) {
	return {$: 'Problem', a: a};
};
var $elm$parser$Parser$UnexpectedChar = {$: 'UnexpectedChar'};
var $stil4m$elm_syntax$ParserFast$ropeFilledToList = F2(
	function (problemToConvert, soFar) {
		switch (problemToConvert.$) {
			case 'ExpectingOneOf':
				var firstTry = problemToConvert.a;
				var secondTry = problemToConvert.b;
				var thirdTryUp = problemToConvert.c;
				return A2(
					$stil4m$elm_syntax$ParserFast$ropeFilledToList,
					firstTry,
					A2(
						$stil4m$elm_syntax$ParserFast$ropeFilledToList,
						secondTry,
						A3($elm$core$List$foldr, $stil4m$elm_syntax$ParserFast$ropeFilledToList, soFar, thirdTryUp)));
			case 'ExpectingNumber':
				var row = problemToConvert.a;
				var col = problemToConvert.b;
				return A2(
					$elm$core$List$cons,
					{col: col, problem: $elm$parser$Parser$ExpectingNumber, row: row},
					soFar);
			case 'ExpectingSymbol':
				var row = problemToConvert.a;
				var col = problemToConvert.b;
				var symbolString = problemToConvert.c;
				return A2(
					$elm$core$List$cons,
					{
						col: col,
						problem: $elm$parser$Parser$ExpectingSymbol(symbolString),
						row: row
					},
					soFar);
			case 'ExpectingAnyChar':
				var row = problemToConvert.a;
				var col = problemToConvert.b;
				return A2(
					$elm$core$List$cons,
					{
						col: col,
						problem: $elm$parser$Parser$Problem('expecting any char'),
						row: row
					},
					soFar);
			case 'ExpectingKeyword':
				var row = problemToConvert.a;
				var col = problemToConvert.b;
				var keywordString = problemToConvert.c;
				return A2(
					$elm$core$List$cons,
					{
						col: col,
						problem: $elm$parser$Parser$ExpectingKeyword(keywordString),
						row: row
					},
					soFar);
			case 'ExpectingCharSatisfyingPredicate':
				var row = problemToConvert.a;
				var col = problemToConvert.b;
				return A2(
					$elm$core$List$cons,
					{col: col, problem: $elm$parser$Parser$UnexpectedChar, row: row},
					soFar);
			case 'ExpectingStringSatisfyingPredicate':
				var row = problemToConvert.a;
				var col = problemToConvert.b;
				return A2(
					$elm$core$List$cons,
					{
						col: col,
						problem: $elm$parser$Parser$Problem('expected string to pass validation'),
						row: row
					},
					soFar);
			default:
				var row = problemToConvert.a;
				var col = problemToConvert.b;
				var customMessage = problemToConvert.c;
				return A2(
					$elm$core$List$cons,
					{
						col: col,
						problem: $elm$parser$Parser$Problem(customMessage),
						row: row
					},
					soFar);
		}
	});
var $stil4m$elm_syntax$ParserFast$run = F2(
	function (_v0, src) {
		var parse = _v0.a;
		var _v1 = parse(
			{col: 1, indent: 1, offset: 0, row: 1, src: src});
		if (_v1.$ === 'Good') {
			var value = _v1.a;
			var finalState = _v1.b;
			return (!(finalState.offset - $elm$core$String$length(finalState.src))) ? $elm$core$Result$Ok(value) : $elm$core$Result$Err(
				_List_fromArray(
					[
						{col: finalState.col, problem: $elm$parser$Parser$ExpectingEnd, row: finalState.row}
					]));
		} else {
			var deadEnds = _v1.b;
			return $elm$core$Result$Err(
				A2($stil4m$elm_syntax$ParserFast$ropeFilledToList, deadEnds, _List_Nil));
		}
	});
var $stil4m$elm_syntax$Elm$Parser$parseToFile = function (input) {
	return A2($stil4m$elm_syntax$ParserFast$run, $stil4m$elm_syntax$Elm$Parser$File$file, input);
};
var $author$project$CompileElmApp$parseElmModuleText = $stil4m$elm_syntax$Elm$Parser$parseToFile;
var $elm$core$Result$withDefault = F2(
	function (def, result) {
		if (result.$ === 'Ok') {
			var a = result.a;
			return a;
		} else {
			return def;
		}
	});
var $author$project$CompileElmApp$addModulesFromTextToAppFiles = F3(
	function (sourceDirs, modulesToAdd, sourceFiles) {
		return A3(
			$elm$core$List$foldl,
			F2(
				function (moduleToAdd, prevFiles) {
					return A2(
						$elm$core$Result$withDefault,
						prevFiles,
						A2(
							$elm$core$Result$map,
							function (moduleToAddSyntax) {
								var filePath = A2(
									$author$project$CompileElmApp$filePathFromElmModuleName,
									sourceDirs,
									$stil4m$elm_syntax$Elm$Syntax$Module$moduleName(
										$stil4m$elm_syntax$Elm$Syntax$Node$value(moduleToAddSyntax.moduleDefinition)));
								return A3(
									$elm$core$Dict$insert,
									filePath,
									$author$project$CompileElmApp$fileContentFromString(moduleToAdd),
									prevFiles);
							},
							$author$project$CompileElmApp$parseElmModuleText(moduleToAdd)));
				}),
			sourceFiles,
			modulesToAdd);
	});
var $elm$core$String$dropRight = F2(
	function (n, string) {
		return (n < 1) ? string : A3($elm$core$String$slice, 0, -n, string);
	});
var $author$project$CompileElmAppListExtra$isPrefixOf = F2(
	function (prefix, list) {
		isPrefixOf:
		while (true) {
			var _v0 = _Utils_Tuple2(prefix, list);
			if (!_v0.a.b) {
				return true;
			} else {
				if (!_v0.b.b) {
					var _v1 = _v0.a;
					return false;
				} else {
					var _v2 = _v0.a;
					var p = _v2.a;
					var ps = _v2.b;
					var _v3 = _v0.b;
					var x = _v3.a;
					var xs = _v3.b;
					if (_Utils_eq(p, x)) {
						var $temp$prefix = ps,
							$temp$list = xs;
						prefix = $temp$prefix;
						list = $temp$list;
						continue isPrefixOf;
					} else {
						return false;
					}
				}
			}
		}
	});
var $author$project$Common$listMapFind = F2(
	function (mapItem, list) {
		listMapFind:
		while (true) {
			if (!list.b) {
				return $elm$core$Maybe$Nothing;
			} else {
				var item = list.a;
				var rest = list.b;
				var _v1 = mapItem(item);
				if (_v1.$ === 'Just') {
					var itemOk = _v1.a;
					return $elm$core$Maybe$Just(itemOk);
				} else {
					var $temp$mapItem = mapItem,
						$temp$list = rest;
					mapItem = $temp$mapItem;
					list = $temp$list;
					continue listMapFind;
				}
			}
		}
	});
var $author$project$CompileElmApp$elmModuleNameFromFilePath = F2(
	function (sourceDirs, filePath) {
		var _v0 = $elm$core$List$reverse(filePath);
		if (!_v0.b) {
			return $elm$core$Maybe$Nothing;
		} else {
			var fileName = _v0.a;
			var directoryNameReversed = _v0.b;
			if (!A2(
				$elm$core$String$endsWith,
				'.elm',
				$elm$core$String$toLower(fileName))) {
				return $elm$core$Maybe$Nothing;
			} else {
				var sourceDirectoryPaths = A2($elm$core$List$cons, sourceDirs.mainSourceDirectoryPath, sourceDirs.secondarySourceDirectories);
				var moduleNameLastItem = A2($elm$core$String$dropRight, 4, fileName);
				var directoryName = $elm$core$List$reverse(directoryNameReversed);
				return A2(
					$author$project$Common$listMapFind,
					function (sourceDir) {
						return A2($author$project$CompileElmAppListExtra$isPrefixOf, sourceDir, directoryName) ? $elm$core$Maybe$Just(
							_Utils_ap(
								A2(
									$elm$core$List$drop,
									$elm$core$List$length(sourceDir),
									directoryName),
								_List_fromArray(
									[moduleNameLastItem]))) : $elm$core$Maybe$Nothing;
					},
					sourceDirectoryPaths);
			}
		}
	});
var $author$project$CompileElmAppListExtra$isSuffixOf = F2(
	function (suffix, xs) {
		return A2(
			$author$project$CompileElmAppListExtra$isPrefixOf,
			$elm$core$List$reverse(suffix),
			$elm$core$List$reverse(xs));
	});
var $author$project$CompileElmApp$listFoldlToAggregateResult = function (getElementResult) {
	return $elm$core$List$foldl(
		F2(
			function (element, previousAggregateResult) {
				return A2(
					$elm$core$Result$andThen,
					function (previousAggregate) {
						return A2(getElementResult, element, previousAggregate);
					},
					previousAggregateResult);
			}));
};
var $author$project$CompileElmApp$stringFromFileContent = function (bytes) {
	return A2(
		$elm$bytes$Bytes$Decode$decode,
		$elm$bytes$Bytes$Decode$string(
			$elm$bytes$Bytes$width(bytes)),
		bytes);
};
var $author$project$CompileElmApp$applyLoweringUnderPrefix = F5(
	function (lowerModule, _v0, errFromString, sourceDirs, sourceFiles) {
		var prefix = _v0.prefix;
		var moduleNameEnd = _v0.moduleNameEnd;
		return A3(
			$author$project$CompileElmApp$listFoldlToAggregateResult,
			F2(
				function (filePath, intermediateFiles) {
					var _v1 = A2($author$project$CompileElmApp$elmModuleNameFromFilePath, sourceDirs, filePath);
					if (_v1.$ === 'Nothing') {
						return $elm$core$Result$Ok(intermediateFiles);
					} else {
						var moduleName = _v1.a;
						if (!A2($author$project$CompileElmAppListExtra$isPrefixOf, prefix, moduleName)) {
							return $elm$core$Result$Ok(intermediateFiles);
						} else {
							if (!A2($author$project$CompileElmAppListExtra$isSuffixOf, moduleNameEnd, moduleName)) {
								return $elm$core$Result$Ok(intermediateFiles);
							} else {
								var _v2 = A2($elm$core$Dict$get, filePath, intermediateFiles);
								if (_v2.$ === 'Nothing') {
									return $elm$core$Result$Ok(intermediateFiles);
								} else {
									var elmModuleFile = _v2.a;
									var _v3 = $author$project$CompileElmApp$stringFromFileContent(elmModuleFile);
									if (_v3.$ === 'Nothing') {
										return $elm$core$Result$Err(
											A2(
												errFromString,
												{filePath: filePath},
												'Failed to decode file content as string'));
									} else {
										var moduleText = _v3.a;
										var _v4 = lowerModule(
											_Utils_Tuple3(intermediateFiles, filePath, moduleText));
										if (_v4.$ === 'Err') {
											var err = _v4.a;
											return $elm$core$Result$Err(err);
										} else {
											var _v5 = _v4.a;
											var newAppCode = _v5.a;
											var newModuleText = _v5.b;
											return $elm$core$Result$Ok(
												A3(
													$elm$core$Dict$insert,
													filePath,
													$elm$bytes$Bytes$Encode$encode(
														$elm$bytes$Bytes$Encode$string(newModuleText)),
													newAppCode));
										}
									}
								}
							}
						}
					}
				}),
			$elm$core$Result$Ok(sourceFiles),
			$elm$core$Dict$keys(sourceFiles));
	});
var $author$project$CompileElmApp$applyLoweringUnderPrefixes = F5(
	function (lowerModule, _v0, errFromString, sourceDirs, sourceFiles) {
		var prefixes = _v0.prefixes;
		var moduleNameEnd = _v0.moduleNameEnd;
		return A3(
			$author$project$CompileElmApp$listFoldlToAggregateResult,
			function (prefix) {
				return A4(
					$author$project$CompileElmApp$applyLoweringUnderPrefix,
					lowerModule,
					{moduleNameEnd: moduleNameEnd, prefix: prefix},
					errFromString,
					sourceDirs);
			},
			$elm$core$Result$Ok(sourceFiles),
			prefixes);
	});
var $elm$parser$Parser$deadEndsToString = function (deadEnds) {
	return 'TODO deadEndsToString';
};
var $elm$core$Dict$filter = F2(
	function (isGood, dict) {
		return A3(
			$elm$core$Dict$foldl,
			F3(
				function (k, v, d) {
					return A2(isGood, k, v) ? A3($elm$core$Dict$insert, k, v, d) : d;
				}),
			$elm$core$Dict$empty,
			dict);
	});
var $elm$core$Dict$map = F2(
	function (func, dict) {
		if (dict.$ === 'RBEmpty_elm_builtin') {
			return $elm$core$Dict$RBEmpty_elm_builtin;
		} else {
			var color = dict.a;
			var key = dict.b;
			var value = dict.c;
			var left = dict.d;
			var right = dict.e;
			return A5(
				$elm$core$Dict$RBNode_elm_builtin,
				color,
				key,
				A2(func, key, value),
				A2($elm$core$Dict$map, func, left),
				A2($elm$core$Dict$map, func, right));
		}
	});
var $author$project$CompileElmApp$elmModulesDictFromAppFiles = A2(
	$elm$core$Basics$composeR,
	$elm$core$Dict$filter(
		A2(
			$elm$core$Basics$composeR,
			$elm$core$List$reverse,
			A2(
				$elm$core$Basics$composeR,
				$elm$core$List$head,
				A2(
					$elm$core$Basics$composeR,
					$elm$core$Maybe$map(
						A2(
							$elm$core$Basics$composeR,
							$elm$core$String$toLower,
							$elm$core$String$endsWith('.elm'))),
					A2(
						$elm$core$Basics$composeR,
						$elm$core$Maybe$withDefault(false),
						$elm$core$Basics$always))))),
	$elm$core$Dict$map(
		function (_v0) {
			return A2(
				$elm$core$Basics$composeR,
				$author$project$CompileElmApp$stringFromFileContent,
				A2(
					$elm$core$Basics$composeR,
					$elm$core$Maybe$map($elm$core$Result$Ok),
					A2(
						$elm$core$Basics$composeR,
						$elm$core$Maybe$withDefault(
							$elm$core$Result$Err('Failed to decode file content as string')),
						$elm$core$Result$andThen(
							function (fileContentAsString) {
								return A2(
									$elm$core$Result$map,
									function (parsedSyntax) {
										return {
											fileText: fileContentAsString,
											moduleName: $stil4m$elm_syntax$Elm$Syntax$Module$moduleName(
												$stil4m$elm_syntax$Elm$Syntax$Node$value(parsedSyntax.moduleDefinition)),
											parsedSyntax: parsedSyntax
										};
									},
									A2(
										$elm$core$Result$mapError,
										$elm$parser$Parser$deadEndsToString,
										$author$project$CompileElmApp$parseElmModuleText(fileContentAsString)));
							}))));
		}));
var $stil4m$elm_syntax$Elm$Syntax$Range$empty = {
	end: {column: 0, row: 0},
	start: {column: 0, row: 0}
};
var $stil4m$elm_syntax$Elm$Syntax$Range$emptyRange = $stil4m$elm_syntax$Elm$Syntax$Range$empty;
var $author$project$CompileElmApp$ElmJson = function (sourceDirectories) {
	return {sourceDirectories: sourceDirectories};
};
var $author$project$CompileElmApp$decodeElmJson = A2(
	$elm$json$Json$Decode$map,
	$author$project$CompileElmApp$ElmJson,
	A2(
		$elm$json$Json$Decode$field,
		'source-directories',
		$elm$json$Json$Decode$list($elm$json$Json$Decode$string)));
var $elm_community$list_extra$List$Extra$dropWhile = F2(
	function (predicate, list) {
		dropWhile:
		while (true) {
			if (!list.b) {
				return _List_Nil;
			} else {
				var x = list.a;
				var xs = list.b;
				if (predicate(x)) {
					var $temp$predicate = predicate,
						$temp$list = xs;
					predicate = $temp$predicate;
					list = $temp$list;
					continue dropWhile;
				} else {
					return list;
				}
			}
		}
	});
var $elm$core$String$replace = F3(
	function (before, after, string) {
		return A2(
			$elm$core$String$join,
			after,
			A2($elm$core$String$split, before, string));
	});
var $author$project$CompileElmApp$parseElmJsonSourceDirectoryPath = function (pathInJson) {
	parseElmJsonSourceDirectoryPath:
	while (true) {
		if (A2($elm$core$String$contains, '\\', pathInJson)) {
			var $temp$pathInJson = A3($elm$core$String$replace, '\\', '/', pathInJson);
			pathInJson = $temp$pathInJson;
			continue parseElmJsonSourceDirectoryPath;
		} else {
			var pathItems = A2(
				$elm_community$list_extra$List$Extra$dropWhile,
				$elm$core$String$isEmpty,
				A2($elm$core$String$split, '/', pathInJson));
			return A3(
				$elm$core$List$foldl,
				F2(
					function (nextSegment, _v0) {
						var parentLevel = _v0.parentLevel;
						var subdirectories = _v0.subdirectories;
						switch (nextSegment) {
							case '..':
								return (0 < $elm$core$List$length(subdirectories)) ? {
									parentLevel: parentLevel,
									subdirectories: A2(
										$elm$core$List$take,
										$elm$core$List$length(subdirectories) - 1,
										subdirectories)
								} : {parentLevel: parentLevel + 1, subdirectories: subdirectories};
							case '.':
								return {parentLevel: parentLevel, subdirectories: subdirectories};
							default:
								return {
									parentLevel: parentLevel,
									subdirectories: _Utils_ap(
										subdirectories,
										_List_fromArray(
											[nextSegment]))
								};
						}
					}),
				{parentLevel: 0, subdirectories: _List_Nil},
				pathItems);
		}
	}
};
var $author$project$CompileElmAppListExtra$reverseAppend = F2(
	function (list1, list2) {
		return A3($elm$core$List$foldl, $elm$core$List$cons, list2, list1);
	});
var $author$project$CompileElmAppListExtra$removeHelp = F4(
	function (list, x, xs, previousElements) {
		removeHelp:
		while (true) {
			if (!xs.b) {
				return list;
			} else {
				var y = xs.a;
				var ys = xs.b;
				if (_Utils_eq(x, y)) {
					return A2($author$project$CompileElmAppListExtra$reverseAppend, previousElements, ys);
				} else {
					var $temp$list = list,
						$temp$x = x,
						$temp$xs = ys,
						$temp$previousElements = A2($elm$core$List$cons, y, previousElements);
					list = $temp$list;
					x = $temp$x;
					xs = $temp$xs;
					previousElements = $temp$previousElements;
					continue removeHelp;
				}
			}
		}
	});
var $author$project$CompileElmAppListExtra$remove = F2(
	function (x, xs) {
		return A4($author$project$CompileElmAppListExtra$removeHelp, xs, x, xs, _List_Nil);
	});
var $author$project$CompileElmApp$findSourceDirectories = function (_arguments) {
	var searchRecursive = function (currentDirectory) {
		searchRecursive:
		while (true) {
			var _v0 = A2(
				$elm$core$Dict$get,
				_Utils_ap(
					currentDirectory,
					_List_fromArray(
						['elm.json'])),
				_arguments.sourceFiles);
			if (_v0.$ === 'Nothing') {
				if (_Utils_eq(currentDirectory, _List_Nil)) {
					return $elm$core$Result$Err('Did not find elm.json');
				} else {
					var $temp$currentDirectory = A2(
						$elm$core$List$take,
						$elm$core$List$length(currentDirectory) - 1,
						currentDirectory);
					currentDirectory = $temp$currentDirectory;
					continue searchRecursive;
				}
			} else {
				var elmJsonFile = _v0.a;
				var _v1 = $author$project$CompileElmApp$stringFromFileContent(elmJsonFile);
				if (_v1.$ === 'Nothing') {
					return $elm$core$Result$Err('Failed to decode file content as string');
				} else {
					var elmJsonString = _v1.a;
					var _v2 = A2(
						$elm$json$Json$Decode$decodeString,
						$author$project$CompileElmApp$decodeElmJson,
						$elm$core$String$trim(elmJsonString));
					if (_v2.$ === 'Err') {
						var err = _v2.a;
						return $elm$core$Result$Err(
							'Failed to decode elm.json: ' + $elm$json$Json$Decode$errorToString(err));
					} else {
						var elmJson = _v2.a;
						var parsedSourceDirs = A2($elm$core$List$map, $author$project$CompileElmApp$parseElmJsonSourceDirectoryPath, elmJson.sourceDirectories);
						var compilationRootFilePathFromElmJson = A2(
							$elm$core$List$drop,
							$elm$core$List$length(currentDirectory),
							_arguments.compilationRootFilePath);
						var _v3 = $elm$core$List$head(
							A2(
								$elm$core$List$filter,
								function (c) {
									return (!c.parentLevel) && A2($author$project$CompileElmAppListExtra$isPrefixOf, c.subdirectories, compilationRootFilePathFromElmJson);
								},
								parsedSourceDirs));
						if (_v3.$ === 'Nothing') {
							return $elm$core$Result$Err(
								A2(
									$elm$core$String$join,
									' ',
									_List_fromArray(
										[
											'Did not find a matching directory in source-directories',
											'(currentDirectory: ' + (A2($elm$core$String$join, '/', currentDirectory) + ')')
										])));
						} else {
							var matchingSourceDirectory = _v3.a;
							var secondarySourceDirectories = A2(
								$elm$core$List$map,
								function (parsedDir) {
									return _Utils_ap(
										A2(
											$elm$core$List$take,
											$elm$core$List$length(currentDirectory) - parsedDir.parentLevel,
											currentDirectory),
										parsedDir.subdirectories);
								},
								A2($author$project$CompileElmAppListExtra$remove, matchingSourceDirectory, parsedSourceDirs));
							return $elm$core$Result$Ok(
								{
									elmJsonDirectoryPath: currentDirectory,
									mainSourceDirectoryPath: _Utils_ap(currentDirectory, matchingSourceDirectory.subdirectories),
									secondarySourceDirectories: secondarySourceDirectories
								});
						}
					}
				}
			}
		}
	};
	return searchRecursive(_arguments.compilationRootFilePath);
};
var $author$project$CompileElmApp$locatedInSourceFilesFromJustFilePath = F2(
	function (_v0, err) {
		var filePath = _v0.filePath;
		return A2(
			$author$project$CompileElmApp$LocatedInSourceFiles,
			{filePath: filePath, locationInModuleText: $stil4m$elm_syntax$Elm$Syntax$Range$emptyRange},
			err);
	});
var $elm$core$Dict$sizeHelp = F2(
	function (n, dict) {
		sizeHelp:
		while (true) {
			if (dict.$ === 'RBEmpty_elm_builtin') {
				return n;
			} else {
				var left = dict.d;
				var right = dict.e;
				var $temp$n = A2($elm$core$Dict$sizeHelp, n + 1, right),
					$temp$dict = left;
				n = $temp$n;
				dict = $temp$dict;
				continue sizeHelp;
			}
		}
	});
var $elm$core$Dict$size = function (dict) {
	return A2($elm$core$Dict$sizeHelp, 0, dict);
};
var $elm$core$Set$size = function (_v0) {
	var dict = _v0.a;
	return $elm$core$Dict$size(dict);
};
var $elm$core$Dict$union = F2(
	function (t1, t2) {
		return A3($elm$core$Dict$foldl, $elm$core$Dict$insert, t2, t1);
	});
var $elm$core$Set$union = F2(
	function (_v0, _v1) {
		var dict1 = _v0.a;
		var dict2 = _v1.a;
		return $elm$core$Set$Set_elm_builtin(
			A2($elm$core$Dict$union, dict1, dict2));
	});
var $author$project$CompileElmApp$loweredForCompilationRoot = F3(
	function (entryPointClasses, config, sourceFiles) {
		var _v0 = A2($elm$core$Dict$get, config.compilationRootFilePath, config.originalSourceModules);
		if (_v0.$ === 'Nothing') {
			return $elm$core$Result$Err(
				_List_fromArray(
					[
						A2(
						$author$project$CompileElmApp$LocatedInSourceFiles,
						{filePath: config.compilationRootFilePath, locationInModuleText: $stil4m$elm_syntax$Elm$Syntax$Range$emptyRange},
						$author$project$CompileElmApp$OtherCompilationError(
							'Did not find file ' + A2($elm$core$String$join, '/', config.compilationRootFilePath)))
					]));
		} else {
			var compilationRootModule = _v0.a;
			var entryPointMatchesResults = A2(
				$elm$core$List$map,
				$elm$core$Basics$apR(compilationRootModule),
				entryPointClasses);
			var _v1 = $elm$core$List$head(
				A2($elm$core$List$filterMap, $elm$core$Result$toMaybe, entryPointMatchesResults));
			if (_v1.$ === 'Nothing') {
				var allSupportedDeclarationNames = A3(
					$elm$core$List$foldl,
					function (entryPointMatchesResult) {
						if (entryPointMatchesResult.$ === 'Err') {
							var supportedDeclarationNames = entryPointMatchesResult.a.supportedDeclarationNames;
							return $elm$core$Set$union(supportedDeclarationNames);
						} else {
							return $elm$core$Basics$identity;
						}
					},
					$elm$core$Set$empty,
					entryPointMatchesResults);
				return $elm$core$Result$Ok(
					{
						compiledFiles: sourceFiles,
						rootModuleEntryPointKind: $elm$core$Result$Err(
							'Found no declaration of an entry point. I only support the following ' + ($elm$core$String$fromInt(
								$elm$core$Set$size(allSupportedDeclarationNames)) + (' names for entry points declarations: ' + A2(
								$elm$core$String$join,
								', ',
								$elm$core$Set$toList(allSupportedDeclarationNames)))))
					});
			} else {
				var buildEntryPoint = _v1.a;
				return A2(
					$elm$core$Result$map,
					function (buildEntryPointOk) {
						return {
							compiledFiles: buildEntryPointOk.compiledFiles,
							rootModuleEntryPointKind: $elm$core$Result$Ok(buildEntryPointOk.rootModuleEntryPointKind)
						};
					},
					A2(
						buildEntryPoint,
						{compilationRootFilePath: config.compilationRootFilePath, compilationRootModule: compilationRootModule, interfaceToHostRootModuleName: config.interfaceToHostRootModuleName, originalSourceModules: config.originalSourceModules},
						sourceFiles));
			}
		}
	});
var $author$project$CompileElmApp$importSyntaxTextFromModuleNameAndAlias = function (_v0) {
	var moduleName = _v0.a;
	var maybeAlias = _v0.b;
	return 'import ' + (A2($elm$core$String$join, '.', moduleName) + A2(
		$elm$core$Maybe$withDefault,
		'',
		A2(
			$elm$core$Maybe$map,
			$elm$core$Basics$append(' as '),
			maybeAlias)));
};
var $elm$core$String$lines = _String_lines;
var $elm$core$List$maximum = function (list) {
	if (list.b) {
		var x = list.a;
		var xs = list.b;
		return $elm$core$Maybe$Just(
			A3($elm$core$List$foldl, $elm$core$Basics$max, x, xs));
	} else {
		return $elm$core$Maybe$Nothing;
	}
};
var $elm$core$List$intersperse = F2(
	function (sep, xs) {
		if (!xs.b) {
			return _List_Nil;
		} else {
			var hd = xs.a;
			var tl = xs.b;
			var step = F2(
				function (x, rest) {
					return A2(
						$elm$core$List$cons,
						sep,
						A2($elm$core$List$cons, x, rest));
				});
			var spersed = A3($elm$core$List$foldr, step, _List_Nil, tl);
			return A2($elm$core$List$cons, hd, spersed);
		}
	});
var $author$project$CompileElmApp$parserProblemToString = function (p) {
	switch (p.$) {
		case 'Expecting':
			var s = p.a;
			return 'expecting \'' + (s + '\'');
		case 'ExpectingInt':
			return 'expecting int';
		case 'ExpectingHex':
			return 'expecting hex';
		case 'ExpectingOctal':
			return 'expecting octal';
		case 'ExpectingBinary':
			return 'expecting binary';
		case 'ExpectingFloat':
			return 'expecting float';
		case 'ExpectingNumber':
			return 'expecting number';
		case 'ExpectingVariable':
			return 'expecting variable';
		case 'ExpectingSymbol':
			var s = p.a;
			return 'expecting symbol \'' + (s + '\'');
		case 'ExpectingKeyword':
			var s = p.a;
			return 'expecting keyword \'' + (s + '\'');
		case 'ExpectingEnd':
			return 'expecting end';
		case 'UnexpectedChar':
			return 'unexpected char';
		case 'Problem':
			var s = p.a;
			return 'problem ' + s;
		default:
			return 'bad repeat';
	}
};
var $author$project$CompileElmApp$parserDeadEndToString = F2(
	function (parsedText, deadend) {
		return $author$project$CompileElmApp$parserProblemToString(deadend.problem) + (' at row ' + ($elm$core$String$fromInt(deadend.row) + (', col ' + ($elm$core$String$fromInt(deadend.col) + (': \'' + (A2(
			$elm$core$String$join,
			'\n',
			A2(
				$elm$core$List$take,
				4,
				A2(
					$elm$core$List$drop,
					deadend.row - 2,
					$elm$core$String$lines(parsedText)))) + '\''))))));
	});
var $author$project$CompileElmApp$parserDeadEndsToString = F2(
	function (parsedText, deadEnds) {
		return $elm$core$String$concat(
			A2(
				$elm$core$List$intersperse,
				'; ',
				A2(
					$elm$core$List$map,
					$author$project$CompileElmApp$parserDeadEndToString(parsedText),
					deadEnds)));
	});
var $author$project$CompileElmApp$parseAndMapElmModuleText = F2(
	function (mapDependingOnParsing, moduleText) {
		var _v0 = $author$project$CompileElmApp$parseElmModuleText(moduleText);
		if (_v0.$ === 'Err') {
			var error = _v0.a;
			return $elm$core$Result$Err(
				'Failed to parse Elm module text: ' + A2($author$project$CompileElmApp$parserDeadEndsToString, moduleText, error));
		} else {
			var parsedModule = _v0.a;
			return mapDependingOnParsing(parsedModule);
		}
	});
var $author$project$CompileElmApp$addImportsInElmModuleText = F2(
	function (imports, moduleText) {
		return A2(
			$author$project$CompileElmApp$parseAndMapElmModuleText,
			function (parsedModule) {
				var moduleTextLines = $elm$core$String$lines(moduleText);
				var insertionRow = A2(
					$elm$core$Maybe$withDefault,
					$stil4m$elm_syntax$Elm$Syntax$Node$range(parsedModule.moduleDefinition).end.row,
					$elm$core$List$maximum(
						A2(
							$elm$core$List$map,
							A2(
								$elm$core$Basics$composeR,
								$stil4m$elm_syntax$Elm$Syntax$Node$range,
								A2(
									$elm$core$Basics$composeR,
									function ($) {
										return $.end;
									},
									function ($) {
										return $.row;
									})),
							parsedModule.imports)));
				var importStatementsLines = A2($elm$core$List$map, $author$project$CompileElmApp$importSyntaxTextFromModuleNameAndAlias, imports);
				return $elm$core$Result$Ok(
					A2(
						$elm$core$String$join,
						'\n',
						_Utils_ap(
							A2($elm$core$List$take, insertionRow, moduleTextLines),
							_Utils_ap(
								importStatementsLines,
								A2($elm$core$List$drop, insertionRow, moduleTextLines)))));
			},
			moduleText);
	});
var $author$project$CompileElmApp$declarationWithRangeAsFunctionDeclaration = function (declaration) {
	var _v0 = $stil4m$elm_syntax$Elm$Syntax$Node$value(declaration);
	if (_v0.$ === 'FunctionDeclaration') {
		var functionDeclaration = _v0.a;
		return $elm$core$Maybe$Just(
			A2(
				$stil4m$elm_syntax$Elm$Syntax$Node$Node,
				$stil4m$elm_syntax$Elm$Syntax$Node$range(declaration),
				functionDeclaration));
	} else {
		return $elm$core$Maybe$Nothing;
	}
};
var $author$project$CompileElmApp$encodingModuleImportBytes = _Utils_Tuple2(
	_List_fromArray(
		['CompilerGenerated', 'EncodeBytes']),
	$elm$core$Maybe$Just('EncodeBytes'));
var $author$project$CompileElmApp$locatedInSourceFilesFromRange = F2(
	function (filePath, _v0) {
		var range = _v0.a;
		var a = _v0.b;
		return A2(
			$author$project$CompileElmApp$LocatedInSourceFiles,
			{filePath: filePath, locationInModuleText: range},
			a);
	});
var $stil4m$elm_syntax$Elm$Syntax$Node$map = F2(
	function (f, _v0) {
		var r = _v0.a;
		var a = _v0.b;
		return A2(
			$stil4m$elm_syntax$Elm$Syntax$Node$Node,
			r,
			f(a));
	});
var $author$project$CompileElmApp$listMapFirstElement = F2(
	function (mapElement, list) {
		if (list.b) {
			var firstElement = list.a;
			var followingElements = list.b;
			return A2(
				$elm$core$List$cons,
				mapElement(firstElement),
				followingElements);
		} else {
			return list;
		}
	});
var $author$project$CompileElmApp$getTextLinesFromRange = F2(
	function (range, text) {
		var lines = $elm$core$String$lines(text);
		return A2(
			$author$project$CompileElmApp$listMapFirstElement,
			$elm$core$String$dropLeft(range.start.column - 1),
			$elm$core$List$reverse(
				A2(
					$author$project$CompileElmApp$listMapFirstElement,
					$elm$core$String$left(range.end.column - 1),
					$elm$core$List$reverse(
						A2(
							$elm$core$List$drop,
							range.start.row - 1,
							A2($elm$core$List$take, range.end.row, lines))))));
	});
var $author$project$CompileElmApp$replaceRangeInText = F3(
	function (range, rangeReplacement, originalText) {
		var originalTextLines = $elm$core$String$lines(originalText);
		var startLines = A2($elm$core$List$take, range.start.row - 1, originalTextLines);
		var lineStart = A2(
			$elm$core$String$left,
			range.start.column - 1,
			A2(
				$elm$core$Maybe$withDefault,
				'',
				$elm$core$List$head(
					A2(
						$elm$core$List$drop,
						$elm$core$List$length(startLines),
						originalTextLines))));
		return A2(
			$elm$core$String$join,
			'\n',
			_Utils_ap(
				A2($elm$core$List$take, range.start.row - 1, originalTextLines),
				_Utils_ap(
					_List_fromArray(
						[
							_Utils_ap(lineStart, rangeReplacement)
						]),
					A2($elm$core$List$drop, range.end.row, originalTextLines))));
	});
var $author$project$CompileElmApp$addOrUpdateFunctionInElmModuleText = F2(
	function (_v0, moduleText) {
		var functionName = _v0.functionName;
		var mapFunctionLines = _v0.mapFunctionLines;
		return A2(
			$author$project$CompileElmApp$parseAndMapElmModuleText,
			function (parsedModule) {
				var _v1 = A2(
					$author$project$Common$listFind,
					function (_v2) {
						var declaration = _v2.b;
						if (declaration.$ === 'FunctionDeclaration') {
							var functionDeclaration = declaration.a;
							var _v4 = functionDeclaration.declaration;
							var functionDeclarationValue = _v4.b;
							var _v5 = functionDeclarationValue.name;
							var candidateFunctionName = _v5.b;
							return _Utils_eq(functionName, candidateFunctionName);
						} else {
							return false;
						}
					},
					parsedModule.declarations);
				if (_v1.$ === 'Nothing') {
					return $elm$core$Result$Ok(
						A2(
							$elm$core$String$join,
							'\n\n\n',
							_List_fromArray(
								[
									moduleText,
									A2(
									$elm$core$String$join,
									'\n',
									mapFunctionLines($elm$core$Maybe$Nothing))
								])));
				} else {
					var _v6 = _v1.a;
					var declarationRange = _v6.a;
					var originalFunctionLines = A2($author$project$CompileElmApp$getTextLinesFromRange, declarationRange, moduleText);
					return $elm$core$Result$Ok(
						A3(
							$author$project$CompileElmApp$replaceRangeInText,
							declarationRange,
							A2(
								$elm$core$String$join,
								'\n',
								mapFunctionLines(
									$elm$core$Maybe$Just(originalFunctionLines))),
							moduleText));
				}
			},
			moduleText);
	});
var $author$project$CompileElmApp$RecordTreeBranch = function (a) {
	return {$: 'RecordTreeBranch', a: a};
};
var $author$project$CompileElmApp$RecordTreeLeaf = function (a) {
	return {$: 'RecordTreeLeaf', a: a};
};
var $author$project$CompileElmApp$listResultPartition = function (results) {
	return A3(
		$elm$core$List$foldr,
		F2(
			function (r, _v0) {
				var err = _v0.a;
				var succ = _v0.b;
				if (r.$ === 'Ok') {
					var v = r.a;
					return _Utils_Tuple2(
						err,
						A2($elm$core$List$cons, v, succ));
				} else {
					var e = r.a;
					return _Utils_Tuple2(
						A2($elm$core$List$cons, e, err),
						succ);
				}
			}),
		_Utils_Tuple2(_List_Nil, _List_Nil),
		results);
};
var $author$project$CompileElmApp$attemptMapRecordTreeLeaves = F3(
	function (pathPrefix, attemptMapLeaf, tree) {
		if (tree.$ === 'RecordTreeLeaf') {
			var leaf = tree.a;
			return A2(
				$elm$core$Result$map,
				$author$project$CompileElmApp$RecordTreeLeaf,
				A2(
					$elm$core$Result$mapError,
					A2(
						$elm$core$Basics$composeR,
						$elm$core$Tuple$pair(_List_Nil),
						$elm$core$List$singleton),
					A2(attemptMapLeaf, pathPrefix, leaf)));
		} else {
			var fields = tree.a;
			var _v1 = A2(
				$elm$core$Tuple$mapFirst,
				$elm$core$List$concat,
				$author$project$CompileElmApp$listResultPartition(
					A2(
						$elm$core$List$map,
						function (_v2) {
							var fieldName = _v2.a;
							var fieldNode = _v2.b;
							return A2(
								$elm$core$Result$mapError,
								$elm$core$List$map(
									$elm$core$Tuple$mapFirst(
										$elm$core$List$cons(fieldName))),
								A2(
									$elm$core$Result$map,
									$elm$core$Tuple$pair(fieldName),
									A3(
										$author$project$CompileElmApp$attemptMapRecordTreeLeaves,
										_Utils_ap(
											pathPrefix,
											_List_fromArray(
												[fieldName])),
										attemptMapLeaf,
										fieldNode)));
						},
						fields)));
			var errors = _v1.a;
			var successes = _v1.b;
			return _Utils_eq(errors, _List_Nil) ? $elm$core$Result$Ok(
				$author$project$CompileElmApp$RecordTreeBranch(successes)) : $elm$core$Result$Err(errors);
		}
	});
var $author$project$CompileElmApp$emitRecordExpressionFromRecordTree = F2(
	function (expressionFromLeafValue, tree) {
		if (tree.$ === 'RecordTreeLeaf') {
			var leaf = tree.a;
			return expressionFromLeafValue(leaf);
		} else {
			var fields = tree.a;
			var fieldsExpressions = A2(
				$elm$core$List$map,
				function (_v1) {
					var fieldName = _v1.a;
					var encodingExpression = _v1.b;
					return fieldName + (' = ' + A2($author$project$CompileElmApp$emitRecordExpressionFromRecordTree, expressionFromLeafValue, encodingExpression));
				},
				fields);
			return '{ ' + (A2($elm$core$String$join, '\n, ', fieldsExpressions) + '\n}');
		}
	});
var $author$project$CompileElmApp$enumerateLeavesFromRecordTree = function (node) {
	if (node.$ === 'RecordTreeLeaf') {
		var leaf = node.a;
		return _List_fromArray(
			[
				_Utils_Tuple2(_List_Nil, leaf)
			]);
	} else {
		var children = node.a;
		return $elm$core$List$concat(
			A2(
				$elm$core$List$map,
				function (_v1) {
					var fieldName = _v1.a;
					var child = _v1.b;
					return A2(
						$elm$core$List$map,
						$elm$core$Tuple$mapFirst(
							$elm$core$List$cons(fieldName)),
						$author$project$CompileElmApp$enumerateLeavesFromRecordTree(child));
				},
				children));
	}
};
var $author$project$CompileElmApp$indentElmCodeLines = function (level) {
	return A2(
		$elm$core$Basics$composeR,
		$elm$core$String$lines,
		A2(
			$elm$core$Basics$composeR,
			$elm$core$List$map(
				$elm$core$Basics$append(
					A2($elm$core$String$repeat, level, '    '))),
			$elm$core$String$join('\n')));
};
var $author$project$CompileElmApp$interfaceModuleRecordExpression = F2(
	function (interfaceModuleTree, context) {
		return A2(
			$author$project$CompileElmApp$emitRecordExpressionFromRecordTree,
			function (leafMap) {
				return leafMap(context);
			},
			interfaceModuleTree);
	});
var $author$project$CompileElmApp$ElmMakeOutputTypeHtml = {$: 'ElmMakeOutputTypeHtml'};
var $author$project$CompileElmApp$ElmMakeOutputTypeJs = {$: 'ElmMakeOutputTypeJs'};
var $author$project$CompileElmApp$integrateElmMakeFunctionRecordFieldName = F2(
	function (fieldName, configBefore) {
		switch (fieldName) {
			case 'debug':
				return $elm$core$Result$Ok(
					_Utils_update(
						configBefore,
						{enableDebug: true}));
			case 'optimize':
				return $elm$core$Result$Ok(
					_Utils_update(
						configBefore,
						{enableOptimize: true}));
			case 'html':
				return $elm$core$Result$Ok(
					_Utils_update(
						configBefore,
						{outputType: $author$project$CompileElmApp$ElmMakeOutputTypeHtml}));
			case 'javascript':
				return $elm$core$Result$Ok(
					_Utils_update(
						configBefore,
						{outputType: $author$project$CompileElmApp$ElmMakeOutputTypeJs}));
			default:
				return $elm$core$Result$Err('Unsupported field name: ' + fieldName);
		}
	});
var $author$project$CompileElmApp$buildBase64ElmExpression = function (bytes) {
	var _v0 = $danfishgold$base64_bytes$Base64$fromBytes(bytes);
	if (_v0.$ === 'Nothing') {
		return $elm$core$Result$Err('Error encoding to base64');
	} else {
		var asBase64 = _v0.a;
		return $elm$core$Result$Ok('\"' + (asBase64 + '\"'));
	}
};
var $author$project$CompileElmApp$bytes_decode_listStep = F2(
	function (elementDecoder, _v0) {
		var n = _v0.a;
		var elements = _v0.b;
		return (n <= 0) ? $elm$bytes$Bytes$Decode$succeed(
			$elm$bytes$Bytes$Decode$Done(
				$elm$core$List$reverse(elements))) : A2(
			$elm$bytes$Bytes$Decode$map,
			function (element) {
				return $elm$bytes$Bytes$Decode$Loop(
					_Utils_Tuple2(
						n - 1,
						A2($elm$core$List$cons, element, elements)));
			},
			elementDecoder);
	});
var $author$project$CompileElmApp$bytes_decode_list = F2(
	function (length, aDecoder) {
		return (!length) ? $elm$bytes$Bytes$Decode$succeed(_List_Nil) : A2(
			$elm$bytes$Bytes$Decode$loop,
			_Utils_Tuple2(length, _List_Nil),
			$author$project$CompileElmApp$bytes_decode_listStep(aDecoder));
	});
var $author$project$CompileElmApp$bytes_decode_withOffset = F2(
	function (offset, decoder) {
		return A2(
			$elm$bytes$Bytes$Decode$andThen,
			function (_v0) {
				return decoder;
			},
			$elm$bytes$Bytes$Decode$bytes(
				A2($elm$core$Basics$max, 0, offset)));
	});
var $author$project$CompileElmApp$buildUint32Uint8ElmExpression = function (bytes) {
	var uint32_count = ($elm$bytes$Bytes$width(bytes) / 4) | 0;
	var uint32_decoder = (!uint32_count) ? $elm$bytes$Bytes$Decode$succeed(_List_Nil) : A2(
		$author$project$CompileElmApp$bytes_decode_list,
		uint32_count,
		$elm$bytes$Bytes$Decode$unsignedInt32($elm$bytes$Bytes$BE));
	var uint8_offset = uint32_count * 4;
	var uint8_count = $elm$bytes$Bytes$width(bytes) - uint8_offset;
	var uint8_decoder = (!uint8_count) ? $elm$bytes$Bytes$Decode$succeed(_List_Nil) : A2(
		$author$project$CompileElmApp$bytes_decode_withOffset,
		uint8_offset,
		A2(
			$author$project$CompileElmApp$bytes_decode_list,
			uint8_count,
			$elm$bytes$Bytes$Decode$unsignedInt32($elm$bytes$Bytes$BE)));
	var recordExpression = function (fields) {
		return '{ ' + (A2(
			$elm$core$String$join,
			', ',
			A2(
				$elm$core$List$map,
				function (_v1) {
					var fieldName = _v1.a;
					var fieldValueExpression = _v1.b;
					return fieldName + (' = ' + fieldValueExpression);
				},
				fields)) + ' }');
	};
	var expressionFromListInt = function (list) {
		return '[ ' + (A2(
			$elm$core$String$join,
			', ',
			A2($elm$core$List$map, $elm$core$String$fromInt, list)) + ' ]');
	};
	var decoder = A2(
		$elm$bytes$Bytes$Decode$andThen,
		function (uint32) {
			return A2(
				$elm$bytes$Bytes$Decode$map,
				function (uint8) {
					return {uint32: uint32, uint8: uint8};
				},
				uint8_decoder);
		},
		uint32_decoder);
	var _v0 = A2($elm$bytes$Bytes$Decode$decode, decoder, bytes);
	if (_v0.$ === 'Nothing') {
		return $elm$core$Result$Err('Failed decoding bytes to integers');
	} else {
		var uint32 = _v0.a.uint32;
		var uint8 = _v0.a.uint8;
		return $elm$core$Result$Ok(
			recordExpression(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'uint32',
						expressionFromListInt(uint32)),
						_Utils_Tuple2(
						'uint8',
						expressionFromListInt(uint8))
					])));
	}
};
var $author$project$CompileElmApp$stringExpressionFromString = function (string) {
	return '\"' + (A3(
		$elm$core$String$replace,
		'\"',
		'\\\"',
		A3(
			$elm$core$String$replace,
			'\u000D',
			'\\r',
			A3(
				$elm$core$String$replace,
				'\n',
				'\\n',
				A3($elm$core$String$replace, '\\', '\\\\', string)))) + '\"');
};
var $author$project$CompileElmApp$buildUtf8ElmExpression = function (bytes) {
	var _v0 = A2(
		$elm$bytes$Bytes$Decode$decode,
		$elm$bytes$Bytes$Decode$string(
			$elm$bytes$Bytes$width(bytes)),
		bytes);
	if (_v0.$ === 'Nothing') {
		return $elm$core$Result$Err('Failed to decode bytes as UTF8');
	} else {
		var asUtf8 = _v0.a;
		return $elm$core$Result$Ok(
			$author$project$CompileElmApp$stringExpressionFromString(asUtf8));
	}
};
var $author$project$CompileElmApp$mapRecordTreeLeaves = F2(
	function (mapLeaf, tree) {
		if (tree.$ === 'RecordTreeLeaf') {
			var leaf = tree.a;
			return $author$project$CompileElmApp$RecordTreeLeaf(
				mapLeaf(leaf));
		} else {
			var fields = tree.a;
			return $author$project$CompileElmApp$RecordTreeBranch(
				A2(
					$elm$core$List$map,
					function (_v1) {
						var fieldName = _v1.a;
						var fieldNode = _v1.b;
						return A2(
							$elm$core$Tuple$pair,
							fieldName,
							A2($author$project$CompileElmApp$mapRecordTreeLeaves, mapLeaf, fieldNode));
					},
					fields));
		}
	});
var $author$project$Common$resultListMapCombineHelper = F3(
	function (completeList, mapItem, sourceList) {
		resultListMapCombineHelper:
		while (true) {
			if (!sourceList.b) {
				return $elm$core$Result$Ok(
					$elm$core$List$reverse(completeList));
			} else {
				var item = sourceList.a;
				var tail = sourceList.b;
				var _v1 = mapItem(item);
				if (_v1.$ === 'Ok') {
					var itemOk = _v1.a;
					var $temp$completeList = A2($elm$core$List$cons, itemOk, completeList),
						$temp$mapItem = mapItem,
						$temp$sourceList = tail;
					completeList = $temp$completeList;
					mapItem = $temp$mapItem;
					sourceList = $temp$sourceList;
					continue resultListMapCombineHelper;
				} else {
					var err = _v1.a;
					return $elm$core$Result$Err(err);
				}
			}
		}
	});
var $author$project$Common$resultListMapCombine = F2(
	function (mapItem, list) {
		return A3($author$project$Common$resultListMapCombineHelper, _List_Nil, mapItem, list);
	});
var $author$project$CompileElmApp$prepareRecordTreeEmitForTreeOrBlobUnderPath = F2(
	function (pathPrefix, tree) {
		var mappingUtf8 = {fieldName: 'utf8', valueModuleBuildExpression: $author$project$CompileElmApp$buildUtf8ElmExpression};
		var mappingUint32Uint8 = {fieldName: 'uint32_uint8', valueModuleBuildExpression: $author$project$CompileElmApp$buildUint32Uint8ElmExpression};
		var mappingBase64 = {fieldName: 'base64', valueModuleBuildExpression: $author$project$CompileElmApp$buildBase64ElmExpression};
		var fromUint32Uint8ToBytes = A2(
			$elm$core$String$join,
			' ',
			_List_fromArray(
				['|> EncodeBytes.bytes_encoder_from_uint32_uint8', '|> Bytes.Encode.encode']));
		var mappingBytes = _Utils_Tuple2(
			mappingUint32Uint8,
			$elm$core$Maybe$Just(fromUint32Uint8ToBytes));
		var mapToValueDict = $elm$core$Dict$fromList(
			_List_fromArray(
				[
					_Utils_Tuple2(
					_List_fromArray(
						['base64']),
					_Utils_Tuple2(mappingBase64, $elm$core$Maybe$Nothing)),
					_Utils_Tuple2(
					_List_fromArray(
						['bytes']),
					mappingBytes),
					_Utils_Tuple2(_List_Nil, mappingBytes),
					_Utils_Tuple2(
					_List_fromArray(
						['utf8']),
					_Utils_Tuple2(mappingUtf8, $elm$core$Maybe$Nothing))
				]));
		var attemptMapLeaf = F2(
			function (leafPath, _v6) {
				var path = _Utils_ap(pathPrefix, leafPath);
				var _v2 = A2($elm$core$Dict$get, path, mapToValueDict);
				if (_v2.$ === 'Nothing') {
					return $elm$core$Result$Err(
						'Found no mapping for path ' + A2($elm$core$String$join, '.', path));
				} else {
					var _v3 = _v2.a;
					var valueModule = _v3.a;
					var maybeMappingInInterfaceModule = _v3.b;
					return $elm$core$Result$Ok(
						{
							interfaceModule: function (_v4) {
								var sourceExpression = _v4.sourceExpression;
								var beforeMapping = sourceExpression + ('.' + valueModule.fieldName);
								if (maybeMappingInInterfaceModule.$ === 'Nothing') {
									return beforeMapping;
								} else {
									var mappingInInterfaceModule = maybeMappingInInterfaceModule.a;
									return '(' + (beforeMapping + (') ' + mappingInInterfaceModule));
								}
							},
							valueModule: {buildExpression: valueModule.valueModuleBuildExpression, fieldName: valueModule.fieldName}
						});
				}
			});
		return A2(
			$elm$core$Result$map,
			function (mappedTree) {
				return {
					interfaceModule: A2(
						$author$project$CompileElmApp$mapRecordTreeLeaves,
						function ($) {
							return $.interfaceModule;
						},
						mappedTree),
					valueModule: function (valueBytes) {
						return A2(
							$elm$core$Result$map,
							$elm$core$Dict$fromList,
							A2(
								$author$project$Common$resultListMapCombine,
								function (_v1) {
									var leaf = _v1.b;
									return A2(
										$elm$core$Result$map,
										function (expression) {
											return _Utils_Tuple2(
												leaf.valueModule.fieldName,
												{expression: expression});
										},
										A2(
											$elm$core$Result$mapError,
											$elm$core$Basics$append('Failed to build expression for field \'' + (leaf.valueModule.fieldName + '\': ')),
											leaf.valueModule.buildExpression(valueBytes)));
								},
								$author$project$CompileElmApp$enumerateLeavesFromRecordTree(mappedTree)));
					}
				};
			},
			A2(
				$elm$core$Result$mapError,
				A2(
					$elm$core$Basics$composeR,
					$elm$core$List$map(
						function (_v0) {
							var errorPath = _v0.a;
							var error = _v0.b;
							return 'Error at path ' + (A2($elm$core$String$join, '.', errorPath) + (': ' + error));
						}),
					$elm$core$String$join(', ')),
				A3($author$project$CompileElmApp$attemptMapRecordTreeLeaves, _List_Nil, attemptMapLeaf, tree)));
	});
var $author$project$CompileElmApp$parseElmMakeFunctionConfigFromRecordTreeInternal = F2(
	function (elmMakeConfig, recordTree) {
		var leafFromTree = function (pathPrefix) {
			return A2(
				$elm$core$Basics$composeR,
				$author$project$CompileElmApp$prepareRecordTreeEmitForTreeOrBlobUnderPath(pathPrefix),
				$elm$core$Result$map(
					function (emitBlob) {
						return $author$project$CompileElmApp$RecordTreeLeaf(
							{elmMakeConfig: elmMakeConfig, emitBlob: emitBlob});
					}));
		};
		if (recordTree.$ === 'RecordTreeLeaf') {
			var leaf = recordTree.a;
			return A2(
				leafFromTree,
				_List_Nil,
				$author$project$CompileElmApp$RecordTreeLeaf(_Utils_Tuple0));
		} else {
			var branch = recordTree.a;
			return A2(
				$elm$core$Result$map,
				$author$project$CompileElmApp$RecordTreeBranch,
				A2(
					$author$project$Common$resultListMapCombine,
					function (_v1) {
						var branchName = _v1.a;
						var branchValue = _v1.b;
						return A2(
							$elm$core$Result$map,
							$elm$core$Tuple$pair(branchName),
							function () {
								var _v2 = A2($author$project$CompileElmApp$integrateElmMakeFunctionRecordFieldName, branchName, elmMakeConfig);
								if (_v2.$ === 'Err') {
									return A2(
										leafFromTree,
										_List_fromArray(
											[branchName]),
										branchValue);
								} else {
									var newElmMakeConfig = _v2.a;
									return A2($author$project$CompileElmApp$parseElmMakeFunctionConfigFromRecordTreeInternal, newElmMakeConfig, branchValue);
								}
							}());
					},
					branch));
		}
	});
var $author$project$CompileElmApp$parseElmMakeFunctionConfigFromRecordTree = $author$project$CompileElmApp$parseElmMakeFunctionConfigFromRecordTreeInternal(
	{enableDebug: false, enableOptimize: false, outputType: $author$project$CompileElmApp$ElmMakeOutputTypeHtml});
var $author$project$CompileElmApp$AliasDeclaration = function (a) {
	return {$: 'AliasDeclaration', a: a};
};
var $author$project$CompileElmApp$ChoiceElmType = function (a) {
	return {$: 'ChoiceElmType', a: a};
};
var $author$project$CompileElmApp$ChoiceTypeDeclaration = function (a) {
	return {$: 'ChoiceTypeDeclaration', a: a};
};
var $author$project$CompileElmApp$GenericType = function (a) {
	return {$: 'GenericType', a: a};
};
var $author$project$CompileElmApp$InstanceElmType = function (a) {
	return {$: 'InstanceElmType', a: a};
};
var $author$project$CompileElmApp$LeafElmType = function (a) {
	return {$: 'LeafElmType', a: a};
};
var $author$project$CompileElmApp$RecordElmType = function (a) {
	return {$: 'RecordElmType', a: a};
};
var $author$project$CompileElmApp$TupleElmType = function (a) {
	return {$: 'TupleElmType', a: a};
};
var $author$project$CompileElmApp$UnitType = {$: 'UnitType'};
var $elm$core$List$any = F2(
	function (isOkay, list) {
		any:
		while (true) {
			if (!list.b) {
				return false;
			} else {
				var x = list.a;
				var xs = list.b;
				if (isOkay(x)) {
					return true;
				} else {
					var $temp$isOkay = isOkay,
						$temp$list = xs;
					isOkay = $temp$isOkay;
					list = $temp$list;
					continue any;
				}
			}
		}
	});
var $author$project$CompileElmApp$findModuleByName = function (moduleName) {
	return A2(
		$elm$core$Basics$composeR,
		$elm$core$Dict$toList,
		A2(
			$elm$core$Basics$composeR,
			$elm$core$List$filter(
				A2(
					$elm$core$Basics$composeR,
					$elm$core$Tuple$second,
					A2(
						$elm$core$Basics$composeR,
						function ($) {
							return $.moduleName;
						},
						$elm$core$Basics$eq(moduleName)))),
			$elm$core$List$head));
};
var $author$project$CompileElmApp$listTupleSecondDictUnion = function (list) {
	return _Utils_Tuple2(
		A2($elm$core$List$map, $elm$core$Tuple$first, list),
		A3(
			$elm$core$List$foldl,
			$elm$core$Dict$union,
			$elm$core$Dict$empty,
			A2($elm$core$List$map, $elm$core$Tuple$second, list)));
};
var $elm$core$Dict$member = F2(
	function (key, dict) {
		var _v0 = A2($elm$core$Dict$get, key, dict);
		if (_v0.$ === 'Just') {
			return true;
		} else {
			return false;
		}
	});
var $elm$core$Set$member = F2(
	function (key, _v0) {
		var dict = _v0.a;
		return A2($elm$core$Dict$member, key, dict);
	});
var $author$project$CompileElmApp$ArrayLeaf = {$: 'ArrayLeaf'};
var $author$project$CompileElmApp$BoolLeaf = {$: 'BoolLeaf'};
var $author$project$CompileElmApp$BytesLeaf = {$: 'BytesLeaf'};
var $author$project$CompileElmApp$DictLeaf = {$: 'DictLeaf'};
var $author$project$CompileElmApp$FloatLeaf = {$: 'FloatLeaf'};
var $author$project$CompileElmApp$IntLeaf = {$: 'IntLeaf'};
var $author$project$CompileElmApp$JsonEncodeValueLeaf = {$: 'JsonEncodeValueLeaf'};
var $author$project$CompileElmApp$ListLeaf = {$: 'ListLeaf'};
var $author$project$CompileElmApp$MaybeLeaf = {$: 'MaybeLeaf'};
var $author$project$CompileElmApp$ResultLeaf = {$: 'ResultLeaf'};
var $author$project$CompileElmApp$SetLeaf = {$: 'SetLeaf'};
var $author$project$CompileElmApp$StringLeaf = {$: 'StringLeaf'};
var $author$project$CompileElmApp$parseElmTypeLeavesNames = $elm$core$Dict$fromList(
	_List_fromArray(
		[
			_Utils_Tuple2('String', $author$project$CompileElmApp$StringLeaf),
			_Utils_Tuple2('Int', $author$project$CompileElmApp$IntLeaf),
			_Utils_Tuple2('Bool', $author$project$CompileElmApp$BoolLeaf),
			_Utils_Tuple2('Float', $author$project$CompileElmApp$FloatLeaf),
			_Utils_Tuple2('Bytes.Bytes', $author$project$CompileElmApp$BytesLeaf),
			_Utils_Tuple2('List', $author$project$CompileElmApp$ListLeaf),
			_Utils_Tuple2('Array.Array', $author$project$CompileElmApp$ArrayLeaf),
			_Utils_Tuple2('Set.Set', $author$project$CompileElmApp$SetLeaf),
			_Utils_Tuple2('Result', $author$project$CompileElmApp$ResultLeaf),
			_Utils_Tuple2('Maybe', $author$project$CompileElmApp$MaybeLeaf),
			_Utils_Tuple2('Dict.Dict', $author$project$CompileElmApp$DictLeaf),
			_Utils_Tuple2('Json.Encode.Value', $author$project$CompileElmApp$JsonEncodeValueLeaf)
		]));
var $author$project$Common$resultListIndexedMapCombineHelper = F4(
	function (index, completeList, mapItem, sourceList) {
		resultListIndexedMapCombineHelper:
		while (true) {
			if (!sourceList.b) {
				return $elm$core$Result$Ok(
					$elm$core$List$reverse(completeList));
			} else {
				var item = sourceList.a;
				var tail = sourceList.b;
				var _v1 = mapItem(
					_Utils_Tuple2(index, item));
				if (_v1.$ === 'Ok') {
					var itemOk = _v1.a;
					var $temp$index = index + 1,
						$temp$completeList = A2($elm$core$List$cons, itemOk, completeList),
						$temp$mapItem = mapItem,
						$temp$sourceList = tail;
					index = $temp$index;
					completeList = $temp$completeList;
					mapItem = $temp$mapItem;
					sourceList = $temp$sourceList;
					continue resultListIndexedMapCombineHelper;
				} else {
					var err = _v1.a;
					return $elm$core$Result$Err(err);
				}
			}
		}
	});
var $author$project$Common$resultListIndexedMapCombine = F2(
	function (mapItem, list) {
		return A4($author$project$Common$resultListIndexedMapCombineHelper, 0, _List_Nil, mapItem, list);
	});
var $author$project$CompileElmApp$tryConcretizeRecordInstance = F2(
	function (typeArguments, recordType) {
		var tryConcretizeFieldType = function (fieldType) {
			switch (fieldType.$) {
				case 'GenericType':
					var genericName = fieldType.a;
					var _v1 = A2($elm$core$Dict$get, genericName, typeArguments);
					if (_v1.$ === 'Nothing') {
						return $elm$core$Result$Err('Did not find type for \'' + (genericName + '\''));
					} else {
						var typeArgument = _v1.a;
						return $elm$core$Result$Ok(typeArgument);
					}
				case 'InstanceElmType':
					var instanceElmType = fieldType.a;
					return A2(
						$elm$core$Result$andThen,
						function (concreteInstantiated) {
							return A2(
								$elm$core$Result$map,
								function (concreteArguments) {
									return $author$project$CompileElmApp$InstanceElmType(
										{_arguments: concreteArguments, instantiated: concreteInstantiated});
								},
								A2(
									$author$project$Common$resultListIndexedMapCombine,
									function (_v2) {
										var argIndex = _v2.a;
										var argVal = _v2.b;
										return A2(
											$elm$core$Result$mapError,
											$elm$core$Basics$append(
												'Failed to concretize instance argument ' + ($elm$core$String$fromInt(argIndex) + ': ')),
											tryConcretizeFieldType(argVal));
									},
									instanceElmType._arguments));
						},
						A2(
							$elm$core$Result$mapError,
							$elm$core$Basics$append('Failed to concretize instantiated: '),
							tryConcretizeFieldType(instanceElmType.instantiated)));
				case 'TupleElmType':
					var tupleElmType = fieldType.a;
					return A2(
						$elm$core$Result$map,
						$author$project$CompileElmApp$TupleElmType,
						A2(
							$author$project$Common$resultListIndexedMapCombine,
							function (_v3) {
								var argIndex = _v3.a;
								var argVal = _v3.b;
								return A2(
									$elm$core$Result$mapError,
									$elm$core$Basics$append(
										'Failed to concretize tuple element ' + ($elm$core$String$fromInt(argIndex) + ': ')),
									tryConcretizeFieldType(argVal));
							},
							tupleElmType));
				case 'RecordElmType':
					var recordElmType = fieldType.a;
					return A2(
						$elm$core$Result$map,
						function (fields) {
							return $author$project$CompileElmApp$RecordElmType(
								{fields: fields});
						},
						A2(
							$author$project$Common$resultListMapCombine,
							function (_v4) {
								var fieldName = _v4.a;
								var innerFieldType = _v4.b;
								return A2(
									$elm$core$Result$map,
									$elm$core$Tuple$pair(fieldName),
									A2(
										$elm$core$Result$mapError,
										$elm$core$Basics$append('Failed to concretize field ' + (fieldName + ': ')),
										tryConcretizeFieldType(innerFieldType)));
							},
							recordElmType.fields));
				default:
					return $elm$core$Result$Ok(fieldType);
			}
		};
		return A2(
			$elm$core$Result$map,
			function (fields) {
				return {fields: fields};
			},
			A3(
				$elm$core$List$foldl,
				F2(
					function (_v5, prevAggregate) {
						var fieldName = _v5.a;
						var fieldType = _v5.b;
						return A2(
							$elm$core$Result$andThen,
							function (prevFields) {
								return A2(
									$elm$core$Result$map,
									function (concretizedFieldType) {
										return A2(
											$elm$core$List$cons,
											_Utils_Tuple2(fieldName, concretizedFieldType),
											prevFields);
									},
									tryConcretizeFieldType(fieldType));
							},
							prevAggregate);
					}),
				$elm$core$Result$Ok(_List_Nil),
				recordType.fields));
	});
var $author$project$CompileElmAppListExtra$zip = $elm$core$List$map2($elm$core$Tuple$pair);
var $author$project$CompileElmApp$parseElmTypeAndDependenciesRecursivelyFromAnnotationInternal = F3(
	function (stack, modules, _v17) {
		var currentModule = _v17.a;
		var typeAnnotation = _v17.b;
		switch (typeAnnotation.$) {
			case 'Typed':
				var instantiatedNode = typeAnnotation.a;
				var argumentsNodes = typeAnnotation.b;
				return A3(
					$author$project$CompileElmApp$parseElmTypeAndDependenciesRecursivelyFromAnnotationInternalTyped,
					stack,
					modules,
					_Utils_Tuple2(
						currentModule,
						_Utils_Tuple2(instantiatedNode, argumentsNodes)));
			case 'Record':
				var fieldsNodes = typeAnnotation.a;
				return A2(
					$elm$core$Result$map,
					function (_v22) {
						var fields = _v22.a;
						var fieldsDependencies = _v22.b;
						return _Utils_Tuple2(
							$author$project$CompileElmApp$RecordElmType(
								{fields: fields}),
							fieldsDependencies);
					},
					A2(
						$elm$core$Result$map,
						$author$project$CompileElmApp$listTupleSecondDictUnion,
						A2(
							$author$project$Common$resultListMapCombine,
							function (_v19) {
								var fieldNameNode = _v19.a;
								var fieldAnnotation = _v19.b;
								var _v20 = A3(
									$author$project$CompileElmApp$parseElmTypeAndDependenciesRecursivelyFromAnnotationInternal,
									stack,
									modules,
									_Utils_Tuple2(
										currentModule,
										$stil4m$elm_syntax$Elm$Syntax$Node$value(fieldAnnotation)));
								if (_v20.$ === 'Err') {
									var error = _v20.a;
									return $elm$core$Result$Err(
										'Failed to parse annotation of field \'' + ($stil4m$elm_syntax$Elm$Syntax$Node$value(fieldNameNode) + ('\': ' + error)));
								} else {
									var _v21 = _v20.a;
									var fieldType = _v21.a;
									var fieldTypeDeps = _v21.b;
									return $elm$core$Result$Ok(
										_Utils_Tuple2(
											_Utils_Tuple2(
												$stil4m$elm_syntax$Elm$Syntax$Node$value(fieldNameNode),
												fieldType),
											fieldTypeDeps));
								}
							},
							A2($elm$core$List$map, $stil4m$elm_syntax$Elm$Syntax$Node$value, fieldsNodes))));
			case 'Tupled':
				var tupled = typeAnnotation.a;
				return A2(
					$elm$core$Result$map,
					function (_v23) {
						var items = _v23.a;
						var itemsDependencies = _v23.b;
						return _Utils_Tuple2(
							$author$project$CompileElmApp$TupleElmType(items),
							itemsDependencies);
					},
					A2(
						$elm$core$Result$map,
						$author$project$CompileElmApp$listTupleSecondDictUnion,
						A2(
							$author$project$Common$resultListMapCombine,
							A2($author$project$CompileElmApp$parseElmTypeAndDependenciesRecursivelyFromAnnotationInternal, stack, modules),
							A2(
								$elm$core$List$map,
								A2(
									$elm$core$Basics$composeR,
									$stil4m$elm_syntax$Elm$Syntax$Node$value,
									$elm$core$Tuple$pair(currentModule)),
								tupled))));
			case 'GenericType':
				var genericName = typeAnnotation.a;
				return $elm$core$Result$Ok(
					_Utils_Tuple2(
						$author$project$CompileElmApp$GenericType(genericName),
						$elm$core$Dict$empty));
			case 'Unit':
				return $elm$core$Result$Ok(
					_Utils_Tuple2($author$project$CompileElmApp$UnitType, $elm$core$Dict$empty));
			case 'FunctionTypeAnnotation':
				return $elm$core$Result$Err('FunctionTypeAnnotation not implemented');
			default:
				return $elm$core$Result$Err('GenericRecord not implemented');
		}
	});
var $author$project$CompileElmApp$parseElmTypeAndDependenciesRecursivelyFromAnnotationInternalTyped = F3(
	function (stack, modules, _v0) {
		var currentModule = _v0.a;
		var _v1 = _v0.b;
		var instantiatedNode = _v1.a;
		var argumentsNodes = _v1.b;
		var _v2 = $stil4m$elm_syntax$Elm$Syntax$Node$value(instantiatedNode);
		var instantiatedModuleAlias = _v2.a;
		var instantiatedLocalName = _v2.b;
		var instantiatedResult = function () {
			var _v6 = A2(
				$elm$core$Dict$get,
				A2(
					$elm$core$String$join,
					'.',
					_Utils_ap(
						instantiatedModuleAlias,
						_List_fromArray(
							[instantiatedLocalName]))),
				$author$project$CompileElmApp$parseElmTypeLeavesNames);
			if (_v6.$ === 'Just') {
				var leaf = _v6.a;
				return $elm$core$Result$Ok(
					_Utils_Tuple3(
						$author$project$CompileElmApp$LeafElmType(leaf),
						$elm$core$Dict$empty,
						_List_Nil));
			} else {
				var maybeInstantiatedModule = _Utils_eq(instantiatedModuleAlias, _List_Nil) ? $elm$core$Maybe$Just(
					A2(
						$elm$core$Maybe$withDefault,
						currentModule,
						$elm$core$List$head(
							A2(
								$elm$core$List$filterMap,
								function (moduleImport) {
									var _v14 = A2($elm$core$Maybe$map, $stil4m$elm_syntax$Elm$Syntax$Node$value, moduleImport.exposingList);
									if (_v14.$ === 'Nothing') {
										return $elm$core$Maybe$Nothing;
									} else {
										var importExposing = _v14.a;
										var containsMatchingExposition = function () {
											if (importExposing.$ === 'All') {
												return false;
											} else {
												var topLevelExpositions = importExposing.a;
												return A2(
													$elm$core$List$any,
													function (topLevelExpose) {
														var _v16 = $stil4m$elm_syntax$Elm$Syntax$Node$value(topLevelExpose);
														switch (_v16.$) {
															case 'InfixExpose':
																return false;
															case 'FunctionExpose':
																return false;
															case 'TypeOrAliasExpose':
																var typeOrAliasExpose = _v16.a;
																return _Utils_eq(typeOrAliasExpose, instantiatedLocalName);
															default:
																var typeExpose = _v16.a;
																return _Utils_eq(typeExpose.name, instantiatedLocalName);
														}
													},
													topLevelExpositions);
											}
										}();
										return containsMatchingExposition ? A2(
											$elm$core$Maybe$map,
											A2(
												$elm$core$Basics$composeR,
												$elm$core$Tuple$second,
												function ($) {
													return $.parsedSyntax;
												}),
											A2(
												$author$project$CompileElmApp$findModuleByName,
												$stil4m$elm_syntax$Elm$Syntax$Node$value(moduleImport.moduleName),
												modules)) : $elm$core$Maybe$Nothing;
									}
								},
								A2($elm$core$List$map, $stil4m$elm_syntax$Elm$Syntax$Node$value, currentModule.imports))))) : A2(
					$elm$core$Maybe$andThen,
					function (matchingImport) {
						return A2(
							$elm$core$Maybe$map,
							A2(
								$elm$core$Basics$composeR,
								$elm$core$Tuple$second,
								function ($) {
									return $.parsedSyntax;
								}),
							A2(
								$author$project$CompileElmApp$findModuleByName,
								$stil4m$elm_syntax$Elm$Syntax$Node$value(matchingImport.moduleName),
								modules));
					},
					$elm$core$List$head(
						A2(
							$elm$core$List$filter,
							function (moduleImport) {
								return _Utils_eq(
									instantiatedModuleAlias,
									$stil4m$elm_syntax$Elm$Syntax$Node$value(
										A2($elm$core$Maybe$withDefault, moduleImport.moduleName, moduleImport.moduleAlias)));
							},
							A2($elm$core$List$map, $stil4m$elm_syntax$Elm$Syntax$Node$value, currentModule.imports))));
				if (maybeInstantiatedModule.$ === 'Nothing') {
					return $elm$core$Result$Err(
						'Did not find referenced module \'' + (A2($elm$core$String$join, '.', instantiatedModuleAlias) + '\''));
				} else {
					var instantiatedModule = maybeInstantiatedModule.a;
					return A2(
						$elm$core$Maybe$withDefault,
						$elm$core$Result$Err(
							'Did not find declaration of \'' + (instantiatedLocalName + ('\' in module \'' + (A2($elm$core$String$join, '.', instantiatedModuleAlias) + '\'')))),
						A2(
							$elm$core$Maybe$map,
							function (declaration) {
								if (declaration.$ === 'AliasDeclaration') {
									var aliasDeclaration = declaration.a;
									var _v10 = A3(
										$author$project$CompileElmApp$parseElmTypeAndDependenciesRecursivelyFromAnnotationInternal,
										stack,
										modules,
										_Utils_Tuple2(
											instantiatedModule,
											$stil4m$elm_syntax$Elm$Syntax$Node$value(aliasDeclaration.typeAnnotation)));
									if (_v10.$ === 'Err') {
										var error = _v10.a;
										return $elm$core$Result$Err(
											'Failed to parse alias \'' + ($stil4m$elm_syntax$Elm$Syntax$Node$value(aliasDeclaration.name) + ('\' type annotation: ' + error)));
									} else {
										var _v11 = _v10.a;
										var aliasedType = _v11.a;
										var aliasedTypeDeps = _v11.b;
										return $elm$core$Result$Ok(
											_Utils_Tuple3(
												aliasedType,
												aliasedTypeDeps,
												A2($elm$core$List$map, $stil4m$elm_syntax$Elm$Syntax$Node$value, aliasDeclaration.generics)));
									}
								} else {
									var choiceTypeDeclaration = declaration.a;
									var typeName = A2(
										$elm$core$String$join,
										'.',
										_Utils_ap(
											$stil4m$elm_syntax$Elm$Syntax$Module$moduleName(
												$stil4m$elm_syntax$Elm$Syntax$Node$value(instantiatedModule.moduleDefinition)),
											_List_fromArray(
												[
													$stil4m$elm_syntax$Elm$Syntax$Node$value(choiceTypeDeclaration.name)
												])));
									var genericsNames = A2($elm$core$List$map, $stil4m$elm_syntax$Elm$Syntax$Node$value, choiceTypeDeclaration.generics);
									return A2($elm$core$Set$member, typeName, stack.typesToIgnore) ? $elm$core$Result$Ok(
										_Utils_Tuple3(
											$author$project$CompileElmApp$ChoiceElmType(typeName),
											$elm$core$Dict$empty,
											genericsNames)) : A2(
										$elm$core$Result$map,
										function (_v13) {
											var constructors = _v13.a;
											var constructorsDeps = _v13.b;
											return _Utils_Tuple3(
												$author$project$CompileElmApp$ChoiceElmType(typeName),
												A3(
													$elm$core$Dict$insert,
													typeName,
													{
														parameters: genericsNames,
														tags: $elm$core$Dict$fromList(constructors)
													},
													constructorsDeps),
												genericsNames);
										},
										A2(
											$elm$core$Result$map,
											$author$project$CompileElmApp$listTupleSecondDictUnion,
											A2(
												$author$project$Common$resultListMapCombine,
												function (constructor) {
													return A2(
														$elm$core$Result$map,
														function (_v12) {
															var argumentsTypes = _v12.a;
															var argumentsDeps = _v12.b;
															return _Utils_Tuple2(
																_Utils_Tuple2(
																	$stil4m$elm_syntax$Elm$Syntax$Node$value(constructor.name),
																	argumentsTypes),
																argumentsDeps);
														},
														A2(
															$elm$core$Result$map,
															$author$project$CompileElmApp$listTupleSecondDictUnion,
															A2(
																$elm$core$Result$mapError,
																$elm$core$Basics$append(
																	'Failed to parse constructor \'' + ($stil4m$elm_syntax$Elm$Syntax$Node$value(constructor.name) + '\': ')),
																A2(
																	$author$project$Common$resultListMapCombine,
																	function (constructorArgument) {
																		return A2(
																			$elm$core$Result$mapError,
																			$elm$core$Basics$append('Failed to parse argument: '),
																			A3(
																				$author$project$CompileElmApp$parseElmTypeAndDependenciesRecursivelyFromAnnotationInternal,
																				{
																					typesToIgnore: A2($elm$core$Set$insert, typeName, stack.typesToIgnore)
																				},
																				modules,
																				_Utils_Tuple2(
																					instantiatedModule,
																					$stil4m$elm_syntax$Elm$Syntax$Node$value(constructorArgument))));
																	},
																	constructor._arguments))));
												},
												A2($elm$core$List$map, $stil4m$elm_syntax$Elm$Syntax$Node$value, choiceTypeDeclaration.constructors))));
								}
							},
							$elm$core$List$head(
								A2(
									$elm$core$List$filterMap,
									function (declaration) {
										switch (declaration.$) {
											case 'AliasDeclaration':
												var aliasDeclaration = declaration.a;
												return (!_Utils_eq(
													$stil4m$elm_syntax$Elm$Syntax$Node$value(aliasDeclaration.name),
													instantiatedLocalName)) ? $elm$core$Maybe$Nothing : $elm$core$Maybe$Just(
													$author$project$CompileElmApp$AliasDeclaration(aliasDeclaration));
											case 'CustomTypeDeclaration':
												var choiceTypeDeclaration = declaration.a;
												return (!_Utils_eq(
													$stil4m$elm_syntax$Elm$Syntax$Node$value(choiceTypeDeclaration.name),
													instantiatedLocalName)) ? $elm$core$Maybe$Nothing : $elm$core$Maybe$Just(
													$author$project$CompileElmApp$ChoiceTypeDeclaration(choiceTypeDeclaration));
											default:
												return $elm$core$Maybe$Nothing;
										}
									},
									A2($elm$core$List$map, $stil4m$elm_syntax$Elm$Syntax$Node$value, instantiatedModule.declarations)))));
				}
			}
		}();
		return A2(
			$elm$core$Result$andThen,
			function (_v3) {
				var instantiatedType = _v3.a;
				var instantiatedDependencies = _v3.b;
				var genericsNames = _v3.c;
				return A2(
					$elm$core$Result$andThen,
					function (_v4) {
						var instanceArguments = _v4.a;
						var instanceArgumentsDeps = _v4.b;
						if (_Utils_eq(instanceArguments, _List_Nil)) {
							return $elm$core$Result$Ok(
								_Utils_Tuple2(instantiatedType, instantiatedDependencies));
						} else {
							if (instantiatedType.$ === 'RecordElmType') {
								var recordType = instantiatedType.a;
								return A2(
									$elm$core$Result$mapError,
									$elm$core$Basics$append('Failed to concretize record instance: '),
									(!_Utils_eq(
										$elm$core$List$length(genericsNames),
										$elm$core$List$length(instanceArguments))) ? $elm$core$Result$Err('Mismatch between lengths of genericsNames and instanceArguments') : A2(
										$elm$core$Result$map,
										function (concretizedRecord) {
											return _Utils_Tuple2(
												$author$project$CompileElmApp$RecordElmType(concretizedRecord),
												A2($elm$core$Dict$union, instantiatedDependencies, instanceArgumentsDeps));
										},
										A2(
											$author$project$CompileElmApp$tryConcretizeRecordInstance,
											$elm$core$Dict$fromList(
												A2($author$project$CompileElmAppListExtra$zip, genericsNames, instanceArguments)),
											recordType)));
							} else {
								return $elm$core$Result$Ok(
									_Utils_Tuple2(
										$author$project$CompileElmApp$InstanceElmType(
											{_arguments: instanceArguments, instantiated: instantiatedType}),
										A2($elm$core$Dict$union, instantiatedDependencies, instanceArgumentsDeps)));
							}
						}
					},
					A2(
						$elm$core$Result$map,
						$author$project$CompileElmApp$listTupleSecondDictUnion,
						A2(
							$author$project$Common$resultListMapCombine,
							A2($author$project$CompileElmApp$parseElmTypeAndDependenciesRecursivelyFromAnnotationInternal, stack, modules),
							A2(
								$elm$core$List$map,
								A2(
									$elm$core$Basics$composeR,
									$stil4m$elm_syntax$Elm$Syntax$Node$value,
									$elm$core$Tuple$pair(currentModule)),
								argumentsNodes))));
			},
			instantiatedResult);
	});
var $author$project$CompileElmApp$parseElmTypeAndDependenciesRecursivelyFromAnnotation = F2(
	function (modules, _v0) {
		var _v1 = _v0.a;
		var currentModuleFilePath = _v1.a;
		var currentModule = _v1.b;
		var typeAnnotationNode = _v0.b;
		return A2(
			$elm$core$Result$mapError,
			$author$project$CompileElmApp$LocatedInSourceFiles(
				{
					filePath: currentModuleFilePath,
					locationInModuleText: $stil4m$elm_syntax$Elm$Syntax$Node$range(typeAnnotationNode)
				}),
			A3(
				$author$project$CompileElmApp$parseElmTypeAndDependenciesRecursivelyFromAnnotationInternal,
				{typesToIgnore: $elm$core$Set$empty},
				modules,
				_Utils_Tuple2(
					currentModule,
					$stil4m$elm_syntax$Elm$Syntax$Node$value(typeAnnotationNode))));
	});
var $author$project$CompileElmApp$parseInterfaceRecordTree = F4(
	function (errorFromString, integrateFieldName, typeAnnotation, seed) {
		var errorUnsupportedType = function (typeText) {
			return $elm$core$Result$Err(
				_Utils_Tuple2(
					_List_Nil,
					errorFromString('Unsupported type: ' + typeText)));
		};
		switch (typeAnnotation.$) {
			case 'RecordElmType':
				var record = typeAnnotation.a;
				return A2(
					$elm$core$Result$map,
					$author$project$CompileElmApp$RecordTreeBranch,
					A2(
						$author$project$Common$resultListMapCombine,
						function (_v1) {
							var fieldName = _v1.a;
							var fieldType = _v1.b;
							return A2(
								$elm$core$Result$andThen,
								function (withFieldNameIntegrated) {
									return A2(
										$elm$core$Result$mapError,
										$elm$core$Tuple$mapFirst(
											$elm$core$List$cons(fieldName)),
										A2(
											$elm$core$Result$map,
											$elm$core$Tuple$pair(fieldName),
											A4($author$project$CompileElmApp$parseInterfaceRecordTree, errorFromString, integrateFieldName, fieldType, withFieldNameIntegrated)));
								},
								A2(
									$elm$core$Result$mapError,
									$elm$core$Tuple$pair(
										_List_fromArray(
											[fieldName])),
									A2(integrateFieldName, fieldName, seed)));
						},
						record.fields));
			case 'ChoiceElmType':
				return errorUnsupportedType('choice');
			case 'InstanceElmType':
				return errorUnsupportedType('instance');
			case 'TupleElmType':
				return errorUnsupportedType('tuple');
			case 'LeafElmType':
				return $elm$core$Result$Ok(
					$author$project$CompileElmApp$RecordTreeLeaf(seed));
			case 'GenericType':
				return errorUnsupportedType('generic');
			default:
				return $elm$core$Result$Ok(
					$author$project$CompileElmApp$RecordTreeBranch(_List_Nil));
		}
	});
var $author$project$CompileElmApp$parseElmMakeFunctionConfigFromTypeAnnotation = F2(
	function (currentModule, typeAnnotationNode) {
		var _v0 = A2(
			$author$project$CompileElmApp$parseElmTypeAndDependenciesRecursivelyFromAnnotation,
			$elm$core$Dict$empty,
			_Utils_Tuple2(currentModule, typeAnnotationNode));
		if (_v0.$ === 'Err') {
			var _v1 = _v0.a;
			var error = _v1.b;
			return $elm$core$Result$Err('Failed to parse type annotation: ' + error);
		} else {
			var _v2 = _v0.a;
			var typeAnnotation = _v2.a;
			return A2(
				$elm$core$Result$andThen,
				$author$project$CompileElmApp$parseElmMakeFunctionConfigFromRecordTree,
				A2(
					$elm$core$Result$mapError,
					function (_v3) {
						var path = _v3.a;
						var error = _v3.b;
						return 'Failed at path ' + (A2($elm$core$String$join, '.', path) + (': ' + error));
					},
					A4(
						$author$project$CompileElmApp$parseInterfaceRecordTree,
						$elm$core$Basics$identity,
						$elm$core$Basics$always($elm$core$Result$Ok),
						typeAnnotation,
						_Utils_Tuple0)));
		}
	});
var $author$project$CompileElmApp$elmMakeFunctionNameStart = 'elm_make';
var $author$project$CompileElmApp$functionNameFlagsSeparator = '____';
var $author$project$CompileElmApp$parseFlagsAndPathPatternFromFunctionName = F2(
	function (prefixes, functionName) {
		var _v0 = A2($elm$core$String$split, $author$project$CompileElmApp$functionNameFlagsSeparator, functionName);
		if (!_v0.b) {
			return $elm$core$Result$Err('String.split returned empty list');
		} else {
			if (!_v0.b.b) {
				return $elm$core$Result$Err('Did not find separator between flags and path');
			} else {
				var prefixAndFlags = _v0.a;
				var rest = _v0.b;
				var path = A2($elm$core$String$join, $author$project$CompileElmApp$functionNameFlagsSeparator, rest);
				var continueWithPrefixStringAndFlags = F2(
					function (prefixString, flags) {
						var _v2 = A2($elm$core$Dict$get, prefixString, prefixes);
						if (_v2.$ === 'Nothing') {
							return $elm$core$Result$Err('Unknown prefix: \'' + (prefixString + '\''));
						} else {
							var prefix = _v2.a;
							return $elm$core$Result$Ok(
								_Utils_Tuple3(prefix, flags, path));
						}
					});
				var _v1 = A2($elm$core$String$split, '__', prefixAndFlags);
				if (!_v1.b) {
					return $elm$core$Result$Err('String.split returned empty list');
				} else {
					if (!_v1.b.b) {
						var prefix = _v1.a;
						return A2(continueWithPrefixStringAndFlags, prefix, _List_Nil);
					} else {
						var prefix = _v1.a;
						var flags = _v1.b;
						return A2(continueWithPrefixStringAndFlags, prefix, flags);
					}
				}
			}
		}
	});
var $author$project$CompileElmApp$parseElmMakeModuleFunctionName = function (functionName) {
	return A2(
		$elm$core$Result$andThen,
		function (_v0) {
			var flags = _v0.b;
			var filePathRepresentation = _v0.c;
			return (!_Utils_eq(flags, _List_Nil)) ? $elm$core$Result$Err('Flags are not supported in ElmMake declarations') : $elm$core$Result$Ok(filePathRepresentation);
		},
		A2(
			$author$project$CompileElmApp$parseFlagsAndPathPatternFromFunctionName,
			$elm$core$Dict$fromList(
				_List_fromArray(
					[
						_Utils_Tuple2($author$project$CompileElmApp$elmMakeFunctionNameStart, _Utils_Tuple0)
					])),
			functionName));
};
var $author$project$CompileElmApp$parseElmMakeModuleFunction = F2(
	function (currentModule, functionDeclaration) {
		var functionName = $stil4m$elm_syntax$Elm$Syntax$Node$value(
			$stil4m$elm_syntax$Elm$Syntax$Node$value(functionDeclaration.declaration).name);
		return A2(
			$elm$core$Result$andThen,
			function (referencedName) {
				return A2(
					$elm$core$Result$map,
					$elm$core$Tuple$pair(referencedName),
					function () {
						var _v0 = functionDeclaration.signature;
						if (_v0.$ === 'Nothing') {
							return $elm$core$Result$Err('Missing function signature');
						} else {
							var signature = _v0.a;
							return A2(
								$elm$core$Result$mapError,
								$elm$core$Basics$append('Failed to parse config: '),
								A2(
									$author$project$CompileElmApp$parseElmMakeFunctionConfigFromTypeAnnotation,
									currentModule,
									$stil4m$elm_syntax$Elm$Syntax$Node$value(signature).typeAnnotation));
						}
					}());
			},
			$author$project$CompileElmApp$parseElmMakeModuleFunctionName(functionName));
	});
var $author$project$CompileElmApp$ElmMakeDependency = function (a) {
	return {$: 'ElmMakeDependency', a: a};
};
var $author$project$CompileElmApp$MissingDependencyError = function (a) {
	return {$: 'MissingDependencyError', a: a};
};
var $author$project$Common$commonPrefixLength = F2(
	function (listA, listB) {
		if (!listA.b) {
			return 0;
		} else {
			var a = listA.a;
			var restA = listA.b;
			if (!listB.b) {
				return 0;
			} else {
				var b = listB.a;
				var restB = listB.b;
				return _Utils_eq(a, b) ? (1 + A2($author$project$Common$commonPrefixLength, restA, restB)) : 0;
			}
		}
	});
var $author$project$CompileElmApp$areAppFilesEqual = F2(
	function (a, b) {
		var representationForComparison = $elm$core$Dict$map(
			$elm$core$Basics$always($danfishgold$base64_bytes$Base64$fromBytes));
		return _Utils_eq(
			representationForComparison(a),
			representationForComparison(b));
	});
var $author$project$CompileElmApp$elmMakeRequestsAreEqual = F2(
	function (a, b) {
		return _Utils_eq(a, b) && A2($author$project$CompileElmApp$areAppFilesEqual, a.files, b.files);
	});
var $author$project$CompileElmApp$dependencyKeysAreEqual = F2(
	function (a, b) {
		var _v0 = _Utils_Tuple2(a, b);
		var elmMakeA = _v0.a.a;
		var elmMakeB = _v0.b.a;
		return A2($author$project$CompileElmApp$elmMakeRequestsAreEqual, elmMakeA, elmMakeB);
	});
var $elm$core$String$map = _String_map;
var $author$project$CompileElmApp$filePathRepresentationInFunctionName = function (pathItems) {
	return A2(
		$elm$core$String$map,
		function (_char) {
			return $elm$core$Char$isAlphaNum(_char) ? _char : _Utils_chr('_');
		},
		A2($elm$core$String$join, '_', pathItems));
};
var $author$project$FileTree$listNodesWithPath = function (node) {
	var childNodes = function () {
		if (node.$ === 'BlobNode') {
			return _List_Nil;
		} else {
			var treeEntries = node.a;
			return A2(
				$elm$core$List$concatMap,
				function (_v1) {
					var entryName = _v1.a;
					var childNode = _v1.b;
					return A2(
						$elm$core$List$map,
						function (_v2) {
							var path = _v2.a;
							var descendantNode = _v2.b;
							return _Utils_Tuple2(
								A2($elm$core$List$cons, entryName, path),
								descendantNode);
						},
						$author$project$FileTree$listNodesWithPath(childNode));
				},
				treeEntries);
		}
	}();
	return A2(
		$elm$core$List$cons,
		_Utils_Tuple2(_List_Nil, node),
		childNodes);
};
var $elm$core$List$member = F2(
	function (x, xs) {
		return A2(
			$elm$core$List$any,
			function (a) {
				return _Utils_eq(a, x);
			},
			xs);
	});
var $author$project$CompileElmAppListExtra$uniqueByHelp = F4(
	function (f, existing, remaining, accumulator) {
		uniqueByHelp:
		while (true) {
			if (!remaining.b) {
				return $elm$core$List$reverse(accumulator);
			} else {
				var first = remaining.a;
				var rest = remaining.b;
				var computedFirst = f(first);
				if (A2($elm$core$List$member, computedFirst, existing)) {
					var $temp$f = f,
						$temp$existing = existing,
						$temp$remaining = rest,
						$temp$accumulator = accumulator;
					f = $temp$f;
					existing = $temp$existing;
					remaining = $temp$remaining;
					accumulator = $temp$accumulator;
					continue uniqueByHelp;
				} else {
					var $temp$f = f,
						$temp$existing = A2($elm$core$List$cons, computedFirst, existing),
						$temp$remaining = rest,
						$temp$accumulator = A2($elm$core$List$cons, first, accumulator);
					f = $temp$f;
					existing = $temp$existing;
					remaining = $temp$remaining;
					accumulator = $temp$accumulator;
					continue uniqueByHelp;
				}
			}
		}
	});
var $author$project$CompileElmAppListExtra$uniqueBy = F2(
	function (f, list) {
		return A4($author$project$CompileElmAppListExtra$uniqueByHelp, f, _List_Nil, list, _List_Nil);
	});
var $author$project$CompileElmApp$findFileTreeNodeWithPathMatchingRepresentationInFunctionName = F3(
	function (sourceDirs, sourceFiles, pathPattern) {
		var sourceDirectoryPaths = A2(
			$elm$core$List$cons,
			sourceDirs.elmJsonDirectoryPath,
			A2($elm$core$List$cons, sourceDirs.mainSourceDirectoryPath, sourceDirs.secondarySourceDirectories));
		var fileTree = A3(
			$elm$core$Dict$foldl,
			F2(
				function (filePath, fileContent) {
					return $author$project$FileTree$setNodeAtPathInSortedFileTree(
						_Utils_Tuple2(
							filePath,
							$author$project$FileTree$BlobNode(fileContent)));
				}),
			$author$project$FileTree$TreeNode(_List_Nil),
			sourceFiles);
		var nodesWithRepresentations = A2(
			$elm$core$List$concatMap,
			function (sourceDirPath) {
				var _v1 = A2($author$project$FileTree$getNodeAtPathFromFileTree, sourceDirPath, fileTree);
				if (_v1.$ === 'Nothing') {
					return _List_Nil;
				} else {
					var sourceDirNode = _v1.a;
					return A2(
						$elm$core$List$map,
						function (_v2) {
							var nodePathRelative = _v2.a;
							var node = _v2.b;
							return _Utils_Tuple2(
								$author$project$CompileElmApp$filePathRepresentationInFunctionName(nodePathRelative),
								_Utils_Tuple2(
									{
										absolutePath: $elm$core$List$concat(
											_List_fromArray(
												[sourceDirPath, nodePathRelative])),
										relativePath: nodePathRelative
									},
									node));
						},
						$author$project$FileTree$listNodesWithPath(sourceDirNode));
				}
			},
			sourceDirectoryPaths);
		var nodesGroupedByRepresentation = $elm$core$Dict$fromList(
			A2(
				$elm$core$List$map,
				function (representation) {
					return _Utils_Tuple2(
						representation,
						A2(
							$author$project$CompileElmAppListExtra$uniqueBy,
							A2(
								$elm$core$Basics$composeR,
								$elm$core$Tuple$first,
								function ($) {
									return $.absolutePath;
								}),
							A2(
								$elm$core$List$map,
								$elm$core$Tuple$second,
								A2(
									$elm$core$List$filter,
									A2(
										$elm$core$Basics$composeR,
										$elm$core$Tuple$first,
										$elm$core$Basics$eq(representation)),
									nodesWithRepresentations))));
				},
				$elm$core$Set$toList(
					$elm$core$Set$fromList(
						A2($elm$core$List$map, $elm$core$Tuple$first, nodesWithRepresentations)))));
		var _v0 = A2(
			$elm$core$Maybe$withDefault,
			_List_Nil,
			A2($elm$core$Dict$get, pathPattern, nodesGroupedByRepresentation));
		if (_v0.b) {
			if (!_v0.b.b) {
				var matchingNode = _v0.a;
				return $elm$core$Result$Ok(matchingNode);
			} else {
				var matchingFiles = _v0;
				return $elm$core$Result$Err(
					'The file path representation \'' + (pathPattern + ('\' is not unique because it matches ' + ($elm$core$String$fromInt(
						$elm$core$List$length(matchingFiles)) + (' of the source files nodes: ' + A2(
						$elm$core$String$join,
						', ',
						A2(
							$elm$core$List$map,
							A2(
								$elm$core$Basics$composeR,
								$elm$core$Tuple$first,
								A2(
									$elm$core$Basics$composeR,
									function ($) {
										return $.absolutePath;
									},
									$elm$core$String$join('/'))),
							matchingFiles)))))));
			}
		} else {
			var examplesListItems = $elm$core$Dict$keys(nodesGroupedByRepresentation);
			var examplesListItemsForDisplay = A2($elm$core$List$take, 8, examplesListItems);
			var examplesListItemsDisplayItems = $elm$core$List$concat(
				_List_fromArray(
					[
						examplesListItemsForDisplay,
						_Utils_eq(examplesListItemsForDisplay, examplesListItems) ? _List_Nil : _List_fromArray(
						['...'])
					]));
			return $elm$core$Result$Err(
				A2(
					$elm$core$String$join,
					'\n',
					$elm$core$List$concat(
						_List_fromArray(
							[
								_List_fromArray(
								['Did not find any file or directory with a path matching the representation \'' + (pathPattern + '\'.')]),
								_List_fromArray(
								[
									'There are ' + ($elm$core$String$fromInt(
									$elm$core$Dict$size(sourceFiles)) + (' files and directories available in this compilation: ' + A2($elm$core$String$join, ', ', examplesListItemsDisplayItems)))
								])
							]))));
		}
	});
var $author$project$CompileElmApp$findFileWithPathMatchingRepresentationInFunctionName = F3(
	function (sourceDirs, sourceFiles, pathPattern) {
		return A2(
			$elm$core$Result$andThen,
			function (_v0) {
				var matchPath = _v0.a;
				var matchNode = _v0.b;
				if (matchNode.$ === 'BlobNode') {
					var blob = matchNode.a;
					return $elm$core$Result$Ok(
						_Utils_Tuple2(matchPath, blob));
				} else {
					return $elm$core$Result$Err('This pattern matches path \'' + (pathPattern + '\' but the node here is a tree, not a file'));
				}
			},
			A3($author$project$CompileElmApp$findFileTreeNodeWithPathMatchingRepresentationInFunctionName, sourceDirs, sourceFiles, pathPattern));
	});
var $author$project$CompileElmApp$includeFilePathInElmMakeRequest = function (path) {
	var _v0 = $elm$core$List$head(
		$elm$core$List$reverse(path));
	if (_v0.$ === 'Nothing') {
		return false;
	} else {
		var fileName = _v0.a;
		return (fileName === 'elm.json') || A2($elm$core$String$endsWith, '.elm', fileName);
	}
};
var $elm$core$List$sort = function (xs) {
	return A2($elm$core$List$sortBy, $elm$core$Basics$identity, xs);
};
var $author$project$CompileElmApp$prepareElmMakeFunctionForEmit = F5(
	function (sourceDirs, sourceFiles, dependencies, _v0, config) {
		var filePathRepresentation = _v0.filePathRepresentation;
		var _v1 = A3($author$project$CompileElmApp$findFileWithPathMatchingRepresentationInFunctionName, sourceDirs, sourceFiles, filePathRepresentation);
		if (_v1.$ === 'Err') {
			var error = _v1.a;
			return $elm$core$Result$Err(
				$author$project$CompileElmApp$OtherCompilationError('Failed to identify file for \'' + (filePathRepresentation + ('\': ' + error))));
		} else {
			var _v2 = _v1.a;
			var entryPointFileMatch = _v2.a;
			var sourceFilesForElmMake = A2(
				$elm$core$Dict$filter,
				F2(
					function (filePath, _v6) {
						return $author$project$CompileElmApp$includeFilePathInElmMakeRequest(filePath);
					}),
				sourceFiles);
			var sharedLevels = A2($author$project$Common$commonPrefixLength, entryPointFileMatch.absolutePath, sourceDirs.elmJsonDirectoryPath);
			var getNameComponentsFromLeafConfig = function (leafConfig) {
				return $elm$core$List$concat(
					_List_fromArray(
						[
							leafConfig.enableDebug ? _List_fromArray(
							['debug']) : _List_Nil,
							leafConfig.enableOptimize ? _List_fromArray(
							['optimize']) : _List_Nil,
							function () {
							var _v5 = leafConfig.outputType;
							if (_v5.$ === 'ElmMakeOutputTypeHtml') {
								return _List_fromArray(
									['html']);
							} else {
								return _List_fromArray(
									['javascript']);
							}
						}()
						]));
			};
			var entryPointFilePath = _Utils_ap(
				A2(
					$elm$core$List$repeat,
					$elm$core$List$length(sourceDirs.elmJsonDirectoryPath) - sharedLevels,
					'..'),
				A2($elm$core$List$drop, sharedLevels, entryPointFileMatch.absolutePath));
			var elmMakeRequest = {enableDebug: config.elmMakeConfig.enableDebug, entryPointFilePath: entryPointFilePath, files: sourceFilesForElmMake, outputType: config.elmMakeConfig.outputType};
			var dependencyKey = $author$project$CompileElmApp$ElmMakeDependency(elmMakeRequest);
			var _v3 = $elm$core$List$head(
				A2(
					$elm$core$List$filter,
					A2(
						$elm$core$Basics$composeR,
						$elm$core$Tuple$first,
						$author$project$CompileElmApp$dependencyKeysAreEqual(dependencyKey)),
					dependencies));
			if (_v3.$ === 'Nothing') {
				return $elm$core$Result$Err(
					$author$project$CompileElmApp$MissingDependencyError(dependencyKey));
			} else {
				var _v4 = _v3.a;
				var dependencyValue = _v4.b;
				var variantName = A2(
					$elm$core$String$join,
					'_',
					$elm$core$List$sort(
						getNameComponentsFromLeafConfig(config.elmMakeConfig)));
				var valueFunctionName = A2(
					$elm$core$String$join,
					'_',
					_List_fromArray(
						['elm_make_output', filePathRepresentation, variantName]));
				return $elm$core$Result$Ok(
					{blob: dependencyValue, emitBlob: config.emitBlob, valueFunctionName: valueFunctionName});
			}
		}
	});
var $author$project$CompileElmApp$valueModuleRecordExpressionFromEncodings = F2(
	function (encodings, blob) {
		return A2(
			$elm$core$Result$map,
			function (fieldsDict) {
				return '{ ' + (A2(
					$elm$core$String$join,
					'\n, ',
					A2(
						$elm$core$List$map,
						function (_v0) {
							var fieldName = _v0.a;
							var field = _v0.b;
							return fieldName + (' = ' + field.expression);
						},
						$elm$core$Dict$toList(fieldsDict))) + ' }');
			},
			encodings(blob));
	});
var $author$project$CompileElmApp$recordTreeEmitElmMake = F2(
	function (recordTree, bytes) {
		return A2(
			$elm$core$Result$map,
			function (expression) {
				return {
					interfaceModule: recordTree.interfaceModule,
					valueModule: {expression: expression}
				};
			},
			A2($author$project$CompileElmApp$valueModuleRecordExpressionFromEncodings, recordTree.valueModule, bytes));
	});
var $author$project$CompileElmApp$prepareReplaceFunctionInElmMakeModuleText = F5(
	function (dependencies, sourceDirs, sourceFiles, currentModule, originalFunctionDeclaration) {
		var functionName = $stil4m$elm_syntax$Elm$Syntax$Node$value(
			$stil4m$elm_syntax$Elm$Syntax$Node$value(originalFunctionDeclaration.declaration).name);
		var _v0 = A2($author$project$CompileElmApp$parseElmMakeModuleFunction, currentModule, originalFunctionDeclaration);
		if (_v0.$ === 'Err') {
			var error = _v0.a;
			return $elm$core$Result$Err(
				_List_fromArray(
					[
						$author$project$CompileElmApp$OtherCompilationError('Failed to parse Elm make function: ' + error)
					]));
		} else {
			var _v1 = _v0.a;
			var filePathRepresentation = _v1.a;
			var elmMakeTree = _v1.b;
			var continueMapResult = function (leafBeforeApplyBytes) {
				return A2(
					$elm$core$Result$map,
					function (emitBlob) {
						return {emitBlob: emitBlob, valueFunctionName: leafBeforeApplyBytes.valueFunctionName};
					},
					A2($author$project$CompileElmApp$recordTreeEmitElmMake, leafBeforeApplyBytes.emitBlob, leafBeforeApplyBytes.blob));
			};
			var mapTreeLeaf = A2(
				$elm$core$Basics$composeR,
				A4(
					$author$project$CompileElmApp$prepareElmMakeFunctionForEmit,
					sourceDirs,
					sourceFiles,
					dependencies,
					{filePathRepresentation: filePathRepresentation}),
				$elm$core$Result$andThen(
					A2(
						$elm$core$Basics$composeR,
						continueMapResult,
						$elm$core$Result$mapError($author$project$CompileElmApp$OtherCompilationError))));
			var mappedTreeResult = A2(
				$elm$core$Result$mapError,
				$elm$core$List$map($elm$core$Tuple$second),
				A3(
					$author$project$CompileElmApp$attemptMapRecordTreeLeaves,
					_List_Nil,
					$elm$core$Basics$always(mapTreeLeaf),
					elmMakeTree));
			return A2(
				$elm$core$Result$andThen,
				function (mappedTree) {
					var updateInterfaceModuleText = F2(
						function (_v2, moduleText) {
							var generatedModuleName = _v2.generatedModuleName;
							var fileExpression = A2(
								$author$project$CompileElmApp$emitRecordExpressionFromRecordTree,
								function (leaf) {
									return A2(
										$author$project$CompileElmApp$interfaceModuleRecordExpression,
										leaf.emitBlob.interfaceModule,
										{
											sourceExpression: A2($elm$core$String$join, '.', generatedModuleName) + ('.' + leaf.valueFunctionName)
										});
								},
								mappedTree);
							var buildNewFunctionLines = function (previousFunctionLines) {
								return _Utils_ap(
									A2($elm$core$List$take, 2, previousFunctionLines),
									_List_fromArray(
										[
											A2($author$project$CompileElmApp$indentElmCodeLines, 1, fileExpression)
										]));
							};
							return A2(
								$author$project$CompileElmApp$addOrUpdateFunctionInElmModuleText,
								{
									functionName: functionName,
									mapFunctionLines: A2(
										$elm$core$Basics$composeR,
										$elm$core$Maybe$withDefault(_List_Nil),
										buildNewFunctionLines)
								},
								moduleText);
						});
					var leaves = A2(
						$elm$core$List$map,
						$elm$core$Tuple$second,
						$author$project$CompileElmApp$enumerateLeavesFromRecordTree(mappedTree));
					var valueFunctions = A2(
						$elm$core$List$map,
						function (leaf) {
							return {
								functionName: leaf.valueFunctionName,
								functionText: leaf.valueFunctionName + (' =\n' + A2($author$project$CompileElmApp$indentElmCodeLines, 1, leaf.emitBlob.valueModule.expression))
							};
						},
						leaves);
					return $elm$core$Result$Ok(
						{
							updateInterfaceModuleText: updateInterfaceModuleText,
							valueFunctionsTexts: A2(
								$elm$core$List$map,
								function ($) {
									return $.functionText;
								},
								valueFunctions)
						});
				},
				mappedTreeResult);
		}
	});
var $author$project$CompileElmApp$resultCombineConcatenatingErrors = A2(
	$elm$core$List$foldl,
	F2(
		function (result, previousAggregate) {
			if (previousAggregate.$ === 'Err') {
				var previousErrors = previousAggregate.a;
				return $elm$core$Result$Err(
					function () {
						if (result.$ === 'Err') {
							var error = result.a;
							return A2($elm$core$List$cons, error, previousErrors);
						} else {
							return previousErrors;
						}
					}());
			} else {
				var previousList = previousAggregate.a;
				if (result.$ === 'Err') {
					var error = result.a;
					return $elm$core$Result$Err(
						_List_fromArray(
							[error]));
				} else {
					var newItem = result.a;
					return $elm$core$Result$Ok(
						_Utils_ap(
							previousList,
							_List_fromArray(
								[newItem])));
				}
			}
		}),
	$elm$core$Result$Ok(_List_Nil));
var $author$project$CompileElmApp$syntaxRangeCoveringCompleteString = function (string) {
	var lines = $elm$core$String$lines(string);
	return {
		end: {
			column: function () {
				var _v0 = $elm$core$List$head(
					$elm$core$List$reverse(lines));
				if (_v0.$ === 'Nothing') {
					return 1;
				} else {
					var lastLine = _v0.a;
					return $elm$core$String$length(lastLine) + 1;
				}
			}(),
			row: $elm$core$List$length(lines) + 1
		},
		start: {column: 1, row: 1}
	};
};
var $author$project$CompileElmApp$updateFileContentAtPath = F3(
	function (updateFileContent, filePath, appFiles) {
		var fileContent = updateFileContent(
			A2($elm$core$Dict$get, filePath, appFiles));
		return A3($elm$core$Dict$insert, filePath, fileContent, appFiles);
	});
var $author$project$CompileElmApp$mapElmMakeModuleText = F3(
	function (sourceDirs, dependencies, _v0) {
		var sourceFiles = _v0.a;
		var moduleFilePath = _v0.b;
		var moduleText = _v0.c;
		return A2(
			$elm$core$Result$mapError,
			$elm$core$List$map(
				$author$project$CompileElmApp$locatedInSourceFilesFromRange(moduleFilePath)),
			A2(
				$elm$core$Result$andThen,
				function (parsedModule) {
					return A2(
						$elm$core$Result$andThen,
						function (functionsToReplaceFunction) {
							var interfaceModuleName = $stil4m$elm_syntax$Elm$Syntax$Module$moduleName(
								$stil4m$elm_syntax$Elm$Syntax$Node$value(parsedModule.moduleDefinition));
							var generatedModuleTextWithoutModuleDeclaration = A2(
								$elm$core$String$join,
								'\n\n',
								$elm$core$Set$toList(
									$elm$core$Set$fromList(
										A2(
											$elm$core$List$concatMap,
											A2(
												$elm$core$Basics$composeR,
												$elm$core$Tuple$second,
												function ($) {
													return $.valueFunctionsTexts;
												}),
											functionsToReplaceFunction))));
							var generatedModuleName = _Utils_ap(
								interfaceModuleName,
								_List_fromArray(
									['Generated_ElmMake']));
							var generatedModulePath = A2($author$project$CompileElmApp$filePathFromElmModuleName, sourceDirs, generatedModuleName);
							var generatedModuleText = A2(
								$elm$core$String$join,
								'\n\n',
								_List_fromArray(
									[
										'module ' + (A2($elm$core$String$join, '.', generatedModuleName) + ' exposing (..)'),
										generatedModuleTextWithoutModuleDeclaration
									]));
							var appFiles = A3(
								$author$project$CompileElmApp$updateFileContentAtPath,
								$elm$core$Basics$always(
									$author$project$CompileElmApp$fileContentFromString(generatedModuleText)),
								generatedModulePath,
								sourceFiles);
							return A2(
								$elm$core$Result$map,
								$elm$core$Tuple$pair(appFiles),
								A2(
									$elm$core$Result$mapError,
									A2(
										$elm$core$Basics$composeR,
										$stil4m$elm_syntax$Elm$Syntax$Node$map($author$project$CompileElmApp$OtherCompilationError),
										$elm$core$List$singleton),
									A3(
										$author$project$CompileElmApp$listFoldlToAggregateResult,
										F2(
											function (_v1, previousAggregate) {
												var declarationRange = _v1.a;
												var replaceFunction = _v1.b;
												return A2(
													$elm$core$Result$mapError,
													$stil4m$elm_syntax$Elm$Syntax$Node$Node(declarationRange),
													A2(
														replaceFunction.updateInterfaceModuleText,
														{generatedModuleName: generatedModuleName},
														previousAggregate));
											}),
										A2(
											$elm$core$Result$mapError,
											$stil4m$elm_syntax$Elm$Syntax$Node$Node(
												$author$project$CompileElmApp$syntaxRangeCoveringCompleteString(moduleText)),
											A2(
												$author$project$CompileElmApp$addImportsInElmModuleText,
												_List_fromArray(
													[
														$author$project$CompileElmApp$encodingModuleImportBytes,
														_Utils_Tuple2(generatedModuleName, $elm$core$Maybe$Nothing)
													]),
												moduleText)),
										functionsToReplaceFunction)));
						},
						A2(
							$elm$core$Result$mapError,
							$elm$core$List$concat,
							$author$project$CompileElmApp$resultCombineConcatenatingErrors(
								A2(
									$elm$core$List$map,
									function (declaration) {
										return A2(
											$elm$core$Result$map,
											$elm$core$Tuple$pair(
												$stil4m$elm_syntax$Elm$Syntax$Node$range(declaration)),
											A2(
												$elm$core$Result$mapError,
												$elm$core$List$map(
													$stil4m$elm_syntax$Elm$Syntax$Node$Node(
														$stil4m$elm_syntax$Elm$Syntax$Node$range(declaration))),
												A5(
													$author$project$CompileElmApp$prepareReplaceFunctionInElmMakeModuleText,
													dependencies,
													sourceDirs,
													sourceFiles,
													_Utils_Tuple2(moduleFilePath, parsedModule),
													$stil4m$elm_syntax$Elm$Syntax$Node$value(declaration))));
									},
									A2($elm$core$List$filterMap, $author$project$CompileElmApp$declarationWithRangeAsFunctionDeclaration, parsedModule.declarations)))));
				},
				A2(
					$elm$core$Result$mapError,
					A2(
						$elm$core$Basics$composeR,
						$author$project$CompileElmApp$parserDeadEndsToString(moduleText),
						A2(
							$elm$core$Basics$composeR,
							$elm$core$Basics$append('Failed to parse Elm module text: '),
							A2(
								$elm$core$Basics$composeR,
								$author$project$CompileElmApp$OtherCompilationError,
								A2(
									$elm$core$Basics$composeR,
									$stil4m$elm_syntax$Elm$Syntax$Node$Node(
										$author$project$CompileElmApp$syntaxRangeCoveringCompleteString(moduleText)),
									$elm$core$List$singleton)))),
					$author$project$CompileElmApp$parseElmModuleText(moduleText))));
	});
var $author$project$CompileElmApp$buildTypeAnnotationText = function (typeAnnotation) {
	switch (typeAnnotation.$) {
		case 'ChoiceElmType':
			var choice = typeAnnotation.a;
			return choice;
		case 'RecordElmType':
			var fields = typeAnnotation.a.fields;
			return '{ ' + (A2(
				$elm$core$String$join,
				', ',
				A2(
					$elm$core$List$map,
					function (_v1) {
						var fieldName = _v1.a;
						var fieldType = _v1.b;
						return fieldName + (' : ' + $author$project$CompileElmApp$buildTypeAnnotationText(fieldType));
					},
					fields)) + ' }');
		case 'InstanceElmType':
			var instance = typeAnnotation.a;
			return '( ' + (A2(
				$elm$core$String$join,
				' ',
				A2(
					$elm$core$List$map,
					$author$project$CompileElmApp$buildTypeAnnotationText,
					A2($elm$core$List$cons, instance.instantiated, instance._arguments))) + ' )');
		case 'TupleElmType':
			var tuple = typeAnnotation.a;
			return '(' + (A2(
				$elm$core$String$join,
				', ',
				A2($elm$core$List$map, $author$project$CompileElmApp$buildTypeAnnotationText, tuple)) + ')');
		case 'GenericType':
			var name = typeAnnotation.a;
			return name;
		case 'UnitType':
			return '()';
		default:
			var leaf = typeAnnotation.a;
			switch (leaf.$) {
				case 'StringLeaf':
					return 'String';
				case 'IntLeaf':
					return 'Int';
				case 'BoolLeaf':
					return 'Bool';
				case 'FloatLeaf':
					return 'Float';
				case 'BytesLeaf':
					return 'Bytes.Bytes';
				case 'ListLeaf':
					return 'List';
				case 'ArrayLeaf':
					return 'Array.Array';
				case 'SetLeaf':
					return 'Set.Set';
				case 'ResultLeaf':
					return 'Result';
				case 'MaybeLeaf':
					return 'Maybe';
				case 'DictLeaf':
					return 'Dict.Dict';
				default:
					return 'Json.Encode.Value';
			}
	}
};
var $author$project$FNV1a$hasher = F2(
	function (_byte, hashValue) {
		var mixed = _byte ^ hashValue;
		return ((((mixed + (mixed << 1)) + (mixed << 4)) + (mixed << 7)) + (mixed << 8)) + (mixed << 24);
	});
var $author$project$FNV1a$utf32ToUtf8 = F2(
	function (_char, acc) {
		var _byte = $elm$core$Char$toCode(_char);
		return (_byte < 128) ? A2($author$project$FNV1a$hasher, _byte, acc) : ((_byte < 2048) ? A2(
			$author$project$FNV1a$hasher,
			128 | (63 & _byte),
			A2($author$project$FNV1a$hasher, 192 | (_byte >>> 6), acc)) : ((_byte < 65536) ? A2(
			$author$project$FNV1a$hasher,
			128 | (63 & _byte),
			A2(
				$author$project$FNV1a$hasher,
				128 | (63 & (_byte >>> 6)),
				A2($author$project$FNV1a$hasher, 224 | (_byte >>> 12), acc))) : A2(
			$author$project$FNV1a$hasher,
			128 | (63 & _byte),
			A2(
				$author$project$FNV1a$hasher,
				128 | (63 & (_byte >>> 6)),
				A2(
					$author$project$FNV1a$hasher,
					128 | (63 & (_byte >>> 12)),
					A2($author$project$FNV1a$hasher, 240 | (_byte >>> 18), acc))))));
	});
var $author$project$FNV1a$hashWithSeed = F2(
	function (str, seed) {
		var chars = $elm$core$String$toList(str);
		return A3($elm$core$List$foldl, $author$project$FNV1a$utf32ToUtf8, seed, chars) >>> 0;
	});
var $author$project$FNV1a$initialSeed = 2166136261;
var $author$project$FNV1a$hash = function (str) {
	return A2($author$project$FNV1a$hashWithSeed, str, $author$project$FNV1a$initialSeed);
};
var $elm$core$Char$toUpper = _Char_toUpper;
var $author$project$CompileElmApp$firstCharToUpperCase = function (string) {
	var _v0 = $elm$core$String$uncons(string);
	if (_v0.$ === 'Nothing') {
		return '';
	} else {
		var _v1 = _v0.a;
		var firstChar = _v1.a;
		var rest = _v1.b;
		return _Utils_ap(
			$elm$core$String$fromChar(
				$elm$core$Char$toUpper(firstChar)),
			rest);
	}
};
var $author$project$CompileElmApp$jsonConvertArrayFunctionNameCommonPart = '_generic_Array';
var $author$project$CompileElmApp$jsonConvertDictFunctionNameCommonPart = '_generic_Dict';
var $author$project$CompileElmApp$jsonConvertListFunctionNameCommonPart = '_generic_List';
var $author$project$CompileElmApp$jsonConvertMaybeFunctionNameCommonPart = '_generic_Maybe';
var $author$project$CompileElmApp$jsonConvertResultFunctionNameCommonPart = '_generic_Result';
var $author$project$CompileElmApp$jsonConvertSetFunctionNameCommonPart = '_generic_Set';
var $author$project$CompileElmApp$jsonConverterFunctionNameCommonPartFromTypeName = A2(
	$elm$core$Basics$composeR,
	$elm$core$String$toList,
	A2(
		$elm$core$Basics$composeR,
		$elm$core$List$map(
			function (_char) {
				return $elm$core$Char$isAlphaNum(_char) ? _char : _Utils_chr('_');
			}),
		$elm$core$String$fromList));
var $author$project$CompileElmApp$jsonDecodeFunctionNamePrefix = 'jsonDecode_';
var $author$project$CompileElmApp$jsonEncodeFunctionNamePrefix = 'jsonEncode_';
var $author$project$CompileElmApp$jsonConverterFunctionNameFromTypeParameterName = function (paramName) {
	return {decodeName: $author$project$CompileElmApp$jsonDecodeFunctionNamePrefix + ('type_parameter_' + paramName), encodeName: $author$project$CompileElmApp$jsonEncodeFunctionNamePrefix + ('type_parameter_' + paramName)};
};
var $elm$core$String$trimLeft = _String_trimLeft;
var $author$project$CompileElmApp$jsonConverterExpressionFromType = F2(
	function (_v0, _v1) {
		jsonConverterExpressionFromType:
		while (true) {
			var encodeValueExpression = _v0.encodeValueExpression;
			var typeArgLocalName = _v0.typeArgLocalName;
			var typeAnnotation = _v1.a;
			var typeArguments = _v1.b;
			var typeArgumentsExpressions = A2(
				$elm$core$List$map,
				function (typeArgument) {
					var typeArgumentExpressions = A2(
						$author$project$CompileElmApp$jsonConverterExpressionFromType,
						{encodeValueExpression: typeArgLocalName, typeArgLocalName: typeArgLocalName + '_'},
						_Utils_Tuple2(typeArgument, _List_Nil));
					var decode = A2($elm$core$String$contains, ' ', typeArgumentExpressions.decodeExpression) ? ('(' + (typeArgumentExpressions.decodeExpression + ')')) : typeArgumentExpressions.decodeExpression;
					return {decode: decode, encode: '(\\' + (typeArgLocalName + (' -> ' + (typeArgumentExpressions.encodeExpression + ')')))};
				},
				typeArguments);
			var typeArgumentsEncodeExpressionsText = A2(
				$elm$core$String$join,
				' ',
				A2(
					$elm$core$List$map,
					function ($) {
						return $.encode;
					},
					typeArgumentsExpressions));
			var typeArgumentsDecodeExpressionsText = A2(
				$elm$core$String$join,
				' ',
				A2(
					$elm$core$List$map,
					function ($) {
						return $.decode;
					},
					typeArgumentsExpressions));
			var continueWithLocalNameAndCommonPrefix = function (localName) {
				return {
					decodeExpression: $elm$core$String$trim($author$project$CompileElmApp$jsonDecodeFunctionNamePrefix + (localName + (' ' + typeArgumentsDecodeExpressionsText))),
					encodeExpression: A2(
						$elm$core$String$join,
						' ',
						A2(
							$elm$core$List$filter,
							A2($elm$core$Basics$composeR, $elm$core$String$isEmpty, $elm$core$Basics$not),
							_List_fromArray(
								[
									_Utils_ap($author$project$CompileElmApp$jsonEncodeFunctionNamePrefix, localName),
									typeArgumentsEncodeExpressionsText,
									encodeValueExpression
								])))
				};
			};
			var continueWithAtomInJsonCore = function (atomName) {
				return {
					decodeExpression: $elm$core$String$trim('Json.Decode.' + (atomName + (' ' + typeArgumentsDecodeExpressionsText))),
					encodeExpression: A2(
						$elm$core$String$join,
						' ',
						A2(
							$elm$core$List$filter,
							A2($elm$core$Basics$composeR, $elm$core$String$isEmpty, $elm$core$Basics$not),
							_List_fromArray(
								['Json.Encode.' + atomName, typeArgumentsEncodeExpressionsText, encodeValueExpression])))
				};
			};
			switch (typeAnnotation.$) {
				case 'ChoiceElmType':
					var choice = typeAnnotation.a;
					var typeNameRepresentation = $author$project$CompileElmApp$jsonConverterFunctionNameCommonPartFromTypeName(choice);
					return {
						decodeExpression: $elm$core$String$trim($author$project$CompileElmApp$jsonDecodeFunctionNamePrefix + (typeNameRepresentation + (' ' + typeArgumentsDecodeExpressionsText))),
						encodeExpression: A2(
							$elm$core$String$join,
							' ',
							A2(
								$elm$core$List$filter,
								A2($elm$core$Basics$composeR, $elm$core$String$isEmpty, $elm$core$Basics$not),
								_List_fromArray(
									[
										_Utils_ap($author$project$CompileElmApp$jsonEncodeFunctionNamePrefix, typeNameRepresentation),
										typeArgumentsEncodeExpressionsText,
										encodeValueExpression
									])))
					};
				case 'RecordElmType':
					var record = typeAnnotation.a;
					if (_Utils_eq(record.fields, _List_Nil)) {
						return {decodeExpression: 'Json.Decode.succeed {}', encodeExpression: 'Json.Encode.object []'};
					} else {
						var fieldsExpressions = A2(
							$elm$core$List$map,
							function (_v4) {
								var fieldName = _v4.a;
								var fieldType = _v4.b;
								var fieldExpression = A2(
									$author$project$CompileElmApp$jsonConverterExpressionFromType,
									{encodeValueExpression: encodeValueExpression + ('.' + fieldName), typeArgLocalName: typeArgLocalName},
									_Utils_Tuple2(fieldType, _List_Nil));
								return {
									decode: fieldExpression.decodeExpression,
									encode: '( \"' + (fieldName + ('\"\n  , ' + ($elm$core$String$trimLeft(
										A2($author$project$CompileElmApp$indentElmCodeLines, 1, fieldExpression.encodeExpression)) + '\n  )'))),
									fieldName: fieldName
								};
							},
							record.fields);
						var encodeListExpression = '[ ' + (A2(
							$elm$core$String$join,
							'\n, ',
							A2(
								$elm$core$List$map,
								function ($) {
									return $.encode;
								},
								fieldsExpressions)) + '\n]');
						var decodeMap = '(\\' + (A2(
							$elm$core$String$join,
							' ',
							A2($elm$core$List$map, $elm$core$Tuple$first, record.fields)) + (' -> { ' + (A2(
							$elm$core$String$join,
							', ',
							A2(
								$elm$core$List$map,
								function (_v3) {
									var fieldName = _v3.a;
									return fieldName + (' = ' + fieldName);
								},
								record.fields)) + ' })')));
						var decodeFieldsLines = A2(
							$elm$core$List$map,
							function (field) {
								var fieldDecode = A2($elm$core$String$contains, ' ', field.decode) ? ('( ' + (field.decode + '\n)')) : field.decode;
								var alternateFieldNames = _List_fromArray(
									[
										$author$project$CompileElmApp$firstCharToUpperCase(field.fieldName)
									]);
								var fieldMapLines = _List_fromArray(
									[
										'( jsonDecode_field_withAlternateNames ' + $author$project$CompileElmApp$stringExpressionFromString(field.fieldName),
										A2(
										$author$project$CompileElmApp$indentElmCodeLines,
										1,
										A2(
											$elm$core$String$join,
											' ',
											_List_fromArray(
												[
													'[',
													A2(
													$elm$core$String$join,
													', ',
													A2($elm$core$List$map, $author$project$CompileElmApp$stringExpressionFromString, alternateFieldNames)),
													']'
												]))),
										A2($author$project$CompileElmApp$indentElmCodeLines, 1, fieldDecode),
										')'
									]);
								return '|> jsonDecode_andMap\n' + A2(
									$author$project$CompileElmApp$indentElmCodeLines,
									1,
									A2($elm$core$String$join, '\n', fieldMapLines));
							},
							fieldsExpressions);
						return {
							decodeExpression: 'Json.Decode.succeed ' + (decodeMap + ('\n' + A2(
								$author$project$CompileElmApp$indentElmCodeLines,
								1,
								A2($elm$core$String$join, '\n', decodeFieldsLines)))),
							encodeExpression: A2(
								$elm$core$String$join,
								'\n',
								_List_fromArray(
									[
										'Json.Encode.object',
										A2($author$project$CompileElmApp$indentElmCodeLines, 1, encodeListExpression)
									]))
						};
					}
				case 'InstanceElmType':
					var instance = typeAnnotation.a;
					var $temp$_v0 = {encodeValueExpression: encodeValueExpression, typeArgLocalName: typeArgLocalName},
						$temp$_v1 = _Utils_Tuple2(instance.instantiated, instance._arguments);
					_v0 = $temp$_v0;
					_v1 = $temp$_v1;
					continue jsonConverterExpressionFromType;
				case 'TupleElmType':
					var tuple = typeAnnotation.a;
					var itemsNames = A2(
						$elm$core$List$map,
						A2(
							$elm$core$Basics$composeR,
							$elm$core$String$fromInt,
							$elm$core$Basics$append('item_')),
						A2(
							$elm$core$List$range,
							0,
							$elm$core$List$length(tuple) - 1));
					var getItemFunctionFromIndex = function (itemIndex) {
						return '(\\( ' + (A2($elm$core$String$join, ', ', itemsNames) + (' ) -> item_' + ($elm$core$String$fromInt(itemIndex) + ')')));
					};
					var itemsExpressions = A2(
						$elm$core$List$indexedMap,
						F2(
							function (i, itemType) {
								var localName = 'item_' + $elm$core$String$fromInt(i);
								var getItemFunction = getItemFunctionFromIndex(i);
								var itemExpression = A2(
									$author$project$CompileElmApp$jsonConverterExpressionFromType,
									{encodeValueExpression: '(' + (getItemFunction + (' ' + (encodeValueExpression + ')'))), typeArgLocalName: typeArgLocalName},
									_Utils_Tuple2(itemType, _List_Nil));
								var itemDecodeExpr = A2($elm$core$String$contains, ' ', itemExpression.decodeExpression) ? ('(' + (itemExpression.decodeExpression + ')')) : itemExpression.decodeExpression;
								return {
									decode: '(Json.Decode.index ' + ($elm$core$String$fromInt(i) + (' ' + (itemDecodeExpr + ')'))),
									encode: itemExpression.encodeExpression,
									localName: localName
								};
							}),
						tuple);
					var encodeListExpression = '[ ' + (A2(
						$elm$core$String$join,
						'\n, ',
						A2(
							$elm$core$List$map,
							function ($) {
								return $.encode;
							},
							itemsExpressions)) + '\n]');
					var decodeMap = '(\\' + (A2($elm$core$String$join, ' ', itemsNames) + (' -> ( ' + (A2($elm$core$String$join, ', ', itemsNames) + ' ))')));
					return {
						decodeExpression: 'Json.Decode.map' + ($elm$core$String$fromInt(
							$elm$core$List$length(tuple)) + (' ' + (decodeMap + ('\n' + A2(
							$author$project$CompileElmApp$indentElmCodeLines,
							1,
							A2(
								$elm$core$String$join,
								'\n',
								A2(
									$elm$core$List$map,
									function ($) {
										return $.decode;
									},
									itemsExpressions))))))),
						encodeExpression: 'Json.Encode.list identity\n' + A2($author$project$CompileElmApp$indentElmCodeLines, 1, encodeListExpression)
					};
				case 'GenericType':
					var name = typeAnnotation.a;
					var functionsNames = $author$project$CompileElmApp$jsonConverterFunctionNameFromTypeParameterName(name);
					return {decodeExpression: functionsNames.decodeName, encodeExpression: functionsNames.encodeName + (' ' + encodeValueExpression)};
				case 'UnitType':
					return {decodeExpression: 'Json.Decode.succeed ()', encodeExpression: 'Json.Encode.list (always (Json.Encode.object [])) []'};
				default:
					var leaf = typeAnnotation.a;
					switch (leaf.$) {
						case 'StringLeaf':
							return continueWithAtomInJsonCore('string');
						case 'IntLeaf':
							return continueWithAtomInJsonCore('int');
						case 'BoolLeaf':
							return continueWithAtomInJsonCore('bool');
						case 'FloatLeaf':
							return continueWithAtomInJsonCore('float');
						case 'BytesLeaf':
							return {decodeExpression: 'json_decode_Bytes', encodeExpression: 'json_encode_Bytes ' + encodeValueExpression};
						case 'ListLeaf':
							return continueWithLocalNameAndCommonPrefix($author$project$CompileElmApp$jsonConvertListFunctionNameCommonPart);
						case 'ArrayLeaf':
							return continueWithLocalNameAndCommonPrefix($author$project$CompileElmApp$jsonConvertArrayFunctionNameCommonPart);
						case 'SetLeaf':
							return continueWithLocalNameAndCommonPrefix($author$project$CompileElmApp$jsonConvertSetFunctionNameCommonPart);
						case 'ResultLeaf':
							return continueWithLocalNameAndCommonPrefix($author$project$CompileElmApp$jsonConvertResultFunctionNameCommonPart);
						case 'MaybeLeaf':
							return continueWithLocalNameAndCommonPrefix($author$project$CompileElmApp$jsonConvertMaybeFunctionNameCommonPart);
						case 'DictLeaf':
							return continueWithLocalNameAndCommonPrefix($author$project$CompileElmApp$jsonConvertDictFunctionNameCommonPart);
						default:
							return {decodeExpression: 'Json.Decode.value', encodeExpression: encodeValueExpression};
					}
			}
		}
	});
var $author$project$CompileElmApp$jsonEncodeParamName = 'valueToEncode';
var $author$project$CompileElmApp$buildJsonConverterFunctionsForTypeAnnotation = function (typeAnnotation) {
	var typeAnnotationText = $author$project$CompileElmApp$buildTypeAnnotationText(typeAnnotation);
	var nameCommonPart = A2(
		$elm$core$String$left,
		10,
		$elm$core$String$fromInt(
			$author$project$FNV1a$hash(typeAnnotationText)));
	var jsonConverterExpressions = A2(
		$author$project$CompileElmApp$jsonConverterExpressionFromType,
		{encodeValueExpression: $author$project$CompileElmApp$jsonEncodeParamName, typeArgLocalName: 'type_arg'},
		_Utils_Tuple2(typeAnnotation, _List_Nil));
	var encodeFunctionName = _Utils_ap($author$project$CompileElmApp$jsonEncodeFunctionNamePrefix, nameCommonPart);
	var encodeFunctionText = encodeFunctionName + (' ' + ($author$project$CompileElmApp$jsonEncodeParamName + (' =\n' + A2($author$project$CompileElmApp$indentElmCodeLines, 1, jsonConverterExpressions.encodeExpression))));
	var decodeFunctionName = _Utils_ap($author$project$CompileElmApp$jsonDecodeFunctionNamePrefix, nameCommonPart);
	var decodeFunctionText = decodeFunctionName + (' =\n' + A2($author$project$CompileElmApp$indentElmCodeLines, 1, jsonConverterExpressions.decodeExpression));
	return {
		decodeFunction: {name: decodeFunctionName, text: decodeFunctionText},
		encodeFunction: {name: encodeFunctionName, text: encodeFunctionText}
	};
};
var $author$project$Common$listUniqueHelp = F2(
	function (remaining, accumulator) {
		listUniqueHelp:
		while (true) {
			if (!remaining.b) {
				return $elm$core$List$reverse(accumulator);
			} else {
				var first = remaining.a;
				var rest = remaining.b;
				if (A2($elm$core$List$member, first, accumulator)) {
					var $temp$remaining = rest,
						$temp$accumulator = accumulator;
					remaining = $temp$remaining;
					accumulator = $temp$accumulator;
					continue listUniqueHelp;
				} else {
					var $temp$remaining = rest,
						$temp$accumulator = A2($elm$core$List$cons, first, accumulator);
					remaining = $temp$remaining;
					accumulator = $temp$accumulator;
					continue listUniqueHelp;
				}
			}
		}
	});
var $author$project$Common$listUnique = function (list) {
	return A2($author$project$Common$listUniqueHelp, list, _List_Nil);
};
var $author$project$CompileElmApp$moduleNameFromTypeName = A2(
	$elm$core$Basics$composeR,
	$elm$core$String$split('.'),
	A2(
		$elm$core$Basics$composeR,
		$elm$core$List$reverse,
		A2(
			$elm$core$Basics$composeR,
			$elm$core$List$drop(1),
			A2(
				$elm$core$Basics$composeR,
				$elm$core$List$reverse,
				$elm$core$String$join('.')))));
var $author$project$CompileElmApp$generateFunctionsForMultipleTypes = F3(
	function (config, typeAnnotationsBeforeDeduplicating, choiceTypes) {
		var modulesToImportForChoiceTypes = $elm$core$Set$fromList(
			A2(
				$elm$core$List$map,
				$elm$core$String$split('.'),
				$elm$core$Set$toList(
					$elm$core$Set$fromList(
						A2(
							$elm$core$List$map,
							$author$project$CompileElmApp$moduleNameFromTypeName,
							$elm$core$Dict$keys(choiceTypes))))));
		var generatedFunctionsFromTypeAnnotations = A2(
			$elm$core$List$concatMap,
			config.generateFromTypeAnnotation,
			$author$project$Common$listUnique(typeAnnotationsBeforeDeduplicating));
		var generatedFunctionsFromChoiceTypes = A2(
			$elm$core$List$concatMap,
			config.generateFromChoiceType,
			$elm$core$Dict$toList(choiceTypes));
		var generatedFunctions = _Utils_ap(generatedFunctionsFromTypeAnnotations, generatedFunctionsFromChoiceTypes);
		return {generatedFunctions: generatedFunctions, modulesToImportForChoiceTypes: modulesToImportForChoiceTypes};
	});
var $author$project$CompileElmApp$jsonConverterFunctionFromChoiceType = F2(
	function (_v0, choiceType) {
		var choiceTypeName = _v0.choiceTypeName;
		var encodeValueExpression = _v0.encodeValueExpression;
		var typeArgLocalName = _v0.typeArgLocalName;
		var typeNameRepresentation = $author$project$CompileElmApp$jsonConverterFunctionNameCommonPartFromTypeName(choiceTypeName);
		var moduleName = $author$project$CompileElmApp$moduleNameFromTypeName(choiceTypeName);
		var tagsExpressions = A2(
			$elm$core$List$map,
			function (_v1) {
				var tagName = _v1.a;
				var tagParameters = _v1.b;
				var tagParametersExpressions = A2(
					$elm$core$List$indexedMap,
					F2(
						function (i, tagParamType) {
							var argumentLocalName = 'tagArgument' + $elm$core$String$fromInt(i);
							var tagParamExpr = A2(
								$author$project$CompileElmApp$jsonConverterExpressionFromType,
								{encodeValueExpression: argumentLocalName, typeArgLocalName: typeArgLocalName},
								_Utils_Tuple2(tagParamType, _List_Nil));
							return {decode: tagParamExpr.decodeExpression, encode: tagParamExpr.encodeExpression, localName: argumentLocalName};
						}),
					tagParameters);
				var encodeSecondLine = 'Json.Encode.object [ ( \"' + (tagName + ('\", Json.Encode.list identity [' + ((_Utils_eq(tagParametersExpressions, _List_Nil) ? '' : (' ' + (A2(
					$elm$core$String$join,
					', ',
					A2(
						$elm$core$List$map,
						function ($) {
							return $.encode;
						},
						tagParametersExpressions)) + ' '))) + '] ) ]')));
				var encodeArguments = A2(
					$elm$core$String$join,
					' ',
					A2(
						$elm$core$List$map,
						function ($) {
							return $.localName;
						},
						tagParametersExpressions));
				var encodeFirstLine = A2(
					$elm$core$String$join,
					' ',
					A2(
						$elm$core$List$filter,
						A2($elm$core$Basics$composeR, $elm$core$String$isEmpty, $elm$core$Basics$not),
						_List_fromArray(
							[moduleName + ('.' + tagName), encodeArguments, '->'])));
				var decodeInField = _Utils_eq(tagParametersExpressions, _List_Nil) ? ('jsonDecodeSucceedWhenNotNull ' + (moduleName + ('.' + tagName))) : ('Json.Decode.lazy (\\_ -> Json.Decode.map' + ((($elm$core$List$length(tagParametersExpressions) === 1) ? '' : $elm$core$String$fromInt(
					$elm$core$List$length(tagParametersExpressions))) + (' ' + (moduleName + ('.' + (tagName + (' ' + (A2(
					$elm$core$String$join,
					' ',
					A2(
						$elm$core$List$indexedMap,
						F2(
							function (i, tagParamExpr) {
								var tagParamDecodeExpr = A2($elm$core$String$contains, ' ', tagParamExpr.decode) ? ('(' + (tagParamExpr.decode + ')')) : tagParamExpr.decode;
								return '(Json.Decode.index ' + ($elm$core$String$fromInt(i) + (' ' + (tagParamDecodeExpr + ')')));
							}),
						tagParametersExpressions)) + ')'))))))));
				return {
					decode: 'Json.Decode.field \"' + (tagName + ('\" (' + (decodeInField + ')'))),
					encode: A2(
						$elm$core$String$join,
						'\n',
						_List_fromArray(
							[
								encodeFirstLine,
								A2($author$project$CompileElmApp$indentElmCodeLines, 1, encodeSecondLine)
							]))
				};
			},
			A2(
				$elm$core$List$sortBy,
				$elm$core$Tuple$first,
				$elm$core$Dict$toList(choiceType.tags)));
		var encodeParametersText = A2(
			$elm$core$String$join,
			' ',
			A2(
				$elm$core$List$map,
				A2(
					$elm$core$Basics$composeR,
					$author$project$CompileElmApp$jsonConverterFunctionNameFromTypeParameterName,
					function ($) {
						return $.encodeName;
					}),
				choiceType.parameters));
		var encodeListExpression = A2(
			$elm$core$String$join,
			'\n',
			A2(
				$elm$core$List$map,
				function ($) {
					return $.encode;
				},
				tagsExpressions));
		var encodeFunctionName = _Utils_ap($author$project$CompileElmApp$jsonEncodeFunctionNamePrefix, typeNameRepresentation);
		var encodeExpression = A2(
			$elm$core$String$join,
			'\n',
			_List_fromArray(
				[
					'case ' + (encodeValueExpression + ' of'),
					A2($author$project$CompileElmApp$indentElmCodeLines, 1, encodeListExpression)
				]));
		var decodeParametersText = A2(
			$elm$core$String$join,
			' ',
			A2(
				$elm$core$List$map,
				A2(
					$elm$core$Basics$composeR,
					$author$project$CompileElmApp$jsonConverterFunctionNameFromTypeParameterName,
					function ($) {
						return $.decodeName;
					}),
				choiceType.parameters));
		var decodeListExpression = '[ ' + (A2(
			$elm$core$String$join,
			'\n, ',
			A2(
				$elm$core$List$map,
				function ($) {
					return $.decode;
				},
				tagsExpressions)) + '\n]');
		var decodeFunctionName = _Utils_ap($author$project$CompileElmApp$jsonDecodeFunctionNamePrefix, typeNameRepresentation);
		var decodeExpression = A2(
			$elm$core$String$join,
			'\n',
			_List_fromArray(
				[
					'Json.Decode.oneOf',
					A2($author$project$CompileElmApp$indentElmCodeLines, 1, decodeListExpression)
				]));
		return {
			decodeFunction: {
				name: decodeFunctionName,
				text: A2(
					$elm$core$String$join,
					'\n',
					_List_fromArray(
						[
							A2(
							$elm$core$String$join,
							' ',
							A2(
								$elm$core$List$filter,
								A2($elm$core$Basics$composeR, $elm$core$String$isEmpty, $elm$core$Basics$not),
								_List_fromArray(
									[decodeFunctionName, decodeParametersText, '=']))),
							A2($author$project$CompileElmApp$indentElmCodeLines, 1, decodeExpression)
						]))
			},
			encodeFunction: {
				name: encodeFunctionName,
				text: A2(
					$elm$core$String$join,
					'\n',
					_List_fromArray(
						[
							A2(
							$elm$core$String$join,
							' ',
							A2(
								$elm$core$List$filter,
								A2($elm$core$Basics$composeR, $elm$core$String$isEmpty, $elm$core$Basics$not),
								_List_fromArray(
									[encodeFunctionName, encodeParametersText, encodeValueExpression, '=']))),
							A2($author$project$CompileElmApp$indentElmCodeLines, 1, encodeExpression)
						]))
			}
		};
	});
var $author$project$CompileElmApp$jsonConvertTupleFunctionNameCommonPart = '_tuple_';
var $author$project$CompileElmApp$jsonConverterSupportingFunctionsTextsWithCommonNamePattern = _List_fromArray(
	[
		{decodeSyntax: 'decoder =\n    Json.Decode.oneOf\n        [ Json.Decode.field "Nothing" (Json.Decode.succeed Nothing)\n        , Json.Decode.field "Just" ((Json.Decode.index 0 decoder) |> Json.Decode.map Just)\n        , Json.Decode.field "Just" (decoder |> Json.Decode.map Just) -- 2020-03-07 Support easy migration of apps: Support decode from older JSON format for now.\n        , Json.Decode.null Nothing -- Temporary backwardscompatibility: Map \'null\' to Nothing\n        ]\n     ', encodeSyntax: 'encodeJust valueToEncode =\n    case valueToEncode of\n        Nothing ->\n            [ ( "Nothing", [] |> Json.Encode.list identity ) ] |> Json.Encode.object\n\n        Just just ->\n            [ ( "Just", [ just ] |> Json.Encode.list encodeJust ) ] |> Json.Encode.object\n', functionNameCommonPart: $author$project$CompileElmApp$jsonConvertMaybeFunctionNameCommonPart},
		{decodeSyntax: ' = Json.Decode.list', encodeSyntax: ' = Json.Encode.list', functionNameCommonPart: $author$project$CompileElmApp$jsonConvertListFunctionNameCommonPart},
		{decodeSyntax: ' = Json.Decode.array', encodeSyntax: ' = Json.Encode.array', functionNameCommonPart: $author$project$CompileElmApp$jsonConvertArrayFunctionNameCommonPart},
		{decodeSyntax: 'decoder =\n    Json.Decode.list decoder |> Json.Decode.map Set.fromList', encodeSyntax: 'encoder =\n    Set.toList >> Json.Encode.list encoder', functionNameCommonPart: $author$project$CompileElmApp$jsonConvertSetFunctionNameCommonPart},
		{decodeSyntax: 'decodeKey decodeValue =\n        (Json.Decode.list (' + ($author$project$CompileElmApp$jsonDecodeFunctionNamePrefix + ($author$project$CompileElmApp$jsonConvertTupleFunctionNameCommonPart + '2 decodeKey decodeValue))\n            |> Json.Decode.map Dict.fromList')), encodeSyntax: 'encodeKey encodeValue =\n    Dict.toList >> Json.Encode.list (' + ($author$project$CompileElmApp$jsonEncodeFunctionNamePrefix + ($author$project$CompileElmApp$jsonConvertTupleFunctionNameCommonPart + '2 encodeKey encodeValue)')), functionNameCommonPart: $author$project$CompileElmApp$jsonConvertDictFunctionNameCommonPart},
		{decodeSyntax: 'decodeErr decodeOk =\n    Json.Decode.oneOf\n        [ Json.Decode.field "Err" (Json.Decode.index 0 decodeErr) |> Json.Decode.map Err\n        , Json.Decode.field "Ok" (Json.Decode.index 0 decodeOk) |> Json.Decode.map Ok\n        , Json.Decode.field "Err" decodeErr |> Json.Decode.map Err -- 2020-03-07 Support easy migration of apps: Support decode from older JSON format for now.\n        , Json.Decode.field "Ok" decodeOk |> Json.Decode.map Ok -- 2020-03-07 Support easy migration of apps: Support decode from older JSON format for now.\n        ]', encodeSyntax: 'encodeErr encodeOk valueToEncode =\n    case valueToEncode of\n        Err valueToEncodeError ->\n            [ ( "Err", [ valueToEncodeError ] |> Json.Encode.list encodeErr ) ] |> Json.Encode.object\n\n        Ok valueToEncodeOk ->\n            [ ( "Ok", [ valueToEncodeOk ] |> Json.Encode.list encodeOk ) ] |> Json.Encode.object', functionNameCommonPart: $author$project$CompileElmApp$jsonConvertResultFunctionNameCommonPart},
		{decodeSyntax: 'decodeA decodeB =\n    Json.Decode.map2 (\\a b -> ( a, b ))\n        (Json.Decode.index 0 decodeA)\n        (Json.Decode.index 1 decodeB)', encodeSyntax: 'encodeA encodeB ( a, b ) =\n    [ a |> encodeA, b |> encodeB ]\n        |> Json.Encode.list identity', functionNameCommonPart: $author$project$CompileElmApp$jsonConvertTupleFunctionNameCommonPart + '2'},
		{decodeSyntax: 'decodeA decodeB decodeC =\n    Json.Decode.map3 (\\a b c -> ( a, b, c ))\n        (Json.Decode.index 0 decodeA)\n        (Json.Decode.index 1 decodeB)\n        (Json.Decode.index 2 decodeC)', encodeSyntax: 'encodeA encodeB encodeC ( a, b, c ) =\n    [ a |> encodeA, b |> encodeB, c |> encodeC ]\n        |> Json.Encode.list identity', functionNameCommonPart: $author$project$CompileElmApp$jsonConvertTupleFunctionNameCommonPart + '3'}
	]);
var $author$project$CompileElmApp$jsonConverterSupportingFunctionsTexts = A2(
	$elm$core$List$map,
	function (_function) {
		return {functionName: _function.functionName, functionText: _function.functionText, modulesToImport: $elm$core$Set$empty};
	},
	_Utils_ap(
		A2(
			$elm$core$List$map,
			function (_function) {
				return {functionName: _function.name, functionText: _function.name + (' ' + _function.afterName)};
			},
			A2(
				$elm$core$List$concatMap,
				function (supportingFunction) {
					return _List_fromArray(
						[
							{
							afterName: supportingFunction.encodeSyntax,
							name: _Utils_ap($author$project$CompileElmApp$jsonEncodeFunctionNamePrefix, supportingFunction.functionNameCommonPart)
						},
							{
							afterName: supportingFunction.decodeSyntax,
							name: _Utils_ap($author$project$CompileElmApp$jsonDecodeFunctionNamePrefix, supportingFunction.functionNameCommonPart)
						}
						]);
				},
				$author$project$CompileElmApp$jsonConverterSupportingFunctionsTextsWithCommonNamePattern)),
		_List_fromArray(
			[
				{functionName: 'jsonDecode_andMap', functionText: '\njsonDecode_andMap : Json.Decode.Decoder a -> Json.Decode.Decoder (a -> b) -> Json.Decode.Decoder b\njsonDecode_andMap =\n    Json.Decode.map2 (|>)'},
				{functionName: 'json_encode_Bytes', functionText: '\njson_encode_Bytes : Bytes.Bytes -> Json.Encode.Value\njson_encode_Bytes bytes =\n    [ ( "AsBase64", bytes |> Base64.fromBytes |> Maybe.withDefault "Error encoding to base64" |> Json.Encode.string ) ]\n        |> Json.Encode.object'},
				{functionName: 'json_decode_Bytes', functionText: '\njson_decode_Bytes : Json.Decode.Decoder Bytes.Bytes\njson_decode_Bytes =\n    Json.Decode.field "AsBase64"\n        (Json.Decode.string\n            |> Json.Decode.andThen\n                (Base64.toBytes >> Maybe.map Json.Decode.succeed >> Maybe.withDefault (Json.Decode.fail "Failed to decode base64."))\n        )\n              '},
				{functionName: 'jsonDecodeSucceedWhenNotNull', functionText: '\njsonDecodeSucceedWhenNotNull : a -> Json.Decode.Decoder a\njsonDecodeSucceedWhenNotNull valueIfNotNull =\n    Json.Decode.value\n        |> Json.Decode.andThen\n            (\\asValue ->\n                if asValue == Json.Encode.null then\n                    Json.Decode.fail "Is null."\n\n                else\n                    Json.Decode.succeed valueIfNotNull\n            )'},
				{functionName: 'jsonDecode_field_withAlternateNames', functionText: '\njsonDecode_field_withAlternateNames : String -> List String -> Json.Decode.Decoder a -> Json.Decode.Decoder a\njsonDecode_field_withAlternateNames fieldName alternateNames decoder =\n    Json.Decode.oneOf\n        ((fieldName :: alternateNames)\n            |> List.map (\\name -> Json.Decode.field name decoder)\n        )'}
			])));
var $author$project$CompileElmApp$buildJsonConverterFunctionsForMultipleTypes = F2(
	function (typeAnnotations, choiceTypes) {
		var defaultModulesToImportForFunction = $elm$core$Set$fromList(
			_List_fromArray(
				[
					_List_fromArray(
					['Dict']),
					_List_fromArray(
					['Set']),
					_List_fromArray(
					['Array']),
					_List_fromArray(
					['Json', 'Decode']),
					_List_fromArray(
					['Json', 'Encode']),
					_List_fromArray(
					['Bytes']),
					_List_fromArray(
					['Bytes', 'Decode']),
					_List_fromArray(
					['Bytes', 'Encode'])
				]));
		var generatedFunctionsForTypes = A3(
			$author$project$CompileElmApp$generateFunctionsForMultipleTypes,
			{
				generateFromChoiceType: A2(
					$elm$core$Basics$composeR,
					function (_v0) {
						var choiceTypeName = _v0.a;
						var choiceType = _v0.b;
						return A2(
							$author$project$CompileElmApp$jsonConverterFunctionFromChoiceType,
							{choiceTypeName: choiceTypeName, encodeValueExpression: $author$project$CompileElmApp$jsonEncodeParamName, typeArgLocalName: 'type_arg'},
							choiceType);
					},
					function (functionsForType) {
						return A2(
							$elm$core$List$map,
							function (_function) {
								return {functionName: _function.name, functionText: _function.text, modulesToImport: defaultModulesToImportForFunction};
							},
							_List_fromArray(
								[functionsForType.encodeFunction, functionsForType.decodeFunction]));
					}),
				generateFromTypeAnnotation: A2(
					$elm$core$Basics$composeR,
					$author$project$CompileElmApp$buildJsonConverterFunctionsForTypeAnnotation,
					function (functionsForType) {
						return A2(
							$elm$core$List$map,
							function (_function) {
								return {functionName: _function.name, functionText: _function.text, modulesToImport: defaultModulesToImportForFunction};
							},
							_List_fromArray(
								[functionsForType.encodeFunction, functionsForType.decodeFunction]));
					})
			},
			typeAnnotations,
			choiceTypes);
		var generatedFunctions = _Utils_ap(generatedFunctionsForTypes.generatedFunctions, $author$project$CompileElmApp$jsonConverterSupportingFunctionsTexts);
		return {generatedFunctions: generatedFunctions, modulesToImportForChoiceTypes: generatedFunctionsForTypes.modulesToImportForChoiceTypes};
	});
var $author$project$CompileElmApp$encodingModuleImportBase64 = _Utils_Tuple2(
	_List_fromArray(
		['CompilerGenerated', 'Base64']),
	$elm$core$Maybe$Just('Base64'));
var $author$project$CompileElmApp$exposeAllInElmModule = function (moduleText) {
	var _v0 = $author$project$CompileElmApp$parseElmModuleText(moduleText);
	if (_v0.$ === 'Err') {
		return moduleText;
	} else {
		var parsedModule = _v0.a;
		var exposingListNode = function () {
			var _v2 = $stil4m$elm_syntax$Elm$Syntax$Node$value(parsedModule.moduleDefinition);
			switch (_v2.$) {
				case 'NormalModule':
					var normalModule = _v2.a;
					return normalModule.exposingList;
				case 'PortModule':
					var portModule = _v2.a;
					return portModule.exposingList;
				default:
					var effectModule = _v2.a;
					return effectModule.exposingList;
			}
		}();
		var exposingListRange = $stil4m$elm_syntax$Elm$Syntax$Node$range(exposingListNode);
		var _v1 = $stil4m$elm_syntax$Elm$Syntax$Node$value(exposingListNode);
		if (_v1.$ === 'All') {
			return moduleText;
		} else {
			return A3($author$project$CompileElmApp$replaceRangeInText, exposingListRange, 'exposing (..)', moduleText);
		}
	}
};
var $author$project$CompileElmApp$exposeAllInElmModuleInAppFiles = F3(
	function (sourceDirs, moduleName, appFiles) {
		var moduleFilePath = A2($author$project$CompileElmApp$filePathFromElmModuleName, sourceDirs, moduleName);
		var _v0 = A2(
			$elm$core$Maybe$andThen,
			$author$project$CompileElmApp$stringFromFileContent,
			A2($elm$core$Dict$get, moduleFilePath, appFiles));
		if (_v0.$ === 'Nothing') {
			return appFiles;
		} else {
			var originalModuleText = _v0.a;
			var moduleText = $author$project$CompileElmApp$exposeAllInElmModule(originalModuleText);
			return A3(
				$elm$core$Dict$insert,
				moduleFilePath,
				$author$project$CompileElmApp$fileContentFromString(moduleText),
				appFiles);
		}
	});
var $author$project$CompileElmApp$mapAppFilesToSupportJsonConverters = F4(
	function (_v0, typeAnnotationsBeforeDeduplicating, choiceTypes, appFilesBefore) {
		var generatedModuleNamePrefix = _v0.generatedModuleNamePrefix;
		var sourceDirs = _v0.sourceDirs;
		var generatedModuleName = _Utils_ap(
			generatedModuleNamePrefix,
			_List_fromArray(
				['Generated_JsonConverters']));
		var generatedModulePath = A2($author$project$CompileElmApp$filePathFromElmModuleName, sourceDirs, generatedModuleName);
		var generatedFunctions = A2($author$project$CompileElmApp$buildJsonConverterFunctionsForMultipleTypes, typeAnnotationsBeforeDeduplicating, choiceTypes);
		var modulesToImport = A2(
			$elm$core$Set$union,
			generatedFunctions.modulesToImportForChoiceTypes,
			A3(
				$elm$core$List$foldl,
				$elm$core$Set$union,
				$elm$core$Set$empty,
				A2(
					$elm$core$List$map,
					function ($) {
						return $.modulesToImport;
					},
					generatedFunctions.generatedFunctions)));
		var generatedModuleModulesToImport = A2(
			$elm$core$List$cons,
			$author$project$CompileElmApp$encodingModuleImportBase64,
			A2(
				$elm$core$List$map,
				A2(
					$elm$core$Basics$composeR,
					$elm$core$Tuple$pair,
					$elm$core$Basics$apR($elm$core$Maybe$Nothing)),
				$elm$core$Set$toList(modulesToImport)));
		var generatedModuleTextWithoutModuleDeclaration = A2(
			$elm$core$String$join,
			'\n\n\n',
			A2(
				$elm$core$List$map,
				$elm$core$String$trim,
				$elm$core$List$concat(
					_List_fromArray(
						[
							_List_fromArray(
							[
								A2(
								$elm$core$String$join,
								'\n',
								$elm$core$List$sort(
									A2($elm$core$List$map, $author$project$CompileElmApp$importSyntaxTextFromModuleNameAndAlias, generatedModuleModulesToImport)))
							]),
							A2(
							$elm$core$List$map,
							function ($) {
								return $.functionText;
							},
							generatedFunctions.generatedFunctions)
						]))));
		var generatedModuleText = A2(
			$elm$core$String$join,
			'\n\n',
			_List_fromArray(
				[
					'module ' + (A2($elm$core$String$join, '.', generatedModuleName) + ' exposing (..)'),
					generatedModuleTextWithoutModuleDeclaration
				]));
		var appFilesAfterExposingChoiceTypesInModules = A3(
			$elm$core$List$foldl,
			$author$project$CompileElmApp$exposeAllInElmModuleInAppFiles(sourceDirs),
			appFilesBefore,
			$elm$core$Set$toList(generatedFunctions.modulesToImportForChoiceTypes));
		var appFiles = A3(
			$author$project$CompileElmApp$updateFileContentAtPath,
			$elm$core$Basics$always(
				$author$project$CompileElmApp$fileContentFromString(generatedModuleText)),
			generatedModulePath,
			appFilesAfterExposingChoiceTypesInModules);
		return _Utils_Tuple2(
			appFiles,
			{
				generatedModuleName: generatedModuleName,
				modulesToImport: A2($elm$core$Set$insert, generatedModuleName, modulesToImport)
			});
	});
var $author$project$CompileElmApp$mapLocatedInSourceFiles = F2(
	function (mapLocated, orig) {
		var location = orig.a;
		var located = orig.b;
		return A2(
			$author$project$CompileElmApp$LocatedInSourceFiles,
			location,
			mapLocated(located));
	});
var $stil4m$elm_syntax$Elm$Syntax$ModuleName$encode = $elm$json$Json$Encode$list($elm$json$Json$Encode$string);
var $stil4m$elm_syntax$Elm$Syntax$Range$encode = function (_v0) {
	var start = _v0.start;
	var end = _v0.end;
	return A2(
		$elm$json$Json$Encode$list,
		$elm$json$Json$Encode$int,
		_List_fromArray(
			[start.row, start.column, end.row, end.column]));
};
var $stil4m$elm_syntax$Elm$Syntax$Node$encode = F2(
	function (f, _v0) {
		var r = _v0.a;
		var v = _v0.b;
		return $elm$json$Json$Encode$object(
			_List_fromArray(
				[
					_Utils_Tuple2(
					'range',
					$stil4m$elm_syntax$Elm$Syntax$Range$encode(r)),
					_Utils_Tuple2(
					'value',
					f(v))
				]));
	});
var $stil4m$elm_syntax$Elm$Json$Util$encodeTyped = F2(
	function (x, v) {
		return $elm$json$Json$Encode$object(
			_List_fromArray(
				[
					_Utils_Tuple2(
					'type',
					$elm$json$Json$Encode$string(x)),
					_Utils_Tuple2(x, v)
				]));
	});
var $stil4m$elm_syntax$Elm$Syntax$TypeAnnotation$encode = function (typeAnnotation) {
	switch (typeAnnotation.$) {
		case 'GenericType':
			var name = typeAnnotation.a;
			return A2(
				$stil4m$elm_syntax$Elm$Json$Util$encodeTyped,
				'generic',
				$elm$json$Json$Encode$object(
					_List_fromArray(
						[
							_Utils_Tuple2(
							'value',
							$elm$json$Json$Encode$string(name))
						])));
		case 'Typed':
			var moduleNameAndName = typeAnnotation.a;
			var args = typeAnnotation.b;
			var inner = function (_v2) {
				var mod = _v2.a;
				var n = _v2.b;
				return $elm$json$Json$Encode$object(
					_List_fromArray(
						[
							_Utils_Tuple2(
							'moduleName',
							$stil4m$elm_syntax$Elm$Syntax$ModuleName$encode(mod)),
							_Utils_Tuple2(
							'name',
							$elm$json$Json$Encode$string(n))
						]));
			};
			return A2(
				$stil4m$elm_syntax$Elm$Json$Util$encodeTyped,
				'typed',
				$elm$json$Json$Encode$object(
					_List_fromArray(
						[
							_Utils_Tuple2(
							'moduleNameAndName',
							A2($stil4m$elm_syntax$Elm$Syntax$Node$encode, inner, moduleNameAndName)),
							_Utils_Tuple2(
							'args',
							A2(
								$elm$json$Json$Encode$list,
								$stil4m$elm_syntax$Elm$Syntax$Node$encode($stil4m$elm_syntax$Elm$Syntax$TypeAnnotation$encode),
								args))
						])));
		case 'Unit':
			return A2(
				$stil4m$elm_syntax$Elm$Json$Util$encodeTyped,
				'unit',
				$elm$json$Json$Encode$object(_List_Nil));
		case 'Tupled':
			var t = typeAnnotation.a;
			return A2(
				$stil4m$elm_syntax$Elm$Json$Util$encodeTyped,
				'tupled',
				$elm$json$Json$Encode$object(
					_List_fromArray(
						[
							_Utils_Tuple2(
							'values',
							A2(
								$elm$json$Json$Encode$list,
								$stil4m$elm_syntax$Elm$Syntax$Node$encode($stil4m$elm_syntax$Elm$Syntax$TypeAnnotation$encode),
								t))
						])));
		case 'FunctionTypeAnnotation':
			var left = typeAnnotation.a;
			var right = typeAnnotation.b;
			return A2(
				$stil4m$elm_syntax$Elm$Json$Util$encodeTyped,
				'function',
				$elm$json$Json$Encode$object(
					_List_fromArray(
						[
							_Utils_Tuple2(
							'left',
							A2($stil4m$elm_syntax$Elm$Syntax$Node$encode, $stil4m$elm_syntax$Elm$Syntax$TypeAnnotation$encode, left)),
							_Utils_Tuple2(
							'right',
							A2($stil4m$elm_syntax$Elm$Syntax$Node$encode, $stil4m$elm_syntax$Elm$Syntax$TypeAnnotation$encode, right))
						])));
		case 'Record':
			var recordDefinition = typeAnnotation.a;
			return A2(
				$stil4m$elm_syntax$Elm$Json$Util$encodeTyped,
				'record',
				$elm$json$Json$Encode$object(
					_List_fromArray(
						[
							_Utils_Tuple2(
							'value',
							$stil4m$elm_syntax$Elm$Syntax$TypeAnnotation$cyclic$encodeRecordDefinition()(recordDefinition))
						])));
		default:
			var name = typeAnnotation.a;
			var recordDefinition = typeAnnotation.b;
			return A2(
				$stil4m$elm_syntax$Elm$Json$Util$encodeTyped,
				'genericRecord',
				$elm$json$Json$Encode$object(
					_List_fromArray(
						[
							_Utils_Tuple2(
							'name',
							A2($stil4m$elm_syntax$Elm$Syntax$Node$encode, $elm$json$Json$Encode$string, name)),
							_Utils_Tuple2(
							'values',
							A2(
								$stil4m$elm_syntax$Elm$Syntax$Node$encode,
								$stil4m$elm_syntax$Elm$Syntax$TypeAnnotation$cyclic$encodeRecordDefinition(),
								recordDefinition))
						])));
	}
};
var $stil4m$elm_syntax$Elm$Syntax$TypeAnnotation$encodeRecordField = function (_v0) {
	var name = _v0.a;
	var ref = _v0.b;
	return $elm$json$Json$Encode$object(
		_List_fromArray(
			[
				_Utils_Tuple2(
				'name',
				A2($stil4m$elm_syntax$Elm$Syntax$Node$encode, $elm$json$Json$Encode$string, name)),
				_Utils_Tuple2(
				'typeAnnotation',
				A2($stil4m$elm_syntax$Elm$Syntax$Node$encode, $stil4m$elm_syntax$Elm$Syntax$TypeAnnotation$encode, ref))
			]));
};
function $stil4m$elm_syntax$Elm$Syntax$TypeAnnotation$cyclic$encodeRecordDefinition() {
	return $elm$json$Json$Encode$list(
		$stil4m$elm_syntax$Elm$Syntax$Node$encode($stil4m$elm_syntax$Elm$Syntax$TypeAnnotation$encodeRecordField));
}
try {
	var $stil4m$elm_syntax$Elm$Syntax$TypeAnnotation$encodeRecordDefinition = $stil4m$elm_syntax$Elm$Syntax$TypeAnnotation$cyclic$encodeRecordDefinition();
	$stil4m$elm_syntax$Elm$Syntax$TypeAnnotation$cyclic$encodeRecordDefinition = function () {
		return $stil4m$elm_syntax$Elm$Syntax$TypeAnnotation$encodeRecordDefinition;
	};
} catch ($) {
	throw 'Some top-level definitions from `Elm.Syntax.TypeAnnotation` are causing infinite recursion:\n\n  ┌─────┐\n  │    encode\n  │     ↓\n  │    encodeRecordDefinition\n  │     ↓\n  │    encodeRecordField\n  └─────┘\n\nThese errors are very tricky, so read https://elm-lang.org/0.19.1/bad-recursion to learn how to fix it!';}
var $author$project$CompileElmApp$parseJsonConverterDeclarationType = function (signature) {
	var errorValue = function (detail) {
		return $elm$core$Result$Err(
			'Unexpected type signature (' + (detail + ('): ' + A2(
				$elm$json$Json$Encode$encode,
				0,
				$stil4m$elm_syntax$Elm$Syntax$TypeAnnotation$encode(
					$stil4m$elm_syntax$Elm$Syntax$Node$value(signature.typeAnnotation))))));
	};
	var _v0 = $stil4m$elm_syntax$Elm$Syntax$Node$value(signature.typeAnnotation);
	switch (_v0.$) {
		case 'Typed':
			var genericType = _v0.a;
			var typeArguments = _v0.b;
			if ($stil4m$elm_syntax$Elm$Syntax$Node$value(genericType).b !== 'Decoder') {
				return errorValue('Generic type is not \'Decoder\'');
			} else {
				if (typeArguments.b && (!typeArguments.b.b)) {
					var singleTypeArgument = typeArguments.a;
					return $elm$core$Result$Ok(
						{isDecoder: true, typeAnnotation: singleTypeArgument});
				} else {
					return errorValue('Unexpected number of type arguments for \'Decoder\'');
				}
			}
		case 'FunctionTypeAnnotation':
			var leftType = _v0.a;
			var rightType = _v0.b;
			var _v2 = $stil4m$elm_syntax$Elm$Syntax$Node$value(rightType);
			if (_v2.$ === 'Typed') {
				var rightNameNode = _v2.a;
				return ($stil4m$elm_syntax$Elm$Syntax$Node$value(rightNameNode).b !== 'Value') ? errorValue('right side of function type is not \'Value\'') : $elm$core$Result$Ok(
					{isDecoder: false, typeAnnotation: leftType});
			} else {
				return errorValue('right side of function type');
			}
		default:
			return errorValue('');
	}
};
var $author$project$CompileElmApp$mapJsonConvertersModuleText = F2(
	function (_v0, _v1) {
		var originalSourceModules = _v0.originalSourceModules;
		var sourceDirs = _v0.sourceDirs;
		var sourceFiles = _v1.a;
		var moduleFilePath = _v1.b;
		var moduleText = _v1.c;
		return A2(
			$elm$core$Result$andThen,
			function (parsedModule) {
				var interfaceModuleName = $stil4m$elm_syntax$Elm$Syntax$Module$moduleName(
					$stil4m$elm_syntax$Elm$Syntax$Node$value(parsedModule.moduleDefinition));
				return A2(
					$elm$core$Result$andThen,
					function (functionsToReplace) {
						var _v6 = A4(
							$author$project$CompileElmApp$mapAppFilesToSupportJsonConverters,
							{generatedModuleNamePrefix: interfaceModuleName, sourceDirs: sourceDirs},
							A2(
								$elm$core$List$map,
								function ($) {
									return $.parsedTypeAnnotation;
								},
								functionsToReplace),
							A3(
								$elm$core$List$foldl,
								$elm$core$Dict$union,
								$elm$core$Dict$empty,
								A2(
									$elm$core$List$map,
									function ($) {
										return $.dependencies;
									},
									functionsToReplace)),
							sourceFiles);
						var appFiles = _v6.a;
						var generatedModuleName = _v6.b.generatedModuleName;
						var modulesToImport = _v6.b.modulesToImport;
						return A2(
							$elm$core$Result$mapError,
							$author$project$CompileElmApp$locatedInSourceFilesFromRange(moduleFilePath),
							A2(
								$elm$core$Result$map,
								$elm$core$Tuple$pair(appFiles),
								A3(
									$author$project$CompileElmApp$listFoldlToAggregateResult,
									F2(
										function (functionToReplace, previousModuleText) {
											var functionsNamesInGeneratedModules = $author$project$CompileElmApp$buildJsonConverterFunctionsForTypeAnnotation(functionToReplace.parsedTypeAnnotation);
											var functionName = functionToReplace.functionName;
											var newFunction = functionName + (' =\n    ' + A2(
												$elm$core$String$join,
												'.',
												_Utils_ap(
													generatedModuleName,
													_List_fromArray(
														[
															functionToReplace.functionType.isDecoder ? functionsNamesInGeneratedModules.decodeFunction.name : functionsNamesInGeneratedModules.encodeFunction.name
														]))));
											var mapFunctionDeclarationLines = function (originalFunctionTextLines) {
												return $elm$core$List$concat(
													_List_fromArray(
														[
															A2($elm$core$List$take, 1, originalFunctionTextLines),
															_List_fromArray(
															[newFunction])
														]));
											};
											return A2(
												$elm$core$Result$mapError,
												$stil4m$elm_syntax$Elm$Syntax$Node$Node(functionToReplace.declarationRange),
												A2(
													$elm$core$Result$mapError,
													$elm$core$Basics$append('Failed to replace function text: '),
													A2(
														$author$project$CompileElmApp$addOrUpdateFunctionInElmModuleText,
														{
															functionName: functionName,
															mapFunctionLines: A2(
																$elm$core$Basics$composeR,
																$elm$core$Maybe$withDefault(_List_Nil),
																mapFunctionDeclarationLines)
														},
														previousModuleText)));
										}),
									A2(
										$elm$core$Result$mapError,
										$stil4m$elm_syntax$Elm$Syntax$Node$Node(
											$author$project$CompileElmApp$syntaxRangeCoveringCompleteString(moduleText)),
										A2(
											$author$project$CompileElmApp$addImportsInElmModuleText,
											A2(
												$elm$core$List$map,
												A2(
													$elm$core$Basics$composeR,
													$elm$core$Tuple$pair,
													$elm$core$Basics$apR($elm$core$Maybe$Nothing)),
												$elm$core$Set$toList(modulesToImport)),
											moduleText)),
									functionsToReplace)));
					},
					A2(
						$author$project$Common$resultListMapCombine,
						function (functionDeclaration) {
							var _v3 = functionDeclaration.signature;
							if (_v3.$ === 'Nothing') {
								return $elm$core$Result$Err(
									A2(
										$author$project$CompileElmApp$LocatedInSourceFiles,
										{
											filePath: moduleFilePath,
											locationInModuleText: $stil4m$elm_syntax$Elm$Syntax$Node$range(functionDeclaration.declaration)
										},
										'Missing function signature'));
							} else {
								var functionSignature = _v3.a;
								var functionName = $stil4m$elm_syntax$Elm$Syntax$Node$value(
									$stil4m$elm_syntax$Elm$Syntax$Node$value(functionSignature).name);
								var _v4 = $author$project$CompileElmApp$parseJsonConverterDeclarationType(
									$stil4m$elm_syntax$Elm$Syntax$Node$value(functionSignature));
								if (_v4.$ === 'Err') {
									var error = _v4.a;
									return $elm$core$Result$Err(
										A2(
											$author$project$CompileElmApp$LocatedInSourceFiles,
											{
												filePath: moduleFilePath,
												locationInModuleText: $stil4m$elm_syntax$Elm$Syntax$Node$range(functionSignature)
											},
											'Failed parsing json coding function type: ' + error));
								} else {
									var functionType = _v4.a;
									return A2(
										$elm$core$Result$mapError,
										$author$project$CompileElmApp$mapLocatedInSourceFiles(
											$elm$core$Basics$append('Failed to prepare mapping \'' + (functionName + '\': '))),
										A2(
											$elm$core$Result$map,
											function (_v5) {
												var parsedTypeAnnotation = _v5.a;
												var dependencies = _v5.b;
												return {
													declarationRange: $stil4m$elm_syntax$Elm$Syntax$Node$range(functionDeclaration.declaration),
													dependencies: dependencies,
													functionName: functionName,
													functionType: functionType,
													parsedTypeAnnotation: parsedTypeAnnotation
												};
											},
											A2(
												$elm$core$Result$mapError,
												$author$project$CompileElmApp$mapLocatedInSourceFiles(
													$elm$core$Basics$append('Failed to parse type annotation: ')),
												A2(
													$author$project$CompileElmApp$parseElmTypeAndDependenciesRecursivelyFromAnnotation,
													originalSourceModules,
													_Utils_Tuple2(
														_Utils_Tuple2(moduleFilePath, parsedModule),
														functionType.typeAnnotation)))));
								}
							}
						},
						A2(
							$elm$core$List$filterMap,
							function (declaration) {
								var _v2 = $stil4m$elm_syntax$Elm$Syntax$Node$value(declaration);
								if (_v2.$ === 'FunctionDeclaration') {
									var functionDeclaration = _v2.a;
									return $elm$core$Maybe$Just(functionDeclaration);
								} else {
									return $elm$core$Maybe$Nothing;
								}
							},
							parsedModule.declarations)));
			},
			A2(
				$elm$core$Result$mapError,
				A2(
					$elm$core$Basics$composeR,
					$author$project$CompileElmApp$parserDeadEndsToString(moduleText),
					A2(
						$elm$core$Basics$composeR,
						$elm$core$Basics$append('Failed to parse Elm module text: '),
						A2(
							$elm$core$Basics$composeR,
							$stil4m$elm_syntax$Elm$Syntax$Node$Node(
								$author$project$CompileElmApp$syntaxRangeCoveringCompleteString(moduleText)),
							$author$project$CompileElmApp$locatedInSourceFilesFromRange(moduleFilePath)))),
				$author$project$CompileElmApp$parseElmModuleText(moduleText)));
	});
var $author$project$CompileElmApp$BytesEncoding = {$: 'BytesEncoding'};
var $author$project$CompileElmApp$Base64Encoding = {$: 'Base64Encoding'};
var $author$project$CompileElmApp$Utf8Encoding = {$: 'Utf8Encoding'};
var $author$project$CompileElmApp$encodingFromSourceFileFieldName = $elm$core$Dict$fromList(
	_List_fromArray(
		[
			_Utils_Tuple2('base64', $author$project$CompileElmApp$Base64Encoding),
			_Utils_Tuple2('utf8', $author$project$CompileElmApp$Utf8Encoding),
			_Utils_Tuple2('bytes', $author$project$CompileElmApp$BytesEncoding)
		]));
var $author$project$CompileElmApp$integrateSourceFilesFunctionRecordFieldName = F2(
	function (fieldName, configBefore) {
		var _v0 = A2($elm$core$Dict$get, fieldName, $author$project$CompileElmApp$encodingFromSourceFileFieldName);
		if (_v0.$ === 'Just') {
			var encoding = _v0.a;
			return $elm$core$Result$Ok(encoding);
		} else {
			return $elm$core$Result$Err('Unsupported field name: ' + fieldName);
		}
	});
var $author$project$CompileElmApp$parseSourceFileFunctionEncodingFromTypeAnnotation = function (typeAnnotation) {
	return A2(
		$elm$core$Result$mapError,
		function (_v0) {
			var path = _v0.a;
			var error = _v0.b;
			return 'Failed at path ' + (A2($elm$core$String$join, '.', path) + (': ' + error));
		},
		A4($author$project$CompileElmApp$parseInterfaceRecordTree, $elm$core$Basics$identity, $author$project$CompileElmApp$integrateSourceFilesFunctionRecordFieldName, typeAnnotation, $author$project$CompileElmApp$BytesEncoding));
};
var $author$project$CompileElmApp$parseSourceFileFunctionFromTypeAnnotation = function (typeAnnotation) {
	switch (typeAnnotation.$) {
		case 'RecordElmType':
			return A2(
				$elm$core$Result$map,
				function (encoding) {
					return {encoding: encoding, isTree: false};
				},
				$author$project$CompileElmApp$parseSourceFileFunctionEncodingFromTypeAnnotation(typeAnnotation));
		case 'InstanceElmType':
			var instance = typeAnnotation.a;
			var continueWithErrorUnexpectedInst = function (detail) {
				return $elm$core$Result$Err('Unexpected shape of instantiation: ' + detail);
			};
			var _v1 = instance.instantiated;
			if (_v1.$ === 'ChoiceElmType') {
				var instantiatedTypeName = _v1.a;
				if (!A2($elm$core$String$endsWith, '.FileTreeNode', instantiatedTypeName)) {
					return continueWithErrorUnexpectedInst('instatiatedTypeName: ' + instantiatedTypeName);
				} else {
					var _v2 = instance._arguments;
					if (_v2.b && (!_v2.b.b)) {
						var singleArgument = _v2.a;
						return A2(
							$elm$core$Result$map,
							function (encoding) {
								return {encoding: encoding, isTree: true};
							},
							A2(
								$elm$core$Result$mapError,
								$elm$core$Basics$append('Failed to parse argument: '),
								$author$project$CompileElmApp$parseSourceFileFunctionEncodingFromTypeAnnotation(singleArgument)));
					} else {
						return continueWithErrorUnexpectedInst(
							'Unexpected number of arguments: ' + $elm$core$String$fromInt(
								$elm$core$List$length(instance._arguments)));
					}
				}
			} else {
				return continueWithErrorUnexpectedInst('Instantiated is not a choice type');
			}
		default:
			return $elm$core$Result$Ok(
				{
					encoding: $author$project$CompileElmApp$RecordTreeLeaf($author$project$CompileElmApp$BytesEncoding),
					isTree: false
				});
	}
};
var $author$project$CompileElmApp$parseSourceFileFunctionEncodingFromElmTypeAnnotation = F2(
	function (currentModule, typeAnnotationNode) {
		var _v0 = A2(
			$author$project$CompileElmApp$parseElmTypeAndDependenciesRecursivelyFromAnnotation,
			$elm$core$Dict$empty,
			_Utils_Tuple2(currentModule, typeAnnotationNode));
		if (_v0.$ === 'Err') {
			var _v1 = _v0.a;
			var error = _v1.b;
			return $elm$core$Result$Err('Failed to parse type annotation: ' + error);
		} else {
			var _v2 = _v0.a;
			var typeAnnotation = _v2.a;
			return $author$project$CompileElmApp$parseSourceFileFunctionFromTypeAnnotation(typeAnnotation);
		}
	});
var $author$project$CompileElmApp$parseSourceFileFunctionEncodingFromDeclaration = F2(
	function (currentModule, functionDeclaration) {
		var _v0 = functionDeclaration.signature;
		if (_v0.$ === 'Nothing') {
			return $elm$core$Result$Err('Missing signature');
		} else {
			var signature = _v0.a;
			return A2(
				$author$project$CompileElmApp$parseSourceFileFunctionEncodingFromElmTypeAnnotation,
				currentModule,
				$stil4m$elm_syntax$Elm$Syntax$Node$value(signature).typeAnnotation);
		}
	});
var $author$project$CompileElmApp$SourceFile = {$: 'SourceFile'};
var $author$project$CompileElmApp$SourceFileTree = {$: 'SourceFileTree'};
var $author$project$CompileElmApp$sourceFileFunctionNameStart = 'file';
var $author$project$CompileElmApp$sourceFileTreeFunctionNameStart = 'file_tree';
var $author$project$CompileElmApp$parseSourceFileFunctionName = function (functionName) {
	return A2(
		$elm$core$Result$andThen,
		function (_v0) {
			var variant = _v0.a;
			var flags = _v0.b;
			var filePathRepresentation = _v0.c;
			return (!_Utils_eq(flags, _List_Nil)) ? $elm$core$Result$Err('Flags are not supported in SourceFiles declarations') : $elm$core$Result$Ok(
				_Utils_Tuple2(filePathRepresentation, variant));
		},
		A2(
			$author$project$CompileElmApp$parseFlagsAndPathPatternFromFunctionName,
			$elm$core$Dict$fromList(
				_List_fromArray(
					[
						_Utils_Tuple2($author$project$CompileElmApp$sourceFileFunctionNameStart, $author$project$CompileElmApp$SourceFile),
						_Utils_Tuple2($author$project$CompileElmApp$sourceFileTreeFunctionNameStart, $author$project$CompileElmApp$SourceFileTree)
					])),
			functionName));
};
var $author$project$CompileElmApp$parseSourceFileFunction = F2(
	function (currentModule, functionDeclaration) {
		var _v0 = A2($author$project$CompileElmApp$parseSourceFileFunctionEncodingFromDeclaration, currentModule, functionDeclaration);
		if (_v0.$ === 'Err') {
			var error = _v0.a;
			return $elm$core$Result$Err('Failed to parse encoding: ' + error);
		} else {
			var encodingFromDeclaration = _v0.a;
			var functionName = $stil4m$elm_syntax$Elm$Syntax$Node$value(
				$stil4m$elm_syntax$Elm$Syntax$Node$value(functionDeclaration.declaration).name);
			return A2(
				$elm$core$Result$map,
				$elm$core$Tuple$mapSecond(
					function (variant) {
						return {encoding: encodingFromDeclaration.encoding, variant: variant};
					}),
				$author$project$CompileElmApp$parseSourceFileFunctionName(functionName));
		}
	});
var $author$project$CompileElmApp$sourceFilesInterfaceModuleAddedFunctionMapBlobs = {
	functionName: 'mapBlobs',
	mapFunctionLines: $elm$core$Basics$always(
		$elm$core$Basics$always(
			A2($elm$core$String$split, '\n', '\nmapBlobs : (a -> b) -> FileTreeNode a -> FileTreeNode b\nmapBlobs mapBlob node =\n    case node of\n        TreeNode tree ->\n            TreeNode (tree |> List.map (Tuple.mapSecond (mapBlobs mapBlob)))\n\n        BlobNode blob ->\n            BlobNode (mapBlob blob)\n')))
};
var $author$project$CompileElmApp$sourceFilesInterfaceModuleAddedFunctionMapNode = {
	functionName: 'mapFileTreeNodeFromGenerated',
	mapFunctionLines: function (_v0) {
		var generatedModuleName = _v0.generatedModuleName;
		return $elm$core$Basics$always(
			A2(
				$elm$core$String$split,
				'\n',
				'\nmapFileTreeNodeFromGenerated : ' + (A2($elm$core$String$join, '.', generatedModuleName) + ('.FileTreeNode a -> FileTreeNode a\nmapFileTreeNodeFromGenerated node =\n    case node of\n        ' + (A2($elm$core$String$join, '.', generatedModuleName) + ('.BlobNode blob ->\n            BlobNode blob\n\n        ' + (A2($elm$core$String$join, '.', generatedModuleName) + '.TreeNode tree ->\n            tree |> List.map (Tuple.mapSecond mapFileTreeNodeFromGenerated) |> TreeNode\n')))))));
	}
};
var $author$project$CompileElmApp$prepareReplaceFunctionInSourceFilesModuleText = F4(
	function (sourceDirs, sourceFiles, currentModule, originalFunctionDeclaration) {
		var functionName = $stil4m$elm_syntax$Elm$Syntax$Node$value(
			$stil4m$elm_syntax$Elm$Syntax$Node$value(
				$stil4m$elm_syntax$Elm$Syntax$Node$value(originalFunctionDeclaration).declaration).name);
		var _v0 = A2(
			$author$project$CompileElmApp$parseSourceFileFunction,
			currentModule,
			$stil4m$elm_syntax$Elm$Syntax$Node$value(originalFunctionDeclaration));
		if (_v0.$ === 'Err') {
			var error = _v0.a;
			return $elm$core$Result$Err('Failed to parse function: ' + error);
		} else {
			var _v1 = _v0.a;
			var filePathRepresentation = _v1.a;
			var config = _v1.b;
			var _v2 = A3($author$project$CompileElmApp$findFileTreeNodeWithPathMatchingRepresentationInFunctionName, sourceDirs, sourceFiles, filePathRepresentation);
			if (_v2.$ === 'Err') {
				var error = _v2.a;
				return $elm$core$Result$Err('Failed to identify file for \'' + (filePathRepresentation + ('\': ' + error)));
			} else {
				var _v3 = _v2.a;
				var pathMatchInfo = _v3.a;
				var fileTreeContent = _v3.b;
				return A2(
					$elm$core$Result$andThen,
					function (prepareOk) {
						var fileEncodingTreeExpression = function (sourceExpression) {
							return A2(
								$author$project$CompileElmApp$interfaceModuleRecordExpression,
								prepareOk.interfaceModule,
								{sourceExpression: sourceExpression});
						};
						var expressionFromFileContent = $author$project$CompileElmApp$valueModuleRecordExpressionFromEncodings(prepareOk.valueModule);
						var expressionFromFileTreeNode = function (fileTreeNode) {
							if (fileTreeNode.$ === 'BlobNode') {
								var blob = fileTreeNode.a;
								return A2(
									$elm$core$Result$map,
									function (expression) {
										return 'BlobNode (' + (expression + ')');
									},
									expressionFromFileContent(blob));
							} else {
								var tree = fileTreeNode.a;
								var buildTreeEntryExpression = function (_v5) {
									var entryName = _v5.a;
									var entryNode = _v5.b;
									return A2(
										$elm$core$Result$map,
										function (entryNodeExpr) {
											return A2(
												$elm$core$String$join,
												'\n',
												_List_fromArray(
													['( \"' + (entryName + '\"'), ', ' + entryNodeExpr, ')']));
										},
										expressionFromFileTreeNode(entryNode));
								};
								return A2(
									$elm$core$Result$map,
									function (entriesExpressions) {
										return 'TreeNode\n' + A2(
											$author$project$CompileElmApp$indentElmCodeLines,
											1,
											A2(
												$elm$core$String$join,
												'\n',
												_List_fromArray(
													[
														'[' + (A2($elm$core$String$join, '\n,', entriesExpressions) + ']')
													])));
									},
									A2($author$project$Common$resultListMapCombine, buildTreeEntryExpression, tree));
							}
						};
						var expressionResult = function () {
							var _v9 = config.variant;
							if (_v9.$ === 'SourceFile') {
								if (fileTreeContent.$ === 'TreeNode') {
									return $elm$core$Result$Err(
										'This pattern matches path \'' + (A2($elm$core$String$join, '/', pathMatchInfo.absolutePath) + '\' but the node here is a tree, not a file'));
								} else {
									var fileContent = fileTreeContent.a;
									return A2(
										$elm$core$Result$map,
										function (expression) {
											return _Utils_Tuple2(
												_List_fromArray(
													['file_', filePathRepresentation]),
												expression);
										},
										expressionFromFileContent(fileContent));
								}
							} else {
								return A2(
									$elm$core$Result$map,
									$elm$core$Tuple$pair(
										_List_fromArray(
											['file_tree_node', filePathRepresentation])),
									expressionFromFileTreeNode(fileTreeContent));
							}
						}();
						return A2(
							$elm$core$Result$map,
							function (_v6) {
								var fileNameComponents = _v6.a;
								var expression = _v6.b;
								var valueFunctionName = A2($elm$core$String$join, '_', fileNameComponents);
								var valueFunctionText = valueFunctionName + (' =\n' + A2($author$project$CompileElmApp$indentElmCodeLines, 1, expression));
								return {
									updateInterfaceModuleText: F2(
										function (_v7, moduleText) {
											var generatedModuleName = _v7.generatedModuleName;
											var fileExpression = function () {
												var _v8 = config.variant;
												if (_v8.$ === 'SourceFile') {
													return fileEncodingTreeExpression(
														A2($elm$core$String$join, '.', generatedModuleName) + ('.' + valueFunctionName));
												} else {
													return A2(
														$elm$core$String$join,
														'\n|>',
														_List_fromArray(
															[
																A2($elm$core$String$join, '.', generatedModuleName) + ('.' + valueFunctionName),
																$author$project$CompileElmApp$sourceFilesInterfaceModuleAddedFunctionMapNode.functionName,
																$author$project$CompileElmApp$sourceFilesInterfaceModuleAddedFunctionMapBlobs.functionName + ('(\\blobValue -> ' + (fileEncodingTreeExpression('blobValue') + ')'))
															]));
												}
											}();
											var buildNewFunctionLines = function (previousFunctionLines) {
												return _Utils_ap(
													A2($elm$core$List$take, 2, previousFunctionLines),
													_List_fromArray(
														[
															A2($author$project$CompileElmApp$indentElmCodeLines, 1, fileExpression)
														]));
											};
											return A2(
												$author$project$CompileElmApp$addOrUpdateFunctionInElmModuleText,
												{
													functionName: functionName,
													mapFunctionLines: A2(
														$elm$core$Basics$composeR,
														$elm$core$Maybe$withDefault(_List_Nil),
														buildNewFunctionLines)
												},
												moduleText);
										}),
									valueFunctionText: valueFunctionText
								};
							},
							expressionResult);
					},
					A2($author$project$CompileElmApp$prepareRecordTreeEmitForTreeOrBlobUnderPath, _List_Nil, config.encoding));
			}
		}
	});
var $author$project$CompileElmApp$sourceFilesInterfaceModuleAddedFunctions = _List_fromArray(
	[$author$project$CompileElmApp$sourceFilesInterfaceModuleAddedFunctionMapNode, $author$project$CompileElmApp$sourceFilesInterfaceModuleAddedFunctionMapBlobs]);
var $author$project$CompileElmApp$mapSourceFilesModuleText = F2(
	function (sourceDirs, _v0) {
		var sourceFiles = _v0.a;
		var moduleFilePath = _v0.b;
		var moduleText = _v0.c;
		var sourceFilesInterfaceModuleAddedFunctionsNames = A2(
			$elm$core$List$map,
			function ($) {
				return $.functionName;
			},
			$author$project$CompileElmApp$sourceFilesInterfaceModuleAddedFunctions);
		var mapErrorStringForFunctionDeclaration = function (functionDeclaration) {
			var functionName = $stil4m$elm_syntax$Elm$Syntax$Node$value(
				$stil4m$elm_syntax$Elm$Syntax$Node$value(
					$stil4m$elm_syntax$Elm$Syntax$Node$value(functionDeclaration).declaration).name);
			return $elm$core$Basics$append('Failed to replace function \'' + (functionName + '\': '));
		};
		return A2(
			$elm$core$Result$mapError,
			$author$project$CompileElmApp$locatedInSourceFilesFromRange(moduleFilePath),
			A2(
				$elm$core$Result$andThen,
				function (parsedModule) {
					return A2(
						$elm$core$Result$andThen,
						function (preparedFunctions) {
							var interfaceModuleName = $stil4m$elm_syntax$Elm$Syntax$Module$moduleName(
								$stil4m$elm_syntax$Elm$Syntax$Node$value(parsedModule.moduleDefinition));
							var interfaceModuleDeclaresTypeFileTreeNode = A2(
								$elm$core$List$any,
								function (declaration) {
									var _v2 = $stil4m$elm_syntax$Elm$Syntax$Node$value(declaration);
									if (_v2.$ === 'CustomTypeDeclaration') {
										var choiceTypeDeclaration = _v2.a;
										return $stil4m$elm_syntax$Elm$Syntax$Node$value(choiceTypeDeclaration.name) === 'FileTreeNode';
									} else {
										return false;
									}
								},
								parsedModule.declarations);
							var generatedModuleTypeDeclarations = _List_fromArray(
								['\ntype FileTreeNode blobStructure\n    = BlobNode blobStructure\n    | TreeNode (List ( String, FileTreeNode blobStructure ))\n']);
							var generatedModuleName = $elm$core$List$concat(
								_List_fromArray(
									[
										interfaceModuleName,
										_List_fromArray(
										['Generated_SourceFiles'])
									]));
							var generatedModulePath = A2($author$project$CompileElmApp$filePathFromElmModuleName, sourceDirs, generatedModuleName);
							var generatedModuleDeclarationsBeforeRemovingDuplicates = _Utils_ap(
								generatedModuleTypeDeclarations,
								A2(
									$elm$core$List$map,
									A2(
										$elm$core$Basics$composeR,
										$elm$core$Tuple$second,
										function ($) {
											return $.valueFunctionText;
										}),
									preparedFunctions));
							var generatedModuleDeclarations = $elm$core$Set$fromList(generatedModuleDeclarationsBeforeRemovingDuplicates);
							var generatedModuleTextWithoutModuleDeclaration = A2(
								$elm$core$String$join,
								'\n\n',
								$elm$core$Set$toList(generatedModuleDeclarations));
							var generatedModuleText = A2(
								$elm$core$String$join,
								'\n\n',
								_List_fromArray(
									[
										'module ' + (A2($elm$core$String$join, '.', generatedModuleName) + ' exposing (..)'),
										generatedModuleTextWithoutModuleDeclaration
									]));
							var appFiles = A3(
								$author$project$CompileElmApp$updateFileContentAtPath,
								$elm$core$Basics$always(
									$author$project$CompileElmApp$fileContentFromString(generatedModuleText)),
								generatedModulePath,
								sourceFiles);
							var addMappingFunctionIfTypeIsPresent = interfaceModuleDeclaresTypeFileTreeNode ? function (moduleTextBefore) {
								return A3(
									$elm$core$List$foldl,
									F2(
										function (addedFunction, previousResult) {
											return A2(
												$elm$core$Result$andThen,
												$author$project$CompileElmApp$addOrUpdateFunctionInElmModuleText(
													{
														functionName: addedFunction.functionName,
														mapFunctionLines: addedFunction.mapFunctionLines(
															{generatedModuleName: generatedModuleName})
													}),
												previousResult);
										}),
									$elm$core$Result$Ok(moduleTextBefore),
									$author$project$CompileElmApp$sourceFilesInterfaceModuleAddedFunctions);
							} : $elm$core$Result$Ok;
							return A2(
								$elm$core$Result$map,
								$elm$core$Tuple$pair(appFiles),
								A3(
									$author$project$CompileElmApp$listFoldlToAggregateResult,
									F2(
										function (_v1, previousAggregate) {
											var functionDeclaration = _v1.a;
											var replaceFunction = _v1.b;
											return A2(
												$elm$core$Result$mapError,
												$stil4m$elm_syntax$Elm$Syntax$Node$Node(
													$stil4m$elm_syntax$Elm$Syntax$Node$range(functionDeclaration)),
												A2(
													$elm$core$Result$mapError,
													mapErrorStringForFunctionDeclaration(functionDeclaration),
													A2(
														replaceFunction.updateInterfaceModuleText,
														{generatedModuleName: generatedModuleName},
														previousAggregate)));
										}),
									A2(
										$elm$core$Result$mapError,
										$stil4m$elm_syntax$Elm$Syntax$Node$Node(
											$author$project$CompileElmApp$syntaxRangeCoveringCompleteString(moduleText)),
										A2(
											$elm$core$Result$andThen,
											addMappingFunctionIfTypeIsPresent,
											A2(
												$author$project$CompileElmApp$addImportsInElmModuleText,
												_List_fromArray(
													[
														$author$project$CompileElmApp$encodingModuleImportBytes,
														_Utils_Tuple2(generatedModuleName, $elm$core$Maybe$Nothing)
													]),
												moduleText))),
									preparedFunctions));
						},
						A2(
							$author$project$Common$resultListMapCombine,
							function (functionDeclaration) {
								return A2(
									$elm$core$Result$mapError,
									$stil4m$elm_syntax$Elm$Syntax$Node$Node(
										$stil4m$elm_syntax$Elm$Syntax$Node$range(functionDeclaration)),
									A2(
										$elm$core$Result$map,
										$elm$core$Tuple$pair(functionDeclaration),
										A2(
											$elm$core$Result$mapError,
											mapErrorStringForFunctionDeclaration(functionDeclaration),
											A4(
												$author$project$CompileElmApp$prepareReplaceFunctionInSourceFilesModuleText,
												sourceDirs,
												sourceFiles,
												_Utils_Tuple2(moduleFilePath, parsedModule),
												functionDeclaration))));
							},
							A2(
								$elm$core$List$filter,
								A2(
									$elm$core$Basics$composeR,
									$stil4m$elm_syntax$Elm$Syntax$Node$value,
									A2(
										$elm$core$Basics$composeR,
										function ($) {
											return $.declaration;
										},
										A2(
											$elm$core$Basics$composeR,
											$stil4m$elm_syntax$Elm$Syntax$Node$value,
											A2(
												$elm$core$Basics$composeR,
												function ($) {
													return $.name;
												},
												A2(
													$elm$core$Basics$composeR,
													$stil4m$elm_syntax$Elm$Syntax$Node$value,
													function (functionName) {
														return !A2($elm$core$List$member, functionName, sourceFilesInterfaceModuleAddedFunctionsNames);
													}))))),
								A2($elm$core$List$filterMap, $author$project$CompileElmApp$declarationWithRangeAsFunctionDeclaration, parsedModule.declarations))));
				},
				A2(
					$elm$core$Result$mapError,
					A2(
						$elm$core$Basics$composeR,
						$author$project$CompileElmApp$parserDeadEndsToString(moduleText),
						A2(
							$elm$core$Basics$composeR,
							$elm$core$Basics$append('Failed to parse Elm module text: '),
							$stil4m$elm_syntax$Elm$Syntax$Node$Node(
								$author$project$CompileElmApp$syntaxRangeCoveringCompleteString(moduleText)))),
					$author$project$CompileElmApp$parseElmModuleText(moduleText))));
	});
var $author$project$CompileElmApp$modulesToAddForBase64Coding = _List_fromArray(
	[
		$elm$core$String$trimLeft('\nmodule CompilerGenerated.Base64 exposing\n    ( fromBytes, fromString, toBytes, toString\n    , encoder, decoder\n    )\n\n{-| This package can convert\n[bytes](https://package.elm-lang.org/packages/elm/bytes/latest/)\nto Base64 strings and vice versa.\n\n\n# Conversion\n\n@docs fromBytes, fromString, toBytes, toString\n\n\n# Bytes Encoder and Decoder\n\nSlightly lower level functions.\n\n[`fromBytes`](#fromBytes) and [`toBytes`](#toBytes) functions\nare pretty much wrappers around these functions.\n\n@docs encoder, decoder\n\n-}\n\nimport Bytes exposing (Bytes)\nimport Bytes.Decode\nimport Bytes.Encode\nimport CompilerGenerated.Decode as Decode\nimport CompilerGenerated.Encode as Encode\n\n\n{-| Convert bytes to a Base64 string.\nIf you want more control over the process, you should use [`decoder`](#decoder).\n\nThis function should never return `Nothing`, but it uses\n[`Bytes.Decode.decode`](https://package.elm-lang.org/packages/elm/bytes/latest/Bytes-Decode#decode),\nwhich returns a `Maybe String`.\n\n-}\nfromBytes : Bytes -> Maybe String\nfromBytes =\n    Decode.fromBytes\n\n\n{-| Encode a string into a Base64 string.\nThis function is a wrapper around [`fromBytes`](#fromBytes).\n\nSimilarly, it should never return `Nothing`, but alas, [`Bytes.Decode.decode`](https://package.elm-lang.org/packages/elm/bytes/latest/Bytes-Decode#decode),\nwhich [`fromBytes`](#fromBytes) uses, returns a `Maybe String`.\n\n-}\nfromString : String -> Maybe String\nfromString string =\n    string\n        |> Bytes.Encode.string\n        |> Bytes.Encode.encode\n        |> fromBytes\n\n\n{-| Convert a Base64 string to bytes.\nIf you want more control over the process, you should use [`encoder`](#encoder).\n\nThis function fails (returns `Nothing`) if you give it an invalid Base64 sequence.\n\n-}\ntoBytes : String -> Maybe Bytes\ntoBytes =\n    Encode.toBytes\n\n\n{-| Decode a Base64 string into a string.\nThis function is a wrapper around [`toBytes`](#toBytes).\n\nIt will fail (return `Nothing`) if you give it an invalid Base64 sequence.\n\n-}\ntoString : String -> Maybe String\ntoString b64String =\n    case toBytes b64String of\n        Nothing ->\n            Nothing\n\n        Just b64Bytes ->\n            Bytes.Decode.decode\n                (Bytes.Decode.string (Bytes.width b64Bytes))\n                b64Bytes\n\n\n{-| `decoder width` is a bytes decoder that will convert `width` bytes into a\nBase64 string.\n\nIt\'s used in [`fromBytes`](#fromBytes):\n\n    fromBytes : Bytes -> Maybe String\n    fromBytes bytes =\n        Bytes.Decode.decode (decoder (Bytes.width bytes)) bytes\n\n-}\ndecoder : Int -> Bytes.Decode.Decoder String\ndecoder =\n    Decode.decoder\n\n\n{-| `encoder` returns a bytes encoder. It fails if the string that is passed\nto it is not a valid Base64 sequence.\n\nIt\'s used in [`toBytes`](#toBytes):\n\n    toBytes : String -> Maybe Bytes\n    toBytes string =\n        Maybe.map Bytes.Encode.encode (encoder string)\n\n-}\nencoder : String -> Maybe Bytes.Encode.Encoder\nencoder =\n    Encode.encoder\n'),
		$elm$core$String$trimLeft('\nmodule CompilerGenerated.Encode exposing (encoder, toBytes)\n\nimport Bitwise\nimport Bytes exposing (Bytes, Endianness(..))\nimport Bytes.Encode as Encode exposing (Encoder)\n\n\ntoBytes : String -> Maybe Bytes\ntoBytes string =\n    Maybe.map Encode.encode (encoder string)\n\n\nencoder : String -> Maybe Encode.Encoder\nencoder string =\n    encodeChunks string []\n        |> Maybe.map (List.reverse >> Encode.sequence)\n\n\n{-| Big picture:\n\n  - read 4 base64 characters\n  - convert them to 3 bytes (24 bits)\n  - encode these bytes\n\n-}\nencodeChunks : String -> List Encoder -> Maybe (List Encoder)\nencodeChunks input accum =\n    {- Performance Note\n\n       slice and toList is just as fast as (possibly a little faster than) repeated `String.uncons`,\n       but this code is much more readable\n    -}\n    case String.toList (String.left 4 input) of\n        [] ->\n            Just accum\n\n        [ a, b, c, d ] ->\n            case encodeCharacters a b c d of\n                Just enc ->\n                    encodeChunks (String.dropLeft 4 input) (enc :: accum)\n\n                Nothing ->\n                    Nothing\n\n        [ a, b, c ] ->\n            case encodeCharacters a b c \'=\' of\n                Nothing ->\n                    Nothing\n\n                Just enc ->\n                    Just (enc :: accum)\n\n        [ a, b ] ->\n            case encodeCharacters a b \'=\' \'=\' of\n                Nothing ->\n                    Nothing\n\n                Just enc ->\n                    Just (enc :: accum)\n\n        _ ->\n            Nothing\n\n\n{-| Convert 4 characters to 24 bits (as an Encoder)\n-}\nencodeCharacters : Char -> Char -> Char -> Char -> Maybe Encoder\nencodeCharacters a b c d =\n    {- Performance notes\n\n       We use bitshifts and other bitwise operators here. They are much faster than the alternatives.\n       This may not normally matter but this function is called a lot so even small increases\n       in efficiency are noticable\n\n       Secondly, we combine two `uint8` into one `uint16 BE`. This has no direct speed benefit\n       (elm/bytes uses a DataView, which only natively supports adding/reading uint8)\n       but having fewer list items decreases # of encoding steps and allocation,\n       and is therefore faster.\n    -}\n    if isValidChar a && isValidChar b then\n        let\n            n1 =\n                unsafeConvertChar a\n\n            n2 =\n                unsafeConvertChar b\n        in\n        -- `=` is the padding character, and must be special-cased\n        -- only the `c` and `d` char are allowed to be padding\n        case d of\n            \'=\' ->\n                case c of\n                    \'=\' ->\n                        let\n                            n =\n                                Bitwise.or\n                                    (Bitwise.shiftLeftBy 18 n1)\n                                    (Bitwise.shiftLeftBy 12 n2)\n\n                            b1 =\n                                -- masking higher bits is not needed, Encode.unsignedInt8 ignores higher bits\n                                Bitwise.shiftRightBy 16 n\n                        in\n                        Just (Encode.unsignedInt8 b1)\n\n                    _ ->\n                        if isValidChar c then\n                            let\n                                n3 =\n                                    unsafeConvertChar c\n\n                                n =\n                                    Bitwise.or\n                                        (Bitwise.or (Bitwise.shiftLeftBy 18 n1) (Bitwise.shiftLeftBy 12 n2))\n                                        (Bitwise.shiftLeftBy 6 n3)\n\n                                combined =\n                                    Bitwise.shiftRightBy 8 n\n                            in\n                            Just (Encode.unsignedInt16 BE combined)\n\n                        else\n                            Nothing\n\n            _ ->\n                if isValidChar c && isValidChar d then\n                    let\n                        n3 =\n                            unsafeConvertChar c\n\n                        n4 =\n                            unsafeConvertChar d\n\n                        n =\n                            Bitwise.or\n                                (Bitwise.or (Bitwise.shiftLeftBy 18 n1) (Bitwise.shiftLeftBy 12 n2))\n                                (Bitwise.or (Bitwise.shiftLeftBy 6 n3) n4)\n\n                        b3 =\n                            -- Masking the higher bits is not needed: Encode.unsignedInt8 ignores higher bits\n                            n\n\n                        combined =\n                            Bitwise.shiftRightBy 8 n\n                    in\n                    Just\n                        (Encode.sequence\n                            [ Encode.unsignedInt16 BE combined\n                            , Encode.unsignedInt8 b3\n                            ]\n                        )\n\n                else\n                    Nothing\n\n    else\n        Nothing\n\n\n{-| is the character a base64 digit?\n\nThe base16 digits are: A-Z, a-z, 0-1, \'+\' and \'/\'\n\n-}\nisValidChar : Char -> Bool\nisValidChar c =\n    if Char.isAlphaNum c then\n        True\n\n    else\n        case c of\n            \'+\' ->\n                True\n\n            \'/\' ->\n                True\n\n            _ ->\n                False\n\n\n{-| Convert a base64 character/digit to its index\n\nSee also [Wikipedia](https://en.wikipedia.org/wiki/Base64#Base64_table)\n\n-}\nunsafeConvertChar : Char -> Int\nunsafeConvertChar char =\n    {- Performance Note\n\n       Working with the key directly is faster than using e.g. `Char.isAlpha` and `Char.isUpper`\n    -}\n    let\n        key =\n            Char.toCode char\n    in\n    if key >= 65 && key <= 90 then\n        -- A-Z\n        key - 65\n\n    else if key >= 97 && key <= 122 then\n        -- a-z\n        (key - 97) + 26\n\n    else if key >= 48 && key <= 57 then\n        -- 0-9\n        (key - 48) + 26 + 26\n\n    else\n        case char of\n            \'+\' ->\n                62\n\n            \'/\' ->\n                63\n\n            _ ->\n                -1\n'),
		$elm$core$String$trimLeft('\nmodule CompilerGenerated.Decode exposing (decoder, fromBytes)\n\nimport Bitwise\nimport Bytes exposing (Bytes)\nimport Bytes.Decode as Decode\n\n\nfromBytes : Bytes -> Maybe String\nfromBytes bytes =\n    Decode.decode (decoder (Bytes.width bytes)) bytes\n\n\ndecoder : Int -> Decode.Decoder String\ndecoder width =\n    Decode.loop { remaining = width, string = "" } loopHelp\n\n\n\n-- INTERNALS\n\n\n{-| Base64 uses 6 bits per digit (because 2^6 == 64)\nand can nicely store 4 digits in 24 bits, which are 3 bytes.\n\nThe decoding process is thus roughly:\n\n  - read a 3-byte chunk\n  - extract the 4 6-bit segments\n  - convert those segments into characters\n\nBut the input does not need to have a multiple of 4 characters,\nso at the end of the string some characters can be omitted.\nThis means there may be 2 or 1 bytes remaining at the end. We have to cover those cases!\n\n-}\nloopHelp : { remaining : Int, string : String } -> Decode.Decoder (Decode.Step { remaining : Int, string : String } String)\nloopHelp { remaining, string } =\n    if remaining >= 18 then\n        -- Note: this case is heavily optimized.\n        -- For the general idea of what this function does, the `remaining >= 3` case is more illustrative.\n        decode18Bytes\n            |> Decode.map\n                (\\result ->\n                    Decode.Loop\n                        { remaining = remaining - 18\n                        , string = string ++ result\n                        }\n                )\n\n    else if remaining >= 3 then\n        let\n            helper a b c =\n                let\n                    combined =\n                        Bitwise.or (Bitwise.or (Bitwise.shiftLeftBy 16 a) (Bitwise.shiftLeftBy 8 b)) c\n                in\n                Decode.Loop\n                    { remaining = remaining - 3\n                    , string = string ++ bitsToChars combined 0\n                    }\n        in\n        Decode.map3 helper\n            Decode.unsignedInt8\n            Decode.unsignedInt8\n            Decode.unsignedInt8\n\n    else if remaining == 0 then\n        Decode.succeed (Decode.Done string)\n\n    else if remaining == 2 then\n        let\n            helper a b =\n                let\n                    combined =\n                        Bitwise.or (Bitwise.shiftLeftBy 16 a) (Bitwise.shiftLeftBy 8 b)\n                in\n                Decode.Done (string ++ bitsToChars combined 1)\n        in\n        Decode.map2 helper\n            Decode.unsignedInt8\n            Decode.unsignedInt8\n\n    else\n        -- remaining == 1\n        Decode.map (\\a -> Decode.Done (string ++ bitsToChars (Bitwise.shiftLeftBy 16 a) 2))\n            Decode.unsignedInt8\n\n\n{-| Mask that can be used to get the lowest 6 bits of a binary number\n-}\nlowest6BitsMask : Int\nlowest6BitsMask =\n    63\n\n\n{-| Turn the decoded bits (at most 24, can be fewer because of padding) into 4 base64 characters.\n\n(- - - - - - - -)(- - - - - - - -)(- - - - - - - -)\n(- - - - - -|- - - - - -|- - - - - -|- - - - - -)\n\n-}\nbitsToChars : Int -> Int -> String\nbitsToChars bits missing =\n    {- Performance Notes\n\n       `String.cons` proved to be the fastest way of combining characters into a string\n       see also https://github.com/danfishgold/base64-bytes/pull/3#discussion_r342321940\n\n       The input is 24 bits, which we have to partition into 4 6-bit segments. We achieve this by\n       shifting to the right by (a multiple of) 6 to remove unwanted bits on the right, then `Bitwise.and`\n       with `0b111111` (which is 2^6 - 1 or 63) (so, 6 1s) to remove unwanted bits on the left.\n\n    -}\n    let\n        -- any 6-bit number is a valid base64 digit, so this is actually safe\n        p =\n            unsafeToChar (Bitwise.shiftRightZfBy 18 bits)\n\n        q =\n            unsafeToChar (Bitwise.and (Bitwise.shiftRightZfBy 12 bits) lowest6BitsMask)\n\n        r =\n            unsafeToChar (Bitwise.and (Bitwise.shiftRightZfBy 6 bits) lowest6BitsMask)\n\n        s =\n            unsafeToChar (Bitwise.and bits lowest6BitsMask)\n    in\n    case missing of\n        -- case `0` is the most common, so put it first.\n        0 ->\n            String.cons p (String.cons q (String.cons r (String.fromChar s)))\n\n        1 ->\n            String.cons p (String.cons q (String.cons r "="))\n\n        2 ->\n            String.cons p (String.cons q "==")\n\n        _ ->\n            ""\n\n\n{-| Base64 index to character/digit\n-}\nunsafeToChar : Int -> Char\nunsafeToChar n =\n    if n <= 25 then\n        -- uppercase characters\n        Char.fromCode (65 + n)\n\n    else if n <= 51 then\n        -- lowercase characters\n        Char.fromCode (97 + (n - 26))\n\n    else if n <= 61 then\n        -- digit characters\n        Char.fromCode (48 + (n - 52))\n\n    else\n        -- special cases\n        case n of\n            62 ->\n                \'+\'\n\n            63 ->\n                \'/\'\n\n            _ ->\n                \'\\u{0000}\'\n\n\n\n-- OPTIMIZED VERSION\n\n\nu32BE : Decode.Decoder Int\nu32BE =\n    Decode.unsignedInt32 Bytes.BE\n\n\nu16BE : Decode.Decoder Int\nu16BE =\n    Decode.unsignedInt16 Bytes.BE\n\n\n{-| A specialized version reading 18 bytes at once\nTo get a better understanding of what this code does, read the `remainder >= 3` case above.\n\nThis tries to take the biggest step possible within a `Decode.loop` iteration.\nThe idea is similar to loop-unrolling in languages like c: avoiding jumps gives better performance\n\nBut `Decode.loop` also requires that the accumulator is wrapped in a `Step a b`, i.e. it allocates a `Decode.Loop _`\nfor every iteration. Allocation is expensive in tight loops like this one. So there is a double reason to limit the number\nof iterations: avoiding jumps and avoiding allocation.\n\nGiven that `Decode.map5` is the highest one defined by `elm/bytes` and we need a multiple of 3 bytes,\n`4 * 4 + 2 = 18` is the best we can do.\n\n-}\ndecode18Bytes : Decode.Decoder String\ndecode18Bytes =\n    Decode.map5 decode18Help\n        u32BE\n        u32BE\n        u32BE\n        u32BE\n        u16BE\n\n\n{-| Get 18 bytes (4 times 32-bit, one 16-bit) and split them into 3-byte chunks.\n\nThen convert the 3-byte chunks to characters and produce a string.\n\n-}\ndecode18Help : Int -> Int -> Int -> Int -> Int -> String\ndecode18Help a b c d e =\n    let\n        combined1 =\n            Bitwise.shiftRightZfBy 8 a\n\n        combined2 =\n            Bitwise.or\n                (Bitwise.and 0xFF a |> Bitwise.shiftLeftBy 16)\n                (Bitwise.shiftRightZfBy 16 b)\n\n        combined3 =\n            Bitwise.or\n                (Bitwise.and 0xFFFF b |> Bitwise.shiftLeftBy 8)\n                (Bitwise.shiftRightZfBy 24 c)\n\n        combined4 =\n            Bitwise.and 0x00FFFFFF c\n\n        combined5 =\n            Bitwise.shiftRightZfBy 8 d\n\n        combined6 =\n            Bitwise.or\n                (Bitwise.and 0xFF d |> Bitwise.shiftLeftBy 16)\n                e\n    in\n    -- the order is counter-intuitive because `String.cons` is used in bitsToCharSpecialized.\n    ""\n        |> bitsToCharSpecialized combined6 combined5 combined4\n        |> bitsToCharSpecialized combined3 combined2 combined1\n\n\n{-| A specialized version of bitsToChar that handles 3 24-bit integers at once.\n\nThis was done to limit the number of function calls. When doing bitwise manipulations (which are very efficient), the\noverhead of function calls -- something we normally don\'t really think about -- starts to matter.\n\n-}\nbitsToCharSpecialized : Int -> Int -> Int -> String -> String\nbitsToCharSpecialized bits1 bits2 bits3 accum =\n    let\n        -- BITS 1\n        p =\n            unsafeToChar (Bitwise.shiftRightZfBy 18 bits1)\n\n        q =\n            unsafeToChar (Bitwise.and (Bitwise.shiftRightZfBy 12 bits1) lowest6BitsMask)\n\n        r =\n            unsafeToChar (Bitwise.and (Bitwise.shiftRightZfBy 6 bits1) lowest6BitsMask)\n\n        s =\n            unsafeToChar (Bitwise.and bits1 lowest6BitsMask)\n\n        -- BITS 2\n        a =\n            unsafeToChar (Bitwise.shiftRightZfBy 18 bits2)\n\n        b =\n            unsafeToChar (Bitwise.and (Bitwise.shiftRightZfBy 12 bits2) lowest6BitsMask)\n\n        c =\n            unsafeToChar (Bitwise.and (Bitwise.shiftRightZfBy 6 bits2) lowest6BitsMask)\n\n        d =\n            unsafeToChar (Bitwise.and bits2 lowest6BitsMask)\n\n        -- BITS 3\n        x =\n            unsafeToChar (Bitwise.shiftRightZfBy 18 bits3)\n\n        y =\n            unsafeToChar (Bitwise.and (Bitwise.shiftRightZfBy 12 bits3) lowest6BitsMask)\n\n        z =\n            unsafeToChar (Bitwise.and (Bitwise.shiftRightZfBy 6 bits3) lowest6BitsMask)\n\n        w =\n            unsafeToChar (Bitwise.and bits3 lowest6BitsMask)\n    in\n    -- Performance: This is the fastest way to create a string from characters.\n    -- see also https://github.com/danfishgold/base64-bytes/pull/3#discussion_r342321940\n    -- cons adds on the left, so characters are added in reverse order.\n    accum\n        |> String.cons s\n        |> String.cons r\n        |> String.cons q\n        |> String.cons p\n        |> String.cons d\n        |> String.cons c\n        |> String.cons b\n        |> String.cons a\n        |> String.cons w\n        |> String.cons z\n        |> String.cons y\n        |> String.cons x\n')
	]);
var $author$project$CompileElmApp$modulesToAddForBytesCoding = _List_fromArray(
	[
		$elm$core$String$trimLeft('\nmodule CompilerGenerated.EncodeBytes exposing (..)\n\nimport Bytes\nimport Bytes.Encode\n\n\nbytes_encoder_from_uint32_uint8 : { uint32 : List Int, uint8 : List Int } -> Bytes.Encode.Encoder\nbytes_encoder_from_uint32_uint8 { uint32, uint8 } =\n    [ uint32 |> List.map (Bytes.Encode.unsignedInt32 Bytes.BE)\n    , uint8 |> List.map Bytes.Encode.unsignedInt8\n    ]\n        |> List.concat\n        |> Bytes.Encode.sequence\n\n')
	]);
var $author$project$CompileElmApp$asCompletelyLoweredElmApp = F2(
	function (entryPointClasses, _arguments) {
		var _v0 = $author$project$CompileElmApp$findSourceDirectories(_arguments);
		if (_v0.$ === 'Err') {
			var err = _v0.a;
			return $elm$core$Result$Err(
				_List_fromArray(
					[
						A2(
						$author$project$CompileElmApp$LocatedInSourceFiles,
						{filePath: _arguments.compilationRootFilePath, locationInModuleText: $stil4m$elm_syntax$Elm$Syntax$Range$emptyRange},
						$author$project$CompileElmApp$OtherCompilationError('Failed to find source directories: ' + err))
					]));
		} else {
			var sourceDirs = _v0.a;
			var sourceModules = $elm$core$Dict$fromList(
				A2(
					$elm$core$List$filterMap,
					function (_v4) {
						var filePath = _v4.a;
						var moduleResult = _v4.b;
						return A2(
							$elm$core$Maybe$map,
							$elm$core$Tuple$pair(filePath),
							$elm$core$Result$toMaybe(moduleResult));
					},
					$elm$core$Dict$toList(
						$author$project$CompileElmApp$elmModulesDictFromAppFiles(_arguments.sourceFiles))));
			var usedCompilationInterfaceModules = A3(
				$elm$core$Dict$foldl,
				F2(
					function (_v1, sourceModule) {
						return $elm$core$Set$union(
							$elm$core$Set$fromList(
								A2(
									$elm$core$List$concatMap,
									function (compilationInterfacePrefix) {
										var _v2 = sourceModule.moduleName;
										if (!_v2.b) {
											return _List_Nil;
										} else {
											var firstDirectory = _v2.a;
											var afterCommonPrefix = _v2.b;
											if (!_Utils_eq(firstDirectory, compilationInterfacePrefix)) {
												return _List_Nil;
											} else {
												var _v3 = $elm$core$List$reverse(afterCommonPrefix);
												if (_v3.b) {
													var lastPathComponent = _v3.a;
													return _List_fromArray(
														[
															lastPathComponent,
															A2($elm$core$String$join, '.', afterCommonPrefix)
														]);
												} else {
													return _List_Nil;
												}
											}
										}
									},
									_arguments.compilationInterfaceElmModuleNamePrefixes)));
					}),
				$elm$core$Set$empty,
				sourceModules);
			var compilationInterfaceModuleDependencies = $elm$core$Dict$fromList(
				_List_fromArray(
					[
						_Utils_Tuple2('SourceFiles', $author$project$CompileElmApp$modulesToAddForBytesCoding),
						_Utils_Tuple2('ElmMake', $author$project$CompileElmApp$modulesToAddForBytesCoding),
						_Utils_Tuple2('GenerateJsonConverters', $author$project$CompileElmApp$modulesToAddForBase64Coding)
					]));
			var modulesToAdd = $elm$core$List$concat(
				A2(
					$elm$core$List$filterMap,
					function (moduleName) {
						return A2($elm$core$Dict$get, moduleName, compilationInterfaceModuleDependencies);
					},
					$elm$core$Set$toList(usedCompilationInterfaceModules)));
			return A2(
				$elm$core$Result$andThen,
				A2(
					$author$project$CompileElmApp$loweredForCompilationRoot,
					entryPointClasses,
					{compilationRootFilePath: _arguments.compilationRootFilePath, interfaceToHostRootModuleName: _arguments.interfaceToHostRootModuleName, originalSourceModules: sourceModules}),
				A2(
					$elm$core$Result$andThen,
					A4(
						$author$project$CompileElmApp$applyLoweringUnderPrefixes,
						A2($author$project$CompileElmApp$mapElmMakeModuleText, sourceDirs, _arguments.dependencies),
						{
							moduleNameEnd: _List_fromArray(
								['ElmMake']),
							prefixes: A2(
								$elm$core$List$map,
								$elm$core$String$split('.'),
								_arguments.compilationInterfaceElmModuleNamePrefixes)
						},
						function (context) {
							return A2(
								$elm$core$Basics$composeR,
								$author$project$CompileElmApp$OtherCompilationError,
								A2(
									$elm$core$Basics$composeR,
									$author$project$CompileElmApp$locatedInSourceFilesFromJustFilePath(context),
									$elm$core$List$singleton));
						},
						sourceDirs),
					A2(
						$elm$core$Result$mapError,
						A2(
							$elm$core$Basics$composeR,
							$author$project$CompileElmApp$mapLocatedInSourceFiles($author$project$CompileElmApp$OtherCompilationError),
							$elm$core$List$singleton),
						A2(
							$elm$core$Result$andThen,
							A4(
								$author$project$CompileElmApp$applyLoweringUnderPrefixes,
								$author$project$CompileElmApp$mapJsonConvertersModuleText(
									{originalSourceModules: sourceModules, sourceDirs: sourceDirs}),
								{
									moduleNameEnd: _List_fromArray(
										['GenerateJsonConverters']),
									prefixes: A2(
										$elm$core$List$map,
										$elm$core$String$split('.'),
										_arguments.compilationInterfaceElmModuleNamePrefixes)
								},
								$author$project$CompileElmApp$locatedInSourceFilesFromJustFilePath,
								sourceDirs),
							A5(
								$author$project$CompileElmApp$applyLoweringUnderPrefixes,
								$author$project$CompileElmApp$mapSourceFilesModuleText(sourceDirs),
								{
									moduleNameEnd: _List_fromArray(
										['SourceFiles']),
									prefixes: A2(
										$elm$core$List$map,
										$elm$core$String$split('.'),
										_arguments.compilationInterfaceElmModuleNamePrefixes)
								},
								$author$project$CompileElmApp$locatedInSourceFilesFromJustFilePath,
								sourceDirs,
								A3($author$project$CompileElmApp$addModulesFromTextToAppFiles, sourceDirs, modulesToAdd, _arguments.sourceFiles))))));
		}
	});
var $author$project$FrontendBackendInterface$ElmMakeOutputTypeJs = {$: 'ElmMakeOutputTypeJs'};
var $author$project$Frontend$Main$LoweringComplete = function (a) {
	return {$: 'LoweringComplete', a: a};
};
var $author$project$Frontend$Main$LoweringContinue = function (a) {
	return {$: 'LoweringContinue', a: a};
};
var $author$project$Frontend$Main$LoweringError = function (a) {
	return {$: 'LoweringError', a: a};
};
var $author$project$Frontend$Main$mapFilesToRequestToBackendStructure = function (mapContent) {
	return $elm$core$List$map(
		function (_v0) {
			var path = _v0.a;
			var content = _v0.b;
			return {
				contentBase64: mapContent(content),
				path: path
			};
		});
};
var $author$project$Frontend$Main$continueLowering = F2(
	function (dependenciesFromCompletedIterations, compilationOrigin) {
		var base64FromBytes = A2(
			$elm$core$Basics$composeR,
			$danfishgold$base64_bytes$Base64$fromBytes,
			$elm$core$Maybe$withDefault('Error encoding in base64'));
		var _v0 = compilationOrigin.loweredElmAppFromDependencies(dependenciesFromCompletedIterations);
		if (_v0.$ === 'Err') {
			var loweringErrors = _v0.a;
			var errorsMissingDependencyElmMake = A2(
				$elm$core$List$filterMap,
				function (locatedError) {
					var error = locatedError.b;
					if (error.$ === 'MissingDependencyError') {
						var missingDependencyElmMake = error.a.a;
						return $elm$core$Maybe$Just(missingDependencyElmMake);
					} else {
						return $elm$core$Maybe$Nothing;
					}
				},
				loweringErrors);
			var _v1 = $elm$core$List$head(errorsMissingDependencyElmMake);
			if (_v1.$ === 'Just') {
				var missingDependencyElmMake = _v1.a;
				var outputType = function () {
					var _v2 = missingDependencyElmMake.outputType;
					if (_v2.$ === 'ElmMakeOutputTypeHtml') {
						return $author$project$FrontendBackendInterface$ElmMakeOutputTypeHtml;
					} else {
						return $author$project$FrontendBackendInterface$ElmMakeOutputTypeJs;
					}
				}();
				return $author$project$Frontend$Main$LoweringContinue(
					{
						elmMakeRequest: {
							entryPointFilePathFromWorkingDirectory: missingDependencyElmMake.entryPointFilePath,
							files: A2(
								$author$project$Frontend$Main$mapFilesToRequestToBackendStructure,
								base64FromBytes,
								$elm$core$Dict$toList(missingDependencyElmMake.files)),
							makeOptionDebug: missingDependencyElmMake.enableDebug,
							outputType: outputType,
							workingDirectoryPath: _List_Nil
						},
						forDependencyElmMakeRequest: missingDependencyElmMake
					});
			} else {
				return $author$project$Frontend$Main$LoweringComplete(
					{
						elmMakeRequest: compilationOrigin.requestFromUser,
						elmMakeResult: $elm$core$Maybe$Nothing,
						loweringResult: $elm$core$Result$Err(
							$author$project$Frontend$Main$LoweringError(loweringErrors))
					});
			}
		} else {
			var completedLowering = _v0.a;
			var requestFromUser = compilationOrigin.requestFromUser;
			var files = A2(
				$elm$core$List$filter,
				A2($elm$core$Basics$composeR, $elm$core$Tuple$first, $author$project$CompileElmApp$includeFilePathInElmMakeRequest),
				$elm$core$Dict$toList(completedLowering));
			return $author$project$Frontend$Main$LoweringComplete(
				{
					elmMakeRequest: _Utils_update(
						requestFromUser,
						{
							files: A2($author$project$Frontend$Main$mapFilesToRequestToBackendStructure, base64FromBytes, files)
						}),
					elmMakeResult: $elm$core$Maybe$Nothing,
					loweringResult: $elm$core$Result$Ok(_Utils_Tuple0)
				});
		}
	});
var $author$project$CompileElmApp$BlobMakeEntryPoint = function (a) {
	return {$: 'BlobMakeEntryPoint', a: a};
};
var $author$project$CompileElmApp$ClassicMakeEntryPoint = function (a) {
	return {$: 'ClassicMakeEntryPoint', a: a};
};
var $author$project$CompileElmApp$entryPointClassFromSetOfEquallyProcessedNames = F3(
	function (supportedDeclarationNames, processEntryPoint, sourceModule) {
		var declarationsNames = A2(
			$elm$core$List$filterMap,
			function (declaration) {
				if (declaration.$ === 'FunctionDeclaration') {
					var functionDeclaration = declaration.a;
					return $elm$core$Maybe$Just(
						_Utils_Tuple2(
							$stil4m$elm_syntax$Elm$Syntax$Node$value(
								$stil4m$elm_syntax$Elm$Syntax$Node$value(functionDeclaration.declaration).name),
							declaration));
				} else {
					return $elm$core$Maybe$Nothing;
				}
			},
			A2($elm$core$List$map, $stil4m$elm_syntax$Elm$Syntax$Node$value, sourceModule.parsedSyntax.declarations));
		var _v0 = $elm$core$List$head(
			A2(
				$elm$core$List$filter,
				A2(
					$elm$core$Basics$composeR,
					$elm$core$Tuple$first,
					A2(
						$elm$core$Basics$composeR,
						$elm$core$Set$member,
						$elm$core$Basics$apR(supportedDeclarationNames))),
				declarationsNames));
		if (_v0.$ === 'Nothing') {
			return $elm$core$Result$Err(
				{supportedDeclarationNames: supportedDeclarationNames});
		} else {
			var _v1 = _v0.a;
			var declaration = _v1.b;
			return $elm$core$Result$Ok(
				processEntryPoint(declaration));
		}
	});
var $author$project$CompileElmApp$entryPointClassFromSetOfEquallyProcessedFunctionNames = F3(
	function (supportedDeclarationNames, processEntryPoint, sourceModule) {
		return A3(
			$author$project$CompileElmApp$entryPointClassFromSetOfEquallyProcessedNames,
			supportedDeclarationNames,
			function (declaration) {
				if (declaration.$ === 'FunctionDeclaration') {
					var functionDeclaration = declaration.a;
					return processEntryPoint(functionDeclaration);
				} else {
					return F2(
						function (config, _v1) {
							return $elm$core$Result$Err(
								_List_fromArray(
									[
										A2(
										$author$project$CompileElmApp$LocatedInSourceFiles,
										{filePath: config.compilationRootFilePath, locationInModuleText: $stil4m$elm_syntax$Elm$Syntax$Range$emptyRange},
										$author$project$CompileElmApp$OtherCompilationError('Is not a function declaration'))
									]));
						});
				}
			},
			sourceModule);
	});
var $author$project$CompileElmApp$loweredForBlobEntryPoint = F2(
	function (_v0, sourceFiles) {
		var compilationRootFilePath = _v0.compilationRootFilePath;
		var compilationRootModule = _v0.compilationRootModule;
		return A2(
			$elm$core$Result$map,
			function (rootModuleText) {
				return _Utils_Tuple2(
					A3(
						$author$project$CompileElmApp$updateFileContentAtPath,
						$elm$core$Basics$always(
							$author$project$CompileElmApp$fileContentFromString(rootModuleText)),
						compilationRootFilePath,
						sourceFiles),
					{
						elmMakeJavaScriptFunctionName: A2(
							$elm$core$String$join,
							'.',
							_Utils_ap(
								$stil4m$elm_syntax$Elm$Syntax$Module$moduleName(
									$stil4m$elm_syntax$Elm$Syntax$Node$value(compilationRootModule.parsedSyntax.moduleDefinition)),
								_List_fromArray(
									['blob_main_as_base64'])))
					});
			},
			A2(
				$elm$core$Result$mapError,
				function (err) {
					return _List_fromArray(
						[
							A2(
							$author$project$CompileElmApp$LocatedInSourceFiles,
							{filePath: compilationRootFilePath, locationInModuleText: $stil4m$elm_syntax$Elm$Syntax$Range$emptyRange},
							$author$project$CompileElmApp$OtherCompilationError('Failed to add import: ' + err))
						]);
				},
				A2(
					$author$project$CompileElmApp$addImportsInElmModuleText,
					_List_fromArray(
						[
							_Utils_Tuple2(
							_List_fromArray(
								['Base64']),
							$elm$core$Maybe$Nothing)
						]),
					A2(
						$elm$core$String$join,
						'\n\n',
						_List_fromArray(
							[
								compilationRootModule.fileText,
								$elm$core$String$trim('\nblob_main_as_base64 : String\nblob_main_as_base64 =\n    blobMain\n        |> Base64.fromBytes\n        |> Maybe.withDefault "Failed to encode as Base64"\n\n\n{-| Support function-level dead code elimination (<https://elm-lang.org/blog/small-assets-without-the-headache>) Elm code needed to inform the Elm compiler about our entry points.\n-}\nmain : Program Int {} String\nmain =\n    Platform.worker\n        { init = always ( {}, Cmd.none )\n        , update = always (always ( blob_main_as_base64 |> always {}, Cmd.none ))\n        , subscriptions = always Sub.none\n        }\n')
							])))));
	});
var $elm$core$Dict$singleton = F2(
	function (key, value) {
		return A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Black, key, value, $elm$core$Dict$RBEmpty_elm_builtin, $elm$core$Dict$RBEmpty_elm_builtin);
	});
var $elm$core$Set$singleton = function (key) {
	return $elm$core$Set$Set_elm_builtin(
		A2($elm$core$Dict$singleton, key, _Utils_Tuple0));
};
var $author$project$CompileElmApp$defaultEntryPoints = _List_fromArray(
	[
		A2(
		$author$project$CompileElmApp$entryPointClassFromSetOfEquallyProcessedFunctionNames,
		$elm$core$Set$singleton('blobMain'),
		F2(
			function (_v0, entryPointConfig) {
				return A2(
					$elm$core$Basics$composeR,
					$author$project$CompileElmApp$loweredForBlobEntryPoint(entryPointConfig),
					$elm$core$Result$map(
						function (_v1) {
							var compiledFiles = _v1.a;
							var entryPoint = _v1.b;
							return {
								compiledFiles: compiledFiles,
								rootModuleEntryPointKind: $author$project$CompileElmApp$BlobMakeEntryPoint(entryPoint)
							};
						}));
			})),
		A2(
		$author$project$CompileElmApp$entryPointClassFromSetOfEquallyProcessedFunctionNames,
		$elm$core$Set$singleton('main'),
		F3(
			function (_v2, entryPointConfig, compiledFiles) {
				return $elm$core$Result$Ok(
					{
						compiledFiles: compiledFiles,
						rootModuleEntryPointKind: $author$project$CompileElmApp$ClassicMakeEntryPoint(
							{
								elmMakeJavaScriptFunctionName: A2(
									$elm$core$String$join,
									'.',
									_Utils_ap(
										$stil4m$elm_syntax$Elm$Syntax$Module$moduleName(
											$stil4m$elm_syntax$Elm$Syntax$Node$value(entryPointConfig.compilationRootModule.parsedSyntax.moduleDefinition)),
										_List_fromArray(
											['main'])))
							})
					});
			}))
	]);
var $elm_community$list_extra$List$Extra$inits = A2(
	$elm$core$List$foldr,
	F2(
		function (e, acc) {
			return A2(
				$elm$core$List$cons,
				_List_Nil,
				A2(
					$elm$core$List$map,
					$elm$core$List$cons(e),
					acc));
		}),
	_List_fromArray(
		[_List_Nil]));
var $author$project$Frontend$Main$prepareCompileForFileOpenedInEditor = function (workspace) {
	var _v0 = workspace.editing;
	if (_v0.$ === 'Nothing') {
		return $elm$core$Maybe$Nothing;
	} else {
		var editing = _v0.a;
		var filesBeforeLowering = $author$project$FileTree$flatListOfBlobsFromFileTreeNode(workspace.fileTree);
		var directoryContainsElmJson = function (directoryPath) {
			return A2(
				$elm$core$List$member,
				_Utils_ap(
					directoryPath,
					_List_fromArray(
						['elm.json'])),
				A2($elm$core$List$map, $elm$core$Tuple$first, filesBeforeLowering));
		};
		var _v1 = editing.fileLocation;
		var entryPointDirectoryPath = _v1.a;
		var entryPointFileName = _v1.b;
		var workingDirectoryPath = A2(
			$elm$core$Maybe$withDefault,
			_List_Nil,
			$elm$core$List$head(
				A2(
					$elm$core$List$filter,
					directoryContainsElmJson,
					A2(
						$elm$core$List$sortBy,
						A2($elm$core$Basics$composeR, $elm$core$List$length, $elm$core$Basics$negate),
						$elm_community$list_extra$List$Extra$inits(entryPointDirectoryPath)))));
		var entryPointFilePath = _Utils_ap(
			entryPointDirectoryPath,
			_List_fromArray(
				[entryPointFileName]));
		var requestFromUserIdentity = {
			entryPointFilePathFromWorkingDirectory: A2(
				$elm$core$List$drop,
				$elm$core$List$length(workingDirectoryPath),
				entryPointFilePath),
			files: A2(
				$author$project$Frontend$Main$mapFilesToRequestToBackendStructure,
				function ($) {
					return $.asBase64;
				},
				filesBeforeLowering),
			makeOptionDebug: workspace.enableInspectionOnCompile,
			outputType: $author$project$FrontendBackendInterface$ElmMakeOutputTypeHtml,
			workingDirectoryPath: workingDirectoryPath
		};
		var compile = function (_v2) {
			var filesBeforeLoweringOnlyAsBytes = A2(
				$elm$core$List$map,
				$elm$core$Tuple$mapSecond(
					function ($) {
						return $.asBytes;
					}),
				filesBeforeLowering);
			var loweredElmAppFromDependencies = function (dependencies) {
				return A2(
					$elm$core$Result$map,
					function ($) {
						return $.compiledFiles;
					},
					A2(
						$author$project$CompileElmApp$asCompletelyLoweredElmApp,
						$author$project$CompileElmApp$defaultEntryPoints,
						{
							compilationInterfaceElmModuleNamePrefixes: _List_fromArray(
								['CompilationInterface']),
							compilationRootFilePath: entryPointFilePath,
							dependencies: dependencies,
							interfaceToHostRootModuleName: _List_Nil,
							sourceFiles: $elm$core$Dict$fromList(filesBeforeLoweringOnlyAsBytes)
						}));
			};
			var compilationOrigin = {loweredElmAppFromDependencies: loweredElmAppFromDependencies, requestFromUser: requestFromUserIdentity};
			var loweringIterationComplete = A2($author$project$Frontend$Main$continueLowering, _List_Nil, compilationOrigin);
			return {dependenciesFromCompletedIterations: _List_Nil, loweringLastIteration: loweringIterationComplete, origin: compilationOrigin};
		};
		return $elm$core$Maybe$Just(
			{compile: compile, requestFromUserIdentity: requestFromUserIdentity});
	}
};
var $author$project$Frontend$Main$BackendElmMakeResponseEvent = F2(
	function (a, b) {
		return {$: 'BackendElmMakeResponseEvent', a: a, b: b};
	});
var $author$project$FrontendBackendInterface$ElmMakeRequest = function (a) {
	return {$: 'ElmMakeRequest', a: a};
};
var $author$project$Frontend$Main$requestToBackendCmdFromCompilationInProgress = function (compilation) {
	var jsonDecoder = function (backendResponse) {
		if (backendResponse.$ === 'ElmMakeResponse') {
			var elmMakeResponse = backendResponse.a;
			return $elm$json$Json$Decode$succeed(elmMakeResponse);
		} else {
			return $elm$json$Json$Decode$fail('Unexpected response');
		}
	};
	var elmMakeRequest = function () {
		var _v0 = compilation.loweringLastIteration;
		if (_v0.$ === 'LoweringContinue') {
			var loweringContinue = _v0.a;
			return loweringContinue.elmMakeRequest;
		} else {
			var loweringComplete = _v0.a;
			return loweringComplete.elmMakeRequest;
		}
	}();
	return A3(
		$author$project$Frontend$Main$requestToApiCmd,
		$author$project$FrontendBackendInterface$ElmMakeRequest(elmMakeRequest),
		jsonDecoder,
		A2(
			$elm$core$Basics$composeR,
			$elm$core$Result$map($elm$core$Tuple$second),
			$author$project$Frontend$Main$BackendElmMakeResponseEvent(elmMakeRequest)));
};
var $author$project$Frontend$Main$compileFileOpenedInEditor = function (stateBefore) {
	var _v0 = $author$project$Frontend$Main$prepareCompileForFileOpenedInEditor(stateBefore);
	if (_v0.$ === 'Nothing') {
		return _Utils_Tuple2(stateBefore, $elm$core$Platform$Cmd$none);
	} else {
		var preparedCompilation = _v0.a;
		var compilation = preparedCompilation.compile(_Utils_Tuple0);
		var requestToBackendCmd = $author$project$Frontend$Main$requestToBackendCmdFromCompilationInProgress(compilation);
		return _Utils_Tuple2(
			_Utils_update(
				stateBefore,
				{
					compilation: $elm$core$Maybe$Just(compilation),
					syntaxInspection: $elm$core$Maybe$Nothing
				}),
			requestToBackendCmd);
	}
};
var $author$project$Frontend$MonacoEditor$ErrorSeverity = {$: 'ErrorSeverity'};
var $elm$regex$Regex$Match = F4(
	function (match, index, number, submatches) {
		return {index: index, match: match, number: number, submatches: submatches};
	});
var $elm$regex$Regex$fromStringWith = _Regex_fromStringWith;
var $elm$regex$Regex$fromString = function (string) {
	return A2(
		$elm$regex$Regex$fromStringWith,
		{caseInsensitive: false, multiline: false},
		string);
};
var $elm$regex$Regex$never = _Regex_never;
var $elm_community$string_extra$String$Extra$regexFromString = A2(
	$elm$core$Basics$composeR,
	$elm$regex$Regex$fromString,
	$elm$core$Maybe$withDefault($elm$regex$Regex$never));
var $elm$regex$Regex$replace = _Regex_replaceAtMost(_Regex_infinity);
var $elm_community$string_extra$String$Extra$changeCase = F2(
	function (mutator, word) {
		return A2(
			$elm$core$Maybe$withDefault,
			'',
			A2(
				$elm$core$Maybe$map,
				function (_v0) {
					var head = _v0.a;
					var tail = _v0.b;
					return A2(
						$elm$core$String$cons,
						mutator(head),
						tail);
				},
				$elm$core$String$uncons(word)));
	});
var $elm_community$string_extra$String$Extra$toSentenceCase = function (word) {
	return A2($elm_community$string_extra$String$Extra$changeCase, $elm$core$Char$toUpper, word);
};
var $elm_community$string_extra$String$Extra$toTitleCase = function (ws) {
	var uppercaseMatch = A2(
		$elm$regex$Regex$replace,
		$elm_community$string_extra$String$Extra$regexFromString('\\w+'),
		A2(
			$elm$core$Basics$composeR,
			function ($) {
				return $.match;
			},
			$elm_community$string_extra$String$Extra$toSentenceCase));
	return A3(
		$elm$regex$Regex$replace,
		$elm_community$string_extra$String$Extra$regexFromString('^([a-z])|\\s+([a-z])'),
		A2(
			$elm$core$Basics$composeR,
			function ($) {
				return $.match;
			},
			uppercaseMatch),
		ws);
};
var $author$project$Frontend$Main$elmEditorProblemDisplayTitleFromReportTitle = A2($elm$core$Basics$composeR, $elm$core$String$toLower, $elm_community$string_extra$String$Extra$toTitleCase);
var $author$project$Frontend$Main$elmMakeReportTextFromMessageItem = function (messageItem) {
	if (messageItem.$ === 'ElmMakeReportMessageListItemPlain') {
		var text = messageItem.a;
		return text;
	} else {
		var styled = messageItem.a;
		return styled.string;
	}
};
var $author$project$Frontend$Main$editorDocumentMarkerFromElmMakeProblem = function (elmMakeProblem) {
	return {
		endColumn: elmMakeProblem.region.end.column,
		endLineNumber: elmMakeProblem.region.end.line,
		message: '# ' + ($author$project$Frontend$Main$elmEditorProblemDisplayTitleFromReportTitle(elmMakeProblem.title) + ('\n' + A2(
			$elm$core$String$join,
			'',
			A2($elm$core$List$map, $author$project$Frontend$Main$elmMakeReportTextFromMessageItem, elmMakeProblem.message)))),
		severity: $author$project$Frontend$MonacoEditor$ErrorSeverity,
		startColumn: elmMakeProblem.region.start.column,
		startLineNumber: elmMakeProblem.region.start.line
	};
};
var $elm_community$list_extra$List$Extra$tailsHelp = F2(
	function (e, list) {
		if (list.b) {
			var x = list.a;
			var xs = list.b;
			return A2(
				$elm$core$List$cons,
				A2($elm$core$List$cons, e, x),
				A2($elm$core$List$cons, x, xs));
		} else {
			return _List_Nil;
		}
	});
var $elm_community$list_extra$List$Extra$tails = A2(
	$elm$core$List$foldr,
	$elm_community$list_extra$List$Extra$tailsHelp,
	_List_fromArray(
		[_List_Nil]));
var $author$project$Frontend$Main$filePathFromExistingPathsAndElmMakeReportPathString = F2(
	function (existingPaths, elmMakeReportPathString) {
		var pathSegments = A2(
			$elm$core$List$concatMap,
			$elm$core$String$split('\\'),
			A2($elm$core$String$split, '/', elmMakeReportPathString));
		return A2(
			$elm$core$Maybe$withDefault,
			pathSegments,
			$elm$core$List$head(
				A2(
					$elm$core$List$filter,
					function (pathEnd) {
						return A2($elm$core$List$member, pathEnd, existingPaths);
					},
					A2(
						$elm$core$List$filter,
						A2($elm$core$Basics$composeR, $elm$core$List$isEmpty, $elm$core$Basics$not),
						$elm_community$list_extra$List$Extra$tails(pathSegments)))));
	});
var $author$project$Frontend$Main$editorDocumentMarkersFromElmMakeReport = F2(
	function (_v0, maybeReportFromJson) {
		var elmMakeRequest = _v0.elmMakeRequest;
		var fileOpenInEditor = _v0.fileOpenInEditor;
		if (maybeReportFromJson.$ === 'Nothing') {
			return _List_Nil;
		} else {
			var reportFromJson = maybeReportFromJson.a;
			var fileOpenedInEditorBase64 = fileOpenInEditor.b.asBase64;
			var _v2 = fileOpenInEditor.a;
			var directoryPath = _v2.a;
			var fileName = _v2.b;
			var filePathOpenInEditor = _Utils_ap(
				directoryPath,
				_List_fromArray(
					[fileName]));
			var _v3 = $elm$core$List$head(
				A2(
					$elm$core$List$filter,
					A2(
						$elm$core$Basics$composeR,
						function ($) {
							return $.path;
						},
						$elm$core$Basics$eq(filePathOpenInEditor)),
					elmMakeRequest.files));
			if (_v3.$ === 'Nothing') {
				return _List_Nil;
			} else {
				var requestFile = _v3.a;
				if (!_Utils_eq(requestFile.contentBase64, fileOpenedInEditorBase64)) {
					return _List_Nil;
				} else {
					if (reportFromJson.$ === 'Err') {
						return _List_Nil;
					} else {
						var report = reportFromJson.a;
						if (report.$ === 'ErrorReport') {
							return _List_Nil;
						} else {
							var compileErrors = report.a;
							return A2(
								$elm$core$List$map,
								$author$project$Frontend$Main$editorDocumentMarkerFromElmMakeProblem,
								A2(
									$elm$core$List$concatMap,
									function ($) {
										return $.problems;
									},
									A2(
										$elm$core$List$filter,
										A2(
											$elm$core$Basics$composeR,
											function ($) {
												return $.path;
											},
											A2(
												$elm$core$Basics$composeR,
												$author$project$Frontend$Main$filePathFromExistingPathsAndElmMakeReportPathString(
													A2(
														$elm$core$List$map,
														function ($) {
															return $.path;
														},
														elmMakeRequest.files)),
												$elm$core$Basics$eq(filePathOpenInEditor))),
										compileErrors)));
						}
					}
				}
			}
		}
	});
var $author$project$Frontend$Main$compilationSyntaxLocationAsElmMakeReportLocation = function (location) {
	return {column: location.column, line: location.row};
};
var $author$project$Frontend$Main$compilationSyntaxRangeAsElmMakeReportRegion = function (range) {
	return {
		end: $author$project$Frontend$Main$compilationSyntaxLocationAsElmMakeReportLocation(range.end),
		start: $author$project$Frontend$Main$compilationSyntaxLocationAsElmMakeReportLocation(range.start)
	};
};
var $author$project$Frontend$Main$loweringCompilationErrorDisplayText = function (compilationError) {
	if (compilationError.$ === 'MissingDependencyError') {
		var missingDependency = compilationError.a;
		return 'Missing Dependency: ' + function () {
			var elmMakeRequest = missingDependency.a;
			return 'Elm Make ' + (function () {
				var _v2 = elmMakeRequest.outputType;
				if (_v2.$ === 'ElmMakeOutputTypeJs') {
					return 'javascript';
				} else {
					return 'html';
				}
			}() + (' from ' + A2($elm$core$String$join, '/', elmMakeRequest.entryPointFilePath)));
		}();
	} else {
		var otherError = compilationError.a;
		return otherError;
	}
};
var $author$project$Frontend$Main$editorDocumentMarkerFromLoweringCompileError = function (_v0) {
	var region = _v0.a;
	var error = _v0.b;
	return {
		endColumn: region.end.column,
		endLineNumber: region.end.line,
		message: $author$project$Frontend$Main$loweringCompilationErrorDisplayText(error),
		severity: $author$project$Frontend$MonacoEditor$ErrorSeverity,
		startColumn: region.start.column,
		startLineNumber: region.start.line
	};
};
var $author$project$Frontend$Main$editorDocumentMarkersFromFailedLowering = F2(
	function (_v0, compileErrors) {
		var compileRequest = _v0.compileRequest;
		var fileOpenInEditor = _v0.fileOpenInEditor;
		var fileOpenedInEditorBase64 = fileOpenInEditor.b.asBase64;
		var _v1 = fileOpenInEditor.a;
		var directoryPath = _v1.a;
		var fileName = _v1.b;
		var filePathOpenInEditor = _Utils_ap(
			directoryPath,
			_List_fromArray(
				[fileName]));
		var _v2 = $elm$core$List$head(
			A2(
				$elm$core$List$filter,
				A2(
					$elm$core$Basics$composeR,
					function ($) {
						return $.path;
					},
					$elm$core$Basics$eq(filePathOpenInEditor)),
				compileRequest.files));
		if (_v2.$ === 'Nothing') {
			return _List_Nil;
		} else {
			var requestFile = _v2.a;
			return (!_Utils_eq(requestFile.contentBase64, fileOpenedInEditorBase64)) ? _List_Nil : A2(
				$elm$core$List$filterMap,
				function (locatedCompilationError) {
					var location = locatedCompilationError.a;
					var error = locatedCompilationError.b;
					return _Utils_eq(location.filePath, filePathOpenInEditor) ? $elm$core$Maybe$Just(
						$author$project$Frontend$Main$editorDocumentMarkerFromLoweringCompileError(
							_Utils_Tuple2(
								$author$project$Frontend$Main$compilationSyntaxRangeAsElmMakeReportRegion(location.locationInModuleText),
								error))) : $elm$core$Maybe$Nothing;
				},
				compileErrors);
		}
	});
var $author$project$Frontend$FileEditor$CssContent = {$: 'CssContent'};
var $author$project$Frontend$FileEditor$HtmlContent = {$: 'HtmlContent'};
var $author$project$Frontend$FileEditor$JsonContent = {$: 'JsonContent'};
var $author$project$Frontend$FileEditor$MarkdownContent = {$: 'MarkdownContent'};
var $author$project$Frontend$FileEditor$XmlContent = {$: 'XmlContent'};
var $author$project$Frontend$FileEditor$fileContentTypeFromFileName = function (fileName) {
	var _v0 = $elm$core$List$reverse(
		A2($elm$core$String$split, '.', fileName));
	if (!_v0.b) {
		return $elm$core$Maybe$Nothing;
	} else {
		var fileExtension = _v0.a;
		var _v1 = $elm$core$String$toLower(fileExtension);
		switch (_v1) {
			case 'elm':
				return $elm$core$Maybe$Just($author$project$Frontend$FileEditor$ElmContent);
			case 'json':
				return $elm$core$Maybe$Just($author$project$Frontend$FileEditor$JsonContent);
			case 'xml':
				return $elm$core$Maybe$Just($author$project$Frontend$FileEditor$XmlContent);
			case 'md':
				return $elm$core$Maybe$Just($author$project$Frontend$FileEditor$MarkdownContent);
			case 'html':
				return $elm$core$Maybe$Just($author$project$Frontend$FileEditor$HtmlContent);
			case 'css':
				return $elm$core$Maybe$Just($author$project$Frontend$FileEditor$CssContent);
			default:
				return $elm$core$Maybe$Nothing;
		}
	}
};
var $author$project$Frontend$Main$fileOpenedInEditorFromWorkspace = function (workspaceActive) {
	var _v0 = workspaceActive.editing;
	if (_v0.$ === 'Nothing') {
		return $elm$core$Maybe$Nothing;
	} else {
		var editing = _v0.a;
		var _v1 = editing.fileLocation;
		var directoryPath = _v1.a;
		var fileName = _v1.b;
		var _v2 = A2(
			$author$project$FileTree$getBlobAtPathFromFileTree,
			_Utils_ap(
				directoryPath,
				_List_fromArray(
					[fileName])),
			workspaceActive.fileTree);
		if (_v2.$ === 'Nothing') {
			return $elm$core$Maybe$Nothing;
		} else {
			var fileContent = _v2.a;
			return $elm$core$Maybe$Just(
				_Utils_Tuple2(editing, fileContent));
		}
	}
};
var $author$project$Frontend$Main$fileLocationOpenInEditorFromWorkspace = A2(
	$elm$core$Basics$composeR,
	$author$project$Frontend$Main$fileOpenedInEditorFromWorkspace,
	$elm$core$Maybe$map($elm$core$Tuple$first));
var $author$project$Frontend$Main$monacoLanguageNameForFileContent = function (fileContent) {
	switch (fileContent.$) {
		case 'ElmContent':
			return 'Elm';
		case 'JsonContent':
			return 'json';
		case 'XmlContent':
			return 'xml';
		case 'MarkdownContent':
			return 'markdown';
		case 'HtmlContent':
			return 'html';
		default:
			return 'css';
	}
};
var $author$project$Frontend$Main$monacoUriForFilePath = function (filePath) {
	return 'file:///' + A2($elm$core$String$join, '/', filePath);
};
var $author$project$Frontend$Main$monacoUriForDirectoryPathAndFileName = F2(
	function (directoryPath, fileName) {
		return $author$project$Frontend$Main$monacoUriForFilePath(
			_Utils_ap(
				directoryPath,
				_List_fromArray(
					[fileName])));
	});
var $author$project$Frontend$MonacoEditor$OpenDocumentEvent = function (a) {
	return {$: 'OpenDocumentEvent', a: a};
};
var $author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonEncode_Frontend_MonacoEditor_CompletionItemKind = function (valueToEncode) {
	switch (valueToEncode.$) {
		case 'ConstructorCompletionItemKind':
			return $elm$json$Json$Encode$object(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'ConstructorCompletionItemKind',
						A2($elm$json$Json$Encode$list, $elm$core$Basics$identity, _List_Nil))
					]));
		case 'EnumCompletionItemKind':
			return $elm$json$Json$Encode$object(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'EnumCompletionItemKind',
						A2($elm$json$Json$Encode$list, $elm$core$Basics$identity, _List_Nil))
					]));
		case 'EnumMemberCompletionItemKind':
			return $elm$json$Json$Encode$object(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'EnumMemberCompletionItemKind',
						A2($elm$json$Json$Encode$list, $elm$core$Basics$identity, _List_Nil))
					]));
		case 'FunctionCompletionItemKind':
			return $elm$json$Json$Encode$object(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'FunctionCompletionItemKind',
						A2($elm$json$Json$Encode$list, $elm$core$Basics$identity, _List_Nil))
					]));
		case 'ModuleCompletionItemKind':
			return $elm$json$Json$Encode$object(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'ModuleCompletionItemKind',
						A2($elm$json$Json$Encode$list, $elm$core$Basics$identity, _List_Nil))
					]));
		default:
			return $elm$json$Json$Encode$object(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'StructCompletionItemKind',
						A2($elm$json$Json$Encode$list, $elm$core$Basics$identity, _List_Nil))
					]));
	}
};
var $author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonEncode_Frontend_MonacoEditor_EditorMarkerSeverity = function (valueToEncode) {
	switch (valueToEncode.$) {
		case 'ErrorSeverity':
			return $elm$json$Json$Encode$object(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'ErrorSeverity',
						A2($elm$json$Json$Encode$list, $elm$core$Basics$identity, _List_Nil))
					]));
		case 'HintSeverity':
			return $elm$json$Json$Encode$object(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'HintSeverity',
						A2($elm$json$Json$Encode$list, $elm$core$Basics$identity, _List_Nil))
					]));
		case 'InfoSeverity':
			return $elm$json$Json$Encode$object(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'InfoSeverity',
						A2($elm$json$Json$Encode$list, $elm$core$Basics$identity, _List_Nil))
					]));
		default:
			return $elm$json$Json$Encode$object(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'WarningSeverity',
						A2($elm$json$Json$Encode$list, $elm$core$Basics$identity, _List_Nil))
					]));
	}
};
var $author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonEncode_Frontend_MonacoEditor_MessageToEditor = function (valueToEncode) {
	switch (valueToEncode.$) {
		case 'OpenDocumentEvent':
			var tagArgument0 = valueToEncode.a;
			return $elm$json$Json$Encode$object(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'OpenDocumentEvent',
						A2(
							$elm$json$Json$Encode$list,
							$elm$core$Basics$identity,
							_List_fromArray(
								[
									$elm$json$Json$Encode$object(
									_List_fromArray(
										[
											_Utils_Tuple2(
											'value',
											$elm$json$Json$Encode$string(tagArgument0.value)),
											_Utils_Tuple2(
											'language',
											$elm$json$Json$Encode$string(tagArgument0.language)),
											_Utils_Tuple2(
											'uri',
											$elm$json$Json$Encode$string(tagArgument0.uri)),
											_Utils_Tuple2(
											'position',
											$elm$json$Json$Encode$object(
												_List_fromArray(
													[
														_Utils_Tuple2(
														'lineNumber',
														$elm$json$Json$Encode$int(tagArgument0.position.lineNumber)),
														_Utils_Tuple2(
														'column',
														$elm$json$Json$Encode$int(tagArgument0.position.column))
													])))
										]))
								])))
					]));
		case 'ProvideCompletionItemsEvent':
			var tagArgument0 = valueToEncode.a;
			return $elm$json$Json$Encode$object(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'ProvideCompletionItemsEvent',
						A2(
							$elm$json$Json$Encode$list,
							$elm$core$Basics$identity,
							_List_fromArray(
								[
									A2(
									$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonEncode__generic_List,
									function (type_arg) {
										return $elm$json$Json$Encode$object(
											_List_fromArray(
												[
													_Utils_Tuple2(
													'label',
													$elm$json$Json$Encode$string(type_arg.label)),
													_Utils_Tuple2(
													'kind',
													$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonEncode_Frontend_MonacoEditor_CompletionItemKind(type_arg.kind)),
													_Utils_Tuple2(
													'documentation',
													$elm$json$Json$Encode$string(type_arg.documentation)),
													_Utils_Tuple2(
													'insertText',
													$elm$json$Json$Encode$string(type_arg.insertText))
												]));
									},
									tagArgument0)
								])))
					]));
		case 'ProvideDefinitionEvent':
			var tagArgument0 = valueToEncode.a;
			return $elm$json$Json$Encode$object(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'ProvideDefinitionEvent',
						A2(
							$elm$json$Json$Encode$list,
							$elm$core$Basics$identity,
							_List_fromArray(
								[
									A2(
									$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonEncode__generic_List,
									function (type_arg) {
										return $elm$json$Json$Encode$object(
											_List_fromArray(
												[
													_Utils_Tuple2(
													'range',
													$elm$json$Json$Encode$object(
														_List_fromArray(
															[
																_Utils_Tuple2(
																'startLineNumber',
																$elm$json$Json$Encode$int(type_arg.range.startLineNumber)),
																_Utils_Tuple2(
																'startColumn',
																$elm$json$Json$Encode$int(type_arg.range.startColumn)),
																_Utils_Tuple2(
																'endLineNumber',
																$elm$json$Json$Encode$int(type_arg.range.endLineNumber)),
																_Utils_Tuple2(
																'endColumn',
																$elm$json$Json$Encode$int(type_arg.range.endColumn))
															]))),
													_Utils_Tuple2(
													'uri',
													$elm$json$Json$Encode$string(type_arg.uri))
												]));
									},
									tagArgument0)
								])))
					]));
		case 'ProvideHoverEvent':
			var tagArgument0 = valueToEncode.a;
			return $elm$json$Json$Encode$object(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'ProvideHoverEvent',
						A2(
							$elm$json$Json$Encode$list,
							$elm$core$Basics$identity,
							_List_fromArray(
								[
									A2(
									$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonEncode__generic_List,
									function (type_arg) {
										return $elm$json$Json$Encode$string(type_arg);
									},
									tagArgument0)
								])))
					]));
		case 'RevealPositionInCenter':
			var tagArgument0 = valueToEncode.a;
			return $elm$json$Json$Encode$object(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'RevealPositionInCenter',
						A2(
							$elm$json$Json$Encode$list,
							$elm$core$Basics$identity,
							_List_fromArray(
								[
									$elm$json$Json$Encode$object(
									_List_fromArray(
										[
											_Utils_Tuple2(
											'lineNumber',
											$elm$json$Json$Encode$int(tagArgument0.lineNumber)),
											_Utils_Tuple2(
											'column',
											$elm$json$Json$Encode$int(tagArgument0.column))
										]))
								])))
					]));
		default:
			var tagArgument0 = valueToEncode.a;
			return $elm$json$Json$Encode$object(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'SetModelMarkers',
						A2(
							$elm$json$Json$Encode$list,
							$elm$core$Basics$identity,
							_List_fromArray(
								[
									A2(
									$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonEncode__generic_List,
									function (type_arg) {
										return $elm$json$Json$Encode$object(
											_List_fromArray(
												[
													_Utils_Tuple2(
													'message',
													$elm$json$Json$Encode$string(type_arg.message)),
													_Utils_Tuple2(
													'startLineNumber',
													$elm$json$Json$Encode$int(type_arg.startLineNumber)),
													_Utils_Tuple2(
													'startColumn',
													$elm$json$Json$Encode$int(type_arg.startColumn)),
													_Utils_Tuple2(
													'endLineNumber',
													$elm$json$Json$Encode$int(type_arg.endLineNumber)),
													_Utils_Tuple2(
													'endColumn',
													$elm$json$Json$Encode$int(type_arg.endColumn)),
													_Utils_Tuple2(
													'severity',
													$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonEncode_Frontend_MonacoEditor_EditorMarkerSeverity(type_arg.severity))
												]));
									},
									tagArgument0)
								])))
					]));
	}
};
var $author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonEncode_3939936410 = function (valueToEncode) {
	return $author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonEncode_Frontend_MonacoEditor_MessageToEditor(valueToEncode);
};
var $author$project$CompilationInterface$GenerateJsonConverters$jsonEncodeMessageToMonacoEditor = $author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonEncode_3939936410;
var $author$project$Frontend$Main$sendMessageToMonacoFrame = _Platform_outgoingPort('sendMessageToMonacoFrame', $elm$core$Basics$identity);
var $author$project$Frontend$Main$setContentInMonacoEditorCmd = function (openDocument) {
	return $author$project$Frontend$Main$sendMessageToMonacoFrame(
		$author$project$CompilationInterface$GenerateJsonConverters$jsonEncodeMessageToMonacoEditor(
			$author$project$Frontend$MonacoEditor$OpenDocumentEvent(openDocument)));
};
var $author$project$Frontend$MonacoEditor$SetModelMarkers = function (a) {
	return {$: 'SetModelMarkers', a: a};
};
var $author$project$Frontend$Main$setModelMarkersInMonacoEditorCmd = A2(
	$elm$core$Basics$composeR,
	$author$project$Frontend$MonacoEditor$SetModelMarkers,
	A2($elm$core$Basics$composeR, $author$project$CompilationInterface$GenerateJsonConverters$jsonEncodeMessageToMonacoEditor, $author$project$Frontend$Main$sendMessageToMonacoFrame));
var $author$project$Frontend$Main$stringFromFileContent = $author$project$Common$decodeBytesToString;
var $author$project$Frontend$Main$updateWorkspaceAfterEvent = F2(
	function (stateBeforeApplyEvent, stateAfterEvent) {
		var _v0 = $author$project$Frontend$Main$fileOpenedInEditorFromWorkspace(stateAfterEvent);
		if (_v0.$ === 'Nothing') {
			return _Utils_Tuple2(stateAfterEvent, $elm$core$Platform$Cmd$none);
		} else {
			var _v1 = _v0.a;
			var editing = _v1.a;
			var fileContent = _v1.b;
			var _v2 = $author$project$Frontend$Main$stringFromFileContent(fileContent.asBytes);
			if (_v2.$ === 'Nothing') {
				return _Utils_Tuple2(stateAfterEvent, $elm$core$Platform$Cmd$none);
			} else {
				var textForEditor = _v2.a;
				var fileLocationOpenedBeforeEvent = $author$project$Frontend$Main$fileLocationOpenInEditorFromWorkspace(stateBeforeApplyEvent);
				var fileLocationChanged = !_Utils_eq(
					fileLocationOpenedBeforeEvent,
					$elm$core$Maybe$Just(editing));
				var compilationChanged = !_Utils_eq(stateBeforeApplyEvent.compilation, stateAfterEvent.compilation);
				var setModelMarkersToEditorCmd = function () {
					if (!(compilationChanged || fileLocationChanged)) {
						return $elm$core$Maybe$Nothing;
					} else {
						var _v6 = stateAfterEvent.compilation;
						if (_v6.$ === 'Just') {
							var compilation = _v6.a;
							var _v7 = compilation.loweringLastIteration;
							if (_v7.$ === 'LoweringComplete') {
								var loweringComplete = _v7.a;
								var loweringMarkers = function () {
									var _v8 = loweringComplete.loweringResult;
									if (_v8.$ === 'Ok') {
										return _List_Nil;
									} else {
										if (_v8.a.$ === 'DependencyLoweringError') {
											return _List_Nil;
										} else {
											var loweringErrors = _v8.a.a;
											return A2(
												$author$project$Frontend$Main$editorDocumentMarkersFromFailedLowering,
												{
													compileRequest: compilation.origin.requestFromUser,
													fileOpenInEditor: _Utils_Tuple2(editing.fileLocation, fileContent)
												},
												loweringErrors);
										}
									}
								}();
								var elmMakeMarkers = A2(
									$author$project$Frontend$Main$editorDocumentMarkersFromElmMakeReport,
									{
										elmMakeRequest: loweringComplete.elmMakeRequest,
										fileOpenInEditor: _Utils_Tuple2(editing.fileLocation, fileContent)
									},
									A2(
										$elm$core$Maybe$andThen,
										function ($) {
											return $.reportFromJson;
										},
										A2($elm$core$Maybe$andThen, $elm$core$Result$toMaybe, loweringComplete.elmMakeResult)));
								return $elm$core$Maybe$Just(
									$author$project$Frontend$Main$setModelMarkersInMonacoEditorCmd(
										$elm$core$List$concat(
											_List_fromArray(
												[loweringMarkers, elmMakeMarkers]))));
							} else {
								return $elm$core$Maybe$Nothing;
							}
						} else {
							return $elm$core$Maybe$Nothing;
						}
					}
				}();
				var _v3 = editing.fileLocation;
				var directoryPath = _v3.a;
				var fileName = _v3.b;
				var fileContentType = $author$project$Frontend$FileEditor$fileContentTypeFromFileName(fileName);
				var triggerCompileForFirstOpenedModule = _Utils_eq(
					fileContentType,
					$elm$core$Maybe$Just($author$project$Frontend$FileEditor$ElmContent)) && (_Utils_eq(stateAfterEvent.compilation, $elm$core$Maybe$Nothing) && _Utils_eq(stateAfterEvent.syntaxInspection, $elm$core$Maybe$Nothing));
				var _v4 = triggerCompileForFirstOpenedModule ? $author$project$Frontend$Main$compileFileOpenedInEditor(stateAfterEvent) : _Utils_Tuple2(stateAfterEvent, $elm$core$Platform$Cmd$none);
				var state = _v4.a;
				var compileCmd = _v4.b;
				var setTextToEditorCmd = (_Utils_eq(
					$elm$core$Maybe$Just(textForEditor),
					state.lastTextReceivedFromEditor) && (!fileLocationChanged)) ? $elm$core$Maybe$Nothing : $elm$core$Maybe$Just(
					$author$project$Frontend$Main$setContentInMonacoEditorCmd(
						{
							language: function () {
								if (fileContentType.$ === 'Nothing') {
									return 'txt';
								} else {
									var contentType = fileContentType.a;
									return $author$project$Frontend$Main$monacoLanguageNameForFileContent(contentType);
								}
							}(),
							position: editing.openPosition,
							uri: A2($author$project$Frontend$Main$monacoUriForDirectoryPathAndFileName, directoryPath, fileName),
							value: textForEditor
						}));
				return _Utils_Tuple2(
					state,
					$elm$core$Platform$Cmd$batch(
						_List_fromArray(
							[
								A2($elm$core$Maybe$withDefault, $elm$core$Platform$Cmd$none, setTextToEditorCmd),
								A2($elm$core$Maybe$withDefault, $elm$core$Platform$Cmd$none, setModelMarkersToEditorCmd),
								compileCmd
							])));
			}
		}
	});
var $author$project$Frontend$Main$ElmFormatInProgress = function (a) {
	return {$: 'ElmFormatInProgress', a: a};
};
var $author$project$Frontend$Main$ElmFormatResult = F2(
	function (a, b) {
		return {$: 'ElmFormatResult', a: a, b: b};
	});
var $author$project$Frontend$Main$UserInputChangeTextInEditor = F2(
	function (a, b) {
		return {$: 'UserInputChangeTextInEditor', a: a, b: b};
	});
var $author$project$Frontend$Main$UserInputCloseEditor = {$: 'UserInputCloseEditor'};
var $author$project$Frontend$Main$UserInputCompile = {$: 'UserInputCompile'};
var $author$project$Frontend$Main$UserInputFormat = {$: 'UserInputFormat'};
var $author$project$Frontend$Main$UserInputInspectSyntax = {$: 'UserInputInspectSyntax'};
var $author$project$Frontend$Main$BackendElmFormatResponseEvent = function (a) {
	return {$: 'BackendElmFormatResponseEvent', a: a};
};
var $author$project$FrontendBackendInterface$FormatElmModuleTextRequest = function (a) {
	return {$: 'FormatElmModuleTextRequest', a: a};
};
var $author$project$Frontend$Main$elmFormatCmdFromState = function (state) {
	var _v0 = $author$project$Frontend$Main$fileOpenedInEditorFromWorkspace(state);
	if (_v0.$ === 'Nothing') {
		return $elm$core$Maybe$Nothing;
	} else {
		var _v1 = _v0.a;
		var editing = _v1.a;
		var fileContent = _v1.b;
		var _v2 = $author$project$Frontend$Main$stringFromFileContent(fileContent.asBytes);
		if (_v2.$ === 'Nothing') {
			return $elm$core$Maybe$Nothing;
		} else {
			var fileContentString = _v2.a;
			var request = $author$project$FrontendBackendInterface$FormatElmModuleTextRequest(fileContentString);
			var jsonDecoder = function (backendResponse) {
				if (backendResponse.$ === 'FormatElmModuleTextResponse') {
					var formatResponse = backendResponse.a;
					return $elm$json$Json$Decode$succeed(formatResponse);
				} else {
					return $elm$json$Json$Decode$fail('Unexpected response');
				}
			};
			return $elm$core$Maybe$Just(
				_Utils_Tuple2(
					fileContentString,
					A3(
						$author$project$Frontend$Main$requestToApiCmd,
						request,
						jsonDecoder,
						A2(
							$elm$core$Basics$composeR,
							$elm$core$Result$map($elm$core$Tuple$second),
							function (result) {
								return $author$project$Frontend$Main$BackendElmFormatResponseEvent(
									{fileLocation: editing.fileLocation, result: result});
							}))));
		}
	}
};
var $author$project$Frontend$Main$fileContentFromString = A2($elm$core$Basics$composeR, $elm$bytes$Bytes$Encode$string, $elm$bytes$Bytes$Encode$encode);
var $author$project$LanguageServiceInterface$ProvideCompletionItemsResponse = function (a) {
	return {$: 'ProvideCompletionItemsResponse', a: a};
};
var $author$project$LanguageServiceInterface$ProvideDefinitionResponse = function (a) {
	return {$: 'ProvideDefinitionResponse', a: a};
};
var $author$project$LanguageServiceInterface$ProvideHoverResponse = function (a) {
	return {$: 'ProvideHoverResponse', a: a};
};
var $author$project$LanguageServiceInterface$TextDocumentReferencesResponse = function (a) {
	return {$: 'TextDocumentReferencesResponse', a: a};
};
var $author$project$LanguageServiceInterface$TextDocumentRenameResponse = function (a) {
	return {$: 'TextDocumentRenameResponse', a: a};
};
var $author$project$LanguageServiceInterface$TextDocumentSymbolResponse = function (a) {
	return {$: 'TextDocumentSymbolResponse', a: a};
};
var $author$project$LanguageServiceInterface$WorkspaceSummaryResponse = {$: 'WorkspaceSummaryResponse'};
var $author$project$Frontend$MonacoEditor$ConstructorCompletionItemKind = {$: 'ConstructorCompletionItemKind'};
var $author$project$Frontend$MonacoEditor$EnumCompletionItemKind = {$: 'EnumCompletionItemKind'};
var $author$project$Frontend$MonacoEditor$EnumMemberCompletionItemKind = {$: 'EnumMemberCompletionItemKind'};
var $author$project$Frontend$MonacoEditor$FunctionCompletionItemKind = {$: 'FunctionCompletionItemKind'};
var $author$project$Frontend$MonacoEditor$ModuleCompletionItemKind = {$: 'ModuleCompletionItemKind'};
var $author$project$Frontend$MonacoEditor$StructCompletionItemKind = {$: 'StructCompletionItemKind'};
var $author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_Frontend_MonacoEditor_CompletionItemKind = $elm$json$Json$Decode$oneOf(
	_List_fromArray(
		[
			A2(
			$elm$json$Json$Decode$field,
			'ConstructorCompletionItemKind',
			$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecodeSucceedWhenNotNull($author$project$Frontend$MonacoEditor$ConstructorCompletionItemKind)),
			A2(
			$elm$json$Json$Decode$field,
			'EnumCompletionItemKind',
			$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecodeSucceedWhenNotNull($author$project$Frontend$MonacoEditor$EnumCompletionItemKind)),
			A2(
			$elm$json$Json$Decode$field,
			'EnumMemberCompletionItemKind',
			$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecodeSucceedWhenNotNull($author$project$Frontend$MonacoEditor$EnumMemberCompletionItemKind)),
			A2(
			$elm$json$Json$Decode$field,
			'FunctionCompletionItemKind',
			$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecodeSucceedWhenNotNull($author$project$Frontend$MonacoEditor$FunctionCompletionItemKind)),
			A2(
			$elm$json$Json$Decode$field,
			'ModuleCompletionItemKind',
			$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecodeSucceedWhenNotNull($author$project$Frontend$MonacoEditor$ModuleCompletionItemKind)),
			A2(
			$elm$json$Json$Decode$field,
			'StructCompletionItemKind',
			$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecodeSucceedWhenNotNull($author$project$Frontend$MonacoEditor$StructCompletionItemKind))
		]));
var $author$project$LanguageServiceInterface$DocumentSymbol = function (a) {
	return {$: 'DocumentSymbol', a: a};
};
var $author$project$LanguageServiceInterface$SymbolKind_Array = {$: 'SymbolKind_Array'};
var $author$project$LanguageServiceInterface$SymbolKind_Boolean = {$: 'SymbolKind_Boolean'};
var $author$project$LanguageServiceInterface$SymbolKind_Class = {$: 'SymbolKind_Class'};
var $author$project$LanguageServiceInterface$SymbolKind_Constant = {$: 'SymbolKind_Constant'};
var $author$project$LanguageServiceInterface$SymbolKind_Enum = {$: 'SymbolKind_Enum'};
var $author$project$LanguageServiceInterface$SymbolKind_EnumMember = {$: 'SymbolKind_EnumMember'};
var $author$project$LanguageServiceInterface$SymbolKind_File = {$: 'SymbolKind_File'};
var $author$project$LanguageServiceInterface$SymbolKind_Function = {$: 'SymbolKind_Function'};
var $author$project$LanguageServiceInterface$SymbolKind_Interface = {$: 'SymbolKind_Interface'};
var $author$project$LanguageServiceInterface$SymbolKind_Module = {$: 'SymbolKind_Module'};
var $author$project$LanguageServiceInterface$SymbolKind_Namespace = {$: 'SymbolKind_Namespace'};
var $author$project$LanguageServiceInterface$SymbolKind_Number = {$: 'SymbolKind_Number'};
var $author$project$LanguageServiceInterface$SymbolKind_Package = {$: 'SymbolKind_Package'};
var $author$project$LanguageServiceInterface$SymbolKind_String = {$: 'SymbolKind_String'};
var $author$project$LanguageServiceInterface$SymbolKind_Struct = {$: 'SymbolKind_Struct'};
var $author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_LanguageServiceInterface_SymbolKind = $elm$json$Json$Decode$oneOf(
	_List_fromArray(
		[
			A2(
			$elm$json$Json$Decode$field,
			'SymbolKind_Array',
			$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecodeSucceedWhenNotNull($author$project$LanguageServiceInterface$SymbolKind_Array)),
			A2(
			$elm$json$Json$Decode$field,
			'SymbolKind_Boolean',
			$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecodeSucceedWhenNotNull($author$project$LanguageServiceInterface$SymbolKind_Boolean)),
			A2(
			$elm$json$Json$Decode$field,
			'SymbolKind_Class',
			$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecodeSucceedWhenNotNull($author$project$LanguageServiceInterface$SymbolKind_Class)),
			A2(
			$elm$json$Json$Decode$field,
			'SymbolKind_Constant',
			$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecodeSucceedWhenNotNull($author$project$LanguageServiceInterface$SymbolKind_Constant)),
			A2(
			$elm$json$Json$Decode$field,
			'SymbolKind_Enum',
			$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecodeSucceedWhenNotNull($author$project$LanguageServiceInterface$SymbolKind_Enum)),
			A2(
			$elm$json$Json$Decode$field,
			'SymbolKind_EnumMember',
			$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecodeSucceedWhenNotNull($author$project$LanguageServiceInterface$SymbolKind_EnumMember)),
			A2(
			$elm$json$Json$Decode$field,
			'SymbolKind_File',
			$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecodeSucceedWhenNotNull($author$project$LanguageServiceInterface$SymbolKind_File)),
			A2(
			$elm$json$Json$Decode$field,
			'SymbolKind_Function',
			$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecodeSucceedWhenNotNull($author$project$LanguageServiceInterface$SymbolKind_Function)),
			A2(
			$elm$json$Json$Decode$field,
			'SymbolKind_Interface',
			$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecodeSucceedWhenNotNull($author$project$LanguageServiceInterface$SymbolKind_Interface)),
			A2(
			$elm$json$Json$Decode$field,
			'SymbolKind_Module',
			$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecodeSucceedWhenNotNull($author$project$LanguageServiceInterface$SymbolKind_Module)),
			A2(
			$elm$json$Json$Decode$field,
			'SymbolKind_Namespace',
			$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecodeSucceedWhenNotNull($author$project$LanguageServiceInterface$SymbolKind_Namespace)),
			A2(
			$elm$json$Json$Decode$field,
			'SymbolKind_Number',
			$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecodeSucceedWhenNotNull($author$project$LanguageServiceInterface$SymbolKind_Number)),
			A2(
			$elm$json$Json$Decode$field,
			'SymbolKind_Package',
			$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecodeSucceedWhenNotNull($author$project$LanguageServiceInterface$SymbolKind_Package)),
			A2(
			$elm$json$Json$Decode$field,
			'SymbolKind_String',
			$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecodeSucceedWhenNotNull($author$project$LanguageServiceInterface$SymbolKind_String)),
			A2(
			$elm$json$Json$Decode$field,
			'SymbolKind_Struct',
			$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecodeSucceedWhenNotNull($author$project$LanguageServiceInterface$SymbolKind_Struct))
		]));
function $author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$cyclic$jsonDecode_LanguageServiceInterface_DocumentSymbol() {
	return $elm$json$Json$Decode$oneOf(
		_List_fromArray(
			[
				A2(
				$elm$json$Json$Decode$field,
				'DocumentSymbol',
				$elm$json$Json$Decode$lazy(
					function (_v0) {
						return A2(
							$elm$json$Json$Decode$map,
							$author$project$LanguageServiceInterface$DocumentSymbol,
							A2(
								$elm$json$Json$Decode$index,
								0,
								A2(
									$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
									A3(
										$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
										'children',
										_List_fromArray(
											['Children']),
										$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode__generic_List(
											$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$cyclic$jsonDecode_LanguageServiceInterface_DocumentSymbol())),
									A2(
										$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
										A3(
											$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
											'selectionRange',
											_List_fromArray(
												['SelectionRange']),
											A2(
												$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
												A3(
													$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
													'endColumn',
													_List_fromArray(
														['EndColumn']),
													$elm$json$Json$Decode$int),
												A2(
													$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
													A3(
														$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
														'endLineNumber',
														_List_fromArray(
															['EndLineNumber']),
														$elm$json$Json$Decode$int),
													A2(
														$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
														A3(
															$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
															'startColumn',
															_List_fromArray(
																['StartColumn']),
															$elm$json$Json$Decode$int),
														A2(
															$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
															A3(
																$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
																'startLineNumber',
																_List_fromArray(
																	['StartLineNumber']),
																$elm$json$Json$Decode$int),
															$elm$json$Json$Decode$succeed(
																F4(
																	function (startLineNumber, startColumn, endLineNumber, endColumn) {
																		return {endColumn: endColumn, endLineNumber: endLineNumber, startColumn: startColumn, startLineNumber: startLineNumber};
																	}))))))),
										A2(
											$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
											A3(
												$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
												'range',
												_List_fromArray(
													['Range']),
												A2(
													$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
													A3(
														$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
														'endColumn',
														_List_fromArray(
															['EndColumn']),
														$elm$json$Json$Decode$int),
													A2(
														$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
														A3(
															$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
															'endLineNumber',
															_List_fromArray(
																['EndLineNumber']),
															$elm$json$Json$Decode$int),
														A2(
															$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
															A3(
																$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
																'startColumn',
																_List_fromArray(
																	['StartColumn']),
																$elm$json$Json$Decode$int),
															A2(
																$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
																A3(
																	$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
																	'startLineNumber',
																	_List_fromArray(
																		['StartLineNumber']),
																	$elm$json$Json$Decode$int),
																$elm$json$Json$Decode$succeed(
																	F4(
																		function (startLineNumber, startColumn, endLineNumber, endColumn) {
																			return {endColumn: endColumn, endLineNumber: endLineNumber, startColumn: startColumn, startLineNumber: startLineNumber};
																		}))))))),
											A2(
												$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
												A3(
													$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
													'kind',
													_List_fromArray(
														['Kind']),
													$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_LanguageServiceInterface_SymbolKind),
												A2(
													$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
													A3(
														$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
														'name',
														_List_fromArray(
															['Name']),
														$elm$json$Json$Decode$string),
													$elm$json$Json$Decode$succeed(
														F5(
															function (name, kind, range, selectionRange, children) {
																return {children: children, kind: kind, name: name, range: range, selectionRange: selectionRange};
															})))))))));
					}))
			]));
}
try {
	var $author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_LanguageServiceInterface_DocumentSymbol = $author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$cyclic$jsonDecode_LanguageServiceInterface_DocumentSymbol();
	$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$cyclic$jsonDecode_LanguageServiceInterface_DocumentSymbol = function () {
		return $author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_LanguageServiceInterface_DocumentSymbol;
	};
} catch ($) {
	throw 'Some top-level definitions from `CompilationInterface.GenerateJsonConverters.Generated_JsonConverters` are causing infinite recursion:\n\n  ┌─────┐\n  │    jsonDecode_LanguageServiceInterface_DocumentSymbol\n  └─────┘\n\nThese errors are very tricky, so read https://elm-lang.org/0.19.1/bad-recursion to learn how to fix it!';}
var $author$project$LanguageServiceInterface$ElmPackageFileLocation = F2(
	function (a, b) {
		return {$: 'ElmPackageFileLocation', a: a, b: b};
	});
var $author$project$LanguageServiceInterface$WorkspaceFileLocation = function (a) {
	return {$: 'WorkspaceFileLocation', a: a};
};
var $author$project$LanguageServiceInterface$ElmPackageVersion019Identifer = F2(
	function (a, b) {
		return {$: 'ElmPackageVersion019Identifer', a: a, b: b};
	});
var $author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_LanguageServiceInterface_ElmPackageVersionIdentifer = $elm$json$Json$Decode$oneOf(
	_List_fromArray(
		[
			A2(
			$elm$json$Json$Decode$field,
			'ElmPackageVersion019Identifer',
			$elm$json$Json$Decode$lazy(
				function (_v0) {
					return A3(
						$elm$json$Json$Decode$map2,
						$author$project$LanguageServiceInterface$ElmPackageVersion019Identifer,
						A2($elm$json$Json$Decode$index, 0, $elm$json$Json$Decode$string),
						A2($elm$json$Json$Decode$index, 1, $elm$json$Json$Decode$string));
				}))
		]));
var $author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_LanguageServiceInterface_FileLocation = $elm$json$Json$Decode$oneOf(
	_List_fromArray(
		[
			A2(
			$elm$json$Json$Decode$field,
			'ElmPackageFileLocation',
			$elm$json$Json$Decode$lazy(
				function (_v0) {
					return A3(
						$elm$json$Json$Decode$map2,
						$author$project$LanguageServiceInterface$ElmPackageFileLocation,
						A2($elm$json$Json$Decode$index, 0, $author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_LanguageServiceInterface_ElmPackageVersionIdentifer),
						A2(
							$elm$json$Json$Decode$index,
							1,
							$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode__generic_List($elm$json$Json$Decode$string)));
				})),
			A2(
			$elm$json$Json$Decode$field,
			'WorkspaceFileLocation',
			$elm$json$Json$Decode$lazy(
				function (_v1) {
					return A2(
						$elm$json$Json$Decode$map,
						$author$project$LanguageServiceInterface$WorkspaceFileLocation,
						A2($elm$json$Json$Decode$index, 0, $elm$json$Json$Decode$string));
				}))
		]));
var $author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_LanguageServiceInterface_Response = $elm$json$Json$Decode$oneOf(
	_List_fromArray(
		[
			A2(
			$elm$json$Json$Decode$field,
			'ProvideCompletionItemsResponse',
			$elm$json$Json$Decode$lazy(
				function (_v0) {
					return A2(
						$elm$json$Json$Decode$map,
						$author$project$LanguageServiceInterface$ProvideCompletionItemsResponse,
						A2(
							$elm$json$Json$Decode$index,
							0,
							$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode__generic_List(
								A2(
									$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
									A3(
										$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
										'insertText',
										_List_fromArray(
											['InsertText']),
										$elm$json$Json$Decode$string),
									A2(
										$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
										A3(
											$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
											'documentation',
											_List_fromArray(
												['Documentation']),
											$elm$json$Json$Decode$string),
										A2(
											$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
											A3(
												$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
												'kind',
												_List_fromArray(
													['Kind']),
												$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_Frontend_MonacoEditor_CompletionItemKind),
											A2(
												$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
												A3(
													$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
													'label',
													_List_fromArray(
														['Label']),
													$elm$json$Json$Decode$string),
												$elm$json$Json$Decode$succeed(
													F4(
														function (label, kind, documentation, insertText) {
															return {documentation: documentation, insertText: insertText, kind: kind, label: label};
														})))))))));
				})),
			A2(
			$elm$json$Json$Decode$field,
			'ProvideDefinitionResponse',
			$elm$json$Json$Decode$lazy(
				function (_v1) {
					return A2(
						$elm$json$Json$Decode$map,
						$author$project$LanguageServiceInterface$ProvideDefinitionResponse,
						A2(
							$elm$json$Json$Decode$index,
							0,
							$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode__generic_List(
								A2(
									$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
									A3(
										$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
										'range',
										_List_fromArray(
											['Range']),
										A2(
											$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
											A3(
												$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
												'endColumn',
												_List_fromArray(
													['EndColumn']),
												$elm$json$Json$Decode$int),
											A2(
												$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
												A3(
													$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
													'endLineNumber',
													_List_fromArray(
														['EndLineNumber']),
													$elm$json$Json$Decode$int),
												A2(
													$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
													A3(
														$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
														'startColumn',
														_List_fromArray(
															['StartColumn']),
														$elm$json$Json$Decode$int),
													A2(
														$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
														A3(
															$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
															'startLineNumber',
															_List_fromArray(
																['StartLineNumber']),
															$elm$json$Json$Decode$int),
														$elm$json$Json$Decode$succeed(
															F4(
																function (startLineNumber, startColumn, endLineNumber, endColumn) {
																	return {endColumn: endColumn, endLineNumber: endLineNumber, startColumn: startColumn, startLineNumber: startLineNumber};
																}))))))),
									A2(
										$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
										A3(
											$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
											'fileLocation',
											_List_fromArray(
												['FileLocation']),
											$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_LanguageServiceInterface_FileLocation),
										$elm$json$Json$Decode$succeed(
											F2(
												function (fileLocation, range) {
													return {fileLocation: fileLocation, range: range};
												})))))));
				})),
			A2(
			$elm$json$Json$Decode$field,
			'ProvideHoverResponse',
			$elm$json$Json$Decode$lazy(
				function (_v2) {
					return A2(
						$elm$json$Json$Decode$map,
						$author$project$LanguageServiceInterface$ProvideHoverResponse,
						A2(
							$elm$json$Json$Decode$index,
							0,
							$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode__generic_List($elm$json$Json$Decode$string)));
				})),
			A2(
			$elm$json$Json$Decode$field,
			'TextDocumentReferencesResponse',
			$elm$json$Json$Decode$lazy(
				function (_v3) {
					return A2(
						$elm$json$Json$Decode$map,
						$author$project$LanguageServiceInterface$TextDocumentReferencesResponse,
						A2(
							$elm$json$Json$Decode$index,
							0,
							$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode__generic_List(
								A2(
									$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
									A3(
										$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
										'range',
										_List_fromArray(
											['Range']),
										A2(
											$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
											A3(
												$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
												'endColumn',
												_List_fromArray(
													['EndColumn']),
												$elm$json$Json$Decode$int),
											A2(
												$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
												A3(
													$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
													'endLineNumber',
													_List_fromArray(
														['EndLineNumber']),
													$elm$json$Json$Decode$int),
												A2(
													$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
													A3(
														$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
														'startColumn',
														_List_fromArray(
															['StartColumn']),
														$elm$json$Json$Decode$int),
													A2(
														$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
														A3(
															$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
															'startLineNumber',
															_List_fromArray(
																['StartLineNumber']),
															$elm$json$Json$Decode$int),
														$elm$json$Json$Decode$succeed(
															F4(
																function (startLineNumber, startColumn, endLineNumber, endColumn) {
																	return {endColumn: endColumn, endLineNumber: endLineNumber, startColumn: startColumn, startLineNumber: startLineNumber};
																}))))))),
									A2(
										$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
										A3(
											$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
											'fileLocation',
											_List_fromArray(
												['FileLocation']),
											$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_LanguageServiceInterface_FileLocation),
										$elm$json$Json$Decode$succeed(
											F2(
												function (fileLocation, range) {
													return {fileLocation: fileLocation, range: range};
												})))))));
				})),
			A2(
			$elm$json$Json$Decode$field,
			'TextDocumentRenameResponse',
			$elm$json$Json$Decode$lazy(
				function (_v4) {
					return A2(
						$elm$json$Json$Decode$map,
						$author$project$LanguageServiceInterface$TextDocumentRenameResponse,
						A2(
							$elm$json$Json$Decode$index,
							0,
							$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode__generic_List(
								A2(
									$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
									A3(
										$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
										'edits',
										_List_fromArray(
											['Edits']),
										$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode__generic_List(
											A2(
												$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
												A3(
													$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
													'newText',
													_List_fromArray(
														['NewText']),
													$elm$json$Json$Decode$string),
												A2(
													$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
													A3(
														$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
														'range',
														_List_fromArray(
															['Range']),
														A2(
															$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
															A3(
																$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
																'endColumn',
																_List_fromArray(
																	['EndColumn']),
																$elm$json$Json$Decode$int),
															A2(
																$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
																A3(
																	$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
																	'endLineNumber',
																	_List_fromArray(
																		['EndLineNumber']),
																	$elm$json$Json$Decode$int),
																A2(
																	$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
																	A3(
																		$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
																		'startColumn',
																		_List_fromArray(
																			['StartColumn']),
																		$elm$json$Json$Decode$int),
																	A2(
																		$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
																		A3(
																			$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
																			'startLineNumber',
																			_List_fromArray(
																				['StartLineNumber']),
																			$elm$json$Json$Decode$int),
																		$elm$json$Json$Decode$succeed(
																			F4(
																				function (startLineNumber, startColumn, endLineNumber, endColumn) {
																					return {endColumn: endColumn, endLineNumber: endLineNumber, startColumn: startColumn, startLineNumber: startLineNumber};
																				}))))))),
													$elm$json$Json$Decode$succeed(
														F2(
															function (range, newText) {
																return {newText: newText, range: range};
															})))))),
									A2(
										$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
										A3(
											$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
											'filePath',
											_List_fromArray(
												['FilePath']),
											$elm$json$Json$Decode$string),
										$elm$json$Json$Decode$succeed(
											F2(
												function (filePath, edits) {
													return {edits: edits, filePath: filePath};
												})))))));
				})),
			A2(
			$elm$json$Json$Decode$field,
			'TextDocumentSymbolResponse',
			$elm$json$Json$Decode$lazy(
				function (_v5) {
					return A2(
						$elm$json$Json$Decode$map,
						$author$project$LanguageServiceInterface$TextDocumentSymbolResponse,
						A2(
							$elm$json$Json$Decode$index,
							0,
							$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode__generic_List($author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_LanguageServiceInterface_DocumentSymbol)));
				})),
			A2(
			$elm$json$Json$Decode$field,
			'WorkspaceSummaryResponse',
			$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecodeSucceedWhenNotNull($author$project$LanguageServiceInterface$WorkspaceSummaryResponse))
		]));
var $author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode__generic_Result = F2(
	function (decodeErr, decodeOk) {
		return $elm$json$Json$Decode$oneOf(
			_List_fromArray(
				[
					A2(
					$elm$json$Json$Decode$map,
					$elm$core$Result$Err,
					A2(
						$elm$json$Json$Decode$field,
						'Err',
						A2($elm$json$Json$Decode$index, 0, decodeErr))),
					A2(
					$elm$json$Json$Decode$map,
					$elm$core$Result$Ok,
					A2(
						$elm$json$Json$Decode$field,
						'Ok',
						A2($elm$json$Json$Decode$index, 0, decodeOk))),
					A2(
					$elm$json$Json$Decode$map,
					$elm$core$Result$Err,
					A2($elm$json$Json$Decode$field, 'Err', decodeErr)),
					A2(
					$elm$json$Json$Decode$map,
					$elm$core$Result$Ok,
					A2($elm$json$Json$Decode$field, 'Ok', decodeOk))
				]));
	});
var $author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_3746757247 = A2(
	$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
	A3(
		$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
		'requestId',
		_List_fromArray(
			['RequestId']),
		$elm$json$Json$Decode$string),
	A2(
		$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
		A3(
			$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
			'response',
			_List_fromArray(
				['Response']),
			A2($author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode__generic_Result, $elm$json$Json$Decode$string, $author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_LanguageServiceInterface_Response)),
		$elm$json$Json$Decode$succeed(
			F2(
				function (response, requestId) {
					return {requestId: requestId, response: response};
				}))));
var $author$project$CompilationInterface$GenerateJsonConverters$jsonDecodeLanguageServiceResponse = $author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_3746757247;
var $author$project$Frontend$Main$parseElmFormatResponse = function (response) {
	var _v0 = response.formattedText;
	if (_v0.$ === 'Nothing') {
		return $elm$core$Result$Err(response);
	} else {
		var formattedText = _v0.a;
		return (!response.processOutput.exitCode) ? $elm$core$Result$Ok(formattedText) : $elm$core$Result$Err(response);
	}
};
var $author$project$Frontend$MonacoEditor$ProvideCompletionItemsEvent = function (a) {
	return {$: 'ProvideCompletionItemsEvent', a: a};
};
var $author$project$Frontend$Main$provideCompletionItemsInMonacoEditorCmd = A2(
	$elm$core$Basics$composeR,
	$author$project$Frontend$MonacoEditor$ProvideCompletionItemsEvent,
	A2($elm$core$Basics$composeR, $author$project$CompilationInterface$GenerateJsonConverters$jsonEncodeMessageToMonacoEditor, $author$project$Frontend$Main$sendMessageToMonacoFrame));
var $author$project$Frontend$MonacoEditor$ProvideDefinitionEvent = function (a) {
	return {$: 'ProvideDefinitionEvent', a: a};
};
var $author$project$Frontend$Main$provideDefinitionInMonacoEditorCmd = function (locationsInFiles) {
	var monacoLocations = A2(
		$elm$core$List$filterMap,
		function (locationInFile) {
			var _v0 = locationInFile.fileLocation;
			if (_v0.$ === 'WorkspaceFileLocation') {
				var filePath = _v0.a;
				return $elm$core$Maybe$Just(
					{
						range: locationInFile.range,
						uri: $author$project$Frontend$Main$monacoUriForFilePath(
							_List_fromArray(
								[filePath]))
					});
			} else {
				return $elm$core$Maybe$Nothing;
			}
		},
		locationsInFiles);
	return $author$project$Frontend$Main$sendMessageToMonacoFrame(
		$author$project$CompilationInterface$GenerateJsonConverters$jsonEncodeMessageToMonacoEditor(
			$author$project$Frontend$MonacoEditor$ProvideDefinitionEvent(monacoLocations)));
};
var $author$project$Frontend$MonacoEditor$ProvideHoverEvent = function (a) {
	return {$: 'ProvideHoverEvent', a: a};
};
var $author$project$Frontend$Main$provideHoverInMonacoEditorCmd = A2(
	$elm$core$Basics$composeR,
	$author$project$Frontend$MonacoEditor$ProvideHoverEvent,
	A2($elm$core$Basics$composeR, $author$project$CompilationInterface$GenerateJsonConverters$jsonEncodeMessageToMonacoEditor, $author$project$Frontend$Main$sendMessageToMonacoFrame));
var $author$project$Frontend$MonacoEditor$RevealPositionInCenter = function (a) {
	return {$: 'RevealPositionInCenter', a: a};
};
var $author$project$Frontend$Main$revealPositionInCenterInMonacoEditorCmd = A2(
	$elm$core$Basics$composeR,
	$author$project$Frontend$MonacoEditor$RevealPositionInCenter,
	A2($elm$core$Basics$composeR, $author$project$CompilationInterface$GenerateJsonConverters$jsonEncodeMessageToMonacoEditor, $author$project$Frontend$Main$sendMessageToMonacoFrame));
var $author$project$Frontend$Main$syntaxInspectFileOpenedInEditor = function (stateBefore) {
	var _v0 = $author$project$Frontend$Main$fileOpenedInEditorFromWorkspace(stateBefore);
	if (_v0.$ === 'Nothing') {
		return _Utils_Tuple2(stateBefore, $elm$core$Platform$Cmd$none);
	} else {
		var _v1 = _v0.a;
		var fileOpenedInEditor = _v1.b;
		var parseFileResult = A2(
			$elm$core$Maybe$withDefault,
			$elm$core$Result$Err('Failed to decode file contents as string'),
			A2(
				$elm$core$Maybe$map,
				function (fileContentString) {
					return $elm$core$Result$Ok(
						_Utils_Tuple2(
							fileContentString,
							$author$project$CompileElmApp$parseElmModuleText(fileContentString)));
				},
				$author$project$Frontend$Main$stringFromFileContent(fileOpenedInEditor.asBytes)));
		return _Utils_Tuple2(
			_Utils_update(
				stateBefore,
				{
					compilation: $elm$core$Maybe$Nothing,
					syntaxInspection: $elm$core$Maybe$Just(
						{parseFileResult: parseFileResult})
				}),
			$elm$core$Platform$Cmd$none);
	}
};
var $author$project$Frontend$Main$DependencyLoweringError = function (a) {
	return {$: 'DependencyLoweringError', a: a};
};
var $author$project$Frontend$Main$continueLoweringWithResolvedDependency = F2(
	function (_v0, compilationInProgress) {
		var elmMakeDependency = _v0.a;
		var lastIterationResponse = _v0.b;
		var newDependencies = function () {
			var _v1 = A2($elm$core$Maybe$andThen, $danfishgold$base64_bytes$Base64$toBytes, lastIterationResponse.outputFileContentBase64);
			if (_v1.$ === 'Nothing') {
				return _List_Nil;
			} else {
				var outputFileContent = _v1.a;
				return _List_fromArray(
					[
						_Utils_Tuple2(
						$author$project$CompileElmApp$ElmMakeDependency(elmMakeDependency),
						outputFileContent)
					]);
			}
		}();
		var dependenciesFromCompletedIterations = _Utils_ap(compilationInProgress.dependenciesFromCompletedIterations, newDependencies);
		var loweringIterationComplete = A2($author$project$Frontend$Main$continueLowering, dependenciesFromCompletedIterations, compilationInProgress.origin);
		return _Utils_update(
			compilationInProgress,
			{dependenciesFromCompletedIterations: dependenciesFromCompletedIterations, loweringLastIteration: loweringIterationComplete});
	});
var $author$project$Common$decodeBase64ToString = A2(
	$elm$core$Basics$composeR,
	$danfishgold$base64_bytes$Base64$toBytes,
	$elm$core$Maybe$andThen($author$project$Common$decodeBytesToString));
var $author$project$ElmMakeExecutableFile$CompileErrorsReport = function (a) {
	return {$: 'CompileErrorsReport', a: a};
};
var $author$project$ElmMakeExecutableFile$ElmMakeReportCompileErrorStructure = F3(
	function (path, name, problems) {
		return {name: name, path: path, problems: problems};
	});
var $author$project$ElmMakeExecutableFile$ElmMakeReportProblem = F3(
	function (title, region, message) {
		return {message: message, region: region, title: title};
	});
var $author$project$ElmMakeExecutableFile$ElmMakeReportMessageListItemPlain = function (a) {
	return {$: 'ElmMakeReportMessageListItemPlain', a: a};
};
var $author$project$ElmMakeExecutableFile$ElmMakeReportMessageListItemStyled = function (a) {
	return {$: 'ElmMakeReportMessageListItemStyled', a: a};
};
var $author$project$ElmMakeExecutableFile$ElmMakeReportMessageListItemStyledStructure = F4(
	function (bold, underline, color, string) {
		return {bold: bold, color: color, string: string, underline: underline};
	});
var $elm$json$Json$Decode$bool = _Json_decodeBool;
var $elm$json$Json$Decode$map4 = _Json_map4;
var $elm$json$Json$Decode$nullable = function (decoder) {
	return $elm$json$Json$Decode$oneOf(
		_List_fromArray(
			[
				$elm$json$Json$Decode$null($elm$core$Maybe$Nothing),
				A2($elm$json$Json$Decode$map, $elm$core$Maybe$Just, decoder)
			]));
};
var $author$project$ElmMakeExecutableFile$jsonDecodeElmMakeReportMessageListItemStyled = A5(
	$elm$json$Json$Decode$map4,
	$author$project$ElmMakeExecutableFile$ElmMakeReportMessageListItemStyledStructure,
	A2($elm$json$Json$Decode$field, 'bold', $elm$json$Json$Decode$bool),
	A2($elm$json$Json$Decode$field, 'underline', $elm$json$Json$Decode$bool),
	A2(
		$elm$json$Json$Decode$field,
		'color',
		$elm$json$Json$Decode$nullable($elm$json$Json$Decode$string)),
	A2($elm$json$Json$Decode$field, 'string', $elm$json$Json$Decode$string));
var $author$project$ElmMakeExecutableFile$jsonDecodeElmMakeReportMessageListItem = $elm$json$Json$Decode$oneOf(
	_List_fromArray(
		[
			A2($elm$json$Json$Decode$map, $author$project$ElmMakeExecutableFile$ElmMakeReportMessageListItemPlain, $elm$json$Json$Decode$string),
			A2($elm$json$Json$Decode$map, $author$project$ElmMakeExecutableFile$ElmMakeReportMessageListItemStyled, $author$project$ElmMakeExecutableFile$jsonDecodeElmMakeReportMessageListItemStyled)
		]));
var $author$project$ElmMakeExecutableFile$ElmMakeReportRegion = F2(
	function (start, end) {
		return {end: end, start: start};
	});
var $author$project$ElmMakeExecutableFile$ElmMakeReportLocation = F2(
	function (line, column) {
		return {column: column, line: line};
	});
var $author$project$ElmMakeExecutableFile$jsonDecodeElmMakeReportLocation = A3(
	$elm$json$Json$Decode$map2,
	$author$project$ElmMakeExecutableFile$ElmMakeReportLocation,
	A2($elm$json$Json$Decode$field, 'line', $elm$json$Json$Decode$int),
	A2($elm$json$Json$Decode$field, 'column', $elm$json$Json$Decode$int));
var $author$project$ElmMakeExecutableFile$jsonDecodeElmMakeReportRegion = A3(
	$elm$json$Json$Decode$map2,
	$author$project$ElmMakeExecutableFile$ElmMakeReportRegion,
	A2($elm$json$Json$Decode$field, 'start', $author$project$ElmMakeExecutableFile$jsonDecodeElmMakeReportLocation),
	A2($elm$json$Json$Decode$field, 'end', $author$project$ElmMakeExecutableFile$jsonDecodeElmMakeReportLocation));
var $elm$json$Json$Decode$map3 = _Json_map3;
var $author$project$ElmMakeExecutableFile$jsonDecodeElmMakeReportProblem = A4(
	$elm$json$Json$Decode$map3,
	$author$project$ElmMakeExecutableFile$ElmMakeReportProblem,
	A2($elm$json$Json$Decode$field, 'title', $elm$json$Json$Decode$string),
	A2($elm$json$Json$Decode$field, 'region', $author$project$ElmMakeExecutableFile$jsonDecodeElmMakeReportRegion),
	A2(
		$elm$json$Json$Decode$field,
		'message',
		$elm$json$Json$Decode$list($author$project$ElmMakeExecutableFile$jsonDecodeElmMakeReportMessageListItem)));
var $author$project$ElmMakeExecutableFile$jsonDecodeElmMakeReportCompileError = A4(
	$elm$json$Json$Decode$map3,
	$author$project$ElmMakeExecutableFile$ElmMakeReportCompileErrorStructure,
	A2($elm$json$Json$Decode$field, 'path', $elm$json$Json$Decode$string),
	A2($elm$json$Json$Decode$field, 'name', $elm$json$Json$Decode$string),
	A2(
		$elm$json$Json$Decode$field,
		'problems',
		$elm$json$Json$Decode$list($author$project$ElmMakeExecutableFile$jsonDecodeElmMakeReportProblem)));
var $author$project$ElmMakeExecutableFile$jsonDecodeElmMakeReportCompileErrors = A2(
	$elm$json$Json$Decode$map,
	$author$project$ElmMakeExecutableFile$CompileErrorsReport,
	A2(
		$elm$json$Json$Decode$field,
		'errors',
		$elm$json$Json$Decode$list($author$project$ElmMakeExecutableFile$jsonDecodeElmMakeReportCompileError)));
var $author$project$ElmMakeExecutableFile$ErrorReport = function (a) {
	return {$: 'ErrorReport', a: a};
};
var $author$project$ElmMakeExecutableFile$ErrorReportStructure = F3(
	function (path, title, message) {
		return {message: message, path: path, title: title};
	});
var $author$project$ElmMakeExecutableFile$jsonDecodeElmMakeReportError = A2(
	$elm$json$Json$Decode$map,
	$author$project$ElmMakeExecutableFile$ErrorReport,
	A4(
		$elm$json$Json$Decode$map3,
		$author$project$ElmMakeExecutableFile$ErrorReportStructure,
		A2(
			$elm$json$Json$Decode$field,
			'path',
			$elm$json$Json$Decode$nullable($elm$json$Json$Decode$string)),
		A2($elm$json$Json$Decode$field, 'title', $elm$json$Json$Decode$string),
		A2(
			$elm$json$Json$Decode$field,
			'message',
			$elm$json$Json$Decode$list($author$project$ElmMakeExecutableFile$jsonDecodeElmMakeReportMessageListItem))));
var $author$project$ElmMakeExecutableFile$typesDecoders = $elm$core$Dict$fromList(
	_List_fromArray(
		[
			_Utils_Tuple2('error', $author$project$ElmMakeExecutableFile$jsonDecodeElmMakeReportError),
			_Utils_Tuple2('compile-errors', $author$project$ElmMakeExecutableFile$jsonDecodeElmMakeReportCompileErrors)
		]));
var $author$project$ElmMakeExecutableFile$jsonDecodeElmMakeReport = A2(
	$elm$json$Json$Decode$andThen,
	function (type_) {
		return A2(
			$elm$core$Maybe$withDefault,
			$elm$json$Json$Decode$fail('Unknown report type: \'' + (type_ + '\'')),
			A2($elm$core$Dict$get, type_, $author$project$ElmMakeExecutableFile$typesDecoders));
	},
	A2($elm$json$Json$Decode$field, 'type', $elm$json$Json$Decode$string));
var $author$project$Frontend$Main$updateCompilationForElmMakeRequestResponse = F3(
	function (elmMakeRequest, httpResponse, compilationBefore) {
		var elmMakeResult = A2(
			$elm$core$Result$map,
			function (elmMakeResponse) {
				var reportFromJson = function () {
					var _v3 = A2($elm$json$Json$Decode$decodeString, $elm$json$Json$Decode$value, elmMakeResponse.reportJsonProcessOutput.standardError);
					if (_v3.$ === 'Err') {
						return $elm$core$Maybe$Nothing;
					} else {
						var elmMakeReportJson = _v3.a;
						return $elm$core$Maybe$Just(
							A2(
								$elm$core$Result$mapError,
								$elm$json$Json$Decode$errorToString,
								A2($elm$json$Json$Decode$decodeValue, $author$project$ElmMakeExecutableFile$jsonDecodeElmMakeReport, elmMakeReportJson)));
					}
				}();
				var compiledHtmlDocument = function () {
					var _v2 = elmMakeResponse.outputFileContentBase64;
					if (_v2.$ === 'Nothing') {
						return $elm$core$Maybe$Nothing;
					} else {
						var outputFileContentBase64 = _v2.a;
						return $elm$core$Maybe$Just(
							A2(
								$elm$core$Maybe$withDefault,
								'Error decoding base64: ' + outputFileContentBase64,
								$author$project$Common$decodeBase64ToString(outputFileContentBase64)));
					}
				}();
				return {compiledHtmlDocument: compiledHtmlDocument, reportFromJson: reportFromJson, response: elmMakeResponse};
			},
			httpResponse);
		var _v0 = compilationBefore.loweringLastIteration;
		if (_v0.$ === 'LoweringComplete') {
			var loweringComplete = _v0.a;
			return _Utils_eq(elmMakeRequest, loweringComplete.elmMakeRequest) ? _Utils_Tuple2(
				_Utils_update(
					compilationBefore,
					{
						loweringLastIteration: $author$project$Frontend$Main$LoweringComplete(
							_Utils_update(
								loweringComplete,
								{
									elmMakeResult: $elm$core$Maybe$Just(elmMakeResult)
								}))
					}),
				$elm$core$Maybe$Nothing) : _Utils_Tuple2(compilationBefore, $elm$core$Maybe$Nothing);
		} else {
			var loweringContinue = _v0.a;
			if (_Utils_eq(elmMakeRequest, loweringContinue.elmMakeRequest)) {
				if (elmMakeResult.$ === 'Err') {
					var elmMakeErr = elmMakeResult.a;
					return _Utils_Tuple2(
						_Utils_update(
							compilationBefore,
							{
								loweringLastIteration: $author$project$Frontend$Main$LoweringComplete(
									{
										elmMakeRequest: compilationBefore.origin.requestFromUser,
										elmMakeResult: $elm$core$Maybe$Nothing,
										loweringResult: $elm$core$Result$Err(
											$author$project$Frontend$Main$DependencyLoweringError(elmMakeErr))
									})
							}),
						$elm$core$Maybe$Nothing);
				} else {
					var elmMakeOk = elmMakeResult.a;
					var compilation = A2(
						$author$project$Frontend$Main$continueLoweringWithResolvedDependency,
						_Utils_Tuple2(loweringContinue.forDependencyElmMakeRequest, elmMakeOk.response),
						compilationBefore);
					return _Utils_Tuple2(
						compilation,
						$elm$core$Maybe$Just(
							$author$project$Frontend$Main$requestToBackendCmdFromCompilationInProgress(compilation)));
				}
			} else {
				return _Utils_Tuple2(compilationBefore, $elm$core$Maybe$Nothing);
			}
		}
	});
var $elm_community$list_extra$List$Extra$find = F2(
	function (predicate, list) {
		find:
		while (true) {
			if (!list.b) {
				return $elm$core$Maybe$Nothing;
			} else {
				var first = list.a;
				var rest = list.b;
				if (predicate(first)) {
					return $elm$core$Maybe$Just(first);
				} else {
					var $temp$predicate = predicate,
						$temp$list = rest;
					predicate = $temp$predicate;
					list = $temp$list;
					continue find;
				}
			}
		}
	});
var $author$project$Frontend$Main$findFileLocationFromUri = F2(
	function (uri, workspaceState) {
		var _v0 = A2(
			$elm_community$list_extra$List$Extra$find,
			function (_v1) {
				var filePath = _v1.a;
				return _Utils_eq(
					$author$project$Frontend$Main$monacoUriForFilePath(filePath),
					uri);
			},
			$author$project$FileTree$flatListOfBlobsFromFileTreeNode(workspaceState.fileTree));
		if (_v0.$ === 'Nothing') {
			return $elm$core$Maybe$Nothing;
		} else {
			var _v2 = _v0.a;
			var filePath = _v2.a;
			var _v3 = $elm$core$List$reverse(filePath);
			if (!_v3.b) {
				return $elm$core$Maybe$Nothing;
			} else {
				var fileName = _v3.a;
				var directoryPathReversed = _v3.b;
				return $elm$core$Maybe$Just(
					_Utils_Tuple2(
						$elm$core$List$reverse(directoryPathReversed),
						fileName));
			}
		}
	});
var $author$project$Frontend$Main$updateForOpenCodeEditorRequest = F2(
	function (request, workspaceStateBefore) {
		var _v0 = A2($author$project$Frontend$Main$findFileLocationFromUri, request.uri, workspaceStateBefore);
		if (_v0.$ === 'Nothing') {
			return _Utils_Tuple2(workspaceStateBefore, $elm$core$Platform$Cmd$none);
		} else {
			var fileLocation = _v0.a;
			return _Utils_Tuple2(
				_Utils_update(
					workspaceStateBefore,
					{
						editing: $elm$core$Maybe$Just(
							{fileLocation: fileLocation, openPosition: request.position})
					}),
				$elm$core$Platform$Cmd$none);
		}
	});
var $author$project$LanguageServiceInterface$ProvideCompletionItemsRequest = function (a) {
	return {$: 'ProvideCompletionItemsRequest', a: a};
};
var $author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonEncode_LanguageServiceInterface_ElmPackageVersionIdentifer = function (valueToEncode) {
	var tagArgument0 = valueToEncode.a;
	var tagArgument1 = valueToEncode.b;
	return $elm$json$Json$Encode$object(
		_List_fromArray(
			[
				_Utils_Tuple2(
				'ElmPackageVersion019Identifer',
				A2(
					$elm$json$Json$Encode$list,
					$elm$core$Basics$identity,
					_List_fromArray(
						[
							$elm$json$Json$Encode$string(tagArgument0),
							$elm$json$Json$Encode$string(tagArgument1)
						])))
			]));
};
var $author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonEncode_LanguageServiceInterface_FileLocation = function (valueToEncode) {
	if (valueToEncode.$ === 'ElmPackageFileLocation') {
		var tagArgument0 = valueToEncode.a;
		var tagArgument1 = valueToEncode.b;
		return $elm$json$Json$Encode$object(
			_List_fromArray(
				[
					_Utils_Tuple2(
					'ElmPackageFileLocation',
					A2(
						$elm$json$Json$Encode$list,
						$elm$core$Basics$identity,
						_List_fromArray(
							[
								$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonEncode_LanguageServiceInterface_ElmPackageVersionIdentifer(tagArgument0),
								A2(
								$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonEncode__generic_List,
								function (type_arg) {
									return $elm$json$Json$Encode$string(type_arg);
								},
								tagArgument1)
							])))
				]));
	} else {
		var tagArgument0 = valueToEncode.a;
		return $elm$json$Json$Encode$object(
			_List_fromArray(
				[
					_Utils_Tuple2(
					'WorkspaceFileLocation',
					A2(
						$elm$json$Json$Encode$list,
						$elm$core$Basics$identity,
						_List_fromArray(
							[
								$elm$json$Json$Encode$string(tagArgument0)
							])))
				]));
	}
};
var $author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonEncode__generic_Maybe = F2(
	function (encodeJust, valueToEncode) {
		if (valueToEncode.$ === 'Nothing') {
			return $elm$json$Json$Encode$object(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'Nothing',
						A2($elm$json$Json$Encode$list, $elm$core$Basics$identity, _List_Nil))
					]));
		} else {
			var just = valueToEncode.a;
			return $elm$json$Json$Encode$object(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'Just',
						A2(
							$elm$json$Json$Encode$list,
							encodeJust,
							_List_fromArray(
								[just])))
					]));
		}
	});
var $author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonEncode_LanguageServiceInterface_Request = function (valueToEncode) {
	switch (valueToEncode.$) {
		case 'AddElmPackageVersionRequest':
			var tagArgument0 = valueToEncode.a;
			var tagArgument1 = valueToEncode.b;
			return $elm$json$Json$Encode$object(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'AddElmPackageVersionRequest',
						A2(
							$elm$json$Json$Encode$list,
							$elm$core$Basics$identity,
							_List_fromArray(
								[
									$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonEncode_LanguageServiceInterface_ElmPackageVersionIdentifer(tagArgument0),
									A2(
									$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonEncode__generic_List,
									function (type_arg) {
										return A2(
											$elm$json$Json$Encode$list,
											$elm$core$Basics$identity,
											_List_fromArray(
												[
													A2(
													$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonEncode__generic_List,
													function (type_arg_) {
														return $elm$json$Json$Encode$string(type_arg_);
													},
													function (_v1) {
														var item_0 = _v1.a;
														var item_1 = _v1.b;
														return item_0;
													}(type_arg)),
													$elm$json$Json$Encode$object(
													_List_fromArray(
														[
															_Utils_Tuple2(
															'asBase64',
															$elm$json$Json$Encode$string(
																function (_v2) {
																	var item_0 = _v2.a;
																	var item_1 = _v2.b;
																	return item_1;
																}(type_arg).asBase64)),
															_Utils_Tuple2(
															'asText',
															A2(
																$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonEncode__generic_Maybe,
																function (type_arg_) {
																	return $elm$json$Json$Encode$string(type_arg_);
																},
																function (_v3) {
																	var item_0 = _v3.a;
																	var item_1 = _v3.b;
																	return item_1;
																}(type_arg).asText))
														]))
												]));
									},
									tagArgument1)
								])))
					]));
		case 'AddWorkspaceFileRequest':
			var tagArgument0 = valueToEncode.a;
			var tagArgument1 = valueToEncode.b;
			return $elm$json$Json$Encode$object(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'AddWorkspaceFileRequest',
						A2(
							$elm$json$Json$Encode$list,
							$elm$core$Basics$identity,
							_List_fromArray(
								[
									$elm$json$Json$Encode$string(tagArgument0),
									$elm$json$Json$Encode$object(
									_List_fromArray(
										[
											_Utils_Tuple2(
											'asBase64',
											$elm$json$Json$Encode$string(tagArgument1.asBase64)),
											_Utils_Tuple2(
											'asText',
											A2(
												$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonEncode__generic_Maybe,
												function (type_arg) {
													return $elm$json$Json$Encode$string(type_arg);
												},
												tagArgument1.asText))
										]))
								])))
					]));
		case 'DeleteWorkspaceFileRequest':
			var tagArgument0 = valueToEncode.a;
			return $elm$json$Json$Encode$object(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'DeleteWorkspaceFileRequest',
						A2(
							$elm$json$Json$Encode$list,
							$elm$core$Basics$identity,
							_List_fromArray(
								[
									$elm$json$Json$Encode$string(tagArgument0)
								])))
					]));
		case 'ProvideCompletionItemsRequest':
			var tagArgument0 = valueToEncode.a;
			return $elm$json$Json$Encode$object(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'ProvideCompletionItemsRequest',
						A2(
							$elm$json$Json$Encode$list,
							$elm$core$Basics$identity,
							_List_fromArray(
								[
									$elm$json$Json$Encode$object(
									_List_fromArray(
										[
											_Utils_Tuple2(
											'filePathOpenedInEditor',
											$elm$json$Json$Encode$string(tagArgument0.filePathOpenedInEditor)),
											_Utils_Tuple2(
											'cursorLineNumber',
											$elm$json$Json$Encode$int(tagArgument0.cursorLineNumber)),
											_Utils_Tuple2(
											'cursorColumn',
											$elm$json$Json$Encode$int(tagArgument0.cursorColumn))
										]))
								])))
					]));
		case 'ProvideDefinitionRequest':
			var tagArgument0 = valueToEncode.a;
			return $elm$json$Json$Encode$object(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'ProvideDefinitionRequest',
						A2(
							$elm$json$Json$Encode$list,
							$elm$core$Basics$identity,
							_List_fromArray(
								[
									$elm$json$Json$Encode$object(
									_List_fromArray(
										[
											_Utils_Tuple2(
											'fileLocation',
											$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonEncode_LanguageServiceInterface_FileLocation(tagArgument0.fileLocation)),
											_Utils_Tuple2(
											'positionLineNumber',
											$elm$json$Json$Encode$int(tagArgument0.positionLineNumber)),
											_Utils_Tuple2(
											'positionColumn',
											$elm$json$Json$Encode$int(tagArgument0.positionColumn))
										]))
								])))
					]));
		case 'ProvideHoverRequest':
			var tagArgument0 = valueToEncode.a;
			return $elm$json$Json$Encode$object(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'ProvideHoverRequest',
						A2(
							$elm$json$Json$Encode$list,
							$elm$core$Basics$identity,
							_List_fromArray(
								[
									$elm$json$Json$Encode$object(
									_List_fromArray(
										[
											_Utils_Tuple2(
											'fileLocation',
											$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonEncode_LanguageServiceInterface_FileLocation(tagArgument0.fileLocation)),
											_Utils_Tuple2(
											'positionLineNumber',
											$elm$json$Json$Encode$int(tagArgument0.positionLineNumber)),
											_Utils_Tuple2(
											'positionColumn',
											$elm$json$Json$Encode$int(tagArgument0.positionColumn))
										]))
								])))
					]));
		case 'TextDocumentReferencesRequest':
			var tagArgument0 = valueToEncode.a;
			return $elm$json$Json$Encode$object(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'TextDocumentReferencesRequest',
						A2(
							$elm$json$Json$Encode$list,
							$elm$core$Basics$identity,
							_List_fromArray(
								[
									$elm$json$Json$Encode$object(
									_List_fromArray(
										[
											_Utils_Tuple2(
											'fileLocation',
											$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonEncode_LanguageServiceInterface_FileLocation(tagArgument0.fileLocation)),
											_Utils_Tuple2(
											'positionLineNumber',
											$elm$json$Json$Encode$int(tagArgument0.positionLineNumber)),
											_Utils_Tuple2(
											'positionColumn',
											$elm$json$Json$Encode$int(tagArgument0.positionColumn))
										]))
								])))
					]));
		case 'TextDocumentRenameRequest':
			var tagArgument0 = valueToEncode.a;
			return $elm$json$Json$Encode$object(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'TextDocumentRenameRequest',
						A2(
							$elm$json$Json$Encode$list,
							$elm$core$Basics$identity,
							_List_fromArray(
								[
									$elm$json$Json$Encode$object(
									_List_fromArray(
										[
											_Utils_Tuple2(
											'filePath',
											$elm$json$Json$Encode$string(tagArgument0.filePath)),
											_Utils_Tuple2(
											'positionLineNumber',
											$elm$json$Json$Encode$int(tagArgument0.positionLineNumber)),
											_Utils_Tuple2(
											'positionColumn',
											$elm$json$Json$Encode$int(tagArgument0.positionColumn)),
											_Utils_Tuple2(
											'newName',
											$elm$json$Json$Encode$string(tagArgument0.newName))
										]))
								])))
					]));
		default:
			var tagArgument0 = valueToEncode.a;
			return $elm$json$Json$Encode$object(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'TextDocumentSymbolRequest',
						A2(
							$elm$json$Json$Encode$list,
							$elm$core$Basics$identity,
							_List_fromArray(
								[
									$elm$json$Json$Encode$string(tagArgument0)
								])))
					]));
	}
};
var $author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonEncode_423741305 = function (valueToEncode) {
	return $elm$json$Json$Encode$object(
		_List_fromArray(
			[
				_Utils_Tuple2(
				'request',
				$elm$json$Json$Encode$object(
					_List_fromArray(
						[
							_Utils_Tuple2(
							'workspace',
							A2(
								$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonEncode_FileTree_FileTreeNode,
								function (type_arg) {
									return $elm$json$Json$Encode$object(
										_List_fromArray(
											[
												_Utils_Tuple2(
												'asBase64',
												$elm$json$Json$Encode$string(type_arg.asBase64)),
												_Utils_Tuple2(
												'asText',
												A2(
													$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonEncode__generic_Maybe,
													function (type_arg_) {
														return $elm$json$Json$Encode$string(type_arg_);
													},
													type_arg.asText))
											]));
								},
								valueToEncode.request.workspace)),
							_Utils_Tuple2(
							'request',
							$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonEncode_LanguageServiceInterface_Request(valueToEncode.request.request))
						]))),
				_Utils_Tuple2(
				'id',
				$elm$json$Json$Encode$string(valueToEncode.id))
			]));
};
var $author$project$CompilationInterface$GenerateJsonConverters$jsonEncodeLanguageServiceRequestInWorkspace = $author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonEncode_423741305;
var $author$project$Frontend$Main$sendRequestToLanguageService = _Platform_outgoingPort('sendRequestToLanguageService', $elm$core$Basics$identity);
var $author$project$Frontend$Main$workspaceForLangServiceRequest = function (workspace) {
	return A2(
		$author$project$FileTree$mapBlobs,
		function (_v0) {
			var asBytes = _v0.asBytes;
			var asBase64 = _v0.asBase64;
			return {
				asBase64: asBase64,
				asText: $author$project$Common$decodeBytesToString(asBytes)
			};
		},
		workspace.fileTree);
};
var $author$project$Frontend$Main$updateForRequestToLanguageService = F2(
	function (request, workspaceStateBefore) {
		return _Utils_Tuple2(
			workspaceStateBefore,
			$author$project$Frontend$Main$sendRequestToLanguageService(
				$author$project$CompilationInterface$GenerateJsonConverters$jsonEncodeLanguageServiceRequestInWorkspace(
					{
						id: '',
						request: {
							request: request,
							workspace: $author$project$Frontend$Main$workspaceForLangServiceRequest(workspaceStateBefore)
						}
					})));
	});
var $author$project$Frontend$Main$updateToProvideCompletionItemsRequest = F2(
	function (request, workspaceStateBefore) {
		var _v0 = workspaceStateBefore.editing;
		if (_v0.$ === 'Nothing') {
			return _Utils_Tuple2(workspaceStateBefore, $elm$core$Platform$Cmd$none);
		} else {
			var editing = _v0.a;
			var _v1 = editing.fileLocation;
			var directoryPath = _v1.a;
			var fileName = _v1.b;
			return A2(
				$author$project$Frontend$Main$updateForRequestToLanguageService,
				$author$project$LanguageServiceInterface$ProvideCompletionItemsRequest(
					{
						cursorColumn: request.cursorColumn,
						cursorLineNumber: request.cursorLineNumber,
						filePathOpenedInEditor: A2(
							$elm$core$String$join,
							'/',
							$elm$core$List$concat(
								_List_fromArray(
									[
										directoryPath,
										_List_fromArray(
										[fileName])
									])))
					}),
				workspaceStateBefore);
		}
	});
var $author$project$LanguageServiceInterface$ProvideDefinitionRequest = function (a) {
	return {$: 'ProvideDefinitionRequest', a: a};
};
var $author$project$Frontend$Main$fileLocationFromPathItems = function (pathItems) {
	return $author$project$LanguageServiceInterface$WorkspaceFileLocation(
		A2($elm$core$String$join, '/', pathItems));
};
var $author$project$Frontend$Main$updateToProvideDefinitionRequest = F2(
	function (request, workspaceStateBefore) {
		var _v0 = workspaceStateBefore.editing;
		if (_v0.$ === 'Nothing') {
			return _Utils_Tuple2(workspaceStateBefore, $elm$core$Platform$Cmd$none);
		} else {
			var editing = _v0.a;
			var _v1 = editing.fileLocation;
			var directoryPath = _v1.a;
			var fileName = _v1.b;
			return A2(
				$author$project$Frontend$Main$updateForRequestToLanguageService,
				$author$project$LanguageServiceInterface$ProvideDefinitionRequest(
					{
						fileLocation: $author$project$Frontend$Main$fileLocationFromPathItems(
							$elm$core$List$concat(
								_List_fromArray(
									[
										directoryPath,
										_List_fromArray(
										[fileName])
									]))),
						positionColumn: request.positionColumn,
						positionLineNumber: request.positionLineNumber
					}),
				workspaceStateBefore);
		}
	});
var $author$project$LanguageServiceInterface$ProvideHoverRequest = function (a) {
	return {$: 'ProvideHoverRequest', a: a};
};
var $author$project$Frontend$Main$updateToProvideHoverRequest = F2(
	function (request, workspaceStateBefore) {
		var _v0 = workspaceStateBefore.editing;
		if (_v0.$ === 'Nothing') {
			return _Utils_Tuple2(workspaceStateBefore, $elm$core$Platform$Cmd$none);
		} else {
			var editing = _v0.a;
			var _v1 = editing.fileLocation;
			var directoryPath = _v1.a;
			var fileName = _v1.b;
			return A2(
				$author$project$Frontend$Main$updateForRequestToLanguageService,
				$author$project$LanguageServiceInterface$ProvideHoverRequest(
					{
						fileLocation: $author$project$Frontend$Main$fileLocationFromPathItems(
							$elm$core$List$concat(
								_List_fromArray(
									[
										directoryPath,
										_List_fromArray(
										[fileName])
									]))),
						positionColumn: request.positionColumn,
						positionLineNumber: request.positionLineNumber
					}),
				workspaceStateBefore);
		}
	});
var $author$project$Frontend$Main$updateWorkspaceWithoutCmdToUpdateEditor = F3(
	function (updateConfig, event, stateBefore) {
		updateWorkspaceWithoutCmdToUpdateEditor:
		while (true) {
			switch (event.$) {
				case 'UserInputOpenFileInEditor':
					var fileLocation = event.a;
					var _v1 = fileLocation;
					var directoryPath = _v1.a;
					var fileName = _v1.b;
					return _Utils_eq(
						A2(
							$author$project$FileTree$getBlobAtPathFromFileTree,
							_Utils_ap(
								directoryPath,
								_List_fromArray(
									[fileName])),
							stateBefore.fileTree),
						$elm$core$Maybe$Nothing) ? _Utils_Tuple2(stateBefore, $elm$core$Platform$Cmd$none) : _Utils_Tuple2(
						function () {
							var editing = stateBefore.editing;
							return _Utils_update(
								stateBefore,
								{
									editing: $elm$core$Maybe$Just(
										{fileLocation: fileLocation, openPosition: $author$project$Frontend$Main$defaultEditorOpenPosition})
								});
						}(),
						$elm$core$Platform$Cmd$none);
				case 'UserInputChangeTextInEditor':
					var editorScope = event.a;
					var inputText = event.b;
					return _Utils_Tuple2(
						function () {
							var _v2 = stateBefore.editing;
							if (_v2.$ === 'Nothing') {
								return stateBefore;
							} else {
								var editing = _v2.a;
								var _v3 = editing.fileLocation;
								var directoryPath = _v3.a;
								var fileName = _v3.b;
								var expectedUri = A2($author$project$Frontend$Main$monacoUriForDirectoryPathAndFileName, directoryPath, fileName);
								var filePath = _Utils_ap(
									directoryPath,
									_List_fromArray(
										[fileName]));
								return (!_Utils_eq(editorScope.uri, expectedUri)) ? stateBefore : _Utils_update(
									stateBefore,
									{
										elmFormat: $elm$core$Maybe$Nothing,
										fileTree: A2(
											$author$project$FileTreeInWorkspace$setBlobAtPathInSortedFileTreeFromBytes,
											_Utils_Tuple2(
												filePath,
												$author$project$Frontend$Main$fileContentFromString(inputText)),
											stateBefore.fileTree),
										lastTextReceivedFromEditor: $elm$core$Maybe$Just(inputText)
									});
							}
						}(),
						$elm$core$Platform$Cmd$none);
				case 'UserInputRevealPositionInEditor':
					var revealPositionInEditor = event.a;
					return _Utils_Tuple2(
						stateBefore,
						function () {
							var _v4 = $author$project$Frontend$Main$fileOpenedInEditorFromWorkspace(stateBefore);
							if (_v4.$ === 'Nothing') {
								return $elm$core$Platform$Cmd$none;
							} else {
								var _v5 = _v4.a;
								var editing = _v5.a;
								return _Utils_eq(editing.fileLocation, revealPositionInEditor.fileLocation) ? $author$project$Frontend$Main$revealPositionInCenterInMonacoEditorCmd(
									{column: revealPositionInEditor.column, lineNumber: revealPositionInEditor.lineNumber}) : $elm$core$Platform$Cmd$none;
							}
						}());
				case 'MonacoEditorEvent':
					var monacoEditorEvent = event.a;
					var _v6 = A2($elm$json$Json$Decode$decodeValue, $author$project$CompilationInterface$GenerateJsonConverters$jsonDecodeMessageFromMonacoEditor, monacoEditorEvent);
					if (_v6.$ === 'Err') {
						var decodeError = _v6.a;
						return _Utils_Tuple2(
							_Utils_update(
								stateBefore,
								{
									decodeMessageFromMonacoEditorError: $elm$core$Maybe$Just(decodeError)
								}),
							$elm$core$Platform$Cmd$none);
					} else {
						var decodedMonacoEditorEvent = _v6.a;
						switch (decodedMonacoEditorEvent.$) {
							case 'DidChangeContentEvent':
								var content = decodedMonacoEditorEvent.a;
								return A3(
									$author$project$Frontend$Main$updateWorkspaceWithoutCmdToUpdateEditor,
									updateConfig,
									A2(
										$author$project$Frontend$Main$UserInputChangeTextInEditor,
										{uri: content.uri},
										content.textModelValue),
									stateBefore);
							case 'CompletedSetupEvent':
								return _Utils_Tuple2(
									_Utils_update(
										stateBefore,
										{lastTextReceivedFromEditor: $elm$core$Maybe$Nothing}),
									$elm$core$Platform$Cmd$none);
							case 'EditorActionCloseEditorEvent':
								var $temp$updateConfig = updateConfig,
									$temp$event = $author$project$Frontend$Main$UserInputCloseEditor,
									$temp$stateBefore = stateBefore;
								updateConfig = $temp$updateConfig;
								event = $temp$event;
								stateBefore = $temp$stateBefore;
								continue updateWorkspaceWithoutCmdToUpdateEditor;
							case 'EditorActionFormatDocumentEvent':
								var $temp$updateConfig = updateConfig,
									$temp$event = $author$project$Frontend$Main$UserInputFormat,
									$temp$stateBefore = stateBefore;
								updateConfig = $temp$updateConfig;
								event = $temp$event;
								stateBefore = $temp$stateBefore;
								continue updateWorkspaceWithoutCmdToUpdateEditor;
							case 'EditorActionCompileEvent':
								var $temp$updateConfig = updateConfig,
									$temp$event = $author$project$Frontend$Main$UserInputCompile,
									$temp$stateBefore = stateBefore;
								updateConfig = $temp$updateConfig;
								event = $temp$event;
								stateBefore = $temp$stateBefore;
								continue updateWorkspaceWithoutCmdToUpdateEditor;
							case 'EditorActionInspectSyntaxEvent':
								var $temp$updateConfig = updateConfig,
									$temp$event = $author$project$Frontend$Main$UserInputInspectSyntax,
									$temp$stateBefore = stateBefore;
								updateConfig = $temp$updateConfig;
								event = $temp$event;
								stateBefore = $temp$stateBefore;
								continue updateWorkspaceWithoutCmdToUpdateEditor;
							case 'RequestCompletionItemsEvent':
								var requestCompletionItems = decodedMonacoEditorEvent.a;
								return A2($author$project$Frontend$Main$updateToProvideCompletionItemsRequest, requestCompletionItems, stateBefore);
							case 'RequestHoverEvent':
								var requestHoverEvent = decodedMonacoEditorEvent.a;
								return A2($author$project$Frontend$Main$updateToProvideHoverRequest, requestHoverEvent, stateBefore);
							case 'RequestDefinitionEvent':
								var requestDefinitionEvent = decodedMonacoEditorEvent.a;
								return A2($author$project$Frontend$Main$updateToProvideDefinitionRequest, requestDefinitionEvent, stateBefore);
							case 'OpenCodeEditorEvent':
								var openCodeEditorEvent = decodedMonacoEditorEvent.a;
								return A2($author$project$Frontend$Main$updateForOpenCodeEditorRequest, openCodeEditorEvent, stateBefore);
							default:
								return _Utils_Tuple2(stateBefore, $elm$core$Platform$Cmd$none);
						}
					}
				case 'UserInputFormat':
					var _v8 = $author$project$Frontend$Main$elmFormatCmdFromState(stateBefore);
					if (_v8.$ === 'Nothing') {
						return _Utils_Tuple2(stateBefore, $elm$core$Platform$Cmd$none);
					} else {
						var _v9 = _v8.a;
						var moduleText = _v9.a;
						var elmFormatCmd = _v9.b;
						return _Utils_Tuple2(
							_Utils_update(
								stateBefore,
								{
									elmFormat: $elm$core$Maybe$Just(
										$author$project$Frontend$Main$ElmFormatInProgress(
											{inputModuleText: moduleText, startTime: updateConfig.time}))
								}),
							elmFormatCmd);
					}
				case 'UserInputCancelFormatting':
					return _Utils_Tuple2(
						_Utils_update(
							stateBefore,
							{elmFormat: $elm$core$Maybe$Nothing}),
						$elm$core$Platform$Cmd$none);
				case 'UserInputCompile':
					return $author$project$Frontend$Main$compileFileOpenedInEditor(
						_Utils_update(
							stateBefore,
							{viewEnlargedPane: $elm$core$Maybe$Nothing}));
				case 'UserInputInspectSyntax':
					return $author$project$Frontend$Main$syntaxInspectFileOpenedInEditor(
						_Utils_update(
							stateBefore,
							{viewEnlargedPane: $elm$core$Maybe$Nothing}));
				case 'UserInputCloseEditor':
					return _Utils_Tuple2(
						function () {
							var editing = stateBefore.editing;
							return _Utils_update(
								stateBefore,
								{editing: $elm$core$Maybe$Nothing, elmFormat: $elm$core$Maybe$Nothing});
						}(),
						$elm$core$Platform$Cmd$none);
				case 'BackendElmFormatResponseEvent':
					var formatResponseEvent = event.a;
					var _v10 = stateBefore.elmFormat;
					if ((_v10.$ === 'Just') && (_v10.a.$ === 'ElmFormatInProgress')) {
						var formatStart = _v10.a.a;
						return _Utils_Tuple2(
							function () {
								if (!_Utils_eq(
									$elm$core$Maybe$Just(formatResponseEvent.fileLocation),
									A2(
										$elm$core$Maybe$map,
										function ($) {
											return $.fileLocation;
										},
										stateBefore.editing))) {
									return stateBefore;
								} else {
									var _v11 = A2(
										$elm$core$Maybe$andThen,
										function ($) {
											return $.formattedText;
										},
										$elm$core$Result$toMaybe(formatResponseEvent.result));
									if (_v11.$ === 'Nothing') {
										return stateBefore;
									} else {
										var formattedText = _v11.a;
										var formatResult = A2($elm$core$Result$map, $author$project$Frontend$Main$parseElmFormatResponse, formatResponseEvent.result);
										var _v12 = formatResponseEvent.fileLocation;
										var directoryPath = _v12.a;
										var fileName = _v12.b;
										var filePath = _Utils_ap(
											directoryPath,
											_List_fromArray(
												[fileName]));
										return _Utils_update(
											stateBefore,
											{
												elmFormat: $elm$core$Maybe$Just(
													A2($author$project$Frontend$Main$ElmFormatResult, formatStart, formatResult)),
												fileTree: A2(
													$author$project$FileTreeInWorkspace$setBlobAtPathInSortedFileTreeFromBytes,
													_Utils_Tuple2(
														filePath,
														$author$project$Frontend$Main$fileContentFromString(formattedText)),
													stateBefore.fileTree)
											});
									}
								}
							}(),
							$elm$core$Platform$Cmd$none);
					} else {
						return _Utils_Tuple2(stateBefore, $elm$core$Platform$Cmd$none);
					}
				case 'BackendElmMakeResponseEvent':
					var requestIdentity = event.a;
					var httpResponse = event.b;
					var _v13 = stateBefore.compilation;
					if (_v13.$ === 'Just') {
						var compilationBefore = _v13.a;
						var _v14 = A3($author$project$Frontend$Main$updateCompilationForElmMakeRequestResponse, requestIdentity, httpResponse, compilationBefore);
						var compilation = _v14.a;
						var cmd = _v14.b;
						return _Utils_Tuple2(
							_Utils_update(
								stateBefore,
								{
									compilation: $elm$core$Maybe$Just(compilation),
									elmFormat: $elm$core$Maybe$Nothing
								}),
							A2($elm$core$Maybe$withDefault, $elm$core$Platform$Cmd$none, cmd));
					} else {
						return _Utils_Tuple2(stateBefore, $elm$core$Platform$Cmd$none);
					}
				case 'UserInputSetEnlargedPane':
					var enlargedPane = event.a;
					return _Utils_Tuple2(
						_Utils_update(
							stateBefore,
							{viewEnlargedPane: enlargedPane}),
						$elm$core$Platform$Cmd$none);
				case 'UserInputSetInspectionOnCompile':
					var enableInspection = event.a;
					var state = _Utils_update(
						stateBefore,
						{enableInspectionOnCompile: enableInspection});
					if (_Utils_eq(state, stateBefore)) {
						return _Utils_Tuple2(stateBefore, $elm$core$Platform$Cmd$none);
					} else {
						var $temp$updateConfig = updateConfig,
							$temp$event = $author$project$Frontend$Main$UserInputCompile,
							$temp$stateBefore = state;
						updateConfig = $temp$updateConfig;
						event = $temp$event;
						stateBefore = $temp$stateBefore;
						continue updateWorkspaceWithoutCmdToUpdateEditor;
					}
				default:
					var responseJson = event.a;
					var _v15 = A2($elm$json$Json$Decode$decodeValue, $author$project$CompilationInterface$GenerateJsonConverters$jsonDecodeLanguageServiceResponse, responseJson);
					if (_v15.$ === 'Err') {
						return _Utils_Tuple2(stateBefore, $elm$core$Platform$Cmd$none);
					} else {
						var responseWithId = _v15.a;
						var _v16 = responseWithId.response;
						if (_v16.$ === 'Err') {
							return _Utils_Tuple2(stateBefore, $elm$core$Platform$Cmd$none);
						} else {
							var response = _v16.a;
							var cmd = function () {
								switch (response.$) {
									case 'ProvideHoverResponse':
										var provideHover = response.a;
										return $author$project$Frontend$Main$provideHoverInMonacoEditorCmd(provideHover);
									case 'ProvideCompletionItemsResponse':
										var completionItems = response.a;
										return $author$project$Frontend$Main$provideCompletionItemsInMonacoEditorCmd(completionItems);
									case 'ProvideDefinitionResponse':
										var locationsInFiles = response.a;
										return $author$project$Frontend$Main$provideDefinitionInMonacoEditorCmd(locationsInFiles);
									case 'WorkspaceSummaryResponse':
										return $elm$core$Platform$Cmd$none;
									case 'TextDocumentSymbolResponse':
										return $elm$core$Platform$Cmd$none;
									case 'TextDocumentReferencesResponse':
										return $elm$core$Platform$Cmd$none;
									default:
										return $elm$core$Platform$Cmd$none;
								}
							}();
							return _Utils_Tuple2(stateBefore, cmd);
						}
					}
			}
		}
	});
var $author$project$Frontend$Main$updateWorkspace = F3(
	function (updateConfig, event, stateBeforeApplyingEvent) {
		var _v0 = A3($author$project$Frontend$Main$updateWorkspaceWithoutCmdToUpdateEditor, updateConfig, event, stateBeforeApplyingEvent);
		var stateAfterApplyEvent = _v0.a;
		var eventCmd = _v0.b;
		var _v1 = A2($author$project$Frontend$Main$updateWorkspaceAfterEvent, stateBeforeApplyingEvent, stateAfterApplyEvent);
		var state = _v1.a;
		var afterEventCmd = _v1.b;
		return _Utils_Tuple2(
			state,
			$elm$core$Platform$Cmd$batch(
				_List_fromArray(
					[eventCmd, afterEventCmd])));
	});
var $author$project$Frontend$Main$userInputFocusOutsideTitlebarMenu = function (stateBefore) {
	var popupIsOpenForTitlebarMenu = function () {
		var _v0 = stateBefore.popup;
		if ((_v0.$ === 'Just') && (_v0.a.$ === 'TitlebarMenu')) {
			var _v1 = _v0.a;
			return true;
		} else {
			return false;
		}
	}();
	return popupIsOpenForTitlebarMenu ? _Utils_update(
		stateBefore,
		{popup: $elm$core$Maybe$Nothing}) : stateBefore;
};
var $author$project$Frontend$Main$update = F2(
	function (event, stateBefore) {
		update:
		while (true) {
			switch (event.$) {
				case 'TimeHasArrived':
					var time = event.a;
					return _Utils_Tuple2(
						_Utils_update(
							stateBefore,
							{time: time}),
						$elm$core$Platform$Cmd$none);
				case 'UrlChange':
					var url = event.a;
					return A2($author$project$Frontend$Main$processEventUrlChanged, url, stateBefore);
				case 'UrlRequest':
					var urlRequest = event.a;
					if (urlRequest.$ === 'Internal') {
						var url = urlRequest.a;
						return _Utils_Tuple2(
							stateBefore,
							A2(
								$elm$browser$Browser$Navigation$pushUrl,
								stateBefore.navigationKey,
								$elm$url$Url$toString(url)));
					} else {
						var url = urlRequest.a;
						return _Utils_Tuple2(
							stateBefore,
							$elm$browser$Browser$Navigation$load(url));
					}
				case 'UserInputToggleTitleBarMenu':
					var menuEntry = event.a;
					var fromOpened = function (opened) {
						return $elm$core$Maybe$Just(
							A2($author$project$Frontend$Main$TitlebarMenu, menuEntry, opened));
					};
					var popup = _Utils_eq(
						stateBefore.popup,
						fromOpened(true)) ? fromOpened(false) : fromOpened(true);
					return _Utils_Tuple2(
						_Utils_update(
							stateBefore,
							{popup: popup}),
						$elm$core$Platform$Cmd$none);
				case 'UserInputMouseOverTitleBarMenu':
					var maybeMenuEntry = event.a;
					var _v2 = stateBefore.workspace;
					if (_v2.$ === 'WorkspaceActive') {
						var fromOpened = function (opened) {
							return A2(
								$elm$core$Maybe$map,
								function (menuEntry) {
									return A2($author$project$Frontend$Main$TitlebarMenu, menuEntry, opened);
								},
								maybeMenuEntry);
						};
						var popup = function () {
							var _v3 = stateBefore.popup;
							if (_v3.$ === 'Nothing') {
								return fromOpened(false);
							} else {
								if (_v3.a.$ === 'ModalDialog') {
									return stateBefore.popup;
								} else {
									var _v4 = _v3.a;
									var opened = _v4.b;
									return (opened && _Utils_eq(maybeMenuEntry, $elm$core$Maybe$Nothing)) ? stateBefore.popup : fromOpened(opened);
								}
							}
						}();
						return _Utils_Tuple2(
							_Utils_update(
								stateBefore,
								{popup: popup}),
							$elm$core$Platform$Cmd$none);
					} else {
						return _Utils_Tuple2(stateBefore, $elm$core$Platform$Cmd$none);
					}
				case 'UserInputGetLinkToWorkspace':
					var generateLink = event.a;
					var _v5 = stateBefore.workspace;
					if (_v5.$ === 'WorkspaceActive') {
						var workspaceActive = _v5.a;
						var urlToWorkspace = $elm$url$Url$toString(
							A3(
								$author$project$Frontend$Main$setWorkspaceStateInUrlForBookmark,
								{createDiffIfBaseAvailable: generateLink.createDiffIfBaseAvailable},
								workspaceActive,
								stateBefore));
						var dialog = {urlToWorkspace: urlToWorkspace};
						var cmd = A2($elm$browser$Browser$Navigation$pushUrl, stateBefore.navigationKey, urlToWorkspace);
						return _Utils_Tuple2(
							_Utils_update(
								stateBefore,
								{
									popup: $elm$core$Maybe$Just(
										$author$project$Frontend$Main$ModalDialog(
											$author$project$Frontend$Main$GetLinkToWorkspaceDialog(dialog)))
								}),
							cmd);
					} else {
						return _Utils_Tuple2(stateBefore, $elm$core$Platform$Cmd$none);
					}
				case 'UserInputLoadFromGitOpenDialog':
					return _Utils_Tuple2(
						_Utils_update(
							stateBefore,
							{
								popup: $elm$core$Maybe$Just(
									$author$project$Frontend$Main$ModalDialog(
										$author$project$Frontend$Main$LoadFromGitDialog(
											{loadCompositionResult: $elm$core$Maybe$Nothing, request: $elm$core$Maybe$Nothing, urlIntoGitRepository: ''})))
							}),
						$author$project$Frontend$Main$focusInputUrlElementCmd);
				case 'UserInputLoadFromGit':
					var dialogEvent = event.a;
					var _v6 = stateBefore.popup;
					if (((_v6.$ === 'Just') && (_v6.a.$ === 'ModalDialog')) && (_v6.a.a.$ === 'LoadFromGitDialog')) {
						var dialogStateBefore = _v6.a.a.a;
						var _v7 = A3(
							$author$project$Frontend$Main$updateForUserInputLoadFromGit,
							{time: stateBefore.time},
							dialogEvent,
							dialogStateBefore);
						var dialogState = _v7.a;
						var cmd = _v7.b;
						return _Utils_Tuple2(
							_Utils_update(
								stateBefore,
								{
									popup: $elm$core$Maybe$Just(
										$author$project$Frontend$Main$ModalDialog(
											$author$project$Frontend$Main$LoadFromGitDialog(dialogState)))
								}),
							cmd);
					} else {
						return _Utils_Tuple2(stateBefore, $elm$core$Platform$Cmd$none);
					}
				case 'UserInputLoadOrImportTakeWorkspaceStateEvent':
					var origin = event.a;
					var _v8 = function () {
						if (origin.$ === 'FromZipArchiveWorkspaceState') {
							var fromZip = origin.a;
							return _Utils_Tuple2(
								fromZip.fileTree,
								A2(
									$elm$url$Url$Builder$absolute,
									A2(
										$elm$core$List$filter,
										A2($elm$core$Basics$composeR, $elm$core$String$isEmpty, $elm$core$Basics$not),
										A2($elm$core$String$split, '/', stateBefore.url.path)),
									_List_Nil));
						} else {
							var fromGit = origin.a;
							return _Utils_Tuple2(
								fromGit.fileTree,
								$elm$url$Url$toString(
									A4(
										$author$project$Frontend$WorkspaceStateInUrl$setWorkspaceStateInUrl,
										fromGit.fileTree,
										$elm$core$Maybe$Just(fromGit),
										{filePathToOpen: $elm$core$Maybe$Nothing},
										stateBefore.url)));
						}
					}();
					var fileTree = _v8.a;
					var urlToPush = _v8.b;
					return _Utils_Tuple2(
						_Utils_update(
							stateBefore,
							{
								popup: $elm$core$Maybe$Nothing,
								workspace: $author$project$Frontend$Main$WorkspaceActive(
									$author$project$Frontend$Main$initWorkspaceFromFileTreeAndFileSelection(
										{fileLocationOpenInEditor: $elm$core$Maybe$Nothing, fileTree: fileTree}))
							}),
						A2($elm$browser$Browser$Navigation$pushUrl, stateBefore.navigationKey, urlToPush));
				case 'UserInputExportWorkspaceToZipArchive':
					var sendDownloadCmd = event.a.sendDownloadCmd;
					var _v10 = stateBefore.workspace;
					if (_v10.$ === 'WorkspaceActive') {
						var workspaceActive = _v10.a;
						var cmd = function () {
							if (sendDownloadCmd) {
								var workspaceStateHash = $author$project$FileTreeInWorkspace$compositionHashFromFileTreeNode(workspaceActive.fileTree);
								return A3(
									$elm$file$File$Download$bytes,
									'elm-app-' + ($folkertdev$elm_sha2$SHA256$toHex(workspaceStateHash) + '.zip'),
									'application/zip',
									$agu_z$elm_zip$Zip$toBytes(
										$author$project$Frontend$Main$buildZipArchiveFromFileTree(workspaceActive.fileTree)));
							} else {
								return $elm$core$Platform$Cmd$none;
							}
						}();
						return _Utils_Tuple2(
							_Utils_update(
								stateBefore,
								{
									popup: $elm$core$Maybe$Just(
										$author$project$Frontend$Main$ModalDialog($author$project$Frontend$Main$ExportToZipArchiveDialog))
								}),
							cmd);
					} else {
						return _Utils_Tuple2(stateBefore, $elm$core$Platform$Cmd$none);
					}
				case 'UserInputImportWorkspaceFromZipArchive':
					if (event.a.$ === 'ImportFromZipArchiveOpenDialog') {
						var _v11 = event.a;
						return _Utils_Tuple2(
							_Utils_update(
								stateBefore,
								{
									popup: $elm$core$Maybe$Just(
										$author$project$Frontend$Main$ModalDialog(
											$author$project$Frontend$Main$ImportFromZipArchiveDialog(
												{loadCompositionResult: $elm$core$Maybe$Nothing})))
								}),
							$elm$core$Platform$Cmd$none);
					} else {
						var _v12 = event.a;
						return _Utils_Tuple2(
							stateBefore,
							A2(
								$elm$file$File$Select$file,
								_List_fromArray(
									['application/zip']),
								$author$project$Frontend$Main$UserInputLoadedZipArchiveFile));
					}
				case 'UserInputLoadedZipArchiveFile':
					var file = event.a;
					return _Utils_Tuple2(
						stateBefore,
						A2(
							$elm$core$Task$perform,
							$author$project$Frontend$Main$UserInputLoadedZipArchiveBytes,
							$elm$file$File$toBytes(file)));
				case 'UserInputLoadedZipArchiveBytes':
					var bytes = event.a;
					var _v13 = stateBefore.popup;
					if (((_v13.$ === 'Just') && (_v13.a.$ === 'ModalDialog')) && (_v13.a.a.$ === 'ImportFromZipArchiveDialog')) {
						var loadCompositionResult = A2(
							$elm$core$Result$map,
							function (fileTree) {
								return {
									compositionIdCache: $author$project$Frontend$WorkspaceStateInUrl$workspaceStateCompositionHash(
										$author$project$FileTreeInWorkspace$mapBlobsToBytes(fileTree)),
									fileTree: fileTree
								};
							},
							A2(
								$elm$core$Maybe$withDefault,
								$elm$core$Result$Err('Failed to decode this file as zip archive'),
								A2(
									$elm$core$Maybe$map,
									$author$project$Frontend$Main$extractFileTreeFromZipArchive,
									$agu_z$elm_zip$Zip$fromBytes(bytes))));
						return _Utils_Tuple2(
							_Utils_update(
								stateBefore,
								{
									popup: $elm$core$Maybe$Just(
										$author$project$Frontend$Main$ModalDialog(
											$author$project$Frontend$Main$ImportFromZipArchiveDialog(
												{
													loadCompositionResult: $elm$core$Maybe$Just(loadCompositionResult)
												})))
								}),
							$elm$core$Platform$Cmd$none);
					} else {
						return _Utils_Tuple2(stateBefore, $elm$core$Platform$Cmd$none);
					}
				case 'BackendLoadFromGitResultEvent':
					var urlIntoGitRepository = event.a;
					var result = event.b;
					return A3($author$project$Frontend$Main$processEventBackendLoadFromGitResult, urlIntoGitRepository, result, stateBefore);
				case 'UserInputClosePopup':
					return _Utils_Tuple2(
						_Utils_update(
							stateBefore,
							{popup: $elm$core$Maybe$Nothing}),
						$elm$core$Platform$Cmd$none);
				case 'WorkspaceEvent':
					var workspaceEvent = event.a;
					var _v14 = stateBefore.workspace;
					switch (_v14.$) {
						case 'WorkspaceActive':
							var workspaceBefore = _v14.a;
							var workspaceEventIsEditorGotFocus = function () {
								if (workspaceEvent.$ === 'MonacoEditorEvent') {
									var monacoEditorEventJson = workspaceEvent.a;
									return _Utils_eq(
										$elm$core$Result$Ok($author$project$Frontend$MonacoEditor$DidFocusEditorWidgetEvent),
										A2($elm$json$Json$Decode$decodeValue, $author$project$CompilationInterface$GenerateJsonConverters$jsonDecodeMessageFromMonacoEditor, monacoEditorEventJson));
								} else {
									return false;
								}
							}();
							var shouldUpdateUrl = function () {
								if (workspaceEvent.$ === 'UserInputCompile') {
									return true;
								} else {
									return false;
								}
							}();
							var setWorkspaceStateInUrlCmd = shouldUpdateUrl ? A2(
								$elm$browser$Browser$Navigation$pushUrl,
								stateBefore.navigationKey,
								$elm$url$Url$toString(
									A3(
										$author$project$Frontend$Main$setWorkspaceStateInUrlForBookmark,
										{createDiffIfBaseAvailable: true},
										workspaceBefore,
										stateBefore))) : $elm$core$Platform$Cmd$none;
							var mapForFocusOutsideTitlebarMenu = workspaceEventIsEditorGotFocus ? $author$project$Frontend$Main$userInputFocusOutsideTitlebarMenu : $elm$core$Basics$identity;
							var _v15 = A3(
								$author$project$Frontend$Main$updateWorkspace,
								{time: stateBefore.time},
								workspaceEvent,
								workspaceBefore);
							var workspace = _v15.a;
							var workspaceCmd = _v15.b;
							return _Utils_Tuple2(
								mapForFocusOutsideTitlebarMenu(
									_Utils_update(
										stateBefore,
										{
											workspace: $author$project$Frontend$Main$WorkspaceActive(workspace)
										})),
								$elm$core$Platform$Cmd$batch(
									_List_fromArray(
										[
											A2($elm$core$Platform$Cmd$map, $author$project$Frontend$Main$WorkspaceEvent, workspaceCmd),
											setWorkspaceStateInUrlCmd
										])));
						case 'WorkspaceLoadingFromLink':
							return _Utils_Tuple2(stateBefore, $elm$core$Platform$Cmd$none);
						default:
							return _Utils_Tuple2(stateBefore, $elm$core$Platform$Cmd$none);
					}
				case 'UserInputKeyDownEvent':
					var keyboardEvent = event.a;
					if (_Utils_eq(keyboardEvent.keyCode, $SwiftsNamesake$proper_keyboard$Keyboard$Key$Escape)) {
						var $temp$event = $author$project$Frontend$Main$UserInputClosePopup,
							$temp$stateBefore = stateBefore;
						event = $temp$event;
						stateBefore = $temp$stateBefore;
						continue update;
					} else {
						return _Utils_Tuple2(stateBefore, $elm$core$Platform$Cmd$none);
					}
				case 'UserInputFocusOutsideTitlebarMenu':
					return _Utils_Tuple2(
						$author$project$Frontend$Main$userInputFocusOutsideTitlebarMenu(stateBefore),
						$elm$core$Platform$Cmd$none);
				case 'ReceiveMessageFromContainerHtmlEvent':
					var messageJson = event.a;
					var _v18 = A2($elm$json$Json$Decode$decodeValue, $author$project$CompilationInterface$GenerateJsonConverters$jsonDecodeMessageFromContainerHtml, messageJson);
					if (_v18.$ === 'Err') {
						return _Utils_Tuple2(stateBefore, $elm$core$Platform$Cmd$none);
					} else {
						var message = _v18.a;
						var clickedLink = message.a;
						return A2($author$project$Frontend$Main$updateUserClickedLinkInPreview, clickedLink, stateBefore);
					}
				default:
					return _Utils_Tuple2(stateBefore, $elm$core$Platform$Cmd$none);
			}
		}
	});
var $author$project$Frontend$Main$defaultWorkspaceLink = 'https://github.com/onlinegamemaker/making-online-games/tree/6838f7100dd86c8c8afcfe3efd553f8fa39c77ae/implement/landing-app';
var $author$project$Frontend$Main$updateBeginLoadDefaultIfWorkspaceErr = function (stateBefore) {
	var _v0 = stateBefore.workspace;
	if (_v0.$ === 'WorkspaceErr') {
		return A3(
			$author$project$Frontend$Main$updateToBeginLoadWorkspaceState,
			{
				filePathToOpen: $elm$core$Maybe$Just(
					_List_fromArray(
						['src', 'Main.elm'])),
				workspaceStateExpectedCompositionHash: $elm$core$Maybe$Nothing
			},
			stateBefore,
			{base: $author$project$Frontend$Main$defaultWorkspaceLink, differenceFromBase: $author$project$WorkspaceState_2021_01$noDifference});
	} else {
		return _Utils_Tuple2(stateBefore, $elm$core$Platform$Cmd$none);
	}
};
var $author$project$Frontend$Main$init = F4(
	function (_v0, url, navigationKey, time) {
		return A2(
			$author$project$Frontend$Main$foldUpdates,
			_List_fromArray(
				[
					$author$project$Frontend$Main$update(
					$author$project$Frontend$Main$UrlChange(url)),
					$author$project$Frontend$Main$updateBeginLoadDefaultIfWorkspaceErr
				]),
			{
				lastBackendLoadFromGitResult: $elm$core$Maybe$Nothing,
				navigationKey: navigationKey,
				popup: $elm$core$Maybe$Nothing,
				time: time,
				url: url,
				workspace: $author$project$Frontend$Main$WorkspaceErr('Initial update failed')
			});
	});
var $author$project$Frontend$Main$MonacoEditorEvent = function (a) {
	return {$: 'MonacoEditorEvent', a: a};
};
var $author$project$Frontend$Main$ReceiveMessageFromContainerHtmlEvent = function (a) {
	return {$: 'ReceiveMessageFromContainerHtmlEvent', a: a};
};
var $author$project$Frontend$Main$ResponseFromLanguageServiceEvent = function (a) {
	return {$: 'ResponseFromLanguageServiceEvent', a: a};
};
var $author$project$Frontend$Main$TimeHasArrived = function (a) {
	return {$: 'TimeHasArrived', a: a};
};
var $author$project$Frontend$Main$UserInputFocusOutsideTitlebarMenu = {$: 'UserInputFocusOutsideTitlebarMenu'};
var $author$project$Frontend$Main$UserInputKeyDownEvent = function (a) {
	return {$: 'UserInputKeyDownEvent', a: a};
};
var $elm$core$Platform$Sub$batch = _Platform_batch;
var $Gizra$elm_keyboard_event$Keyboard$Event$KeyboardEvent = F7(
	function (altKey, ctrlKey, key, keyCode, metaKey, repeat, shiftKey) {
		return {altKey: altKey, ctrlKey: ctrlKey, key: key, keyCode: keyCode, metaKey: metaKey, repeat: repeat, shiftKey: shiftKey};
	});
var $elm$json$Json$Decode$maybe = function (decoder) {
	return $elm$json$Json$Decode$oneOf(
		_List_fromArray(
			[
				A2($elm$json$Json$Decode$map, $elm$core$Maybe$Just, decoder),
				$elm$json$Json$Decode$succeed($elm$core$Maybe$Nothing)
			]));
};
var $Gizra$elm_keyboard_event$Keyboard$Event$decodeKey = $elm$json$Json$Decode$maybe(
	A2(
		$elm$json$Json$Decode$andThen,
		function (key) {
			return $elm$core$String$isEmpty(key) ? $elm$json$Json$Decode$fail('empty key') : $elm$json$Json$Decode$succeed(key);
		},
		A2($elm$json$Json$Decode$field, 'key', $elm$json$Json$Decode$string)));
var $Gizra$elm_keyboard_event$Keyboard$Event$decodeNonZero = A2(
	$elm$json$Json$Decode$andThen,
	function (code) {
		return (!code) ? $elm$json$Json$Decode$fail('code was zero') : $elm$json$Json$Decode$succeed(code);
	},
	$elm$json$Json$Decode$int);
var $Gizra$elm_keyboard_event$Keyboard$Event$decodeKeyCode = $elm$json$Json$Decode$oneOf(
	_List_fromArray(
		[
			A2($elm$json$Json$Decode$field, 'keyCode', $Gizra$elm_keyboard_event$Keyboard$Event$decodeNonZero),
			A2($elm$json$Json$Decode$field, 'which', $Gizra$elm_keyboard_event$Keyboard$Event$decodeNonZero),
			A2($elm$json$Json$Decode$field, 'charCode', $Gizra$elm_keyboard_event$Keyboard$Event$decodeNonZero),
			$elm$json$Json$Decode$succeed(0)
		]));
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$A = {$: 'A'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$Add = {$: 'Add'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$Alt = {$: 'Alt'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$Ambiguous = function (a) {
	return {$: 'Ambiguous', a: a};
};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$B = {$: 'B'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$Backspace = {$: 'Backspace'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$C = {$: 'C'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$CapsLock = {$: 'CapsLock'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$ChromeSearch = {$: 'ChromeSearch'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$Command = {$: 'Command'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$Ctrl = function (a) {
	return {$: 'Ctrl', a: a};
};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$D = {$: 'D'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$Decimal = {$: 'Decimal'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$Delete = {$: 'Delete'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$Divide = {$: 'Divide'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$Down = {$: 'Down'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$E = {$: 'E'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$Eight = {$: 'Eight'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$End = {$: 'End'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$Enter = {$: 'Enter'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$F = {$: 'F'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$F1 = {$: 'F1'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$F10 = {$: 'F10'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$F11 = {$: 'F11'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$F12 = {$: 'F12'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$F2 = {$: 'F2'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$F3 = {$: 'F3'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$F4 = {$: 'F4'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$F5 = {$: 'F5'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$F6 = {$: 'F6'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$F7 = {$: 'F7'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$F8 = {$: 'F8'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$F9 = {$: 'F9'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$Five = {$: 'Five'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$Four = {$: 'Four'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$G = {$: 'G'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$H = {$: 'H'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$Home = {$: 'Home'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$I = {$: 'I'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$Insert = {$: 'Insert'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$J = {$: 'J'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$K = {$: 'K'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$L = {$: 'L'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$Left = {$: 'Left'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$M = {$: 'M'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$Multiply = {$: 'Multiply'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$N = {$: 'N'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$Nine = {$: 'Nine'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$NumLock = {$: 'NumLock'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$NumpadEight = {$: 'NumpadEight'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$NumpadFive = {$: 'NumpadFive'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$NumpadFour = {$: 'NumpadFour'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$NumpadNine = {$: 'NumpadNine'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$NumpadOne = {$: 'NumpadOne'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$NumpadSeven = {$: 'NumpadSeven'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$NumpadSix = {$: 'NumpadSix'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$NumpadThree = {$: 'NumpadThree'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$NumpadTwo = {$: 'NumpadTwo'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$NumpadZero = {$: 'NumpadZero'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$O = {$: 'O'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$One = {$: 'One'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$P = {$: 'P'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$PageDown = {$: 'PageDown'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$PageUp = {$: 'PageUp'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$PauseBreak = {$: 'PauseBreak'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$PrintScreen = {$: 'PrintScreen'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$Q = {$: 'Q'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$R = {$: 'R'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$Right = {$: 'Right'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$S = {$: 'S'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$ScrollLock = {$: 'ScrollLock'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$Seven = {$: 'Seven'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$Shift = function (a) {
	return {$: 'Shift', a: a};
};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$Six = {$: 'Six'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$Spacebar = {$: 'Spacebar'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$Subtract = {$: 'Subtract'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$T = {$: 'T'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$Tab = {$: 'Tab'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$Three = {$: 'Three'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$Two = {$: 'Two'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$U = {$: 'U'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$Unknown = function (a) {
	return {$: 'Unknown', a: a};
};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$Up = {$: 'Up'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$V = {$: 'V'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$W = {$: 'W'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$Windows = {$: 'Windows'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$X = {$: 'X'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$Y = {$: 'Y'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$Z = {$: 'Z'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$Zero = {$: 'Zero'};
var $SwiftsNamesake$proper_keyboard$Keyboard$Key$fromCode = function (keyCode) {
	switch (keyCode) {
		case 8:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$Backspace;
		case 9:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$Tab;
		case 13:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$Enter;
		case 16:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$Shift($elm$core$Maybe$Nothing);
		case 17:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$Ctrl($elm$core$Maybe$Nothing);
		case 18:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$Alt;
		case 19:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$PauseBreak;
		case 20:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$CapsLock;
		case 27:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$Escape;
		case 32:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$Spacebar;
		case 33:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$PageUp;
		case 34:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$PageDown;
		case 35:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$End;
		case 36:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$Home;
		case 37:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$Left;
		case 38:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$Up;
		case 39:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$Right;
		case 40:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$Down;
		case 44:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$PrintScreen;
		case 45:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$Insert;
		case 46:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$Delete;
		case 48:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$Zero;
		case 49:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$One;
		case 50:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$Two;
		case 51:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$Three;
		case 52:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$Four;
		case 53:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$Five;
		case 54:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$Six;
		case 55:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$Seven;
		case 56:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$Eight;
		case 57:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$Nine;
		case 65:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$A;
		case 66:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$B;
		case 67:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$C;
		case 68:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$D;
		case 69:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$E;
		case 70:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$F;
		case 71:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$G;
		case 72:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$H;
		case 73:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$I;
		case 74:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$J;
		case 75:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$K;
		case 76:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$L;
		case 77:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$M;
		case 78:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$N;
		case 79:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$O;
		case 80:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$P;
		case 81:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$Q;
		case 82:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$R;
		case 83:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$S;
		case 84:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$T;
		case 85:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$U;
		case 86:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$V;
		case 87:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$W;
		case 88:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$X;
		case 89:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$Y;
		case 90:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$Z;
		case 91:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$Ambiguous(
				_List_fromArray(
					[$SwiftsNamesake$proper_keyboard$Keyboard$Key$Windows, $SwiftsNamesake$proper_keyboard$Keyboard$Key$Command, $SwiftsNamesake$proper_keyboard$Keyboard$Key$ChromeSearch]));
		case 96:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$NumpadZero;
		case 97:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$NumpadOne;
		case 98:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$NumpadTwo;
		case 99:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$NumpadThree;
		case 100:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$NumpadFour;
		case 101:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$NumpadFive;
		case 102:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$NumpadSix;
		case 103:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$NumpadSeven;
		case 104:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$NumpadEight;
		case 105:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$NumpadNine;
		case 106:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$Multiply;
		case 107:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$Add;
		case 109:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$Subtract;
		case 110:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$Decimal;
		case 111:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$Divide;
		case 112:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$F1;
		case 113:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$F2;
		case 114:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$F3;
		case 115:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$F4;
		case 116:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$F5;
		case 117:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$F6;
		case 118:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$F7;
		case 119:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$F8;
		case 120:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$F9;
		case 121:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$F10;
		case 122:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$F11;
		case 123:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$F12;
		case 144:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$NumLock;
		case 145:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$ScrollLock;
		default:
			return $SwiftsNamesake$proper_keyboard$Keyboard$Key$Unknown(keyCode);
	}
};
var $elm$json$Json$Decode$map7 = _Json_map7;
var $Gizra$elm_keyboard_event$Keyboard$Event$decodeKeyboardEvent = A8(
	$elm$json$Json$Decode$map7,
	$Gizra$elm_keyboard_event$Keyboard$Event$KeyboardEvent,
	A2($elm$json$Json$Decode$field, 'altKey', $elm$json$Json$Decode$bool),
	A2($elm$json$Json$Decode$field, 'ctrlKey', $elm$json$Json$Decode$bool),
	$Gizra$elm_keyboard_event$Keyboard$Event$decodeKey,
	A2($elm$json$Json$Decode$map, $SwiftsNamesake$proper_keyboard$Keyboard$Key$fromCode, $Gizra$elm_keyboard_event$Keyboard$Event$decodeKeyCode),
	A2($elm$json$Json$Decode$field, 'metaKey', $elm$json$Json$Decode$bool),
	A2($elm$json$Json$Decode$field, 'repeat', $elm$json$Json$Decode$bool),
	A2($elm$json$Json$Decode$field, 'shiftKey', $elm$json$Json$Decode$bool));
var $author$project$Frontend$Main$isOutsideParentWithId = function (parentId) {
	return $elm$json$Json$Decode$oneOf(
		_List_fromArray(
			[
				A2(
				$elm$json$Json$Decode$andThen,
				function (id) {
					return _Utils_eq(parentId, id) ? $elm$json$Json$Decode$succeed(false) : $elm$json$Json$Decode$fail('continue');
				},
				A2($elm$json$Json$Decode$field, 'id', $elm$json$Json$Decode$string)),
				$elm$json$Json$Decode$lazy(
				function (_v0) {
					return A2(
						$elm$json$Json$Decode$field,
						'parentNode',
						$author$project$Frontend$Main$isOutsideParentWithId(parentId));
				}),
				$elm$json$Json$Decode$succeed(true)
			]));
};
var $author$project$Frontend$Main$isTargetOutsideParentWithId = F2(
	function (parentId, event) {
		return A2(
			$elm$json$Json$Decode$andThen,
			function (isOutside) {
				return isOutside ? $elm$json$Json$Decode$succeed(event) : $elm$json$Json$Decode$fail('is not outside ' + parentId);
			},
			A2(
				$elm$json$Json$Decode$field,
				'target',
				$author$project$Frontend$Main$isOutsideParentWithId(parentId)));
	});
var $elm$browser$Browser$Events$Document = {$: 'Document'};
var $elm$browser$Browser$Events$MySub = F3(
	function (a, b, c) {
		return {$: 'MySub', a: a, b: b, c: c};
	});
var $elm$browser$Browser$Events$State = F2(
	function (subs, pids) {
		return {pids: pids, subs: subs};
	});
var $elm$browser$Browser$Events$init = $elm$core$Task$succeed(
	A2($elm$browser$Browser$Events$State, _List_Nil, $elm$core$Dict$empty));
var $elm$browser$Browser$Events$nodeToKey = function (node) {
	if (node.$ === 'Document') {
		return 'd_';
	} else {
		return 'w_';
	}
};
var $elm$browser$Browser$Events$addKey = function (sub) {
	var node = sub.a;
	var name = sub.b;
	return _Utils_Tuple2(
		_Utils_ap(
			$elm$browser$Browser$Events$nodeToKey(node),
			name),
		sub);
};
var $elm$browser$Browser$Events$Event = F2(
	function (key, event) {
		return {event: event, key: key};
	});
var $elm$browser$Browser$Events$spawn = F3(
	function (router, key, _v0) {
		var node = _v0.a;
		var name = _v0.b;
		var actualNode = function () {
			if (node.$ === 'Document') {
				return _Browser_doc;
			} else {
				return _Browser_window;
			}
		}();
		return A2(
			$elm$core$Task$map,
			function (value) {
				return _Utils_Tuple2(key, value);
			},
			A3(
				_Browser_on,
				actualNode,
				name,
				function (event) {
					return A2(
						$elm$core$Platform$sendToSelf,
						router,
						A2($elm$browser$Browser$Events$Event, key, event));
				}));
	});
var $elm$browser$Browser$Events$onEffects = F3(
	function (router, subs, state) {
		var stepRight = F3(
			function (key, sub, _v6) {
				var deads = _v6.a;
				var lives = _v6.b;
				var news = _v6.c;
				return _Utils_Tuple3(
					deads,
					lives,
					A2(
						$elm$core$List$cons,
						A3($elm$browser$Browser$Events$spawn, router, key, sub),
						news));
			});
		var stepLeft = F3(
			function (_v4, pid, _v5) {
				var deads = _v5.a;
				var lives = _v5.b;
				var news = _v5.c;
				return _Utils_Tuple3(
					A2($elm$core$List$cons, pid, deads),
					lives,
					news);
			});
		var stepBoth = F4(
			function (key, pid, _v2, _v3) {
				var deads = _v3.a;
				var lives = _v3.b;
				var news = _v3.c;
				return _Utils_Tuple3(
					deads,
					A3($elm$core$Dict$insert, key, pid, lives),
					news);
			});
		var newSubs = A2($elm$core$List$map, $elm$browser$Browser$Events$addKey, subs);
		var _v0 = A6(
			$elm$core$Dict$merge,
			stepLeft,
			stepBoth,
			stepRight,
			state.pids,
			$elm$core$Dict$fromList(newSubs),
			_Utils_Tuple3(_List_Nil, $elm$core$Dict$empty, _List_Nil));
		var deadPids = _v0.a;
		var livePids = _v0.b;
		var makeNewPids = _v0.c;
		return A2(
			$elm$core$Task$andThen,
			function (pids) {
				return $elm$core$Task$succeed(
					A2(
						$elm$browser$Browser$Events$State,
						newSubs,
						A2(
							$elm$core$Dict$union,
							livePids,
							$elm$core$Dict$fromList(pids))));
			},
			A2(
				$elm$core$Task$andThen,
				function (_v1) {
					return $elm$core$Task$sequence(makeNewPids);
				},
				$elm$core$Task$sequence(
					A2($elm$core$List$map, $elm$core$Process$kill, deadPids))));
	});
var $elm$browser$Browser$Events$onSelfMsg = F3(
	function (router, _v0, state) {
		var key = _v0.key;
		var event = _v0.event;
		var toMessage = function (_v2) {
			var subKey = _v2.a;
			var _v3 = _v2.b;
			var node = _v3.a;
			var name = _v3.b;
			var decoder = _v3.c;
			return _Utils_eq(subKey, key) ? A2(_Browser_decodeEvent, decoder, event) : $elm$core$Maybe$Nothing;
		};
		var messages = A2($elm$core$List$filterMap, toMessage, state.subs);
		return A2(
			$elm$core$Task$andThen,
			function (_v1) {
				return $elm$core$Task$succeed(state);
			},
			$elm$core$Task$sequence(
				A2(
					$elm$core$List$map,
					$elm$core$Platform$sendToApp(router),
					messages)));
	});
var $elm$browser$Browser$Events$subMap = F2(
	function (func, _v0) {
		var node = _v0.a;
		var name = _v0.b;
		var decoder = _v0.c;
		return A3(
			$elm$browser$Browser$Events$MySub,
			node,
			name,
			A2($elm$json$Json$Decode$map, func, decoder));
	});
_Platform_effectManagers['Browser.Events'] = _Platform_createManager($elm$browser$Browser$Events$init, $elm$browser$Browser$Events$onEffects, $elm$browser$Browser$Events$onSelfMsg, 0, $elm$browser$Browser$Events$subMap);
var $elm$browser$Browser$Events$subscription = _Platform_leaf('Browser.Events');
var $elm$browser$Browser$Events$on = F3(
	function (node, name, decoder) {
		return $elm$browser$Browser$Events$subscription(
			A3($elm$browser$Browser$Events$MySub, node, name, decoder));
	});
var $elm$browser$Browser$Events$onKeyDown = A2($elm$browser$Browser$Events$on, $elm$browser$Browser$Events$Document, 'keydown');
var $elm$browser$Browser$Events$onMouseDown = A2($elm$browser$Browser$Events$on, $elm$browser$Browser$Events$Document, 'mousedown');
var $author$project$Frontend$Main$receiveMessageFromContainerHtml = _Platform_incomingPort('receiveMessageFromContainerHtml', $elm$json$Json$Decode$value);
var $author$project$Frontend$Main$receiveMessageFromMonacoFrame = _Platform_incomingPort('receiveMessageFromMonacoFrame', $elm$json$Json$Decode$value);
var $author$project$Frontend$Main$receiveResponseFromLanguageService = _Platform_incomingPort('receiveResponseFromLanguageService', $elm$json$Json$Decode$value);
var $author$project$Frontend$Main$titleBarMenubarElementId = 'titlebar-menubar';
var $author$project$Frontend$Main$subscriptions = function (_v0) {
	return $elm$core$Platform$Sub$batch(
		_List_fromArray(
			[
				$author$project$Frontend$Main$receiveMessageFromMonacoFrame(
				A2($elm$core$Basics$composeR, $author$project$Frontend$Main$MonacoEditorEvent, $author$project$Frontend$Main$WorkspaceEvent)),
				$author$project$Frontend$Main$receiveMessageFromContainerHtml($author$project$Frontend$Main$ReceiveMessageFromContainerHtmlEvent),
				$author$project$Frontend$Main$receiveResponseFromLanguageService(
				A2($elm$core$Basics$composeR, $author$project$Frontend$Main$ResponseFromLanguageServiceEvent, $author$project$Frontend$Main$WorkspaceEvent)),
				A2($elm$time$Time$every, 500, $author$project$Frontend$Main$TimeHasArrived),
				$elm$browser$Browser$Events$onKeyDown(
				A2($elm$json$Json$Decode$map, $author$project$Frontend$Main$UserInputKeyDownEvent, $Gizra$elm_keyboard_event$Keyboard$Event$decodeKeyboardEvent)),
				$elm$browser$Browser$Events$onMouseDown(
				A2($author$project$Frontend$Main$isTargetOutsideParentWithId, $author$project$Frontend$Main$titleBarMenubarElementId, $author$project$Frontend$Main$UserInputFocusOutsideTitlebarMenu))
			]));
};
var $elm$virtual_dom$VirtualDom$text = _VirtualDom_text;
var $elm$html$Html$text = $elm$virtual_dom$VirtualDom$text;
var $author$project$Frontend$Visuals$CloseEditorIcon = {$: 'CloseEditorIcon'};
var $author$project$Frontend$Visuals$DirectoryCollapsedIcon = {$: 'DirectoryCollapsedIcon'};
var $author$project$Frontend$Main$EditorPane = {$: 'EditorPane'};
var $author$project$Frontend$Main$OutputPane = {$: 'OutputPane'};
var $author$project$Frontend$Main$UserInputCancelFormatting = {$: 'UserInputCancelFormatting'};
var $author$project$Frontend$Main$UserInputOpenFileInEditor = function (a) {
	return {$: 'UserInputOpenFileInEditor', a: a};
};
var $author$project$Frontend$Main$WorkspaceMenuEntry = {$: 'WorkspaceMenuEntry'};
var $author$project$Frontend$Visuals$ChatActionIcon = {$: 'ChatActionIcon'};
var $author$project$Frontend$Visuals$GitHubActionIcon = {$: 'GitHubActionIcon'};
var $author$project$Frontend$Main$activityBarWidth = 48;
var $mdgriffith$elm_ui$Internal$Model$AlignY = function (a) {
	return {$: 'AlignY', a: a};
};
var $mdgriffith$elm_ui$Internal$Model$Bottom = {$: 'Bottom'};
var $mdgriffith$elm_ui$Element$alignBottom = $mdgriffith$elm_ui$Internal$Model$AlignY($mdgriffith$elm_ui$Internal$Model$Bottom);
var $mdgriffith$elm_ui$Internal$Model$StyleClass = F2(
	function (a, b) {
		return {$: 'StyleClass', a: a, b: b};
	});
var $mdgriffith$elm_ui$Internal$Model$Transparency = F2(
	function (a, b) {
		return {$: 'Transparency', a: a, b: b};
	});
var $elm$core$Basics$round = _Basics_round;
var $mdgriffith$elm_ui$Internal$Model$floatClass = function (x) {
	return $elm$core$String$fromInt(
		$elm$core$Basics$round(x * 255));
};
var $mdgriffith$elm_ui$Internal$Flag$Flag = function (a) {
	return {$: 'Flag', a: a};
};
var $mdgriffith$elm_ui$Internal$Flag$Second = function (a) {
	return {$: 'Second', a: a};
};
var $mdgriffith$elm_ui$Internal$Flag$flag = function (i) {
	return (i > 31) ? $mdgriffith$elm_ui$Internal$Flag$Second(1 << (i - 32)) : $mdgriffith$elm_ui$Internal$Flag$Flag(1 << i);
};
var $mdgriffith$elm_ui$Internal$Flag$transparency = $mdgriffith$elm_ui$Internal$Flag$flag(0);
var $mdgriffith$elm_ui$Element$alpha = function (o) {
	var transparency = function (x) {
		return 1 - x;
	}(
		A2(
			$elm$core$Basics$min,
			1.0,
			A2($elm$core$Basics$max, 0.0, o)));
	return A2(
		$mdgriffith$elm_ui$Internal$Model$StyleClass,
		$mdgriffith$elm_ui$Internal$Flag$transparency,
		A2(
			$mdgriffith$elm_ui$Internal$Model$Transparency,
			'transparency-' + $mdgriffith$elm_ui$Internal$Model$floatClass(transparency),
			transparency));
};
var $mdgriffith$elm_ui$Internal$Model$AlignX = function (a) {
	return {$: 'AlignX', a: a};
};
var $mdgriffith$elm_ui$Internal$Model$CenterX = {$: 'CenterX'};
var $mdgriffith$elm_ui$Element$centerX = $mdgriffith$elm_ui$Internal$Model$AlignX($mdgriffith$elm_ui$Internal$Model$CenterX);
var $mdgriffith$elm_ui$Internal$Model$Colored = F3(
	function (a, b, c) {
		return {$: 'Colored', a: a, b: b, c: c};
	});
var $mdgriffith$elm_ui$Internal$Flag$bgColor = $mdgriffith$elm_ui$Internal$Flag$flag(8);
var $mdgriffith$elm_ui$Internal$Model$formatColorClass = function (_v0) {
	var red = _v0.a;
	var green = _v0.b;
	var blue = _v0.c;
	var alpha = _v0.d;
	return $mdgriffith$elm_ui$Internal$Model$floatClass(red) + ('-' + ($mdgriffith$elm_ui$Internal$Model$floatClass(green) + ('-' + ($mdgriffith$elm_ui$Internal$Model$floatClass(blue) + ('-' + $mdgriffith$elm_ui$Internal$Model$floatClass(alpha))))));
};
var $mdgriffith$elm_ui$Element$Background$color = function (clr) {
	return A2(
		$mdgriffith$elm_ui$Internal$Model$StyleClass,
		$mdgriffith$elm_ui$Internal$Flag$bgColor,
		A3(
			$mdgriffith$elm_ui$Internal$Model$Colored,
			'bg-' + $mdgriffith$elm_ui$Internal$Model$formatColorClass(clr),
			'background-color',
			clr));
};
var $mdgriffith$elm_ui$Internal$Model$Unkeyed = function (a) {
	return {$: 'Unkeyed', a: a};
};
var $mdgriffith$elm_ui$Internal$Model$AsColumn = {$: 'AsColumn'};
var $mdgriffith$elm_ui$Internal$Model$asColumn = $mdgriffith$elm_ui$Internal$Model$AsColumn;
var $mdgriffith$elm_ui$Internal$Style$classes = {above: 'a', active: 'atv', alignBottom: 'ab', alignCenterX: 'cx', alignCenterY: 'cy', alignContainerBottom: 'acb', alignContainerCenterX: 'accx', alignContainerCenterY: 'accy', alignContainerRight: 'acr', alignLeft: 'al', alignRight: 'ar', alignTop: 'at', alignedHorizontally: 'ah', alignedVertically: 'av', any: 's', behind: 'bh', below: 'b', bold: 'w7', borderDashed: 'bd', borderDotted: 'bdt', borderNone: 'bn', borderSolid: 'bs', capturePointerEvents: 'cpe', clip: 'cp', clipX: 'cpx', clipY: 'cpy', column: 'c', container: 'ctr', contentBottom: 'cb', contentCenterX: 'ccx', contentCenterY: 'ccy', contentLeft: 'cl', contentRight: 'cr', contentTop: 'ct', cursorPointer: 'cptr', cursorText: 'ctxt', focus: 'fcs', focusedWithin: 'focus-within', fullSize: 'fs', grid: 'g', hasBehind: 'hbh', heightContent: 'hc', heightExact: 'he', heightFill: 'hf', heightFillPortion: 'hfp', hover: 'hv', imageContainer: 'ic', inFront: 'fr', inputLabel: 'lbl', inputMultiline: 'iml', inputMultilineFiller: 'imlf', inputMultilineParent: 'imlp', inputMultilineWrapper: 'implw', inputText: 'it', italic: 'i', link: 'lnk', nearby: 'nb', noTextSelection: 'notxt', onLeft: 'ol', onRight: 'or', opaque: 'oq', overflowHidden: 'oh', page: 'pg', paragraph: 'p', passPointerEvents: 'ppe', root: 'ui', row: 'r', scrollbars: 'sb', scrollbarsX: 'sbx', scrollbarsY: 'sby', seButton: 'sbt', single: 'e', sizeByCapital: 'cap', spaceEvenly: 'sev', strike: 'sk', text: 't', textCenter: 'tc', textExtraBold: 'w8', textExtraLight: 'w2', textHeavy: 'w9', textJustify: 'tj', textJustifyAll: 'tja', textLeft: 'tl', textLight: 'w3', textMedium: 'w5', textNormalWeight: 'w4', textRight: 'tr', textSemiBold: 'w6', textThin: 'w1', textUnitalicized: 'tun', transition: 'ts', transparent: 'clr', underline: 'u', widthContent: 'wc', widthExact: 'we', widthFill: 'wf', widthFillPortion: 'wfp', wrapped: 'wrp'};
var $mdgriffith$elm_ui$Internal$Model$Generic = {$: 'Generic'};
var $mdgriffith$elm_ui$Internal$Model$div = $mdgriffith$elm_ui$Internal$Model$Generic;
var $mdgriffith$elm_ui$Internal$Model$NoNearbyChildren = {$: 'NoNearbyChildren'};
var $mdgriffith$elm_ui$Internal$Model$columnClass = $mdgriffith$elm_ui$Internal$Style$classes.any + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.column);
var $mdgriffith$elm_ui$Internal$Model$gridClass = $mdgriffith$elm_ui$Internal$Style$classes.any + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.grid);
var $mdgriffith$elm_ui$Internal$Model$pageClass = $mdgriffith$elm_ui$Internal$Style$classes.any + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.page);
var $mdgriffith$elm_ui$Internal$Model$paragraphClass = $mdgriffith$elm_ui$Internal$Style$classes.any + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.paragraph);
var $mdgriffith$elm_ui$Internal$Model$rowClass = $mdgriffith$elm_ui$Internal$Style$classes.any + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.row);
var $mdgriffith$elm_ui$Internal$Model$singleClass = $mdgriffith$elm_ui$Internal$Style$classes.any + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.single);
var $mdgriffith$elm_ui$Internal$Model$contextClasses = function (context) {
	switch (context.$) {
		case 'AsRow':
			return $mdgriffith$elm_ui$Internal$Model$rowClass;
		case 'AsColumn':
			return $mdgriffith$elm_ui$Internal$Model$columnClass;
		case 'AsEl':
			return $mdgriffith$elm_ui$Internal$Model$singleClass;
		case 'AsGrid':
			return $mdgriffith$elm_ui$Internal$Model$gridClass;
		case 'AsParagraph':
			return $mdgriffith$elm_ui$Internal$Model$paragraphClass;
		default:
			return $mdgriffith$elm_ui$Internal$Model$pageClass;
	}
};
var $mdgriffith$elm_ui$Internal$Model$Keyed = function (a) {
	return {$: 'Keyed', a: a};
};
var $mdgriffith$elm_ui$Internal$Model$NoStyleSheet = {$: 'NoStyleSheet'};
var $mdgriffith$elm_ui$Internal$Model$Styled = function (a) {
	return {$: 'Styled', a: a};
};
var $mdgriffith$elm_ui$Internal$Model$Unstyled = function (a) {
	return {$: 'Unstyled', a: a};
};
var $mdgriffith$elm_ui$Internal$Model$addChildren = F2(
	function (existing, nearbyChildren) {
		switch (nearbyChildren.$) {
			case 'NoNearbyChildren':
				return existing;
			case 'ChildrenBehind':
				var behind = nearbyChildren.a;
				return _Utils_ap(behind, existing);
			case 'ChildrenInFront':
				var inFront = nearbyChildren.a;
				return _Utils_ap(existing, inFront);
			default:
				var behind = nearbyChildren.a;
				var inFront = nearbyChildren.b;
				return _Utils_ap(
					behind,
					_Utils_ap(existing, inFront));
		}
	});
var $mdgriffith$elm_ui$Internal$Model$addKeyedChildren = F3(
	function (key, existing, nearbyChildren) {
		switch (nearbyChildren.$) {
			case 'NoNearbyChildren':
				return existing;
			case 'ChildrenBehind':
				var behind = nearbyChildren.a;
				return _Utils_ap(
					A2(
						$elm$core$List$map,
						function (x) {
							return _Utils_Tuple2(key, x);
						},
						behind),
					existing);
			case 'ChildrenInFront':
				var inFront = nearbyChildren.a;
				return _Utils_ap(
					existing,
					A2(
						$elm$core$List$map,
						function (x) {
							return _Utils_Tuple2(key, x);
						},
						inFront));
			default:
				var behind = nearbyChildren.a;
				var inFront = nearbyChildren.b;
				return _Utils_ap(
					A2(
						$elm$core$List$map,
						function (x) {
							return _Utils_Tuple2(key, x);
						},
						behind),
					_Utils_ap(
						existing,
						A2(
							$elm$core$List$map,
							function (x) {
								return _Utils_Tuple2(key, x);
							},
							inFront)));
		}
	});
var $mdgriffith$elm_ui$Internal$Model$AsEl = {$: 'AsEl'};
var $mdgriffith$elm_ui$Internal$Model$asEl = $mdgriffith$elm_ui$Internal$Model$AsEl;
var $mdgriffith$elm_ui$Internal$Model$AsParagraph = {$: 'AsParagraph'};
var $mdgriffith$elm_ui$Internal$Model$asParagraph = $mdgriffith$elm_ui$Internal$Model$AsParagraph;
var $mdgriffith$elm_ui$Internal$Flag$alignBottom = $mdgriffith$elm_ui$Internal$Flag$flag(41);
var $mdgriffith$elm_ui$Internal$Flag$alignRight = $mdgriffith$elm_ui$Internal$Flag$flag(40);
var $mdgriffith$elm_ui$Internal$Flag$centerX = $mdgriffith$elm_ui$Internal$Flag$flag(42);
var $mdgriffith$elm_ui$Internal$Flag$centerY = $mdgriffith$elm_ui$Internal$Flag$flag(43);
var $elm$html$Html$Attributes$stringProperty = F2(
	function (key, string) {
		return A2(
			_VirtualDom_property,
			key,
			$elm$json$Json$Encode$string(string));
	});
var $elm$html$Html$Attributes$class = $elm$html$Html$Attributes$stringProperty('className');
var $elm$html$Html$div = _VirtualDom_node('div');
var $mdgriffith$elm_ui$Internal$Model$lengthClassName = function (x) {
	switch (x.$) {
		case 'Px':
			var px = x.a;
			return $elm$core$String$fromInt(px) + 'px';
		case 'Content':
			return 'auto';
		case 'Fill':
			var i = x.a;
			return $elm$core$String$fromInt(i) + 'fr';
		case 'Min':
			var min = x.a;
			var len = x.b;
			return 'min' + ($elm$core$String$fromInt(min) + $mdgriffith$elm_ui$Internal$Model$lengthClassName(len));
		default:
			var max = x.a;
			var len = x.b;
			return 'max' + ($elm$core$String$fromInt(max) + $mdgriffith$elm_ui$Internal$Model$lengthClassName(len));
	}
};
var $mdgriffith$elm_ui$Internal$Model$transformClass = function (transform) {
	switch (transform.$) {
		case 'Untransformed':
			return $elm$core$Maybe$Nothing;
		case 'Moved':
			var _v1 = transform.a;
			var x = _v1.a;
			var y = _v1.b;
			var z = _v1.c;
			return $elm$core$Maybe$Just(
				'mv-' + ($mdgriffith$elm_ui$Internal$Model$floatClass(x) + ('-' + ($mdgriffith$elm_ui$Internal$Model$floatClass(y) + ('-' + $mdgriffith$elm_ui$Internal$Model$floatClass(z))))));
		default:
			var _v2 = transform.a;
			var tx = _v2.a;
			var ty = _v2.b;
			var tz = _v2.c;
			var _v3 = transform.b;
			var sx = _v3.a;
			var sy = _v3.b;
			var sz = _v3.c;
			var _v4 = transform.c;
			var ox = _v4.a;
			var oy = _v4.b;
			var oz = _v4.c;
			var angle = transform.d;
			return $elm$core$Maybe$Just(
				'tfrm-' + ($mdgriffith$elm_ui$Internal$Model$floatClass(tx) + ('-' + ($mdgriffith$elm_ui$Internal$Model$floatClass(ty) + ('-' + ($mdgriffith$elm_ui$Internal$Model$floatClass(tz) + ('-' + ($mdgriffith$elm_ui$Internal$Model$floatClass(sx) + ('-' + ($mdgriffith$elm_ui$Internal$Model$floatClass(sy) + ('-' + ($mdgriffith$elm_ui$Internal$Model$floatClass(sz) + ('-' + ($mdgriffith$elm_ui$Internal$Model$floatClass(ox) + ('-' + ($mdgriffith$elm_ui$Internal$Model$floatClass(oy) + ('-' + ($mdgriffith$elm_ui$Internal$Model$floatClass(oz) + ('-' + $mdgriffith$elm_ui$Internal$Model$floatClass(angle))))))))))))))))))));
	}
};
var $mdgriffith$elm_ui$Internal$Model$getStyleName = function (style) {
	switch (style.$) {
		case 'Shadows':
			var name = style.a;
			return name;
		case 'Transparency':
			var name = style.a;
			var o = style.b;
			return name;
		case 'Style':
			var _class = style.a;
			return _class;
		case 'FontFamily':
			var name = style.a;
			return name;
		case 'FontSize':
			var i = style.a;
			return 'font-size-' + $elm$core$String$fromInt(i);
		case 'Single':
			var _class = style.a;
			return _class;
		case 'Colored':
			var _class = style.a;
			return _class;
		case 'SpacingStyle':
			var cls = style.a;
			var x = style.b;
			var y = style.c;
			return cls;
		case 'PaddingStyle':
			var cls = style.a;
			var top = style.b;
			var right = style.c;
			var bottom = style.d;
			var left = style.e;
			return cls;
		case 'BorderWidth':
			var cls = style.a;
			var top = style.b;
			var right = style.c;
			var bottom = style.d;
			var left = style.e;
			return cls;
		case 'GridTemplateStyle':
			var template = style.a;
			return 'grid-rows-' + (A2(
				$elm$core$String$join,
				'-',
				A2($elm$core$List$map, $mdgriffith$elm_ui$Internal$Model$lengthClassName, template.rows)) + ('-cols-' + (A2(
				$elm$core$String$join,
				'-',
				A2($elm$core$List$map, $mdgriffith$elm_ui$Internal$Model$lengthClassName, template.columns)) + ('-space-x-' + ($mdgriffith$elm_ui$Internal$Model$lengthClassName(template.spacing.a) + ('-space-y-' + $mdgriffith$elm_ui$Internal$Model$lengthClassName(template.spacing.b)))))));
		case 'GridPosition':
			var pos = style.a;
			return 'gp grid-pos-' + ($elm$core$String$fromInt(pos.row) + ('-' + ($elm$core$String$fromInt(pos.col) + ('-' + ($elm$core$String$fromInt(pos.width) + ('-' + $elm$core$String$fromInt(pos.height)))))));
		case 'PseudoSelector':
			var selector = style.a;
			var subStyle = style.b;
			var name = function () {
				switch (selector.$) {
					case 'Focus':
						return 'fs';
					case 'Hover':
						return 'hv';
					default:
						return 'act';
				}
			}();
			return A2(
				$elm$core$String$join,
				' ',
				A2(
					$elm$core$List$map,
					function (sty) {
						var _v1 = $mdgriffith$elm_ui$Internal$Model$getStyleName(sty);
						if (_v1 === '') {
							return '';
						} else {
							var styleName = _v1;
							return styleName + ('-' + name);
						}
					},
					subStyle));
		default:
			var x = style.a;
			return A2(
				$elm$core$Maybe$withDefault,
				'',
				$mdgriffith$elm_ui$Internal$Model$transformClass(x));
	}
};
var $mdgriffith$elm_ui$Internal$Model$reduceStyles = F2(
	function (style, nevermind) {
		var cache = nevermind.a;
		var existing = nevermind.b;
		var styleName = $mdgriffith$elm_ui$Internal$Model$getStyleName(style);
		return A2($elm$core$Set$member, styleName, cache) ? nevermind : _Utils_Tuple2(
			A2($elm$core$Set$insert, styleName, cache),
			A2($elm$core$List$cons, style, existing));
	});
var $mdgriffith$elm_ui$Internal$Model$Property = F2(
	function (a, b) {
		return {$: 'Property', a: a, b: b};
	});
var $mdgriffith$elm_ui$Internal$Model$Style = F2(
	function (a, b) {
		return {$: 'Style', a: a, b: b};
	});
var $mdgriffith$elm_ui$Internal$Style$dot = function (c) {
	return '.' + c;
};
var $elm$core$String$fromFloat = _String_fromNumber;
var $mdgriffith$elm_ui$Internal$Model$formatColor = function (_v0) {
	var red = _v0.a;
	var green = _v0.b;
	var blue = _v0.c;
	var alpha = _v0.d;
	return 'rgba(' + ($elm$core$String$fromInt(
		$elm$core$Basics$round(red * 255)) + ((',' + $elm$core$String$fromInt(
		$elm$core$Basics$round(green * 255))) + ((',' + $elm$core$String$fromInt(
		$elm$core$Basics$round(blue * 255))) + (',' + ($elm$core$String$fromFloat(alpha) + ')')))));
};
var $mdgriffith$elm_ui$Internal$Model$formatBoxShadow = function (shadow) {
	return A2(
		$elm$core$String$join,
		' ',
		A2(
			$elm$core$List$filterMap,
			$elm$core$Basics$identity,
			_List_fromArray(
				[
					shadow.inset ? $elm$core$Maybe$Just('inset') : $elm$core$Maybe$Nothing,
					$elm$core$Maybe$Just(
					$elm$core$String$fromFloat(shadow.offset.a) + 'px'),
					$elm$core$Maybe$Just(
					$elm$core$String$fromFloat(shadow.offset.b) + 'px'),
					$elm$core$Maybe$Just(
					$elm$core$String$fromFloat(shadow.blur) + 'px'),
					$elm$core$Maybe$Just(
					$elm$core$String$fromFloat(shadow.size) + 'px'),
					$elm$core$Maybe$Just(
					$mdgriffith$elm_ui$Internal$Model$formatColor(shadow.color))
				])));
};
var $mdgriffith$elm_ui$Internal$Model$renderFocusStyle = function (focus) {
	return _List_fromArray(
		[
			A2(
			$mdgriffith$elm_ui$Internal$Model$Style,
			$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.focusedWithin) + ':focus-within',
			A2(
				$elm$core$List$filterMap,
				$elm$core$Basics$identity,
				_List_fromArray(
					[
						A2(
						$elm$core$Maybe$map,
						function (color) {
							return A2(
								$mdgriffith$elm_ui$Internal$Model$Property,
								'border-color',
								$mdgriffith$elm_ui$Internal$Model$formatColor(color));
						},
						focus.borderColor),
						A2(
						$elm$core$Maybe$map,
						function (color) {
							return A2(
								$mdgriffith$elm_ui$Internal$Model$Property,
								'background-color',
								$mdgriffith$elm_ui$Internal$Model$formatColor(color));
						},
						focus.backgroundColor),
						A2(
						$elm$core$Maybe$map,
						function (shadow) {
							return A2(
								$mdgriffith$elm_ui$Internal$Model$Property,
								'box-shadow',
								$mdgriffith$elm_ui$Internal$Model$formatBoxShadow(
									{
										blur: shadow.blur,
										color: shadow.color,
										inset: false,
										offset: A2(
											$elm$core$Tuple$mapSecond,
											$elm$core$Basics$toFloat,
											A2($elm$core$Tuple$mapFirst, $elm$core$Basics$toFloat, shadow.offset)),
										size: shadow.size
									}));
						},
						focus.shadow),
						$elm$core$Maybe$Just(
						A2($mdgriffith$elm_ui$Internal$Model$Property, 'outline', 'none'))
					]))),
			A2(
			$mdgriffith$elm_ui$Internal$Model$Style,
			($mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.any) + ':focus .focusable, ') + (($mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.any) + '.focusable:focus, ') + ('.ui-slide-bar:focus + ' + ($mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.any) + ' .focusable-thumb'))),
			A2(
				$elm$core$List$filterMap,
				$elm$core$Basics$identity,
				_List_fromArray(
					[
						A2(
						$elm$core$Maybe$map,
						function (color) {
							return A2(
								$mdgriffith$elm_ui$Internal$Model$Property,
								'border-color',
								$mdgriffith$elm_ui$Internal$Model$formatColor(color));
						},
						focus.borderColor),
						A2(
						$elm$core$Maybe$map,
						function (color) {
							return A2(
								$mdgriffith$elm_ui$Internal$Model$Property,
								'background-color',
								$mdgriffith$elm_ui$Internal$Model$formatColor(color));
						},
						focus.backgroundColor),
						A2(
						$elm$core$Maybe$map,
						function (shadow) {
							return A2(
								$mdgriffith$elm_ui$Internal$Model$Property,
								'box-shadow',
								$mdgriffith$elm_ui$Internal$Model$formatBoxShadow(
									{
										blur: shadow.blur,
										color: shadow.color,
										inset: false,
										offset: A2(
											$elm$core$Tuple$mapSecond,
											$elm$core$Basics$toFloat,
											A2($elm$core$Tuple$mapFirst, $elm$core$Basics$toFloat, shadow.offset)),
										size: shadow.size
									}));
						},
						focus.shadow),
						$elm$core$Maybe$Just(
						A2($mdgriffith$elm_ui$Internal$Model$Property, 'outline', 'none'))
					])))
		]);
};
var $elm$virtual_dom$VirtualDom$node = function (tag) {
	return _VirtualDom_node(
		_VirtualDom_noScript(tag));
};
var $elm$virtual_dom$VirtualDom$property = F2(
	function (key, value) {
		return A2(
			_VirtualDom_property,
			_VirtualDom_noInnerHtmlOrFormAction(key),
			_VirtualDom_noJavaScriptOrHtmlJson(value));
	});
var $mdgriffith$elm_ui$Internal$Style$AllChildren = F2(
	function (a, b) {
		return {$: 'AllChildren', a: a, b: b};
	});
var $mdgriffith$elm_ui$Internal$Style$Batch = function (a) {
	return {$: 'Batch', a: a};
};
var $mdgriffith$elm_ui$Internal$Style$Child = F2(
	function (a, b) {
		return {$: 'Child', a: a, b: b};
	});
var $mdgriffith$elm_ui$Internal$Style$Class = F2(
	function (a, b) {
		return {$: 'Class', a: a, b: b};
	});
var $mdgriffith$elm_ui$Internal$Style$Descriptor = F2(
	function (a, b) {
		return {$: 'Descriptor', a: a, b: b};
	});
var $mdgriffith$elm_ui$Internal$Style$Left = {$: 'Left'};
var $mdgriffith$elm_ui$Internal$Style$Prop = F2(
	function (a, b) {
		return {$: 'Prop', a: a, b: b};
	});
var $mdgriffith$elm_ui$Internal$Style$Right = {$: 'Right'};
var $mdgriffith$elm_ui$Internal$Style$Self = function (a) {
	return {$: 'Self', a: a};
};
var $mdgriffith$elm_ui$Internal$Style$Supports = F2(
	function (a, b) {
		return {$: 'Supports', a: a, b: b};
	});
var $mdgriffith$elm_ui$Internal$Style$Content = function (a) {
	return {$: 'Content', a: a};
};
var $mdgriffith$elm_ui$Internal$Style$Bottom = {$: 'Bottom'};
var $mdgriffith$elm_ui$Internal$Style$CenterX = {$: 'CenterX'};
var $mdgriffith$elm_ui$Internal$Style$CenterY = {$: 'CenterY'};
var $mdgriffith$elm_ui$Internal$Style$Top = {$: 'Top'};
var $mdgriffith$elm_ui$Internal$Style$alignments = _List_fromArray(
	[$mdgriffith$elm_ui$Internal$Style$Top, $mdgriffith$elm_ui$Internal$Style$Bottom, $mdgriffith$elm_ui$Internal$Style$Right, $mdgriffith$elm_ui$Internal$Style$Left, $mdgriffith$elm_ui$Internal$Style$CenterX, $mdgriffith$elm_ui$Internal$Style$CenterY]);
var $mdgriffith$elm_ui$Internal$Style$contentName = function (desc) {
	switch (desc.a.$) {
		case 'Top':
			var _v1 = desc.a;
			return $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.contentTop);
		case 'Bottom':
			var _v2 = desc.a;
			return $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.contentBottom);
		case 'Right':
			var _v3 = desc.a;
			return $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.contentRight);
		case 'Left':
			var _v4 = desc.a;
			return $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.contentLeft);
		case 'CenterX':
			var _v5 = desc.a;
			return $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.contentCenterX);
		default:
			var _v6 = desc.a;
			return $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.contentCenterY);
	}
};
var $mdgriffith$elm_ui$Internal$Style$selfName = function (desc) {
	switch (desc.a.$) {
		case 'Top':
			var _v1 = desc.a;
			return $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.alignTop);
		case 'Bottom':
			var _v2 = desc.a;
			return $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.alignBottom);
		case 'Right':
			var _v3 = desc.a;
			return $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.alignRight);
		case 'Left':
			var _v4 = desc.a;
			return $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.alignLeft);
		case 'CenterX':
			var _v5 = desc.a;
			return $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.alignCenterX);
		default:
			var _v6 = desc.a;
			return $mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.alignCenterY);
	}
};
var $mdgriffith$elm_ui$Internal$Style$describeAlignment = function (values) {
	var createDescription = function (alignment) {
		var _v0 = values(alignment);
		var content = _v0.a;
		var indiv = _v0.b;
		return _List_fromArray(
			[
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$contentName(
					$mdgriffith$elm_ui$Internal$Style$Content(alignment)),
				content),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Child,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.any),
				_List_fromArray(
					[
						A2(
						$mdgriffith$elm_ui$Internal$Style$Descriptor,
						$mdgriffith$elm_ui$Internal$Style$selfName(
							$mdgriffith$elm_ui$Internal$Style$Self(alignment)),
						indiv)
					]))
			]);
	};
	return $mdgriffith$elm_ui$Internal$Style$Batch(
		A2($elm$core$List$concatMap, createDescription, $mdgriffith$elm_ui$Internal$Style$alignments));
};
var $mdgriffith$elm_ui$Internal$Style$elDescription = _List_fromArray(
	[
		A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'flex'),
		A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-direction', 'column'),
		A2($mdgriffith$elm_ui$Internal$Style$Prop, 'white-space', 'pre'),
		A2(
		$mdgriffith$elm_ui$Internal$Style$Descriptor,
		$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.hasBehind),
		_List_fromArray(
			[
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'z-index', '0'),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Child,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.behind),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'z-index', '-1')
					]))
			])),
		A2(
		$mdgriffith$elm_ui$Internal$Style$Descriptor,
		$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.seButton),
		_List_fromArray(
			[
				A2(
				$mdgriffith$elm_ui$Internal$Style$Child,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.text),
				_List_fromArray(
					[
						A2(
						$mdgriffith$elm_ui$Internal$Style$Descriptor,
						$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.heightFill),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '0')
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Descriptor,
						$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.widthFill),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-self', 'auto !important')
							]))
					]))
			])),
		A2(
		$mdgriffith$elm_ui$Internal$Style$Child,
		$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.heightContent),
		_List_fromArray(
			[
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'height', 'auto')
			])),
		A2(
		$mdgriffith$elm_ui$Internal$Style$Child,
		$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.heightFill),
		_List_fromArray(
			[
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '100000')
			])),
		A2(
		$mdgriffith$elm_ui$Internal$Style$Child,
		$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.widthFill),
		_List_fromArray(
			[
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'width', '100%')
			])),
		A2(
		$mdgriffith$elm_ui$Internal$Style$Child,
		$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.widthFillPortion),
		_List_fromArray(
			[
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'width', '100%')
			])),
		A2(
		$mdgriffith$elm_ui$Internal$Style$Child,
		$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.widthContent),
		_List_fromArray(
			[
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-self', 'flex-start')
			])),
		$mdgriffith$elm_ui$Internal$Style$describeAlignment(
		function (alignment) {
			switch (alignment.$) {
				case 'Top':
					return _Utils_Tuple2(
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'justify-content', 'flex-start')
							]),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-bottom', 'auto !important'),
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-top', '0 !important')
							]));
				case 'Bottom':
					return _Utils_Tuple2(
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'justify-content', 'flex-end')
							]),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-top', 'auto !important'),
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-bottom', '0 !important')
							]));
				case 'Right':
					return _Utils_Tuple2(
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-items', 'flex-end')
							]),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-self', 'flex-end')
							]));
				case 'Left':
					return _Utils_Tuple2(
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-items', 'flex-start')
							]),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-self', 'flex-start')
							]));
				case 'CenterX':
					return _Utils_Tuple2(
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-items', 'center')
							]),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-self', 'center')
							]));
				default:
					return _Utils_Tuple2(
						_List_fromArray(
							[
								A2(
								$mdgriffith$elm_ui$Internal$Style$Child,
								$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.any),
								_List_fromArray(
									[
										A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-top', 'auto'),
										A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-bottom', 'auto')
									]))
							]),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-top', 'auto !important'),
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-bottom', 'auto !important')
							]));
			}
		})
	]);
var $mdgriffith$elm_ui$Internal$Style$gridAlignments = function (values) {
	var createDescription = function (alignment) {
		return _List_fromArray(
			[
				A2(
				$mdgriffith$elm_ui$Internal$Style$Child,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.any),
				_List_fromArray(
					[
						A2(
						$mdgriffith$elm_ui$Internal$Style$Descriptor,
						$mdgriffith$elm_ui$Internal$Style$selfName(
							$mdgriffith$elm_ui$Internal$Style$Self(alignment)),
						values(alignment))
					]))
			]);
	};
	return $mdgriffith$elm_ui$Internal$Style$Batch(
		A2($elm$core$List$concatMap, createDescription, $mdgriffith$elm_ui$Internal$Style$alignments));
};
var $mdgriffith$elm_ui$Internal$Style$Above = {$: 'Above'};
var $mdgriffith$elm_ui$Internal$Style$Behind = {$: 'Behind'};
var $mdgriffith$elm_ui$Internal$Style$Below = {$: 'Below'};
var $mdgriffith$elm_ui$Internal$Style$OnLeft = {$: 'OnLeft'};
var $mdgriffith$elm_ui$Internal$Style$OnRight = {$: 'OnRight'};
var $mdgriffith$elm_ui$Internal$Style$Within = {$: 'Within'};
var $mdgriffith$elm_ui$Internal$Style$locations = function () {
	var loc = $mdgriffith$elm_ui$Internal$Style$Above;
	var _v0 = function () {
		switch (loc.$) {
			case 'Above':
				return _Utils_Tuple0;
			case 'Below':
				return _Utils_Tuple0;
			case 'OnRight':
				return _Utils_Tuple0;
			case 'OnLeft':
				return _Utils_Tuple0;
			case 'Within':
				return _Utils_Tuple0;
			default:
				return _Utils_Tuple0;
		}
	}();
	return _List_fromArray(
		[$mdgriffith$elm_ui$Internal$Style$Above, $mdgriffith$elm_ui$Internal$Style$Below, $mdgriffith$elm_ui$Internal$Style$OnRight, $mdgriffith$elm_ui$Internal$Style$OnLeft, $mdgriffith$elm_ui$Internal$Style$Within, $mdgriffith$elm_ui$Internal$Style$Behind]);
}();
var $mdgriffith$elm_ui$Internal$Style$baseSheet = _List_fromArray(
	[
		A2(
		$mdgriffith$elm_ui$Internal$Style$Class,
		'html,body',
		_List_fromArray(
			[
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'height', '100%'),
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'padding', '0'),
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin', '0')
			])),
		A2(
		$mdgriffith$elm_ui$Internal$Style$Class,
		_Utils_ap(
			$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.any),
			_Utils_ap(
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.single),
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.imageContainer))),
		_List_fromArray(
			[
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'block'),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.heightFill),
				_List_fromArray(
					[
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						'img',
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'max-height', '100%'),
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'object-fit', 'cover')
							]))
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.widthFill),
				_List_fromArray(
					[
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						'img',
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'max-width', '100%'),
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'object-fit', 'cover')
							]))
					]))
			])),
		A2(
		$mdgriffith$elm_ui$Internal$Style$Class,
		$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.any) + ':focus',
		_List_fromArray(
			[
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'outline', 'none')
			])),
		A2(
		$mdgriffith$elm_ui$Internal$Style$Class,
		$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.root),
		_List_fromArray(
			[
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'width', '100%'),
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'height', 'auto'),
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'min-height', '100%'),
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'z-index', '0'),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				_Utils_ap(
					$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.any),
					$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.heightFill)),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'height', '100%'),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.heightFill),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'height', '100%')
							]))
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Child,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.inFront),
				_List_fromArray(
					[
						A2(
						$mdgriffith$elm_ui$Internal$Style$Descriptor,
						$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.nearby),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'position', 'fixed'),
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'z-index', '20')
							]))
					]))
			])),
		A2(
		$mdgriffith$elm_ui$Internal$Style$Class,
		$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.nearby),
		_List_fromArray(
			[
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'position', 'relative'),
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'border', 'none'),
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'flex'),
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-direction', 'row'),
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-basis', 'auto'),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.single),
				$mdgriffith$elm_ui$Internal$Style$elDescription),
				$mdgriffith$elm_ui$Internal$Style$Batch(
				function (fn) {
					return A2($elm$core$List$map, fn, $mdgriffith$elm_ui$Internal$Style$locations);
				}(
					function (loc) {
						switch (loc.$) {
							case 'Above':
								return A2(
									$mdgriffith$elm_ui$Internal$Style$Descriptor,
									$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.above),
									_List_fromArray(
										[
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'position', 'absolute'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'bottom', '100%'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'left', '0'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'width', '100%'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'z-index', '20'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin', '0 !important'),
											A2(
											$mdgriffith$elm_ui$Internal$Style$Child,
											$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.heightFill),
											_List_fromArray(
												[
													A2($mdgriffith$elm_ui$Internal$Style$Prop, 'height', 'auto')
												])),
											A2(
											$mdgriffith$elm_ui$Internal$Style$Child,
											$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.widthFill),
											_List_fromArray(
												[
													A2($mdgriffith$elm_ui$Internal$Style$Prop, 'width', '100%')
												])),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'pointer-events', 'none'),
											A2(
											$mdgriffith$elm_ui$Internal$Style$Child,
											'*',
											_List_fromArray(
												[
													A2($mdgriffith$elm_ui$Internal$Style$Prop, 'pointer-events', 'auto')
												]))
										]));
							case 'Below':
								return A2(
									$mdgriffith$elm_ui$Internal$Style$Descriptor,
									$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.below),
									_List_fromArray(
										[
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'position', 'absolute'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'bottom', '0'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'left', '0'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'height', '0'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'width', '100%'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'z-index', '20'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin', '0 !important'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'pointer-events', 'none'),
											A2(
											$mdgriffith$elm_ui$Internal$Style$Child,
											'*',
											_List_fromArray(
												[
													A2($mdgriffith$elm_ui$Internal$Style$Prop, 'pointer-events', 'auto')
												])),
											A2(
											$mdgriffith$elm_ui$Internal$Style$Child,
											$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.heightFill),
											_List_fromArray(
												[
													A2($mdgriffith$elm_ui$Internal$Style$Prop, 'height', 'auto')
												]))
										]));
							case 'OnRight':
								return A2(
									$mdgriffith$elm_ui$Internal$Style$Descriptor,
									$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.onRight),
									_List_fromArray(
										[
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'position', 'absolute'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'left', '100%'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'top', '0'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'height', '100%'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin', '0 !important'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'z-index', '20'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'pointer-events', 'none'),
											A2(
											$mdgriffith$elm_ui$Internal$Style$Child,
											'*',
											_List_fromArray(
												[
													A2($mdgriffith$elm_ui$Internal$Style$Prop, 'pointer-events', 'auto')
												]))
										]));
							case 'OnLeft':
								return A2(
									$mdgriffith$elm_ui$Internal$Style$Descriptor,
									$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.onLeft),
									_List_fromArray(
										[
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'position', 'absolute'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'right', '100%'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'top', '0'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'height', '100%'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin', '0 !important'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'z-index', '20'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'pointer-events', 'none'),
											A2(
											$mdgriffith$elm_ui$Internal$Style$Child,
											'*',
											_List_fromArray(
												[
													A2($mdgriffith$elm_ui$Internal$Style$Prop, 'pointer-events', 'auto')
												]))
										]));
							case 'Within':
								return A2(
									$mdgriffith$elm_ui$Internal$Style$Descriptor,
									$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.inFront),
									_List_fromArray(
										[
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'position', 'absolute'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'width', '100%'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'height', '100%'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'left', '0'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'top', '0'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin', '0 !important'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'pointer-events', 'none'),
											A2(
											$mdgriffith$elm_ui$Internal$Style$Child,
											'*',
											_List_fromArray(
												[
													A2($mdgriffith$elm_ui$Internal$Style$Prop, 'pointer-events', 'auto')
												]))
										]));
							default:
								return A2(
									$mdgriffith$elm_ui$Internal$Style$Descriptor,
									$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.behind),
									_List_fromArray(
										[
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'position', 'absolute'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'width', '100%'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'height', '100%'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'left', '0'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'top', '0'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin', '0 !important'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'z-index', '0'),
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'pointer-events', 'none'),
											A2(
											$mdgriffith$elm_ui$Internal$Style$Child,
											'*',
											_List_fromArray(
												[
													A2($mdgriffith$elm_ui$Internal$Style$Prop, 'pointer-events', 'auto')
												]))
										]));
						}
					}))
			])),
		A2(
		$mdgriffith$elm_ui$Internal$Style$Class,
		$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.any),
		_List_fromArray(
			[
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'position', 'relative'),
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'border', 'none'),
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-shrink', '0'),
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'flex'),
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-direction', 'row'),
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-basis', 'auto'),
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'resize', 'none'),
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-feature-settings', 'inherit'),
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'box-sizing', 'border-box'),
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin', '0'),
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'padding', '0'),
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'border-width', '0'),
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'border-style', 'solid'),
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-size', 'inherit'),
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'color', 'inherit'),
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-family', 'inherit'),
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'line-height', '1'),
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-weight', 'inherit'),
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'text-decoration', 'none'),
				A2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-style', 'inherit'),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.wrapped),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-wrap', 'wrap')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.noTextSelection),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, '-moz-user-select', 'none'),
						A2($mdgriffith$elm_ui$Internal$Style$Prop, '-webkit-user-select', 'none'),
						A2($mdgriffith$elm_ui$Internal$Style$Prop, '-ms-user-select', 'none'),
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'user-select', 'none')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.cursorPointer),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'cursor', 'pointer')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.cursorText),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'cursor', 'text')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.passPointerEvents),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'pointer-events', 'none !important')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.capturePointerEvents),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'pointer-events', 'auto !important')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.transparent),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'opacity', '0')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.opaque),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'opacity', '1')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot(
					_Utils_ap($mdgriffith$elm_ui$Internal$Style$classes.hover, $mdgriffith$elm_ui$Internal$Style$classes.transparent)) + ':hover',
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'opacity', '0')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot(
					_Utils_ap($mdgriffith$elm_ui$Internal$Style$classes.hover, $mdgriffith$elm_ui$Internal$Style$classes.opaque)) + ':hover',
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'opacity', '1')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot(
					_Utils_ap($mdgriffith$elm_ui$Internal$Style$classes.focus, $mdgriffith$elm_ui$Internal$Style$classes.transparent)) + ':focus',
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'opacity', '0')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot(
					_Utils_ap($mdgriffith$elm_ui$Internal$Style$classes.focus, $mdgriffith$elm_ui$Internal$Style$classes.opaque)) + ':focus',
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'opacity', '1')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot(
					_Utils_ap($mdgriffith$elm_ui$Internal$Style$classes.active, $mdgriffith$elm_ui$Internal$Style$classes.transparent)) + ':active',
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'opacity', '0')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot(
					_Utils_ap($mdgriffith$elm_ui$Internal$Style$classes.active, $mdgriffith$elm_ui$Internal$Style$classes.opaque)) + ':active',
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'opacity', '1')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.transition),
				_List_fromArray(
					[
						A2(
						$mdgriffith$elm_ui$Internal$Style$Prop,
						'transition',
						A2(
							$elm$core$String$join,
							', ',
							A2(
								$elm$core$List$map,
								function (x) {
									return x + ' 160ms';
								},
								_List_fromArray(
									['transform', 'opacity', 'filter', 'background-color', 'color', 'font-size']))))
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.scrollbars),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'overflow', 'auto'),
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-shrink', '1')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.scrollbarsX),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'overflow-x', 'auto'),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Descriptor,
						$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.row),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-shrink', '1')
							]))
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.scrollbarsY),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'overflow-y', 'auto'),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Descriptor,
						$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.column),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-shrink', '1')
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Descriptor,
						$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.single),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-shrink', '1')
							]))
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.clip),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'overflow', 'hidden')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.clipX),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'overflow-x', 'hidden')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.clipY),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'overflow-y', 'hidden')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.widthContent),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'width', 'auto')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.borderNone),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'border-width', '0')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.borderDashed),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'border-style', 'dashed')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.borderDotted),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'border-style', 'dotted')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.borderSolid),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'border-style', 'solid')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.text),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'white-space', 'pre'),
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'inline-block')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.inputText),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'line-height', '1.05'),
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'background', 'transparent'),
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'text-align', 'inherit')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.single),
				$mdgriffith$elm_ui$Internal$Style$elDescription),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.row),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'flex'),
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-direction', 'row'),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.any),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-basis', '0%'),
								A2(
								$mdgriffith$elm_ui$Internal$Style$Descriptor,
								$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.widthExact),
								_List_fromArray(
									[
										A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-basis', 'auto')
									])),
								A2(
								$mdgriffith$elm_ui$Internal$Style$Descriptor,
								$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.link),
								_List_fromArray(
									[
										A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-basis', 'auto')
									]))
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.heightFill),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-self', 'stretch !important')
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.heightFillPortion),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-self', 'stretch !important')
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.widthFill),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '100000')
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.container),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '0'),
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-basis', 'auto'),
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-self', 'stretch')
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						'u:first-of-type.' + $mdgriffith$elm_ui$Internal$Style$classes.alignContainerRight,
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '1')
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						's:first-of-type.' + $mdgriffith$elm_ui$Internal$Style$classes.alignContainerCenterX,
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '1'),
								A2(
								$mdgriffith$elm_ui$Internal$Style$Child,
								$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.alignCenterX),
								_List_fromArray(
									[
										A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-left', 'auto !important')
									]))
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						's:last-of-type.' + $mdgriffith$elm_ui$Internal$Style$classes.alignContainerCenterX,
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '1'),
								A2(
								$mdgriffith$elm_ui$Internal$Style$Child,
								$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.alignCenterX),
								_List_fromArray(
									[
										A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-right', 'auto !important')
									]))
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						's:only-of-type.' + $mdgriffith$elm_ui$Internal$Style$classes.alignContainerCenterX,
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '1'),
								A2(
								$mdgriffith$elm_ui$Internal$Style$Child,
								$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.alignCenterY),
								_List_fromArray(
									[
										A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-top', 'auto !important'),
										A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-bottom', 'auto !important')
									]))
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						's:last-of-type.' + ($mdgriffith$elm_ui$Internal$Style$classes.alignContainerCenterX + ' ~ u'),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '0')
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						'u:first-of-type.' + ($mdgriffith$elm_ui$Internal$Style$classes.alignContainerRight + (' ~ s.' + $mdgriffith$elm_ui$Internal$Style$classes.alignContainerCenterX)),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '0')
							])),
						$mdgriffith$elm_ui$Internal$Style$describeAlignment(
						function (alignment) {
							switch (alignment.$) {
								case 'Top':
									return _Utils_Tuple2(
										_List_fromArray(
											[
												A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-items', 'flex-start')
											]),
										_List_fromArray(
											[
												A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-self', 'flex-start')
											]));
								case 'Bottom':
									return _Utils_Tuple2(
										_List_fromArray(
											[
												A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-items', 'flex-end')
											]),
										_List_fromArray(
											[
												A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-self', 'flex-end')
											]));
								case 'Right':
									return _Utils_Tuple2(
										_List_fromArray(
											[
												A2($mdgriffith$elm_ui$Internal$Style$Prop, 'justify-content', 'flex-end')
											]),
										_List_Nil);
								case 'Left':
									return _Utils_Tuple2(
										_List_fromArray(
											[
												A2($mdgriffith$elm_ui$Internal$Style$Prop, 'justify-content', 'flex-start')
											]),
										_List_Nil);
								case 'CenterX':
									return _Utils_Tuple2(
										_List_fromArray(
											[
												A2($mdgriffith$elm_ui$Internal$Style$Prop, 'justify-content', 'center')
											]),
										_List_Nil);
								default:
									return _Utils_Tuple2(
										_List_fromArray(
											[
												A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-items', 'center')
											]),
										_List_fromArray(
											[
												A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-self', 'center')
											]));
							}
						}),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Descriptor,
						$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.spaceEvenly),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'justify-content', 'space-between')
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Descriptor,
						$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.inputLabel),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-items', 'baseline')
							]))
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.column),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'flex'),
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-direction', 'column'),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.any),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-basis', '0px'),
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'min-height', 'min-content'),
								A2(
								$mdgriffith$elm_ui$Internal$Style$Descriptor,
								$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.heightExact),
								_List_fromArray(
									[
										A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-basis', 'auto')
									]))
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.heightFill),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '100000')
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.widthFill),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'width', '100%')
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.widthFillPortion),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'width', '100%')
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.widthContent),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-self', 'flex-start')
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						'u:first-of-type.' + $mdgriffith$elm_ui$Internal$Style$classes.alignContainerBottom,
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '1')
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						's:first-of-type.' + $mdgriffith$elm_ui$Internal$Style$classes.alignContainerCenterY,
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '1'),
								A2(
								$mdgriffith$elm_ui$Internal$Style$Child,
								$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.alignCenterY),
								_List_fromArray(
									[
										A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-top', 'auto !important'),
										A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-bottom', '0 !important')
									]))
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						's:last-of-type.' + $mdgriffith$elm_ui$Internal$Style$classes.alignContainerCenterY,
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '1'),
								A2(
								$mdgriffith$elm_ui$Internal$Style$Child,
								$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.alignCenterY),
								_List_fromArray(
									[
										A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-bottom', 'auto !important'),
										A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-top', '0 !important')
									]))
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						's:only-of-type.' + $mdgriffith$elm_ui$Internal$Style$classes.alignContainerCenterY,
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '1'),
								A2(
								$mdgriffith$elm_ui$Internal$Style$Child,
								$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.alignCenterY),
								_List_fromArray(
									[
										A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-top', 'auto !important'),
										A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-bottom', 'auto !important')
									]))
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						's:last-of-type.' + ($mdgriffith$elm_ui$Internal$Style$classes.alignContainerCenterY + ' ~ u'),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '0')
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						'u:first-of-type.' + ($mdgriffith$elm_ui$Internal$Style$classes.alignContainerBottom + (' ~ s.' + $mdgriffith$elm_ui$Internal$Style$classes.alignContainerCenterY)),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '0')
							])),
						$mdgriffith$elm_ui$Internal$Style$describeAlignment(
						function (alignment) {
							switch (alignment.$) {
								case 'Top':
									return _Utils_Tuple2(
										_List_fromArray(
											[
												A2($mdgriffith$elm_ui$Internal$Style$Prop, 'justify-content', 'flex-start')
											]),
										_List_fromArray(
											[
												A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-bottom', 'auto')
											]));
								case 'Bottom':
									return _Utils_Tuple2(
										_List_fromArray(
											[
												A2($mdgriffith$elm_ui$Internal$Style$Prop, 'justify-content', 'flex-end')
											]),
										_List_fromArray(
											[
												A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin-top', 'auto')
											]));
								case 'Right':
									return _Utils_Tuple2(
										_List_fromArray(
											[
												A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-items', 'flex-end')
											]),
										_List_fromArray(
											[
												A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-self', 'flex-end')
											]));
								case 'Left':
									return _Utils_Tuple2(
										_List_fromArray(
											[
												A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-items', 'flex-start')
											]),
										_List_fromArray(
											[
												A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-self', 'flex-start')
											]));
								case 'CenterX':
									return _Utils_Tuple2(
										_List_fromArray(
											[
												A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-items', 'center')
											]),
										_List_fromArray(
											[
												A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-self', 'center')
											]));
								default:
									return _Utils_Tuple2(
										_List_fromArray(
											[
												A2($mdgriffith$elm_ui$Internal$Style$Prop, 'justify-content', 'center')
											]),
										_List_Nil);
							}
						}),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.container),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-grow', '0'),
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-basis', 'auto'),
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'width', '100%'),
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-self', 'stretch !important')
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Descriptor,
						$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.spaceEvenly),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'justify-content', 'space-between')
							]))
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.grid),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', '-ms-grid'),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						'.gp',
						_List_fromArray(
							[
								A2(
								$mdgriffith$elm_ui$Internal$Style$Child,
								$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.any),
								_List_fromArray(
									[
										A2($mdgriffith$elm_ui$Internal$Style$Prop, 'width', '100%')
									]))
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Supports,
						_Utils_Tuple2('display', 'grid'),
						_List_fromArray(
							[
								_Utils_Tuple2('display', 'grid')
							])),
						$mdgriffith$elm_ui$Internal$Style$gridAlignments(
						function (alignment) {
							switch (alignment.$) {
								case 'Top':
									return _List_fromArray(
										[
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'justify-content', 'flex-start')
										]);
								case 'Bottom':
									return _List_fromArray(
										[
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'justify-content', 'flex-end')
										]);
								case 'Right':
									return _List_fromArray(
										[
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-items', 'flex-end')
										]);
								case 'Left':
									return _List_fromArray(
										[
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-items', 'flex-start')
										]);
								case 'CenterX':
									return _List_fromArray(
										[
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'align-items', 'center')
										]);
								default:
									return _List_fromArray(
										[
											A2($mdgriffith$elm_ui$Internal$Style$Prop, 'justify-content', 'center')
										]);
							}
						})
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.page),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'block'),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.any + ':first-child'),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin', '0 !important')
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						$mdgriffith$elm_ui$Internal$Style$dot(
							$mdgriffith$elm_ui$Internal$Style$classes.any + ($mdgriffith$elm_ui$Internal$Style$selfName(
								$mdgriffith$elm_ui$Internal$Style$Self($mdgriffith$elm_ui$Internal$Style$Left)) + (':first-child + .' + $mdgriffith$elm_ui$Internal$Style$classes.any))),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin', '0 !important')
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						$mdgriffith$elm_ui$Internal$Style$dot(
							$mdgriffith$elm_ui$Internal$Style$classes.any + ($mdgriffith$elm_ui$Internal$Style$selfName(
								$mdgriffith$elm_ui$Internal$Style$Self($mdgriffith$elm_ui$Internal$Style$Right)) + (':first-child + .' + $mdgriffith$elm_ui$Internal$Style$classes.any))),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'margin', '0 !important')
							])),
						$mdgriffith$elm_ui$Internal$Style$describeAlignment(
						function (alignment) {
							switch (alignment.$) {
								case 'Top':
									return _Utils_Tuple2(_List_Nil, _List_Nil);
								case 'Bottom':
									return _Utils_Tuple2(_List_Nil, _List_Nil);
								case 'Right':
									return _Utils_Tuple2(
										_List_Nil,
										_List_fromArray(
											[
												A2($mdgriffith$elm_ui$Internal$Style$Prop, 'float', 'right'),
												A2(
												$mdgriffith$elm_ui$Internal$Style$Descriptor,
												'::after',
												_List_fromArray(
													[
														A2($mdgriffith$elm_ui$Internal$Style$Prop, 'content', '\"\"'),
														A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'table'),
														A2($mdgriffith$elm_ui$Internal$Style$Prop, 'clear', 'both')
													]))
											]));
								case 'Left':
									return _Utils_Tuple2(
										_List_Nil,
										_List_fromArray(
											[
												A2($mdgriffith$elm_ui$Internal$Style$Prop, 'float', 'left'),
												A2(
												$mdgriffith$elm_ui$Internal$Style$Descriptor,
												'::after',
												_List_fromArray(
													[
														A2($mdgriffith$elm_ui$Internal$Style$Prop, 'content', '\"\"'),
														A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'table'),
														A2($mdgriffith$elm_ui$Internal$Style$Prop, 'clear', 'both')
													]))
											]));
								case 'CenterX':
									return _Utils_Tuple2(_List_Nil, _List_Nil);
								default:
									return _Utils_Tuple2(_List_Nil, _List_Nil);
							}
						})
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.inputMultiline),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'white-space', 'pre-wrap !important'),
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'height', '100%'),
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'width', '100%'),
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'background-color', 'transparent')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.inputMultilineWrapper),
				_List_fromArray(
					[
						A2(
						$mdgriffith$elm_ui$Internal$Style$Descriptor,
						$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.single),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'flex-basis', 'auto')
							]))
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.inputMultilineParent),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'white-space', 'pre-wrap !important'),
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'cursor', 'text'),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.inputMultilineFiller),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'white-space', 'pre-wrap !important'),
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'color', 'transparent')
							]))
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.paragraph),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'block'),
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'white-space', 'normal'),
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'overflow-wrap', 'break-word'),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Descriptor,
						$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.hasBehind),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'z-index', '0'),
								A2(
								$mdgriffith$elm_ui$Internal$Style$Child,
								$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.behind),
								_List_fromArray(
									[
										A2($mdgriffith$elm_ui$Internal$Style$Prop, 'z-index', '-1')
									]))
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$AllChildren,
						$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.text),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'inline'),
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'white-space', 'normal')
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$AllChildren,
						$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.paragraph),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'inline'),
								A2(
								$mdgriffith$elm_ui$Internal$Style$Descriptor,
								'::after',
								_List_fromArray(
									[
										A2($mdgriffith$elm_ui$Internal$Style$Prop, 'content', 'none')
									])),
								A2(
								$mdgriffith$elm_ui$Internal$Style$Descriptor,
								'::before',
								_List_fromArray(
									[
										A2($mdgriffith$elm_ui$Internal$Style$Prop, 'content', 'none')
									]))
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$AllChildren,
						$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.single),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'inline'),
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'white-space', 'normal'),
								A2(
								$mdgriffith$elm_ui$Internal$Style$Descriptor,
								$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.widthExact),
								_List_fromArray(
									[
										A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'inline-block')
									])),
								A2(
								$mdgriffith$elm_ui$Internal$Style$Descriptor,
								$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.inFront),
								_List_fromArray(
									[
										A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'flex')
									])),
								A2(
								$mdgriffith$elm_ui$Internal$Style$Descriptor,
								$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.behind),
								_List_fromArray(
									[
										A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'flex')
									])),
								A2(
								$mdgriffith$elm_ui$Internal$Style$Descriptor,
								$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.above),
								_List_fromArray(
									[
										A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'flex')
									])),
								A2(
								$mdgriffith$elm_ui$Internal$Style$Descriptor,
								$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.below),
								_List_fromArray(
									[
										A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'flex')
									])),
								A2(
								$mdgriffith$elm_ui$Internal$Style$Descriptor,
								$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.onRight),
								_List_fromArray(
									[
										A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'flex')
									])),
								A2(
								$mdgriffith$elm_ui$Internal$Style$Descriptor,
								$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.onLeft),
								_List_fromArray(
									[
										A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'flex')
									])),
								A2(
								$mdgriffith$elm_ui$Internal$Style$Child,
								$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.text),
								_List_fromArray(
									[
										A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'inline'),
										A2($mdgriffith$elm_ui$Internal$Style$Prop, 'white-space', 'normal')
									]))
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.row),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'inline')
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.column),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'inline-flex')
							])),
						A2(
						$mdgriffith$elm_ui$Internal$Style$Child,
						$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.grid),
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'inline-grid')
							])),
						$mdgriffith$elm_ui$Internal$Style$describeAlignment(
						function (alignment) {
							switch (alignment.$) {
								case 'Top':
									return _Utils_Tuple2(_List_Nil, _List_Nil);
								case 'Bottom':
									return _Utils_Tuple2(_List_Nil, _List_Nil);
								case 'Right':
									return _Utils_Tuple2(
										_List_Nil,
										_List_fromArray(
											[
												A2($mdgriffith$elm_ui$Internal$Style$Prop, 'float', 'right')
											]));
								case 'Left':
									return _Utils_Tuple2(
										_List_Nil,
										_List_fromArray(
											[
												A2($mdgriffith$elm_ui$Internal$Style$Prop, 'float', 'left')
											]));
								case 'CenterX':
									return _Utils_Tuple2(_List_Nil, _List_Nil);
								default:
									return _Utils_Tuple2(_List_Nil, _List_Nil);
							}
						})
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				'.hidden',
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'display', 'none')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.textThin),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-weight', '100')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.textExtraLight),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-weight', '200')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.textLight),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-weight', '300')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.textNormalWeight),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-weight', '400')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.textMedium),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-weight', '500')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.textSemiBold),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-weight', '600')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.bold),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-weight', '700')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.textExtraBold),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-weight', '800')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.textHeavy),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-weight', '900')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.italic),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-style', 'italic')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.strike),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'text-decoration', 'line-through')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.underline),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'text-decoration', 'underline'),
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'text-decoration-skip-ink', 'auto'),
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'text-decoration-skip', 'ink')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				_Utils_ap(
					$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.underline),
					$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.strike)),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'text-decoration', 'line-through underline'),
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'text-decoration-skip-ink', 'auto'),
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'text-decoration-skip', 'ink')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.textUnitalicized),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-style', 'normal')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.textJustify),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'text-align', 'justify')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.textJustifyAll),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'text-align', 'justify-all')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.textCenter),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'text-align', 'center')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.textRight),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'text-align', 'right')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				$mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.textLeft),
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'text-align', 'left')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Descriptor,
				'.modal',
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'position', 'fixed'),
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'left', '0'),
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'top', '0'),
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'width', '100%'),
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'height', '100%'),
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'pointer-events', 'none')
					]))
			]))
	]);
var $mdgriffith$elm_ui$Internal$Style$fontVariant = function (_var) {
	return _List_fromArray(
		[
			A2(
			$mdgriffith$elm_ui$Internal$Style$Class,
			'.v-' + _var,
			_List_fromArray(
				[
					A2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-feature-settings', '\"' + (_var + '\"'))
				])),
			A2(
			$mdgriffith$elm_ui$Internal$Style$Class,
			'.v-' + (_var + '-off'),
			_List_fromArray(
				[
					A2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-feature-settings', '\"' + (_var + '\" 0'))
				]))
		]);
};
var $mdgriffith$elm_ui$Internal$Style$commonValues = $elm$core$List$concat(
	_List_fromArray(
		[
			A2(
			$elm$core$List$map,
			function (x) {
				return A2(
					$mdgriffith$elm_ui$Internal$Style$Class,
					'.border-' + $elm$core$String$fromInt(x),
					_List_fromArray(
						[
							A2(
							$mdgriffith$elm_ui$Internal$Style$Prop,
							'border-width',
							$elm$core$String$fromInt(x) + 'px')
						]));
			},
			A2($elm$core$List$range, 0, 6)),
			A2(
			$elm$core$List$map,
			function (i) {
				return A2(
					$mdgriffith$elm_ui$Internal$Style$Class,
					'.font-size-' + $elm$core$String$fromInt(i),
					_List_fromArray(
						[
							A2(
							$mdgriffith$elm_ui$Internal$Style$Prop,
							'font-size',
							$elm$core$String$fromInt(i) + 'px')
						]));
			},
			A2($elm$core$List$range, 8, 32)),
			A2(
			$elm$core$List$map,
			function (i) {
				return A2(
					$mdgriffith$elm_ui$Internal$Style$Class,
					'.p-' + $elm$core$String$fromInt(i),
					_List_fromArray(
						[
							A2(
							$mdgriffith$elm_ui$Internal$Style$Prop,
							'padding',
							$elm$core$String$fromInt(i) + 'px')
						]));
			},
			A2($elm$core$List$range, 0, 24)),
			_List_fromArray(
			[
				A2(
				$mdgriffith$elm_ui$Internal$Style$Class,
				'.v-smcp',
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-variant', 'small-caps')
					])),
				A2(
				$mdgriffith$elm_ui$Internal$Style$Class,
				'.v-smcp-off',
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Internal$Style$Prop, 'font-variant', 'normal')
					]))
			]),
			$mdgriffith$elm_ui$Internal$Style$fontVariant('zero'),
			$mdgriffith$elm_ui$Internal$Style$fontVariant('onum'),
			$mdgriffith$elm_ui$Internal$Style$fontVariant('liga'),
			$mdgriffith$elm_ui$Internal$Style$fontVariant('dlig'),
			$mdgriffith$elm_ui$Internal$Style$fontVariant('ordn'),
			$mdgriffith$elm_ui$Internal$Style$fontVariant('tnum'),
			$mdgriffith$elm_ui$Internal$Style$fontVariant('afrc'),
			$mdgriffith$elm_ui$Internal$Style$fontVariant('frac')
		]));
var $mdgriffith$elm_ui$Internal$Style$explainer = '\n.explain {\n    border: 6px solid rgb(174, 121, 15) !important;\n}\n.explain > .' + ($mdgriffith$elm_ui$Internal$Style$classes.any + (' {\n    border: 4px dashed rgb(0, 151, 167) !important;\n}\n\n.ctr {\n    border: none !important;\n}\n.explain > .ctr > .' + ($mdgriffith$elm_ui$Internal$Style$classes.any + ' {\n    border: 4px dashed rgb(0, 151, 167) !important;\n}\n\n')));
var $mdgriffith$elm_ui$Internal$Style$inputTextReset = '\ninput[type="search"],\ninput[type="search"]::-webkit-search-decoration,\ninput[type="search"]::-webkit-search-cancel-button,\ninput[type="search"]::-webkit-search-results-button,\ninput[type="search"]::-webkit-search-results-decoration {\n  -webkit-appearance:none;\n}\n';
var $mdgriffith$elm_ui$Internal$Style$sliderReset = '\ninput[type=range] {\n  -webkit-appearance: none; \n  background: transparent;\n  position:absolute;\n  left:0;\n  top:0;\n  z-index:10;\n  width: 100%;\n  outline: dashed 1px;\n  height: 100%;\n  opacity: 0;\n}\n';
var $mdgriffith$elm_ui$Internal$Style$thumbReset = '\ninput[type=range]::-webkit-slider-thumb {\n    -webkit-appearance: none;\n    opacity: 0.5;\n    width: 80px;\n    height: 80px;\n    background-color: black;\n    border:none;\n    border-radius: 5px;\n}\ninput[type=range]::-moz-range-thumb {\n    opacity: 0.5;\n    width: 80px;\n    height: 80px;\n    background-color: black;\n    border:none;\n    border-radius: 5px;\n}\ninput[type=range]::-ms-thumb {\n    opacity: 0.5;\n    width: 80px;\n    height: 80px;\n    background-color: black;\n    border:none;\n    border-radius: 5px;\n}\ninput[type=range][orient=vertical]{\n    writing-mode: bt-lr; /* IE */\n    -webkit-appearance: slider-vertical;  /* WebKit */\n}\n';
var $mdgriffith$elm_ui$Internal$Style$trackReset = '\ninput[type=range]::-moz-range-track {\n    background: transparent;\n    cursor: pointer;\n}\ninput[type=range]::-ms-track {\n    background: transparent;\n    cursor: pointer;\n}\ninput[type=range]::-webkit-slider-runnable-track {\n    background: transparent;\n    cursor: pointer;\n}\n';
var $mdgriffith$elm_ui$Internal$Style$overrides = '@media screen and (-ms-high-contrast: active), (-ms-high-contrast: none) {' + ($mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.any) + ($mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.row) + (' > ' + ($mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.any) + (' { flex-basis: auto !important; } ' + ($mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.any) + ($mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.row) + (' > ' + ($mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.any) + ($mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.container) + (' { flex-basis: auto !important; }}' + ($mdgriffith$elm_ui$Internal$Style$inputTextReset + ($mdgriffith$elm_ui$Internal$Style$sliderReset + ($mdgriffith$elm_ui$Internal$Style$trackReset + ($mdgriffith$elm_ui$Internal$Style$thumbReset + $mdgriffith$elm_ui$Internal$Style$explainer)))))))))))))));
var $mdgriffith$elm_ui$Internal$Style$Intermediate = function (a) {
	return {$: 'Intermediate', a: a};
};
var $mdgriffith$elm_ui$Internal$Style$emptyIntermediate = F2(
	function (selector, closing) {
		return $mdgriffith$elm_ui$Internal$Style$Intermediate(
			{closing: closing, others: _List_Nil, props: _List_Nil, selector: selector});
	});
var $mdgriffith$elm_ui$Internal$Style$renderRules = F2(
	function (_v0, rulesToRender) {
		var parent = _v0.a;
		var generateIntermediates = F2(
			function (rule, rendered) {
				switch (rule.$) {
					case 'Prop':
						var name = rule.a;
						var val = rule.b;
						return _Utils_update(
							rendered,
							{
								props: A2(
									$elm$core$List$cons,
									_Utils_Tuple2(name, val),
									rendered.props)
							});
					case 'Supports':
						var _v2 = rule.a;
						var prop = _v2.a;
						var value = _v2.b;
						var props = rule.b;
						return _Utils_update(
							rendered,
							{
								others: A2(
									$elm$core$List$cons,
									$mdgriffith$elm_ui$Internal$Style$Intermediate(
										{closing: '\n}', others: _List_Nil, props: props, selector: '@supports (' + (prop + (':' + (value + (') {' + parent.selector))))}),
									rendered.others)
							});
					case 'Adjacent':
						var selector = rule.a;
						var adjRules = rule.b;
						return _Utils_update(
							rendered,
							{
								others: A2(
									$elm$core$List$cons,
									A2(
										$mdgriffith$elm_ui$Internal$Style$renderRules,
										A2($mdgriffith$elm_ui$Internal$Style$emptyIntermediate, parent.selector + (' + ' + selector), ''),
										adjRules),
									rendered.others)
							});
					case 'Child':
						var child = rule.a;
						var childRules = rule.b;
						return _Utils_update(
							rendered,
							{
								others: A2(
									$elm$core$List$cons,
									A2(
										$mdgriffith$elm_ui$Internal$Style$renderRules,
										A2($mdgriffith$elm_ui$Internal$Style$emptyIntermediate, parent.selector + (' > ' + child), ''),
										childRules),
									rendered.others)
							});
					case 'AllChildren':
						var child = rule.a;
						var childRules = rule.b;
						return _Utils_update(
							rendered,
							{
								others: A2(
									$elm$core$List$cons,
									A2(
										$mdgriffith$elm_ui$Internal$Style$renderRules,
										A2($mdgriffith$elm_ui$Internal$Style$emptyIntermediate, parent.selector + (' ' + child), ''),
										childRules),
									rendered.others)
							});
					case 'Descriptor':
						var descriptor = rule.a;
						var descriptorRules = rule.b;
						return _Utils_update(
							rendered,
							{
								others: A2(
									$elm$core$List$cons,
									A2(
										$mdgriffith$elm_ui$Internal$Style$renderRules,
										A2(
											$mdgriffith$elm_ui$Internal$Style$emptyIntermediate,
											_Utils_ap(parent.selector, descriptor),
											''),
										descriptorRules),
									rendered.others)
							});
					default:
						var batched = rule.a;
						return _Utils_update(
							rendered,
							{
								others: A2(
									$elm$core$List$cons,
									A2(
										$mdgriffith$elm_ui$Internal$Style$renderRules,
										A2($mdgriffith$elm_ui$Internal$Style$emptyIntermediate, parent.selector, ''),
										batched),
									rendered.others)
							});
				}
			});
		return $mdgriffith$elm_ui$Internal$Style$Intermediate(
			A3($elm$core$List$foldr, generateIntermediates, parent, rulesToRender));
	});
var $mdgriffith$elm_ui$Internal$Style$renderCompact = function (styleClasses) {
	var renderValues = function (values) {
		return $elm$core$String$concat(
			A2(
				$elm$core$List$map,
				function (_v3) {
					var x = _v3.a;
					var y = _v3.b;
					return x + (':' + (y + ';'));
				},
				values));
	};
	var renderClass = function (rule) {
		var _v2 = rule.props;
		if (!_v2.b) {
			return '';
		} else {
			return rule.selector + ('{' + (renderValues(rule.props) + (rule.closing + '}')));
		}
	};
	var renderIntermediate = function (_v0) {
		var rule = _v0.a;
		return _Utils_ap(
			renderClass(rule),
			$elm$core$String$concat(
				A2($elm$core$List$map, renderIntermediate, rule.others)));
	};
	return $elm$core$String$concat(
		A2(
			$elm$core$List$map,
			renderIntermediate,
			A3(
				$elm$core$List$foldr,
				F2(
					function (_v1, existing) {
						var name = _v1.a;
						var styleRules = _v1.b;
						return A2(
							$elm$core$List$cons,
							A2(
								$mdgriffith$elm_ui$Internal$Style$renderRules,
								A2($mdgriffith$elm_ui$Internal$Style$emptyIntermediate, name, ''),
								styleRules),
							existing);
					}),
				_List_Nil,
				styleClasses)));
};
var $mdgriffith$elm_ui$Internal$Style$rules = _Utils_ap(
	$mdgriffith$elm_ui$Internal$Style$overrides,
	$mdgriffith$elm_ui$Internal$Style$renderCompact(
		_Utils_ap($mdgriffith$elm_ui$Internal$Style$baseSheet, $mdgriffith$elm_ui$Internal$Style$commonValues)));
var $mdgriffith$elm_ui$Internal$Model$staticRoot = function (opts) {
	var _v0 = opts.mode;
	switch (_v0.$) {
		case 'Layout':
			return A3(
				$elm$virtual_dom$VirtualDom$node,
				'div',
				_List_Nil,
				_List_fromArray(
					[
						A3(
						$elm$virtual_dom$VirtualDom$node,
						'style',
						_List_Nil,
						_List_fromArray(
							[
								$elm$virtual_dom$VirtualDom$text($mdgriffith$elm_ui$Internal$Style$rules)
							]))
					]));
		case 'NoStaticStyleSheet':
			return $elm$virtual_dom$VirtualDom$text('');
		default:
			return A3(
				$elm$virtual_dom$VirtualDom$node,
				'elm-ui-static-rules',
				_List_fromArray(
					[
						A2(
						$elm$virtual_dom$VirtualDom$property,
						'rules',
						$elm$json$Json$Encode$string($mdgriffith$elm_ui$Internal$Style$rules))
					]),
				_List_Nil);
	}
};
var $mdgriffith$elm_ui$Internal$Model$fontName = function (font) {
	switch (font.$) {
		case 'Serif':
			return 'serif';
		case 'SansSerif':
			return 'sans-serif';
		case 'Monospace':
			return 'monospace';
		case 'Typeface':
			var name = font.a;
			return '\"' + (name + '\"');
		case 'ImportFont':
			var name = font.a;
			var url = font.b;
			return '\"' + (name + '\"');
		default:
			var name = font.a.name;
			return '\"' + (name + '\"');
	}
};
var $mdgriffith$elm_ui$Internal$Model$isSmallCaps = function (_var) {
	switch (_var.$) {
		case 'VariantActive':
			var name = _var.a;
			return name === 'smcp';
		case 'VariantOff':
			var name = _var.a;
			return false;
		default:
			var name = _var.a;
			var index = _var.b;
			return (name === 'smcp') && (index === 1);
	}
};
var $mdgriffith$elm_ui$Internal$Model$hasSmallCaps = function (typeface) {
	if (typeface.$ === 'FontWith') {
		var font = typeface.a;
		return A2($elm$core$List$any, $mdgriffith$elm_ui$Internal$Model$isSmallCaps, font.variants);
	} else {
		return false;
	}
};
var $mdgriffith$elm_ui$Internal$Model$renderProps = F3(
	function (force, _v0, existing) {
		var key = _v0.a;
		var val = _v0.b;
		return force ? (existing + ('\n  ' + (key + (': ' + (val + ' !important;'))))) : (existing + ('\n  ' + (key + (': ' + (val + ';')))));
	});
var $mdgriffith$elm_ui$Internal$Model$renderStyle = F4(
	function (options, maybePseudo, selector, props) {
		if (maybePseudo.$ === 'Nothing') {
			return _List_fromArray(
				[
					selector + ('{' + (A3(
					$elm$core$List$foldl,
					$mdgriffith$elm_ui$Internal$Model$renderProps(false),
					'',
					props) + '\n}'))
				]);
		} else {
			var pseudo = maybePseudo.a;
			switch (pseudo.$) {
				case 'Hover':
					var _v2 = options.hover;
					switch (_v2.$) {
						case 'NoHover':
							return _List_Nil;
						case 'ForceHover':
							return _List_fromArray(
								[
									selector + ('-hv {' + (A3(
									$elm$core$List$foldl,
									$mdgriffith$elm_ui$Internal$Model$renderProps(true),
									'',
									props) + '\n}'))
								]);
						default:
							return _List_fromArray(
								[
									selector + ('-hv:hover {' + (A3(
									$elm$core$List$foldl,
									$mdgriffith$elm_ui$Internal$Model$renderProps(false),
									'',
									props) + '\n}'))
								]);
					}
				case 'Focus':
					var renderedProps = A3(
						$elm$core$List$foldl,
						$mdgriffith$elm_ui$Internal$Model$renderProps(false),
						'',
						props);
					return _List_fromArray(
						[
							selector + ('-fs:focus {' + (renderedProps + '\n}')),
							('.' + ($mdgriffith$elm_ui$Internal$Style$classes.any + (':focus ' + (selector + '-fs  {')))) + (renderedProps + '\n}'),
							(selector + '-fs:focus-within {') + (renderedProps + '\n}'),
							('.ui-slide-bar:focus + ' + ($mdgriffith$elm_ui$Internal$Style$dot($mdgriffith$elm_ui$Internal$Style$classes.any) + (' .focusable-thumb' + (selector + '-fs {')))) + (renderedProps + '\n}')
						]);
				default:
					return _List_fromArray(
						[
							selector + ('-act:active {' + (A3(
							$elm$core$List$foldl,
							$mdgriffith$elm_ui$Internal$Model$renderProps(false),
							'',
							props) + '\n}'))
						]);
			}
		}
	});
var $mdgriffith$elm_ui$Internal$Model$renderVariant = function (_var) {
	switch (_var.$) {
		case 'VariantActive':
			var name = _var.a;
			return '\"' + (name + '\"');
		case 'VariantOff':
			var name = _var.a;
			return '\"' + (name + '\" 0');
		default:
			var name = _var.a;
			var index = _var.b;
			return '\"' + (name + ('\" ' + $elm$core$String$fromInt(index)));
	}
};
var $mdgriffith$elm_ui$Internal$Model$renderVariants = function (typeface) {
	if (typeface.$ === 'FontWith') {
		var font = typeface.a;
		return $elm$core$Maybe$Just(
			A2(
				$elm$core$String$join,
				', ',
				A2($elm$core$List$map, $mdgriffith$elm_ui$Internal$Model$renderVariant, font.variants)));
	} else {
		return $elm$core$Maybe$Nothing;
	}
};
var $mdgriffith$elm_ui$Internal$Model$transformValue = function (transform) {
	switch (transform.$) {
		case 'Untransformed':
			return $elm$core$Maybe$Nothing;
		case 'Moved':
			var _v1 = transform.a;
			var x = _v1.a;
			var y = _v1.b;
			var z = _v1.c;
			return $elm$core$Maybe$Just(
				'translate3d(' + ($elm$core$String$fromFloat(x) + ('px, ' + ($elm$core$String$fromFloat(y) + ('px, ' + ($elm$core$String$fromFloat(z) + 'px)'))))));
		default:
			var _v2 = transform.a;
			var tx = _v2.a;
			var ty = _v2.b;
			var tz = _v2.c;
			var _v3 = transform.b;
			var sx = _v3.a;
			var sy = _v3.b;
			var sz = _v3.c;
			var _v4 = transform.c;
			var ox = _v4.a;
			var oy = _v4.b;
			var oz = _v4.c;
			var angle = transform.d;
			var translate = 'translate3d(' + ($elm$core$String$fromFloat(tx) + ('px, ' + ($elm$core$String$fromFloat(ty) + ('px, ' + ($elm$core$String$fromFloat(tz) + 'px)')))));
			var scale = 'scale3d(' + ($elm$core$String$fromFloat(sx) + (', ' + ($elm$core$String$fromFloat(sy) + (', ' + ($elm$core$String$fromFloat(sz) + ')')))));
			var rotate = 'rotate3d(' + ($elm$core$String$fromFloat(ox) + (', ' + ($elm$core$String$fromFloat(oy) + (', ' + ($elm$core$String$fromFloat(oz) + (', ' + ($elm$core$String$fromFloat(angle) + 'rad)')))))));
			return $elm$core$Maybe$Just(translate + (' ' + (scale + (' ' + rotate))));
	}
};
var $mdgriffith$elm_ui$Internal$Model$renderStyleRule = F3(
	function (options, rule, maybePseudo) {
		switch (rule.$) {
			case 'Style':
				var selector = rule.a;
				var props = rule.b;
				return A4($mdgriffith$elm_ui$Internal$Model$renderStyle, options, maybePseudo, selector, props);
			case 'Shadows':
				var name = rule.a;
				var prop = rule.b;
				return A4(
					$mdgriffith$elm_ui$Internal$Model$renderStyle,
					options,
					maybePseudo,
					'.' + name,
					_List_fromArray(
						[
							A2($mdgriffith$elm_ui$Internal$Model$Property, 'box-shadow', prop)
						]));
			case 'Transparency':
				var name = rule.a;
				var transparency = rule.b;
				var opacity = A2(
					$elm$core$Basics$max,
					0,
					A2($elm$core$Basics$min, 1, 1 - transparency));
				return A4(
					$mdgriffith$elm_ui$Internal$Model$renderStyle,
					options,
					maybePseudo,
					'.' + name,
					_List_fromArray(
						[
							A2(
							$mdgriffith$elm_ui$Internal$Model$Property,
							'opacity',
							$elm$core$String$fromFloat(opacity))
						]));
			case 'FontSize':
				var i = rule.a;
				return A4(
					$mdgriffith$elm_ui$Internal$Model$renderStyle,
					options,
					maybePseudo,
					'.font-size-' + $elm$core$String$fromInt(i),
					_List_fromArray(
						[
							A2(
							$mdgriffith$elm_ui$Internal$Model$Property,
							'font-size',
							$elm$core$String$fromInt(i) + 'px')
						]));
			case 'FontFamily':
				var name = rule.a;
				var typefaces = rule.b;
				var features = A2(
					$elm$core$String$join,
					', ',
					A2($elm$core$List$filterMap, $mdgriffith$elm_ui$Internal$Model$renderVariants, typefaces));
				var families = _List_fromArray(
					[
						A2(
						$mdgriffith$elm_ui$Internal$Model$Property,
						'font-family',
						A2(
							$elm$core$String$join,
							', ',
							A2($elm$core$List$map, $mdgriffith$elm_ui$Internal$Model$fontName, typefaces))),
						A2($mdgriffith$elm_ui$Internal$Model$Property, 'font-feature-settings', features),
						A2(
						$mdgriffith$elm_ui$Internal$Model$Property,
						'font-variant',
						A2($elm$core$List$any, $mdgriffith$elm_ui$Internal$Model$hasSmallCaps, typefaces) ? 'small-caps' : 'normal')
					]);
				return A4($mdgriffith$elm_ui$Internal$Model$renderStyle, options, maybePseudo, '.' + name, families);
			case 'Single':
				var _class = rule.a;
				var prop = rule.b;
				var val = rule.c;
				return A4(
					$mdgriffith$elm_ui$Internal$Model$renderStyle,
					options,
					maybePseudo,
					'.' + _class,
					_List_fromArray(
						[
							A2($mdgriffith$elm_ui$Internal$Model$Property, prop, val)
						]));
			case 'Colored':
				var _class = rule.a;
				var prop = rule.b;
				var color = rule.c;
				return A4(
					$mdgriffith$elm_ui$Internal$Model$renderStyle,
					options,
					maybePseudo,
					'.' + _class,
					_List_fromArray(
						[
							A2(
							$mdgriffith$elm_ui$Internal$Model$Property,
							prop,
							$mdgriffith$elm_ui$Internal$Model$formatColor(color))
						]));
			case 'SpacingStyle':
				var cls = rule.a;
				var x = rule.b;
				var y = rule.c;
				var yPx = $elm$core$String$fromInt(y) + 'px';
				var xPx = $elm$core$String$fromInt(x) + 'px';
				var single = '.' + $mdgriffith$elm_ui$Internal$Style$classes.single;
				var row = '.' + $mdgriffith$elm_ui$Internal$Style$classes.row;
				var wrappedRow = '.' + ($mdgriffith$elm_ui$Internal$Style$classes.wrapped + row);
				var right = '.' + $mdgriffith$elm_ui$Internal$Style$classes.alignRight;
				var paragraph = '.' + $mdgriffith$elm_ui$Internal$Style$classes.paragraph;
				var page = '.' + $mdgriffith$elm_ui$Internal$Style$classes.page;
				var left = '.' + $mdgriffith$elm_ui$Internal$Style$classes.alignLeft;
				var halfY = $elm$core$String$fromFloat(y / 2) + 'px';
				var halfX = $elm$core$String$fromFloat(x / 2) + 'px';
				var column = '.' + $mdgriffith$elm_ui$Internal$Style$classes.column;
				var _class = '.' + cls;
				var any = '.' + $mdgriffith$elm_ui$Internal$Style$classes.any;
				return $elm$core$List$concat(
					_List_fromArray(
						[
							A4(
							$mdgriffith$elm_ui$Internal$Model$renderStyle,
							options,
							maybePseudo,
							_class + (row + (' > ' + (any + (' + ' + any)))),
							_List_fromArray(
								[
									A2($mdgriffith$elm_ui$Internal$Model$Property, 'margin-left', xPx)
								])),
							A4(
							$mdgriffith$elm_ui$Internal$Model$renderStyle,
							options,
							maybePseudo,
							_class + (wrappedRow + (' > ' + any)),
							_List_fromArray(
								[
									A2($mdgriffith$elm_ui$Internal$Model$Property, 'margin', halfY + (' ' + halfX))
								])),
							A4(
							$mdgriffith$elm_ui$Internal$Model$renderStyle,
							options,
							maybePseudo,
							_class + (column + (' > ' + (any + (' + ' + any)))),
							_List_fromArray(
								[
									A2($mdgriffith$elm_ui$Internal$Model$Property, 'margin-top', yPx)
								])),
							A4(
							$mdgriffith$elm_ui$Internal$Model$renderStyle,
							options,
							maybePseudo,
							_class + (page + (' > ' + (any + (' + ' + any)))),
							_List_fromArray(
								[
									A2($mdgriffith$elm_ui$Internal$Model$Property, 'margin-top', yPx)
								])),
							A4(
							$mdgriffith$elm_ui$Internal$Model$renderStyle,
							options,
							maybePseudo,
							_class + (page + (' > ' + left)),
							_List_fromArray(
								[
									A2($mdgriffith$elm_ui$Internal$Model$Property, 'margin-right', xPx)
								])),
							A4(
							$mdgriffith$elm_ui$Internal$Model$renderStyle,
							options,
							maybePseudo,
							_class + (page + (' > ' + right)),
							_List_fromArray(
								[
									A2($mdgriffith$elm_ui$Internal$Model$Property, 'margin-left', xPx)
								])),
							A4(
							$mdgriffith$elm_ui$Internal$Model$renderStyle,
							options,
							maybePseudo,
							_Utils_ap(_class, paragraph),
							_List_fromArray(
								[
									A2(
									$mdgriffith$elm_ui$Internal$Model$Property,
									'line-height',
									'calc(1em + ' + ($elm$core$String$fromInt(y) + 'px)'))
								])),
							A4(
							$mdgriffith$elm_ui$Internal$Model$renderStyle,
							options,
							maybePseudo,
							'textarea' + (any + _class),
							_List_fromArray(
								[
									A2(
									$mdgriffith$elm_ui$Internal$Model$Property,
									'line-height',
									'calc(1em + ' + ($elm$core$String$fromInt(y) + 'px)')),
									A2(
									$mdgriffith$elm_ui$Internal$Model$Property,
									'height',
									'calc(100% + ' + ($elm$core$String$fromInt(y) + 'px)'))
								])),
							A4(
							$mdgriffith$elm_ui$Internal$Model$renderStyle,
							options,
							maybePseudo,
							_class + (paragraph + (' > ' + left)),
							_List_fromArray(
								[
									A2($mdgriffith$elm_ui$Internal$Model$Property, 'margin-right', xPx)
								])),
							A4(
							$mdgriffith$elm_ui$Internal$Model$renderStyle,
							options,
							maybePseudo,
							_class + (paragraph + (' > ' + right)),
							_List_fromArray(
								[
									A2($mdgriffith$elm_ui$Internal$Model$Property, 'margin-left', xPx)
								])),
							A4(
							$mdgriffith$elm_ui$Internal$Model$renderStyle,
							options,
							maybePseudo,
							_class + (paragraph + '::after'),
							_List_fromArray(
								[
									A2($mdgriffith$elm_ui$Internal$Model$Property, 'content', '\'\''),
									A2($mdgriffith$elm_ui$Internal$Model$Property, 'display', 'block'),
									A2($mdgriffith$elm_ui$Internal$Model$Property, 'height', '0'),
									A2($mdgriffith$elm_ui$Internal$Model$Property, 'width', '0'),
									A2(
									$mdgriffith$elm_ui$Internal$Model$Property,
									'margin-top',
									$elm$core$String$fromInt((-1) * ((y / 2) | 0)) + 'px')
								])),
							A4(
							$mdgriffith$elm_ui$Internal$Model$renderStyle,
							options,
							maybePseudo,
							_class + (paragraph + '::before'),
							_List_fromArray(
								[
									A2($mdgriffith$elm_ui$Internal$Model$Property, 'content', '\'\''),
									A2($mdgriffith$elm_ui$Internal$Model$Property, 'display', 'block'),
									A2($mdgriffith$elm_ui$Internal$Model$Property, 'height', '0'),
									A2($mdgriffith$elm_ui$Internal$Model$Property, 'width', '0'),
									A2(
									$mdgriffith$elm_ui$Internal$Model$Property,
									'margin-bottom',
									$elm$core$String$fromInt((-1) * ((y / 2) | 0)) + 'px')
								]))
						]));
			case 'PaddingStyle':
				var cls = rule.a;
				var top = rule.b;
				var right = rule.c;
				var bottom = rule.d;
				var left = rule.e;
				var _class = '.' + cls;
				return A4(
					$mdgriffith$elm_ui$Internal$Model$renderStyle,
					options,
					maybePseudo,
					_class,
					_List_fromArray(
						[
							A2(
							$mdgriffith$elm_ui$Internal$Model$Property,
							'padding',
							$elm$core$String$fromFloat(top) + ('px ' + ($elm$core$String$fromFloat(right) + ('px ' + ($elm$core$String$fromFloat(bottom) + ('px ' + ($elm$core$String$fromFloat(left) + 'px')))))))
						]));
			case 'BorderWidth':
				var cls = rule.a;
				var top = rule.b;
				var right = rule.c;
				var bottom = rule.d;
				var left = rule.e;
				var _class = '.' + cls;
				return A4(
					$mdgriffith$elm_ui$Internal$Model$renderStyle,
					options,
					maybePseudo,
					_class,
					_List_fromArray(
						[
							A2(
							$mdgriffith$elm_ui$Internal$Model$Property,
							'border-width',
							$elm$core$String$fromInt(top) + ('px ' + ($elm$core$String$fromInt(right) + ('px ' + ($elm$core$String$fromInt(bottom) + ('px ' + ($elm$core$String$fromInt(left) + 'px')))))))
						]));
			case 'GridTemplateStyle':
				var template = rule.a;
				var toGridLengthHelper = F3(
					function (minimum, maximum, x) {
						toGridLengthHelper:
						while (true) {
							switch (x.$) {
								case 'Px':
									var px = x.a;
									return $elm$core$String$fromInt(px) + 'px';
								case 'Content':
									var _v2 = _Utils_Tuple2(minimum, maximum);
									if (_v2.a.$ === 'Nothing') {
										if (_v2.b.$ === 'Nothing') {
											var _v3 = _v2.a;
											var _v4 = _v2.b;
											return 'max-content';
										} else {
											var _v6 = _v2.a;
											var maxSize = _v2.b.a;
											return 'minmax(max-content, ' + ($elm$core$String$fromInt(maxSize) + 'px)');
										}
									} else {
										if (_v2.b.$ === 'Nothing') {
											var minSize = _v2.a.a;
											var _v5 = _v2.b;
											return 'minmax(' + ($elm$core$String$fromInt(minSize) + ('px, ' + 'max-content)'));
										} else {
											var minSize = _v2.a.a;
											var maxSize = _v2.b.a;
											return 'minmax(' + ($elm$core$String$fromInt(minSize) + ('px, ' + ($elm$core$String$fromInt(maxSize) + 'px)')));
										}
									}
								case 'Fill':
									var i = x.a;
									var _v7 = _Utils_Tuple2(minimum, maximum);
									if (_v7.a.$ === 'Nothing') {
										if (_v7.b.$ === 'Nothing') {
											var _v8 = _v7.a;
											var _v9 = _v7.b;
											return $elm$core$String$fromInt(i) + 'fr';
										} else {
											var _v11 = _v7.a;
											var maxSize = _v7.b.a;
											return 'minmax(max-content, ' + ($elm$core$String$fromInt(maxSize) + 'px)');
										}
									} else {
										if (_v7.b.$ === 'Nothing') {
											var minSize = _v7.a.a;
											var _v10 = _v7.b;
											return 'minmax(' + ($elm$core$String$fromInt(minSize) + ('px, ' + ($elm$core$String$fromInt(i) + ('fr' + 'fr)'))));
										} else {
											var minSize = _v7.a.a;
											var maxSize = _v7.b.a;
											return 'minmax(' + ($elm$core$String$fromInt(minSize) + ('px, ' + ($elm$core$String$fromInt(maxSize) + 'px)')));
										}
									}
								case 'Min':
									var m = x.a;
									var len = x.b;
									var $temp$minimum = $elm$core$Maybe$Just(m),
										$temp$maximum = maximum,
										$temp$x = len;
									minimum = $temp$minimum;
									maximum = $temp$maximum;
									x = $temp$x;
									continue toGridLengthHelper;
								default:
									var m = x.a;
									var len = x.b;
									var $temp$minimum = minimum,
										$temp$maximum = $elm$core$Maybe$Just(m),
										$temp$x = len;
									minimum = $temp$minimum;
									maximum = $temp$maximum;
									x = $temp$x;
									continue toGridLengthHelper;
							}
						}
					});
				var toGridLength = function (x) {
					return A3(toGridLengthHelper, $elm$core$Maybe$Nothing, $elm$core$Maybe$Nothing, x);
				};
				var xSpacing = toGridLength(template.spacing.a);
				var ySpacing = toGridLength(template.spacing.b);
				var rows = function (x) {
					return 'grid-template-rows: ' + (x + ';');
				}(
					A2(
						$elm$core$String$join,
						' ',
						A2($elm$core$List$map, toGridLength, template.rows)));
				var msRows = function (x) {
					return '-ms-grid-rows: ' + (x + ';');
				}(
					A2(
						$elm$core$String$join,
						ySpacing,
						A2($elm$core$List$map, toGridLength, template.columns)));
				var msColumns = function (x) {
					return '-ms-grid-columns: ' + (x + ';');
				}(
					A2(
						$elm$core$String$join,
						ySpacing,
						A2($elm$core$List$map, toGridLength, template.columns)));
				var gapY = 'grid-row-gap:' + (toGridLength(template.spacing.b) + ';');
				var gapX = 'grid-column-gap:' + (toGridLength(template.spacing.a) + ';');
				var columns = function (x) {
					return 'grid-template-columns: ' + (x + ';');
				}(
					A2(
						$elm$core$String$join,
						' ',
						A2($elm$core$List$map, toGridLength, template.columns)));
				var _class = '.grid-rows-' + (A2(
					$elm$core$String$join,
					'-',
					A2($elm$core$List$map, $mdgriffith$elm_ui$Internal$Model$lengthClassName, template.rows)) + ('-cols-' + (A2(
					$elm$core$String$join,
					'-',
					A2($elm$core$List$map, $mdgriffith$elm_ui$Internal$Model$lengthClassName, template.columns)) + ('-space-x-' + ($mdgriffith$elm_ui$Internal$Model$lengthClassName(template.spacing.a) + ('-space-y-' + $mdgriffith$elm_ui$Internal$Model$lengthClassName(template.spacing.b)))))));
				var modernGrid = _class + ('{' + (columns + (rows + (gapX + (gapY + '}')))));
				var supports = '@supports (display:grid) {' + (modernGrid + '}');
				var base = _class + ('{' + (msColumns + (msRows + '}')));
				return _List_fromArray(
					[base, supports]);
			case 'GridPosition':
				var position = rule.a;
				var msPosition = A2(
					$elm$core$String$join,
					' ',
					_List_fromArray(
						[
							'-ms-grid-row: ' + ($elm$core$String$fromInt(position.row) + ';'),
							'-ms-grid-row-span: ' + ($elm$core$String$fromInt(position.height) + ';'),
							'-ms-grid-column: ' + ($elm$core$String$fromInt(position.col) + ';'),
							'-ms-grid-column-span: ' + ($elm$core$String$fromInt(position.width) + ';')
						]));
				var modernPosition = A2(
					$elm$core$String$join,
					' ',
					_List_fromArray(
						[
							'grid-row: ' + ($elm$core$String$fromInt(position.row) + (' / ' + ($elm$core$String$fromInt(position.row + position.height) + ';'))),
							'grid-column: ' + ($elm$core$String$fromInt(position.col) + (' / ' + ($elm$core$String$fromInt(position.col + position.width) + ';')))
						]));
				var _class = '.grid-pos-' + ($elm$core$String$fromInt(position.row) + ('-' + ($elm$core$String$fromInt(position.col) + ('-' + ($elm$core$String$fromInt(position.width) + ('-' + $elm$core$String$fromInt(position.height)))))));
				var modernGrid = _class + ('{' + (modernPosition + '}'));
				var supports = '@supports (display:grid) {' + (modernGrid + '}');
				var base = _class + ('{' + (msPosition + '}'));
				return _List_fromArray(
					[base, supports]);
			case 'PseudoSelector':
				var _class = rule.a;
				var styles = rule.b;
				var renderPseudoRule = function (style) {
					return A3(
						$mdgriffith$elm_ui$Internal$Model$renderStyleRule,
						options,
						style,
						$elm$core$Maybe$Just(_class));
				};
				return A2($elm$core$List$concatMap, renderPseudoRule, styles);
			default:
				var transform = rule.a;
				var val = $mdgriffith$elm_ui$Internal$Model$transformValue(transform);
				var _class = $mdgriffith$elm_ui$Internal$Model$transformClass(transform);
				var _v12 = _Utils_Tuple2(_class, val);
				if ((_v12.a.$ === 'Just') && (_v12.b.$ === 'Just')) {
					var cls = _v12.a.a;
					var v = _v12.b.a;
					return A4(
						$mdgriffith$elm_ui$Internal$Model$renderStyle,
						options,
						maybePseudo,
						'.' + cls,
						_List_fromArray(
							[
								A2($mdgriffith$elm_ui$Internal$Model$Property, 'transform', v)
							]));
				} else {
					return _List_Nil;
				}
		}
	});
var $mdgriffith$elm_ui$Internal$Model$encodeStyles = F2(
	function (options, stylesheet) {
		return $elm$json$Json$Encode$object(
			A2(
				$elm$core$List$map,
				function (style) {
					var styled = A3($mdgriffith$elm_ui$Internal$Model$renderStyleRule, options, style, $elm$core$Maybe$Nothing);
					return _Utils_Tuple2(
						$mdgriffith$elm_ui$Internal$Model$getStyleName(style),
						A2($elm$json$Json$Encode$list, $elm$json$Json$Encode$string, styled));
				},
				stylesheet));
	});
var $mdgriffith$elm_ui$Internal$Model$bracket = F2(
	function (selector, rules) {
		var renderPair = function (_v0) {
			var name = _v0.a;
			var val = _v0.b;
			return name + (': ' + (val + ';'));
		};
		return selector + (' {' + (A2(
			$elm$core$String$join,
			'',
			A2($elm$core$List$map, renderPair, rules)) + '}'));
	});
var $mdgriffith$elm_ui$Internal$Model$fontRule = F3(
	function (name, modifier, _v0) {
		var parentAdj = _v0.a;
		var textAdjustment = _v0.b;
		return _List_fromArray(
			[
				A2($mdgriffith$elm_ui$Internal$Model$bracket, '.' + (name + ('.' + (modifier + (', ' + ('.' + (name + (' .' + modifier))))))), parentAdj),
				A2($mdgriffith$elm_ui$Internal$Model$bracket, '.' + (name + ('.' + (modifier + ('> .' + ($mdgriffith$elm_ui$Internal$Style$classes.text + (', .' + (name + (' .' + (modifier + (' > .' + $mdgriffith$elm_ui$Internal$Style$classes.text)))))))))), textAdjustment)
			]);
	});
var $mdgriffith$elm_ui$Internal$Model$renderFontAdjustmentRule = F3(
	function (fontToAdjust, _v0, otherFontName) {
		var full = _v0.a;
		var capital = _v0.b;
		var name = _Utils_eq(fontToAdjust, otherFontName) ? fontToAdjust : (otherFontName + (' .' + fontToAdjust));
		return A2(
			$elm$core$String$join,
			' ',
			_Utils_ap(
				A3($mdgriffith$elm_ui$Internal$Model$fontRule, name, $mdgriffith$elm_ui$Internal$Style$classes.sizeByCapital, capital),
				A3($mdgriffith$elm_ui$Internal$Model$fontRule, name, $mdgriffith$elm_ui$Internal$Style$classes.fullSize, full)));
	});
var $mdgriffith$elm_ui$Internal$Model$renderNullAdjustmentRule = F2(
	function (fontToAdjust, otherFontName) {
		var name = _Utils_eq(fontToAdjust, otherFontName) ? fontToAdjust : (otherFontName + (' .' + fontToAdjust));
		return A2(
			$elm$core$String$join,
			' ',
			_List_fromArray(
				[
					A2(
					$mdgriffith$elm_ui$Internal$Model$bracket,
					'.' + (name + ('.' + ($mdgriffith$elm_ui$Internal$Style$classes.sizeByCapital + (', ' + ('.' + (name + (' .' + $mdgriffith$elm_ui$Internal$Style$classes.sizeByCapital))))))),
					_List_fromArray(
						[
							_Utils_Tuple2('line-height', '1')
						])),
					A2(
					$mdgriffith$elm_ui$Internal$Model$bracket,
					'.' + (name + ('.' + ($mdgriffith$elm_ui$Internal$Style$classes.sizeByCapital + ('> .' + ($mdgriffith$elm_ui$Internal$Style$classes.text + (', .' + (name + (' .' + ($mdgriffith$elm_ui$Internal$Style$classes.sizeByCapital + (' > .' + $mdgriffith$elm_ui$Internal$Style$classes.text)))))))))),
					_List_fromArray(
						[
							_Utils_Tuple2('vertical-align', '0'),
							_Utils_Tuple2('line-height', '1')
						]))
				]));
	});
var $mdgriffith$elm_ui$Internal$Model$adjust = F3(
	function (size, height, vertical) {
		return {height: height / size, size: size, vertical: vertical};
	});
var $elm$core$List$minimum = function (list) {
	if (list.b) {
		var x = list.a;
		var xs = list.b;
		return $elm$core$Maybe$Just(
			A3($elm$core$List$foldl, $elm$core$Basics$min, x, xs));
	} else {
		return $elm$core$Maybe$Nothing;
	}
};
var $mdgriffith$elm_ui$Internal$Model$convertAdjustment = function (adjustment) {
	var lines = _List_fromArray(
		[adjustment.capital, adjustment.baseline, adjustment.descender, adjustment.lowercase]);
	var lineHeight = 1.5;
	var normalDescender = (lineHeight - 1) / 2;
	var oldMiddle = lineHeight / 2;
	var descender = A2(
		$elm$core$Maybe$withDefault,
		adjustment.descender,
		$elm$core$List$minimum(lines));
	var newBaseline = A2(
		$elm$core$Maybe$withDefault,
		adjustment.baseline,
		$elm$core$List$minimum(
			A2(
				$elm$core$List$filter,
				function (x) {
					return !_Utils_eq(x, descender);
				},
				lines)));
	var base = lineHeight;
	var ascender = A2(
		$elm$core$Maybe$withDefault,
		adjustment.capital,
		$elm$core$List$maximum(lines));
	var capitalSize = 1 / (ascender - newBaseline);
	var capitalVertical = 1 - ascender;
	var fullSize = 1 / (ascender - descender);
	var fullVertical = 1 - ascender;
	var newCapitalMiddle = ((ascender - newBaseline) / 2) + newBaseline;
	var newFullMiddle = ((ascender - descender) / 2) + descender;
	return {
		capital: A3($mdgriffith$elm_ui$Internal$Model$adjust, capitalSize, ascender - newBaseline, capitalVertical),
		full: A3($mdgriffith$elm_ui$Internal$Model$adjust, fullSize, ascender - descender, fullVertical)
	};
};
var $mdgriffith$elm_ui$Internal$Model$fontAdjustmentRules = function (converted) {
	return _Utils_Tuple2(
		_List_fromArray(
			[
				_Utils_Tuple2('display', 'block')
			]),
		_List_fromArray(
			[
				_Utils_Tuple2('display', 'inline-block'),
				_Utils_Tuple2(
				'line-height',
				$elm$core$String$fromFloat(converted.height)),
				_Utils_Tuple2(
				'vertical-align',
				$elm$core$String$fromFloat(converted.vertical) + 'em'),
				_Utils_Tuple2(
				'font-size',
				$elm$core$String$fromFloat(converted.size) + 'em')
			]));
};
var $mdgriffith$elm_ui$Internal$Model$typefaceAdjustment = function (typefaces) {
	return A3(
		$elm$core$List$foldl,
		F2(
			function (face, found) {
				if (found.$ === 'Nothing') {
					if (face.$ === 'FontWith') {
						var _with = face.a;
						var _v2 = _with.adjustment;
						if (_v2.$ === 'Nothing') {
							return found;
						} else {
							var adjustment = _v2.a;
							return $elm$core$Maybe$Just(
								_Utils_Tuple2(
									$mdgriffith$elm_ui$Internal$Model$fontAdjustmentRules(
										function ($) {
											return $.full;
										}(
											$mdgriffith$elm_ui$Internal$Model$convertAdjustment(adjustment))),
									$mdgriffith$elm_ui$Internal$Model$fontAdjustmentRules(
										function ($) {
											return $.capital;
										}(
											$mdgriffith$elm_ui$Internal$Model$convertAdjustment(adjustment)))));
						}
					} else {
						return found;
					}
				} else {
					return found;
				}
			}),
		$elm$core$Maybe$Nothing,
		typefaces);
};
var $mdgriffith$elm_ui$Internal$Model$renderTopLevelValues = function (rules) {
	var withImport = function (font) {
		if (font.$ === 'ImportFont') {
			var url = font.b;
			return $elm$core$Maybe$Just('@import url(\'' + (url + '\');'));
		} else {
			return $elm$core$Maybe$Nothing;
		}
	};
	var fontImports = function (_v2) {
		var name = _v2.a;
		var typefaces = _v2.b;
		var imports = A2(
			$elm$core$String$join,
			'\n',
			A2($elm$core$List$filterMap, withImport, typefaces));
		return imports;
	};
	var allNames = A2($elm$core$List$map, $elm$core$Tuple$first, rules);
	var fontAdjustments = function (_v1) {
		var name = _v1.a;
		var typefaces = _v1.b;
		var _v0 = $mdgriffith$elm_ui$Internal$Model$typefaceAdjustment(typefaces);
		if (_v0.$ === 'Nothing') {
			return A2(
				$elm$core$String$join,
				'',
				A2(
					$elm$core$List$map,
					$mdgriffith$elm_ui$Internal$Model$renderNullAdjustmentRule(name),
					allNames));
		} else {
			var adjustment = _v0.a;
			return A2(
				$elm$core$String$join,
				'',
				A2(
					$elm$core$List$map,
					A2($mdgriffith$elm_ui$Internal$Model$renderFontAdjustmentRule, name, adjustment),
					allNames));
		}
	};
	return _Utils_ap(
		A2(
			$elm$core$String$join,
			'\n',
			A2($elm$core$List$map, fontImports, rules)),
		A2(
			$elm$core$String$join,
			'\n',
			A2($elm$core$List$map, fontAdjustments, rules)));
};
var $mdgriffith$elm_ui$Internal$Model$topLevelValue = function (rule) {
	if (rule.$ === 'FontFamily') {
		var name = rule.a;
		var typefaces = rule.b;
		return $elm$core$Maybe$Just(
			_Utils_Tuple2(name, typefaces));
	} else {
		return $elm$core$Maybe$Nothing;
	}
};
var $mdgriffith$elm_ui$Internal$Model$toStyleSheetString = F2(
	function (options, stylesheet) {
		var combine = F2(
			function (style, rendered) {
				return {
					rules: _Utils_ap(
						rendered.rules,
						A3($mdgriffith$elm_ui$Internal$Model$renderStyleRule, options, style, $elm$core$Maybe$Nothing)),
					topLevel: function () {
						var _v1 = $mdgriffith$elm_ui$Internal$Model$topLevelValue(style);
						if (_v1.$ === 'Nothing') {
							return rendered.topLevel;
						} else {
							var topLevel = _v1.a;
							return A2($elm$core$List$cons, topLevel, rendered.topLevel);
						}
					}()
				};
			});
		var _v0 = A3(
			$elm$core$List$foldl,
			combine,
			{rules: _List_Nil, topLevel: _List_Nil},
			stylesheet);
		var topLevel = _v0.topLevel;
		var rules = _v0.rules;
		return _Utils_ap(
			$mdgriffith$elm_ui$Internal$Model$renderTopLevelValues(topLevel),
			$elm$core$String$concat(rules));
	});
var $mdgriffith$elm_ui$Internal$Model$toStyleSheet = F2(
	function (options, styleSheet) {
		var _v0 = options.mode;
		switch (_v0.$) {
			case 'Layout':
				return A3(
					$elm$virtual_dom$VirtualDom$node,
					'div',
					_List_Nil,
					_List_fromArray(
						[
							A3(
							$elm$virtual_dom$VirtualDom$node,
							'style',
							_List_Nil,
							_List_fromArray(
								[
									$elm$virtual_dom$VirtualDom$text(
									A2($mdgriffith$elm_ui$Internal$Model$toStyleSheetString, options, styleSheet))
								]))
						]));
			case 'NoStaticStyleSheet':
				return A3(
					$elm$virtual_dom$VirtualDom$node,
					'div',
					_List_Nil,
					_List_fromArray(
						[
							A3(
							$elm$virtual_dom$VirtualDom$node,
							'style',
							_List_Nil,
							_List_fromArray(
								[
									$elm$virtual_dom$VirtualDom$text(
									A2($mdgriffith$elm_ui$Internal$Model$toStyleSheetString, options, styleSheet))
								]))
						]));
			default:
				return A3(
					$elm$virtual_dom$VirtualDom$node,
					'elm-ui-rules',
					_List_fromArray(
						[
							A2(
							$elm$virtual_dom$VirtualDom$property,
							'rules',
							A2($mdgriffith$elm_ui$Internal$Model$encodeStyles, options, styleSheet))
						]),
					_List_Nil);
		}
	});
var $mdgriffith$elm_ui$Internal$Model$embedKeyed = F4(
	function (_static, opts, styles, children) {
		var dynamicStyleSheet = A2(
			$mdgriffith$elm_ui$Internal$Model$toStyleSheet,
			opts,
			A3(
				$elm$core$List$foldl,
				$mdgriffith$elm_ui$Internal$Model$reduceStyles,
				_Utils_Tuple2(
					$elm$core$Set$empty,
					$mdgriffith$elm_ui$Internal$Model$renderFocusStyle(opts.focus)),
				styles).b);
		return _static ? A2(
			$elm$core$List$cons,
			_Utils_Tuple2(
				'static-stylesheet',
				$mdgriffith$elm_ui$Internal$Model$staticRoot(opts)),
			A2(
				$elm$core$List$cons,
				_Utils_Tuple2('dynamic-stylesheet', dynamicStyleSheet),
				children)) : A2(
			$elm$core$List$cons,
			_Utils_Tuple2('dynamic-stylesheet', dynamicStyleSheet),
			children);
	});
var $mdgriffith$elm_ui$Internal$Model$embedWith = F4(
	function (_static, opts, styles, children) {
		var dynamicStyleSheet = A2(
			$mdgriffith$elm_ui$Internal$Model$toStyleSheet,
			opts,
			A3(
				$elm$core$List$foldl,
				$mdgriffith$elm_ui$Internal$Model$reduceStyles,
				_Utils_Tuple2(
					$elm$core$Set$empty,
					$mdgriffith$elm_ui$Internal$Model$renderFocusStyle(opts.focus)),
				styles).b);
		return _static ? A2(
			$elm$core$List$cons,
			$mdgriffith$elm_ui$Internal$Model$staticRoot(opts),
			A2($elm$core$List$cons, dynamicStyleSheet, children)) : A2($elm$core$List$cons, dynamicStyleSheet, children);
	});
var $mdgriffith$elm_ui$Internal$Flag$heightBetween = $mdgriffith$elm_ui$Internal$Flag$flag(45);
var $mdgriffith$elm_ui$Internal$Flag$heightFill = $mdgriffith$elm_ui$Internal$Flag$flag(37);
var $elm$virtual_dom$VirtualDom$keyedNode = function (tag) {
	return _VirtualDom_keyedNode(
		_VirtualDom_noScript(tag));
};
var $elm$html$Html$p = _VirtualDom_node('p');
var $mdgriffith$elm_ui$Internal$Flag$present = F2(
	function (myFlag, _v0) {
		var fieldOne = _v0.a;
		var fieldTwo = _v0.b;
		if (myFlag.$ === 'Flag') {
			var first = myFlag.a;
			return _Utils_eq(first & fieldOne, first);
		} else {
			var second = myFlag.a;
			return _Utils_eq(second & fieldTwo, second);
		}
	});
var $elm$html$Html$s = _VirtualDom_node('s');
var $elm$html$Html$u = _VirtualDom_node('u');
var $mdgriffith$elm_ui$Internal$Flag$widthBetween = $mdgriffith$elm_ui$Internal$Flag$flag(44);
var $mdgriffith$elm_ui$Internal$Flag$widthFill = $mdgriffith$elm_ui$Internal$Flag$flag(39);
var $mdgriffith$elm_ui$Internal$Model$finalizeNode = F6(
	function (has, node, attributes, children, embedMode, parentContext) {
		var createNode = F2(
			function (nodeName, attrs) {
				if (children.$ === 'Keyed') {
					var keyed = children.a;
					return A3(
						$elm$virtual_dom$VirtualDom$keyedNode,
						nodeName,
						attrs,
						function () {
							switch (embedMode.$) {
								case 'NoStyleSheet':
									return keyed;
								case 'OnlyDynamic':
									var opts = embedMode.a;
									var styles = embedMode.b;
									return A4($mdgriffith$elm_ui$Internal$Model$embedKeyed, false, opts, styles, keyed);
								default:
									var opts = embedMode.a;
									var styles = embedMode.b;
									return A4($mdgriffith$elm_ui$Internal$Model$embedKeyed, true, opts, styles, keyed);
							}
						}());
				} else {
					var unkeyed = children.a;
					return A2(
						function () {
							switch (nodeName) {
								case 'div':
									return $elm$html$Html$div;
								case 'p':
									return $elm$html$Html$p;
								default:
									return $elm$virtual_dom$VirtualDom$node(nodeName);
							}
						}(),
						attrs,
						function () {
							switch (embedMode.$) {
								case 'NoStyleSheet':
									return unkeyed;
								case 'OnlyDynamic':
									var opts = embedMode.a;
									var styles = embedMode.b;
									return A4($mdgriffith$elm_ui$Internal$Model$embedWith, false, opts, styles, unkeyed);
								default:
									var opts = embedMode.a;
									var styles = embedMode.b;
									return A4($mdgriffith$elm_ui$Internal$Model$embedWith, true, opts, styles, unkeyed);
							}
						}());
				}
			});
		var html = function () {
			switch (node.$) {
				case 'Generic':
					return A2(createNode, 'div', attributes);
				case 'NodeName':
					var nodeName = node.a;
					return A2(createNode, nodeName, attributes);
				default:
					var nodeName = node.a;
					var internal = node.b;
					return A3(
						$elm$virtual_dom$VirtualDom$node,
						nodeName,
						attributes,
						_List_fromArray(
							[
								A2(
								createNode,
								internal,
								_List_fromArray(
									[
										$elm$html$Html$Attributes$class($mdgriffith$elm_ui$Internal$Style$classes.any + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.single))
									]))
							]));
			}
		}();
		switch (parentContext.$) {
			case 'AsRow':
				return (A2($mdgriffith$elm_ui$Internal$Flag$present, $mdgriffith$elm_ui$Internal$Flag$widthFill, has) && (!A2($mdgriffith$elm_ui$Internal$Flag$present, $mdgriffith$elm_ui$Internal$Flag$widthBetween, has))) ? html : (A2($mdgriffith$elm_ui$Internal$Flag$present, $mdgriffith$elm_ui$Internal$Flag$alignRight, has) ? A2(
					$elm$html$Html$u,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class(
							A2(
								$elm$core$String$join,
								' ',
								_List_fromArray(
									[$mdgriffith$elm_ui$Internal$Style$classes.any, $mdgriffith$elm_ui$Internal$Style$classes.single, $mdgriffith$elm_ui$Internal$Style$classes.container, $mdgriffith$elm_ui$Internal$Style$classes.contentCenterY, $mdgriffith$elm_ui$Internal$Style$classes.alignContainerRight])))
						]),
					_List_fromArray(
						[html])) : (A2($mdgriffith$elm_ui$Internal$Flag$present, $mdgriffith$elm_ui$Internal$Flag$centerX, has) ? A2(
					$elm$html$Html$s,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class(
							A2(
								$elm$core$String$join,
								' ',
								_List_fromArray(
									[$mdgriffith$elm_ui$Internal$Style$classes.any, $mdgriffith$elm_ui$Internal$Style$classes.single, $mdgriffith$elm_ui$Internal$Style$classes.container, $mdgriffith$elm_ui$Internal$Style$classes.contentCenterY, $mdgriffith$elm_ui$Internal$Style$classes.alignContainerCenterX])))
						]),
					_List_fromArray(
						[html])) : html));
			case 'AsColumn':
				return (A2($mdgriffith$elm_ui$Internal$Flag$present, $mdgriffith$elm_ui$Internal$Flag$heightFill, has) && (!A2($mdgriffith$elm_ui$Internal$Flag$present, $mdgriffith$elm_ui$Internal$Flag$heightBetween, has))) ? html : (A2($mdgriffith$elm_ui$Internal$Flag$present, $mdgriffith$elm_ui$Internal$Flag$centerY, has) ? A2(
					$elm$html$Html$s,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class(
							A2(
								$elm$core$String$join,
								' ',
								_List_fromArray(
									[$mdgriffith$elm_ui$Internal$Style$classes.any, $mdgriffith$elm_ui$Internal$Style$classes.single, $mdgriffith$elm_ui$Internal$Style$classes.container, $mdgriffith$elm_ui$Internal$Style$classes.alignContainerCenterY])))
						]),
					_List_fromArray(
						[html])) : (A2($mdgriffith$elm_ui$Internal$Flag$present, $mdgriffith$elm_ui$Internal$Flag$alignBottom, has) ? A2(
					$elm$html$Html$u,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$class(
							A2(
								$elm$core$String$join,
								' ',
								_List_fromArray(
									[$mdgriffith$elm_ui$Internal$Style$classes.any, $mdgriffith$elm_ui$Internal$Style$classes.single, $mdgriffith$elm_ui$Internal$Style$classes.container, $mdgriffith$elm_ui$Internal$Style$classes.alignContainerBottom])))
						]),
					_List_fromArray(
						[html])) : html));
			default:
				return html;
		}
	});
var $mdgriffith$elm_ui$Internal$Model$textElementClasses = $mdgriffith$elm_ui$Internal$Style$classes.any + (' ' + ($mdgriffith$elm_ui$Internal$Style$classes.text + (' ' + ($mdgriffith$elm_ui$Internal$Style$classes.widthContent + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.heightContent)))));
var $mdgriffith$elm_ui$Internal$Model$textElement = function (str) {
	return A2(
		$elm$html$Html$div,
		_List_fromArray(
			[
				$elm$html$Html$Attributes$class($mdgriffith$elm_ui$Internal$Model$textElementClasses)
			]),
		_List_fromArray(
			[
				$elm$html$Html$text(str)
			]));
};
var $mdgriffith$elm_ui$Internal$Model$textElementFillClasses = $mdgriffith$elm_ui$Internal$Style$classes.any + (' ' + ($mdgriffith$elm_ui$Internal$Style$classes.text + (' ' + ($mdgriffith$elm_ui$Internal$Style$classes.widthFill + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.heightFill)))));
var $mdgriffith$elm_ui$Internal$Model$textElementFill = function (str) {
	return A2(
		$elm$html$Html$div,
		_List_fromArray(
			[
				$elm$html$Html$Attributes$class($mdgriffith$elm_ui$Internal$Model$textElementFillClasses)
			]),
		_List_fromArray(
			[
				$elm$html$Html$text(str)
			]));
};
var $mdgriffith$elm_ui$Internal$Model$createElement = F3(
	function (context, children, rendered) {
		var gatherKeyed = F2(
			function (_v8, _v9) {
				var key = _v8.a;
				var child = _v8.b;
				var htmls = _v9.a;
				var existingStyles = _v9.b;
				switch (child.$) {
					case 'Unstyled':
						var html = child.a;
						return _Utils_eq(context, $mdgriffith$elm_ui$Internal$Model$asParagraph) ? _Utils_Tuple2(
							A2(
								$elm$core$List$cons,
								_Utils_Tuple2(
									key,
									html(context)),
								htmls),
							existingStyles) : _Utils_Tuple2(
							A2(
								$elm$core$List$cons,
								_Utils_Tuple2(
									key,
									html(context)),
								htmls),
							existingStyles);
					case 'Styled':
						var styled = child.a;
						return _Utils_eq(context, $mdgriffith$elm_ui$Internal$Model$asParagraph) ? _Utils_Tuple2(
							A2(
								$elm$core$List$cons,
								_Utils_Tuple2(
									key,
									A2(styled.html, $mdgriffith$elm_ui$Internal$Model$NoStyleSheet, context)),
								htmls),
							$elm$core$List$isEmpty(existingStyles) ? styled.styles : _Utils_ap(styled.styles, existingStyles)) : _Utils_Tuple2(
							A2(
								$elm$core$List$cons,
								_Utils_Tuple2(
									key,
									A2(styled.html, $mdgriffith$elm_ui$Internal$Model$NoStyleSheet, context)),
								htmls),
							$elm$core$List$isEmpty(existingStyles) ? styled.styles : _Utils_ap(styled.styles, existingStyles));
					case 'Text':
						var str = child.a;
						return _Utils_Tuple2(
							A2(
								$elm$core$List$cons,
								_Utils_Tuple2(
									key,
									_Utils_eq(context, $mdgriffith$elm_ui$Internal$Model$asEl) ? $mdgriffith$elm_ui$Internal$Model$textElementFill(str) : $mdgriffith$elm_ui$Internal$Model$textElement(str)),
								htmls),
							existingStyles);
					default:
						return _Utils_Tuple2(htmls, existingStyles);
				}
			});
		var gather = F2(
			function (child, _v6) {
				var htmls = _v6.a;
				var existingStyles = _v6.b;
				switch (child.$) {
					case 'Unstyled':
						var html = child.a;
						return _Utils_eq(context, $mdgriffith$elm_ui$Internal$Model$asParagraph) ? _Utils_Tuple2(
							A2(
								$elm$core$List$cons,
								html(context),
								htmls),
							existingStyles) : _Utils_Tuple2(
							A2(
								$elm$core$List$cons,
								html(context),
								htmls),
							existingStyles);
					case 'Styled':
						var styled = child.a;
						return _Utils_eq(context, $mdgriffith$elm_ui$Internal$Model$asParagraph) ? _Utils_Tuple2(
							A2(
								$elm$core$List$cons,
								A2(styled.html, $mdgriffith$elm_ui$Internal$Model$NoStyleSheet, context),
								htmls),
							$elm$core$List$isEmpty(existingStyles) ? styled.styles : _Utils_ap(styled.styles, existingStyles)) : _Utils_Tuple2(
							A2(
								$elm$core$List$cons,
								A2(styled.html, $mdgriffith$elm_ui$Internal$Model$NoStyleSheet, context),
								htmls),
							$elm$core$List$isEmpty(existingStyles) ? styled.styles : _Utils_ap(styled.styles, existingStyles));
					case 'Text':
						var str = child.a;
						return _Utils_Tuple2(
							A2(
								$elm$core$List$cons,
								_Utils_eq(context, $mdgriffith$elm_ui$Internal$Model$asEl) ? $mdgriffith$elm_ui$Internal$Model$textElementFill(str) : $mdgriffith$elm_ui$Internal$Model$textElement(str),
								htmls),
							existingStyles);
					default:
						return _Utils_Tuple2(htmls, existingStyles);
				}
			});
		if (children.$ === 'Keyed') {
			var keyedChildren = children.a;
			var _v1 = A3(
				$elm$core$List$foldr,
				gatherKeyed,
				_Utils_Tuple2(_List_Nil, _List_Nil),
				keyedChildren);
			var keyed = _v1.a;
			var styles = _v1.b;
			var newStyles = $elm$core$List$isEmpty(styles) ? rendered.styles : _Utils_ap(rendered.styles, styles);
			if (!newStyles.b) {
				return $mdgriffith$elm_ui$Internal$Model$Unstyled(
					A5(
						$mdgriffith$elm_ui$Internal$Model$finalizeNode,
						rendered.has,
						rendered.node,
						rendered.attributes,
						$mdgriffith$elm_ui$Internal$Model$Keyed(
							A3($mdgriffith$elm_ui$Internal$Model$addKeyedChildren, 'nearby-element-pls', keyed, rendered.children)),
						$mdgriffith$elm_ui$Internal$Model$NoStyleSheet));
			} else {
				var allStyles = newStyles;
				return $mdgriffith$elm_ui$Internal$Model$Styled(
					{
						html: A4(
							$mdgriffith$elm_ui$Internal$Model$finalizeNode,
							rendered.has,
							rendered.node,
							rendered.attributes,
							$mdgriffith$elm_ui$Internal$Model$Keyed(
								A3($mdgriffith$elm_ui$Internal$Model$addKeyedChildren, 'nearby-element-pls', keyed, rendered.children))),
						styles: allStyles
					});
			}
		} else {
			var unkeyedChildren = children.a;
			var _v3 = A3(
				$elm$core$List$foldr,
				gather,
				_Utils_Tuple2(_List_Nil, _List_Nil),
				unkeyedChildren);
			var unkeyed = _v3.a;
			var styles = _v3.b;
			var newStyles = $elm$core$List$isEmpty(styles) ? rendered.styles : _Utils_ap(rendered.styles, styles);
			if (!newStyles.b) {
				return $mdgriffith$elm_ui$Internal$Model$Unstyled(
					A5(
						$mdgriffith$elm_ui$Internal$Model$finalizeNode,
						rendered.has,
						rendered.node,
						rendered.attributes,
						$mdgriffith$elm_ui$Internal$Model$Unkeyed(
							A2($mdgriffith$elm_ui$Internal$Model$addChildren, unkeyed, rendered.children)),
						$mdgriffith$elm_ui$Internal$Model$NoStyleSheet));
			} else {
				var allStyles = newStyles;
				return $mdgriffith$elm_ui$Internal$Model$Styled(
					{
						html: A4(
							$mdgriffith$elm_ui$Internal$Model$finalizeNode,
							rendered.has,
							rendered.node,
							rendered.attributes,
							$mdgriffith$elm_ui$Internal$Model$Unkeyed(
								A2($mdgriffith$elm_ui$Internal$Model$addChildren, unkeyed, rendered.children))),
						styles: allStyles
					});
			}
		}
	});
var $mdgriffith$elm_ui$Internal$Model$Single = F3(
	function (a, b, c) {
		return {$: 'Single', a: a, b: b, c: c};
	});
var $mdgriffith$elm_ui$Internal$Model$Transform = function (a) {
	return {$: 'Transform', a: a};
};
var $mdgriffith$elm_ui$Internal$Flag$Field = F2(
	function (a, b) {
		return {$: 'Field', a: a, b: b};
	});
var $mdgriffith$elm_ui$Internal$Flag$add = F2(
	function (myFlag, _v0) {
		var one = _v0.a;
		var two = _v0.b;
		if (myFlag.$ === 'Flag') {
			var first = myFlag.a;
			return A2($mdgriffith$elm_ui$Internal$Flag$Field, first | one, two);
		} else {
			var second = myFlag.a;
			return A2($mdgriffith$elm_ui$Internal$Flag$Field, one, second | two);
		}
	});
var $mdgriffith$elm_ui$Internal$Model$ChildrenBehind = function (a) {
	return {$: 'ChildrenBehind', a: a};
};
var $mdgriffith$elm_ui$Internal$Model$ChildrenBehindAndInFront = F2(
	function (a, b) {
		return {$: 'ChildrenBehindAndInFront', a: a, b: b};
	});
var $mdgriffith$elm_ui$Internal$Model$ChildrenInFront = function (a) {
	return {$: 'ChildrenInFront', a: a};
};
var $mdgriffith$elm_ui$Internal$Model$nearbyElement = F2(
	function (location, elem) {
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class(
					function () {
						switch (location.$) {
							case 'Above':
								return A2(
									$elm$core$String$join,
									' ',
									_List_fromArray(
										[$mdgriffith$elm_ui$Internal$Style$classes.nearby, $mdgriffith$elm_ui$Internal$Style$classes.single, $mdgriffith$elm_ui$Internal$Style$classes.above]));
							case 'Below':
								return A2(
									$elm$core$String$join,
									' ',
									_List_fromArray(
										[$mdgriffith$elm_ui$Internal$Style$classes.nearby, $mdgriffith$elm_ui$Internal$Style$classes.single, $mdgriffith$elm_ui$Internal$Style$classes.below]));
							case 'OnRight':
								return A2(
									$elm$core$String$join,
									' ',
									_List_fromArray(
										[$mdgriffith$elm_ui$Internal$Style$classes.nearby, $mdgriffith$elm_ui$Internal$Style$classes.single, $mdgriffith$elm_ui$Internal$Style$classes.onRight]));
							case 'OnLeft':
								return A2(
									$elm$core$String$join,
									' ',
									_List_fromArray(
										[$mdgriffith$elm_ui$Internal$Style$classes.nearby, $mdgriffith$elm_ui$Internal$Style$classes.single, $mdgriffith$elm_ui$Internal$Style$classes.onLeft]));
							case 'InFront':
								return A2(
									$elm$core$String$join,
									' ',
									_List_fromArray(
										[$mdgriffith$elm_ui$Internal$Style$classes.nearby, $mdgriffith$elm_ui$Internal$Style$classes.single, $mdgriffith$elm_ui$Internal$Style$classes.inFront]));
							default:
								return A2(
									$elm$core$String$join,
									' ',
									_List_fromArray(
										[$mdgriffith$elm_ui$Internal$Style$classes.nearby, $mdgriffith$elm_ui$Internal$Style$classes.single, $mdgriffith$elm_ui$Internal$Style$classes.behind]));
						}
					}())
				]),
			_List_fromArray(
				[
					function () {
					switch (elem.$) {
						case 'Empty':
							return $elm$virtual_dom$VirtualDom$text('');
						case 'Text':
							var str = elem.a;
							return $mdgriffith$elm_ui$Internal$Model$textElement(str);
						case 'Unstyled':
							var html = elem.a;
							return html($mdgriffith$elm_ui$Internal$Model$asEl);
						default:
							var styled = elem.a;
							return A2(styled.html, $mdgriffith$elm_ui$Internal$Model$NoStyleSheet, $mdgriffith$elm_ui$Internal$Model$asEl);
					}
				}()
				]));
	});
var $mdgriffith$elm_ui$Internal$Model$addNearbyElement = F3(
	function (location, elem, existing) {
		var nearby = A2($mdgriffith$elm_ui$Internal$Model$nearbyElement, location, elem);
		switch (existing.$) {
			case 'NoNearbyChildren':
				if (location.$ === 'Behind') {
					return $mdgriffith$elm_ui$Internal$Model$ChildrenBehind(
						_List_fromArray(
							[nearby]));
				} else {
					return $mdgriffith$elm_ui$Internal$Model$ChildrenInFront(
						_List_fromArray(
							[nearby]));
				}
			case 'ChildrenBehind':
				var existingBehind = existing.a;
				if (location.$ === 'Behind') {
					return $mdgriffith$elm_ui$Internal$Model$ChildrenBehind(
						A2($elm$core$List$cons, nearby, existingBehind));
				} else {
					return A2(
						$mdgriffith$elm_ui$Internal$Model$ChildrenBehindAndInFront,
						existingBehind,
						_List_fromArray(
							[nearby]));
				}
			case 'ChildrenInFront':
				var existingInFront = existing.a;
				if (location.$ === 'Behind') {
					return A2(
						$mdgriffith$elm_ui$Internal$Model$ChildrenBehindAndInFront,
						_List_fromArray(
							[nearby]),
						existingInFront);
				} else {
					return $mdgriffith$elm_ui$Internal$Model$ChildrenInFront(
						A2($elm$core$List$cons, nearby, existingInFront));
				}
			default:
				var existingBehind = existing.a;
				var existingInFront = existing.b;
				if (location.$ === 'Behind') {
					return A2(
						$mdgriffith$elm_ui$Internal$Model$ChildrenBehindAndInFront,
						A2($elm$core$List$cons, nearby, existingBehind),
						existingInFront);
				} else {
					return A2(
						$mdgriffith$elm_ui$Internal$Model$ChildrenBehindAndInFront,
						existingBehind,
						A2($elm$core$List$cons, nearby, existingInFront));
				}
		}
	});
var $mdgriffith$elm_ui$Internal$Model$Embedded = F2(
	function (a, b) {
		return {$: 'Embedded', a: a, b: b};
	});
var $mdgriffith$elm_ui$Internal$Model$NodeName = function (a) {
	return {$: 'NodeName', a: a};
};
var $mdgriffith$elm_ui$Internal$Model$addNodeName = F2(
	function (newNode, old) {
		switch (old.$) {
			case 'Generic':
				return $mdgriffith$elm_ui$Internal$Model$NodeName(newNode);
			case 'NodeName':
				var name = old.a;
				return A2($mdgriffith$elm_ui$Internal$Model$Embedded, name, newNode);
			default:
				var x = old.a;
				var y = old.b;
				return A2($mdgriffith$elm_ui$Internal$Model$Embedded, x, y);
		}
	});
var $mdgriffith$elm_ui$Internal$Model$alignXName = function (align) {
	switch (align.$) {
		case 'Left':
			return $mdgriffith$elm_ui$Internal$Style$classes.alignedHorizontally + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.alignLeft);
		case 'Right':
			return $mdgriffith$elm_ui$Internal$Style$classes.alignedHorizontally + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.alignRight);
		default:
			return $mdgriffith$elm_ui$Internal$Style$classes.alignedHorizontally + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.alignCenterX);
	}
};
var $mdgriffith$elm_ui$Internal$Model$alignYName = function (align) {
	switch (align.$) {
		case 'Top':
			return $mdgriffith$elm_ui$Internal$Style$classes.alignedVertically + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.alignTop);
		case 'Bottom':
			return $mdgriffith$elm_ui$Internal$Style$classes.alignedVertically + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.alignBottom);
		default:
			return $mdgriffith$elm_ui$Internal$Style$classes.alignedVertically + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.alignCenterY);
	}
};
var $elm$virtual_dom$VirtualDom$attribute = F2(
	function (key, value) {
		return A2(
			_VirtualDom_attribute,
			_VirtualDom_noOnOrFormAction(key),
			_VirtualDom_noJavaScriptOrHtmlUri(value));
	});
var $mdgriffith$elm_ui$Internal$Model$FullTransform = F4(
	function (a, b, c, d) {
		return {$: 'FullTransform', a: a, b: b, c: c, d: d};
	});
var $mdgriffith$elm_ui$Internal$Model$Moved = function (a) {
	return {$: 'Moved', a: a};
};
var $mdgriffith$elm_ui$Internal$Model$composeTransformation = F2(
	function (transform, component) {
		switch (transform.$) {
			case 'Untransformed':
				switch (component.$) {
					case 'MoveX':
						var x = component.a;
						return $mdgriffith$elm_ui$Internal$Model$Moved(
							_Utils_Tuple3(x, 0, 0));
					case 'MoveY':
						var y = component.a;
						return $mdgriffith$elm_ui$Internal$Model$Moved(
							_Utils_Tuple3(0, y, 0));
					case 'MoveZ':
						var z = component.a;
						return $mdgriffith$elm_ui$Internal$Model$Moved(
							_Utils_Tuple3(0, 0, z));
					case 'MoveXYZ':
						var xyz = component.a;
						return $mdgriffith$elm_ui$Internal$Model$Moved(xyz);
					case 'Rotate':
						var xyz = component.a;
						var angle = component.b;
						return A4(
							$mdgriffith$elm_ui$Internal$Model$FullTransform,
							_Utils_Tuple3(0, 0, 0),
							_Utils_Tuple3(1, 1, 1),
							xyz,
							angle);
					default:
						var xyz = component.a;
						return A4(
							$mdgriffith$elm_ui$Internal$Model$FullTransform,
							_Utils_Tuple3(0, 0, 0),
							xyz,
							_Utils_Tuple3(0, 0, 1),
							0);
				}
			case 'Moved':
				var moved = transform.a;
				var x = moved.a;
				var y = moved.b;
				var z = moved.c;
				switch (component.$) {
					case 'MoveX':
						var newX = component.a;
						return $mdgriffith$elm_ui$Internal$Model$Moved(
							_Utils_Tuple3(newX, y, z));
					case 'MoveY':
						var newY = component.a;
						return $mdgriffith$elm_ui$Internal$Model$Moved(
							_Utils_Tuple3(x, newY, z));
					case 'MoveZ':
						var newZ = component.a;
						return $mdgriffith$elm_ui$Internal$Model$Moved(
							_Utils_Tuple3(x, y, newZ));
					case 'MoveXYZ':
						var xyz = component.a;
						return $mdgriffith$elm_ui$Internal$Model$Moved(xyz);
					case 'Rotate':
						var xyz = component.a;
						var angle = component.b;
						return A4(
							$mdgriffith$elm_ui$Internal$Model$FullTransform,
							moved,
							_Utils_Tuple3(1, 1, 1),
							xyz,
							angle);
					default:
						var scale = component.a;
						return A4(
							$mdgriffith$elm_ui$Internal$Model$FullTransform,
							moved,
							scale,
							_Utils_Tuple3(0, 0, 1),
							0);
				}
			default:
				var moved = transform.a;
				var x = moved.a;
				var y = moved.b;
				var z = moved.c;
				var scaled = transform.b;
				var origin = transform.c;
				var angle = transform.d;
				switch (component.$) {
					case 'MoveX':
						var newX = component.a;
						return A4(
							$mdgriffith$elm_ui$Internal$Model$FullTransform,
							_Utils_Tuple3(newX, y, z),
							scaled,
							origin,
							angle);
					case 'MoveY':
						var newY = component.a;
						return A4(
							$mdgriffith$elm_ui$Internal$Model$FullTransform,
							_Utils_Tuple3(x, newY, z),
							scaled,
							origin,
							angle);
					case 'MoveZ':
						var newZ = component.a;
						return A4(
							$mdgriffith$elm_ui$Internal$Model$FullTransform,
							_Utils_Tuple3(x, y, newZ),
							scaled,
							origin,
							angle);
					case 'MoveXYZ':
						var newMove = component.a;
						return A4($mdgriffith$elm_ui$Internal$Model$FullTransform, newMove, scaled, origin, angle);
					case 'Rotate':
						var newOrigin = component.a;
						var newAngle = component.b;
						return A4($mdgriffith$elm_ui$Internal$Model$FullTransform, moved, scaled, newOrigin, newAngle);
					default:
						var newScale = component.a;
						return A4($mdgriffith$elm_ui$Internal$Model$FullTransform, moved, newScale, origin, angle);
				}
		}
	});
var $mdgriffith$elm_ui$Internal$Flag$height = $mdgriffith$elm_ui$Internal$Flag$flag(7);
var $mdgriffith$elm_ui$Internal$Flag$heightContent = $mdgriffith$elm_ui$Internal$Flag$flag(36);
var $mdgriffith$elm_ui$Internal$Flag$merge = F2(
	function (_v0, _v1) {
		var one = _v0.a;
		var two = _v0.b;
		var three = _v1.a;
		var four = _v1.b;
		return A2($mdgriffith$elm_ui$Internal$Flag$Field, one | three, two | four);
	});
var $mdgriffith$elm_ui$Internal$Flag$none = A2($mdgriffith$elm_ui$Internal$Flag$Field, 0, 0);
var $mdgriffith$elm_ui$Internal$Model$renderHeight = function (h) {
	switch (h.$) {
		case 'Px':
			var px = h.a;
			var val = $elm$core$String$fromInt(px);
			var name = 'height-px-' + val;
			return _Utils_Tuple3(
				$mdgriffith$elm_ui$Internal$Flag$none,
				$mdgriffith$elm_ui$Internal$Style$classes.heightExact + (' ' + name),
				_List_fromArray(
					[
						A3($mdgriffith$elm_ui$Internal$Model$Single, name, 'height', val + 'px')
					]));
		case 'Content':
			return _Utils_Tuple3(
				A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$heightContent, $mdgriffith$elm_ui$Internal$Flag$none),
				$mdgriffith$elm_ui$Internal$Style$classes.heightContent,
				_List_Nil);
		case 'Fill':
			var portion = h.a;
			return (portion === 1) ? _Utils_Tuple3(
				A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$heightFill, $mdgriffith$elm_ui$Internal$Flag$none),
				$mdgriffith$elm_ui$Internal$Style$classes.heightFill,
				_List_Nil) : _Utils_Tuple3(
				A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$heightFill, $mdgriffith$elm_ui$Internal$Flag$none),
				$mdgriffith$elm_ui$Internal$Style$classes.heightFillPortion + (' height-fill-' + $elm$core$String$fromInt(portion)),
				_List_fromArray(
					[
						A3(
						$mdgriffith$elm_ui$Internal$Model$Single,
						$mdgriffith$elm_ui$Internal$Style$classes.any + ('.' + ($mdgriffith$elm_ui$Internal$Style$classes.column + (' > ' + $mdgriffith$elm_ui$Internal$Style$dot(
							'height-fill-' + $elm$core$String$fromInt(portion))))),
						'flex-grow',
						$elm$core$String$fromInt(portion * 100000))
					]));
		case 'Min':
			var minSize = h.a;
			var len = h.b;
			var cls = 'min-height-' + $elm$core$String$fromInt(minSize);
			var style = A3(
				$mdgriffith$elm_ui$Internal$Model$Single,
				cls,
				'min-height',
				$elm$core$String$fromInt(minSize) + 'px !important');
			var _v1 = $mdgriffith$elm_ui$Internal$Model$renderHeight(len);
			var newFlag = _v1.a;
			var newAttrs = _v1.b;
			var newStyle = _v1.c;
			return _Utils_Tuple3(
				A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$heightBetween, newFlag),
				cls + (' ' + newAttrs),
				A2($elm$core$List$cons, style, newStyle));
		default:
			var maxSize = h.a;
			var len = h.b;
			var cls = 'max-height-' + $elm$core$String$fromInt(maxSize);
			var style = A3(
				$mdgriffith$elm_ui$Internal$Model$Single,
				cls,
				'max-height',
				$elm$core$String$fromInt(maxSize) + 'px');
			var _v2 = $mdgriffith$elm_ui$Internal$Model$renderHeight(len);
			var newFlag = _v2.a;
			var newAttrs = _v2.b;
			var newStyle = _v2.c;
			return _Utils_Tuple3(
				A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$heightBetween, newFlag),
				cls + (' ' + newAttrs),
				A2($elm$core$List$cons, style, newStyle));
	}
};
var $mdgriffith$elm_ui$Internal$Flag$widthContent = $mdgriffith$elm_ui$Internal$Flag$flag(38);
var $mdgriffith$elm_ui$Internal$Model$renderWidth = function (w) {
	switch (w.$) {
		case 'Px':
			var px = w.a;
			return _Utils_Tuple3(
				$mdgriffith$elm_ui$Internal$Flag$none,
				$mdgriffith$elm_ui$Internal$Style$classes.widthExact + (' width-px-' + $elm$core$String$fromInt(px)),
				_List_fromArray(
					[
						A3(
						$mdgriffith$elm_ui$Internal$Model$Single,
						'width-px-' + $elm$core$String$fromInt(px),
						'width',
						$elm$core$String$fromInt(px) + 'px')
					]));
		case 'Content':
			return _Utils_Tuple3(
				A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$widthContent, $mdgriffith$elm_ui$Internal$Flag$none),
				$mdgriffith$elm_ui$Internal$Style$classes.widthContent,
				_List_Nil);
		case 'Fill':
			var portion = w.a;
			return (portion === 1) ? _Utils_Tuple3(
				A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$widthFill, $mdgriffith$elm_ui$Internal$Flag$none),
				$mdgriffith$elm_ui$Internal$Style$classes.widthFill,
				_List_Nil) : _Utils_Tuple3(
				A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$widthFill, $mdgriffith$elm_ui$Internal$Flag$none),
				$mdgriffith$elm_ui$Internal$Style$classes.widthFillPortion + (' width-fill-' + $elm$core$String$fromInt(portion)),
				_List_fromArray(
					[
						A3(
						$mdgriffith$elm_ui$Internal$Model$Single,
						$mdgriffith$elm_ui$Internal$Style$classes.any + ('.' + ($mdgriffith$elm_ui$Internal$Style$classes.row + (' > ' + $mdgriffith$elm_ui$Internal$Style$dot(
							'width-fill-' + $elm$core$String$fromInt(portion))))),
						'flex-grow',
						$elm$core$String$fromInt(portion * 100000))
					]));
		case 'Min':
			var minSize = w.a;
			var len = w.b;
			var cls = 'min-width-' + $elm$core$String$fromInt(minSize);
			var style = A3(
				$mdgriffith$elm_ui$Internal$Model$Single,
				cls,
				'min-width',
				$elm$core$String$fromInt(minSize) + 'px');
			var _v1 = $mdgriffith$elm_ui$Internal$Model$renderWidth(len);
			var newFlag = _v1.a;
			var newAttrs = _v1.b;
			var newStyle = _v1.c;
			return _Utils_Tuple3(
				A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$widthBetween, newFlag),
				cls + (' ' + newAttrs),
				A2($elm$core$List$cons, style, newStyle));
		default:
			var maxSize = w.a;
			var len = w.b;
			var cls = 'max-width-' + $elm$core$String$fromInt(maxSize);
			var style = A3(
				$mdgriffith$elm_ui$Internal$Model$Single,
				cls,
				'max-width',
				$elm$core$String$fromInt(maxSize) + 'px');
			var _v2 = $mdgriffith$elm_ui$Internal$Model$renderWidth(len);
			var newFlag = _v2.a;
			var newAttrs = _v2.b;
			var newStyle = _v2.c;
			return _Utils_Tuple3(
				A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$widthBetween, newFlag),
				cls + (' ' + newAttrs),
				A2($elm$core$List$cons, style, newStyle));
	}
};
var $mdgriffith$elm_ui$Internal$Flag$borderWidth = $mdgriffith$elm_ui$Internal$Flag$flag(27);
var $mdgriffith$elm_ui$Internal$Model$skippable = F2(
	function (flag, style) {
		if (_Utils_eq(flag, $mdgriffith$elm_ui$Internal$Flag$borderWidth)) {
			if (style.$ === 'Single') {
				var val = style.c;
				switch (val) {
					case '0px':
						return true;
					case '1px':
						return true;
					case '2px':
						return true;
					case '3px':
						return true;
					case '4px':
						return true;
					case '5px':
						return true;
					case '6px':
						return true;
					default:
						return false;
				}
			} else {
				return false;
			}
		} else {
			switch (style.$) {
				case 'FontSize':
					var i = style.a;
					return (i >= 8) && (i <= 32);
				case 'PaddingStyle':
					var name = style.a;
					var t = style.b;
					var r = style.c;
					var b = style.d;
					var l = style.e;
					return _Utils_eq(t, b) && (_Utils_eq(t, r) && (_Utils_eq(t, l) && ((t >= 0) && (t <= 24))));
				default:
					return false;
			}
		}
	});
var $mdgriffith$elm_ui$Internal$Flag$width = $mdgriffith$elm_ui$Internal$Flag$flag(6);
var $mdgriffith$elm_ui$Internal$Flag$xAlign = $mdgriffith$elm_ui$Internal$Flag$flag(30);
var $mdgriffith$elm_ui$Internal$Flag$yAlign = $mdgriffith$elm_ui$Internal$Flag$flag(29);
var $mdgriffith$elm_ui$Internal$Model$gatherAttrRecursive = F8(
	function (classes, node, has, transform, styles, attrs, children, elementAttrs) {
		gatherAttrRecursive:
		while (true) {
			if (!elementAttrs.b) {
				var _v1 = $mdgriffith$elm_ui$Internal$Model$transformClass(transform);
				if (_v1.$ === 'Nothing') {
					return {
						attributes: A2(
							$elm$core$List$cons,
							$elm$html$Html$Attributes$class(classes),
							attrs),
						children: children,
						has: has,
						node: node,
						styles: styles
					};
				} else {
					var _class = _v1.a;
					return {
						attributes: A2(
							$elm$core$List$cons,
							$elm$html$Html$Attributes$class(classes + (' ' + _class)),
							attrs),
						children: children,
						has: has,
						node: node,
						styles: A2(
							$elm$core$List$cons,
							$mdgriffith$elm_ui$Internal$Model$Transform(transform),
							styles)
					};
				}
			} else {
				var attribute = elementAttrs.a;
				var remaining = elementAttrs.b;
				switch (attribute.$) {
					case 'NoAttribute':
						var $temp$classes = classes,
							$temp$node = node,
							$temp$has = has,
							$temp$transform = transform,
							$temp$styles = styles,
							$temp$attrs = attrs,
							$temp$children = children,
							$temp$elementAttrs = remaining;
						classes = $temp$classes;
						node = $temp$node;
						has = $temp$has;
						transform = $temp$transform;
						styles = $temp$styles;
						attrs = $temp$attrs;
						children = $temp$children;
						elementAttrs = $temp$elementAttrs;
						continue gatherAttrRecursive;
					case 'Class':
						var flag = attribute.a;
						var exactClassName = attribute.b;
						if (A2($mdgriffith$elm_ui$Internal$Flag$present, flag, has)) {
							var $temp$classes = classes,
								$temp$node = node,
								$temp$has = has,
								$temp$transform = transform,
								$temp$styles = styles,
								$temp$attrs = attrs,
								$temp$children = children,
								$temp$elementAttrs = remaining;
							classes = $temp$classes;
							node = $temp$node;
							has = $temp$has;
							transform = $temp$transform;
							styles = $temp$styles;
							attrs = $temp$attrs;
							children = $temp$children;
							elementAttrs = $temp$elementAttrs;
							continue gatherAttrRecursive;
						} else {
							var $temp$classes = exactClassName + (' ' + classes),
								$temp$node = node,
								$temp$has = A2($mdgriffith$elm_ui$Internal$Flag$add, flag, has),
								$temp$transform = transform,
								$temp$styles = styles,
								$temp$attrs = attrs,
								$temp$children = children,
								$temp$elementAttrs = remaining;
							classes = $temp$classes;
							node = $temp$node;
							has = $temp$has;
							transform = $temp$transform;
							styles = $temp$styles;
							attrs = $temp$attrs;
							children = $temp$children;
							elementAttrs = $temp$elementAttrs;
							continue gatherAttrRecursive;
						}
					case 'Attr':
						var actualAttribute = attribute.a;
						var $temp$classes = classes,
							$temp$node = node,
							$temp$has = has,
							$temp$transform = transform,
							$temp$styles = styles,
							$temp$attrs = A2($elm$core$List$cons, actualAttribute, attrs),
							$temp$children = children,
							$temp$elementAttrs = remaining;
						classes = $temp$classes;
						node = $temp$node;
						has = $temp$has;
						transform = $temp$transform;
						styles = $temp$styles;
						attrs = $temp$attrs;
						children = $temp$children;
						elementAttrs = $temp$elementAttrs;
						continue gatherAttrRecursive;
					case 'StyleClass':
						var flag = attribute.a;
						var style = attribute.b;
						if (A2($mdgriffith$elm_ui$Internal$Flag$present, flag, has)) {
							var $temp$classes = classes,
								$temp$node = node,
								$temp$has = has,
								$temp$transform = transform,
								$temp$styles = styles,
								$temp$attrs = attrs,
								$temp$children = children,
								$temp$elementAttrs = remaining;
							classes = $temp$classes;
							node = $temp$node;
							has = $temp$has;
							transform = $temp$transform;
							styles = $temp$styles;
							attrs = $temp$attrs;
							children = $temp$children;
							elementAttrs = $temp$elementAttrs;
							continue gatherAttrRecursive;
						} else {
							if (A2($mdgriffith$elm_ui$Internal$Model$skippable, flag, style)) {
								var $temp$classes = $mdgriffith$elm_ui$Internal$Model$getStyleName(style) + (' ' + classes),
									$temp$node = node,
									$temp$has = A2($mdgriffith$elm_ui$Internal$Flag$add, flag, has),
									$temp$transform = transform,
									$temp$styles = styles,
									$temp$attrs = attrs,
									$temp$children = children,
									$temp$elementAttrs = remaining;
								classes = $temp$classes;
								node = $temp$node;
								has = $temp$has;
								transform = $temp$transform;
								styles = $temp$styles;
								attrs = $temp$attrs;
								children = $temp$children;
								elementAttrs = $temp$elementAttrs;
								continue gatherAttrRecursive;
							} else {
								var $temp$classes = $mdgriffith$elm_ui$Internal$Model$getStyleName(style) + (' ' + classes),
									$temp$node = node,
									$temp$has = A2($mdgriffith$elm_ui$Internal$Flag$add, flag, has),
									$temp$transform = transform,
									$temp$styles = A2($elm$core$List$cons, style, styles),
									$temp$attrs = attrs,
									$temp$children = children,
									$temp$elementAttrs = remaining;
								classes = $temp$classes;
								node = $temp$node;
								has = $temp$has;
								transform = $temp$transform;
								styles = $temp$styles;
								attrs = $temp$attrs;
								children = $temp$children;
								elementAttrs = $temp$elementAttrs;
								continue gatherAttrRecursive;
							}
						}
					case 'TransformComponent':
						var flag = attribute.a;
						var component = attribute.b;
						var $temp$classes = classes,
							$temp$node = node,
							$temp$has = A2($mdgriffith$elm_ui$Internal$Flag$add, flag, has),
							$temp$transform = A2($mdgriffith$elm_ui$Internal$Model$composeTransformation, transform, component),
							$temp$styles = styles,
							$temp$attrs = attrs,
							$temp$children = children,
							$temp$elementAttrs = remaining;
						classes = $temp$classes;
						node = $temp$node;
						has = $temp$has;
						transform = $temp$transform;
						styles = $temp$styles;
						attrs = $temp$attrs;
						children = $temp$children;
						elementAttrs = $temp$elementAttrs;
						continue gatherAttrRecursive;
					case 'Width':
						var width = attribute.a;
						if (A2($mdgriffith$elm_ui$Internal$Flag$present, $mdgriffith$elm_ui$Internal$Flag$width, has)) {
							var $temp$classes = classes,
								$temp$node = node,
								$temp$has = has,
								$temp$transform = transform,
								$temp$styles = styles,
								$temp$attrs = attrs,
								$temp$children = children,
								$temp$elementAttrs = remaining;
							classes = $temp$classes;
							node = $temp$node;
							has = $temp$has;
							transform = $temp$transform;
							styles = $temp$styles;
							attrs = $temp$attrs;
							children = $temp$children;
							elementAttrs = $temp$elementAttrs;
							continue gatherAttrRecursive;
						} else {
							switch (width.$) {
								case 'Px':
									var px = width.a;
									var $temp$classes = ($mdgriffith$elm_ui$Internal$Style$classes.widthExact + (' width-px-' + $elm$core$String$fromInt(px))) + (' ' + classes),
										$temp$node = node,
										$temp$has = A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$width, has),
										$temp$transform = transform,
										$temp$styles = A2(
										$elm$core$List$cons,
										A3(
											$mdgriffith$elm_ui$Internal$Model$Single,
											'width-px-' + $elm$core$String$fromInt(px),
											'width',
											$elm$core$String$fromInt(px) + 'px'),
										styles),
										$temp$attrs = attrs,
										$temp$children = children,
										$temp$elementAttrs = remaining;
									classes = $temp$classes;
									node = $temp$node;
									has = $temp$has;
									transform = $temp$transform;
									styles = $temp$styles;
									attrs = $temp$attrs;
									children = $temp$children;
									elementAttrs = $temp$elementAttrs;
									continue gatherAttrRecursive;
								case 'Content':
									var $temp$classes = classes + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.widthContent),
										$temp$node = node,
										$temp$has = A2(
										$mdgriffith$elm_ui$Internal$Flag$add,
										$mdgriffith$elm_ui$Internal$Flag$widthContent,
										A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$width, has)),
										$temp$transform = transform,
										$temp$styles = styles,
										$temp$attrs = attrs,
										$temp$children = children,
										$temp$elementAttrs = remaining;
									classes = $temp$classes;
									node = $temp$node;
									has = $temp$has;
									transform = $temp$transform;
									styles = $temp$styles;
									attrs = $temp$attrs;
									children = $temp$children;
									elementAttrs = $temp$elementAttrs;
									continue gatherAttrRecursive;
								case 'Fill':
									var portion = width.a;
									if (portion === 1) {
										var $temp$classes = classes + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.widthFill),
											$temp$node = node,
											$temp$has = A2(
											$mdgriffith$elm_ui$Internal$Flag$add,
											$mdgriffith$elm_ui$Internal$Flag$widthFill,
											A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$width, has)),
											$temp$transform = transform,
											$temp$styles = styles,
											$temp$attrs = attrs,
											$temp$children = children,
											$temp$elementAttrs = remaining;
										classes = $temp$classes;
										node = $temp$node;
										has = $temp$has;
										transform = $temp$transform;
										styles = $temp$styles;
										attrs = $temp$attrs;
										children = $temp$children;
										elementAttrs = $temp$elementAttrs;
										continue gatherAttrRecursive;
									} else {
										var $temp$classes = classes + (' ' + ($mdgriffith$elm_ui$Internal$Style$classes.widthFillPortion + (' width-fill-' + $elm$core$String$fromInt(portion)))),
											$temp$node = node,
											$temp$has = A2(
											$mdgriffith$elm_ui$Internal$Flag$add,
											$mdgriffith$elm_ui$Internal$Flag$widthFill,
											A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$width, has)),
											$temp$transform = transform,
											$temp$styles = A2(
											$elm$core$List$cons,
											A3(
												$mdgriffith$elm_ui$Internal$Model$Single,
												$mdgriffith$elm_ui$Internal$Style$classes.any + ('.' + ($mdgriffith$elm_ui$Internal$Style$classes.row + (' > ' + $mdgriffith$elm_ui$Internal$Style$dot(
													'width-fill-' + $elm$core$String$fromInt(portion))))),
												'flex-grow',
												$elm$core$String$fromInt(portion * 100000)),
											styles),
											$temp$attrs = attrs,
											$temp$children = children,
											$temp$elementAttrs = remaining;
										classes = $temp$classes;
										node = $temp$node;
										has = $temp$has;
										transform = $temp$transform;
										styles = $temp$styles;
										attrs = $temp$attrs;
										children = $temp$children;
										elementAttrs = $temp$elementAttrs;
										continue gatherAttrRecursive;
									}
								default:
									var _v4 = $mdgriffith$elm_ui$Internal$Model$renderWidth(width);
									var addToFlags = _v4.a;
									var newClass = _v4.b;
									var newStyles = _v4.c;
									var $temp$classes = classes + (' ' + newClass),
										$temp$node = node,
										$temp$has = A2(
										$mdgriffith$elm_ui$Internal$Flag$merge,
										addToFlags,
										A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$width, has)),
										$temp$transform = transform,
										$temp$styles = _Utils_ap(newStyles, styles),
										$temp$attrs = attrs,
										$temp$children = children,
										$temp$elementAttrs = remaining;
									classes = $temp$classes;
									node = $temp$node;
									has = $temp$has;
									transform = $temp$transform;
									styles = $temp$styles;
									attrs = $temp$attrs;
									children = $temp$children;
									elementAttrs = $temp$elementAttrs;
									continue gatherAttrRecursive;
							}
						}
					case 'Height':
						var height = attribute.a;
						if (A2($mdgriffith$elm_ui$Internal$Flag$present, $mdgriffith$elm_ui$Internal$Flag$height, has)) {
							var $temp$classes = classes,
								$temp$node = node,
								$temp$has = has,
								$temp$transform = transform,
								$temp$styles = styles,
								$temp$attrs = attrs,
								$temp$children = children,
								$temp$elementAttrs = remaining;
							classes = $temp$classes;
							node = $temp$node;
							has = $temp$has;
							transform = $temp$transform;
							styles = $temp$styles;
							attrs = $temp$attrs;
							children = $temp$children;
							elementAttrs = $temp$elementAttrs;
							continue gatherAttrRecursive;
						} else {
							switch (height.$) {
								case 'Px':
									var px = height.a;
									var val = $elm$core$String$fromInt(px) + 'px';
									var name = 'height-px-' + val;
									var $temp$classes = $mdgriffith$elm_ui$Internal$Style$classes.heightExact + (' ' + (name + (' ' + classes))),
										$temp$node = node,
										$temp$has = A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$height, has),
										$temp$transform = transform,
										$temp$styles = A2(
										$elm$core$List$cons,
										A3($mdgriffith$elm_ui$Internal$Model$Single, name, 'height ', val),
										styles),
										$temp$attrs = attrs,
										$temp$children = children,
										$temp$elementAttrs = remaining;
									classes = $temp$classes;
									node = $temp$node;
									has = $temp$has;
									transform = $temp$transform;
									styles = $temp$styles;
									attrs = $temp$attrs;
									children = $temp$children;
									elementAttrs = $temp$elementAttrs;
									continue gatherAttrRecursive;
								case 'Content':
									var $temp$classes = $mdgriffith$elm_ui$Internal$Style$classes.heightContent + (' ' + classes),
										$temp$node = node,
										$temp$has = A2(
										$mdgriffith$elm_ui$Internal$Flag$add,
										$mdgriffith$elm_ui$Internal$Flag$heightContent,
										A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$height, has)),
										$temp$transform = transform,
										$temp$styles = styles,
										$temp$attrs = attrs,
										$temp$children = children,
										$temp$elementAttrs = remaining;
									classes = $temp$classes;
									node = $temp$node;
									has = $temp$has;
									transform = $temp$transform;
									styles = $temp$styles;
									attrs = $temp$attrs;
									children = $temp$children;
									elementAttrs = $temp$elementAttrs;
									continue gatherAttrRecursive;
								case 'Fill':
									var portion = height.a;
									if (portion === 1) {
										var $temp$classes = $mdgriffith$elm_ui$Internal$Style$classes.heightFill + (' ' + classes),
											$temp$node = node,
											$temp$has = A2(
											$mdgriffith$elm_ui$Internal$Flag$add,
											$mdgriffith$elm_ui$Internal$Flag$heightFill,
											A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$height, has)),
											$temp$transform = transform,
											$temp$styles = styles,
											$temp$attrs = attrs,
											$temp$children = children,
											$temp$elementAttrs = remaining;
										classes = $temp$classes;
										node = $temp$node;
										has = $temp$has;
										transform = $temp$transform;
										styles = $temp$styles;
										attrs = $temp$attrs;
										children = $temp$children;
										elementAttrs = $temp$elementAttrs;
										continue gatherAttrRecursive;
									} else {
										var $temp$classes = classes + (' ' + ($mdgriffith$elm_ui$Internal$Style$classes.heightFillPortion + (' height-fill-' + $elm$core$String$fromInt(portion)))),
											$temp$node = node,
											$temp$has = A2(
											$mdgriffith$elm_ui$Internal$Flag$add,
											$mdgriffith$elm_ui$Internal$Flag$heightFill,
											A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$height, has)),
											$temp$transform = transform,
											$temp$styles = A2(
											$elm$core$List$cons,
											A3(
												$mdgriffith$elm_ui$Internal$Model$Single,
												$mdgriffith$elm_ui$Internal$Style$classes.any + ('.' + ($mdgriffith$elm_ui$Internal$Style$classes.column + (' > ' + $mdgriffith$elm_ui$Internal$Style$dot(
													'height-fill-' + $elm$core$String$fromInt(portion))))),
												'flex-grow',
												$elm$core$String$fromInt(portion * 100000)),
											styles),
											$temp$attrs = attrs,
											$temp$children = children,
											$temp$elementAttrs = remaining;
										classes = $temp$classes;
										node = $temp$node;
										has = $temp$has;
										transform = $temp$transform;
										styles = $temp$styles;
										attrs = $temp$attrs;
										children = $temp$children;
										elementAttrs = $temp$elementAttrs;
										continue gatherAttrRecursive;
									}
								default:
									var _v6 = $mdgriffith$elm_ui$Internal$Model$renderHeight(height);
									var addToFlags = _v6.a;
									var newClass = _v6.b;
									var newStyles = _v6.c;
									var $temp$classes = classes + (' ' + newClass),
										$temp$node = node,
										$temp$has = A2(
										$mdgriffith$elm_ui$Internal$Flag$merge,
										addToFlags,
										A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$height, has)),
										$temp$transform = transform,
										$temp$styles = _Utils_ap(newStyles, styles),
										$temp$attrs = attrs,
										$temp$children = children,
										$temp$elementAttrs = remaining;
									classes = $temp$classes;
									node = $temp$node;
									has = $temp$has;
									transform = $temp$transform;
									styles = $temp$styles;
									attrs = $temp$attrs;
									children = $temp$children;
									elementAttrs = $temp$elementAttrs;
									continue gatherAttrRecursive;
							}
						}
					case 'Describe':
						var description = attribute.a;
						switch (description.$) {
							case 'Main':
								var $temp$classes = classes,
									$temp$node = A2($mdgriffith$elm_ui$Internal$Model$addNodeName, 'main', node),
									$temp$has = has,
									$temp$transform = transform,
									$temp$styles = styles,
									$temp$attrs = attrs,
									$temp$children = children,
									$temp$elementAttrs = remaining;
								classes = $temp$classes;
								node = $temp$node;
								has = $temp$has;
								transform = $temp$transform;
								styles = $temp$styles;
								attrs = $temp$attrs;
								children = $temp$children;
								elementAttrs = $temp$elementAttrs;
								continue gatherAttrRecursive;
							case 'Navigation':
								var $temp$classes = classes,
									$temp$node = A2($mdgriffith$elm_ui$Internal$Model$addNodeName, 'nav', node),
									$temp$has = has,
									$temp$transform = transform,
									$temp$styles = styles,
									$temp$attrs = attrs,
									$temp$children = children,
									$temp$elementAttrs = remaining;
								classes = $temp$classes;
								node = $temp$node;
								has = $temp$has;
								transform = $temp$transform;
								styles = $temp$styles;
								attrs = $temp$attrs;
								children = $temp$children;
								elementAttrs = $temp$elementAttrs;
								continue gatherAttrRecursive;
							case 'ContentInfo':
								var $temp$classes = classes,
									$temp$node = A2($mdgriffith$elm_ui$Internal$Model$addNodeName, 'footer', node),
									$temp$has = has,
									$temp$transform = transform,
									$temp$styles = styles,
									$temp$attrs = attrs,
									$temp$children = children,
									$temp$elementAttrs = remaining;
								classes = $temp$classes;
								node = $temp$node;
								has = $temp$has;
								transform = $temp$transform;
								styles = $temp$styles;
								attrs = $temp$attrs;
								children = $temp$children;
								elementAttrs = $temp$elementAttrs;
								continue gatherAttrRecursive;
							case 'Complementary':
								var $temp$classes = classes,
									$temp$node = A2($mdgriffith$elm_ui$Internal$Model$addNodeName, 'aside', node),
									$temp$has = has,
									$temp$transform = transform,
									$temp$styles = styles,
									$temp$attrs = attrs,
									$temp$children = children,
									$temp$elementAttrs = remaining;
								classes = $temp$classes;
								node = $temp$node;
								has = $temp$has;
								transform = $temp$transform;
								styles = $temp$styles;
								attrs = $temp$attrs;
								children = $temp$children;
								elementAttrs = $temp$elementAttrs;
								continue gatherAttrRecursive;
							case 'Heading':
								var i = description.a;
								if (i <= 1) {
									var $temp$classes = classes,
										$temp$node = A2($mdgriffith$elm_ui$Internal$Model$addNodeName, 'h1', node),
										$temp$has = has,
										$temp$transform = transform,
										$temp$styles = styles,
										$temp$attrs = attrs,
										$temp$children = children,
										$temp$elementAttrs = remaining;
									classes = $temp$classes;
									node = $temp$node;
									has = $temp$has;
									transform = $temp$transform;
									styles = $temp$styles;
									attrs = $temp$attrs;
									children = $temp$children;
									elementAttrs = $temp$elementAttrs;
									continue gatherAttrRecursive;
								} else {
									if (i < 7) {
										var $temp$classes = classes,
											$temp$node = A2(
											$mdgriffith$elm_ui$Internal$Model$addNodeName,
											'h' + $elm$core$String$fromInt(i),
											node),
											$temp$has = has,
											$temp$transform = transform,
											$temp$styles = styles,
											$temp$attrs = attrs,
											$temp$children = children,
											$temp$elementAttrs = remaining;
										classes = $temp$classes;
										node = $temp$node;
										has = $temp$has;
										transform = $temp$transform;
										styles = $temp$styles;
										attrs = $temp$attrs;
										children = $temp$children;
										elementAttrs = $temp$elementAttrs;
										continue gatherAttrRecursive;
									} else {
										var $temp$classes = classes,
											$temp$node = A2($mdgriffith$elm_ui$Internal$Model$addNodeName, 'h6', node),
											$temp$has = has,
											$temp$transform = transform,
											$temp$styles = styles,
											$temp$attrs = attrs,
											$temp$children = children,
											$temp$elementAttrs = remaining;
										classes = $temp$classes;
										node = $temp$node;
										has = $temp$has;
										transform = $temp$transform;
										styles = $temp$styles;
										attrs = $temp$attrs;
										children = $temp$children;
										elementAttrs = $temp$elementAttrs;
										continue gatherAttrRecursive;
									}
								}
							case 'Paragraph':
								var $temp$classes = classes,
									$temp$node = node,
									$temp$has = has,
									$temp$transform = transform,
									$temp$styles = styles,
									$temp$attrs = attrs,
									$temp$children = children,
									$temp$elementAttrs = remaining;
								classes = $temp$classes;
								node = $temp$node;
								has = $temp$has;
								transform = $temp$transform;
								styles = $temp$styles;
								attrs = $temp$attrs;
								children = $temp$children;
								elementAttrs = $temp$elementAttrs;
								continue gatherAttrRecursive;
							case 'Button':
								var $temp$classes = classes,
									$temp$node = node,
									$temp$has = has,
									$temp$transform = transform,
									$temp$styles = styles,
									$temp$attrs = A2(
									$elm$core$List$cons,
									A2($elm$virtual_dom$VirtualDom$attribute, 'role', 'button'),
									attrs),
									$temp$children = children,
									$temp$elementAttrs = remaining;
								classes = $temp$classes;
								node = $temp$node;
								has = $temp$has;
								transform = $temp$transform;
								styles = $temp$styles;
								attrs = $temp$attrs;
								children = $temp$children;
								elementAttrs = $temp$elementAttrs;
								continue gatherAttrRecursive;
							case 'Label':
								var label = description.a;
								var $temp$classes = classes,
									$temp$node = node,
									$temp$has = has,
									$temp$transform = transform,
									$temp$styles = styles,
									$temp$attrs = A2(
									$elm$core$List$cons,
									A2($elm$virtual_dom$VirtualDom$attribute, 'aria-label', label),
									attrs),
									$temp$children = children,
									$temp$elementAttrs = remaining;
								classes = $temp$classes;
								node = $temp$node;
								has = $temp$has;
								transform = $temp$transform;
								styles = $temp$styles;
								attrs = $temp$attrs;
								children = $temp$children;
								elementAttrs = $temp$elementAttrs;
								continue gatherAttrRecursive;
							case 'LivePolite':
								var $temp$classes = classes,
									$temp$node = node,
									$temp$has = has,
									$temp$transform = transform,
									$temp$styles = styles,
									$temp$attrs = A2(
									$elm$core$List$cons,
									A2($elm$virtual_dom$VirtualDom$attribute, 'aria-live', 'polite'),
									attrs),
									$temp$children = children,
									$temp$elementAttrs = remaining;
								classes = $temp$classes;
								node = $temp$node;
								has = $temp$has;
								transform = $temp$transform;
								styles = $temp$styles;
								attrs = $temp$attrs;
								children = $temp$children;
								elementAttrs = $temp$elementAttrs;
								continue gatherAttrRecursive;
							default:
								var $temp$classes = classes,
									$temp$node = node,
									$temp$has = has,
									$temp$transform = transform,
									$temp$styles = styles,
									$temp$attrs = A2(
									$elm$core$List$cons,
									A2($elm$virtual_dom$VirtualDom$attribute, 'aria-live', 'assertive'),
									attrs),
									$temp$children = children,
									$temp$elementAttrs = remaining;
								classes = $temp$classes;
								node = $temp$node;
								has = $temp$has;
								transform = $temp$transform;
								styles = $temp$styles;
								attrs = $temp$attrs;
								children = $temp$children;
								elementAttrs = $temp$elementAttrs;
								continue gatherAttrRecursive;
						}
					case 'Nearby':
						var location = attribute.a;
						var elem = attribute.b;
						var newStyles = function () {
							switch (elem.$) {
								case 'Empty':
									return styles;
								case 'Text':
									var str = elem.a;
									return styles;
								case 'Unstyled':
									var html = elem.a;
									return styles;
								default:
									var styled = elem.a;
									return _Utils_ap(styles, styled.styles);
							}
						}();
						var $temp$classes = classes,
							$temp$node = node,
							$temp$has = has,
							$temp$transform = transform,
							$temp$styles = newStyles,
							$temp$attrs = attrs,
							$temp$children = A3($mdgriffith$elm_ui$Internal$Model$addNearbyElement, location, elem, children),
							$temp$elementAttrs = remaining;
						classes = $temp$classes;
						node = $temp$node;
						has = $temp$has;
						transform = $temp$transform;
						styles = $temp$styles;
						attrs = $temp$attrs;
						children = $temp$children;
						elementAttrs = $temp$elementAttrs;
						continue gatherAttrRecursive;
					case 'AlignX':
						var x = attribute.a;
						if (A2($mdgriffith$elm_ui$Internal$Flag$present, $mdgriffith$elm_ui$Internal$Flag$xAlign, has)) {
							var $temp$classes = classes,
								$temp$node = node,
								$temp$has = has,
								$temp$transform = transform,
								$temp$styles = styles,
								$temp$attrs = attrs,
								$temp$children = children,
								$temp$elementAttrs = remaining;
							classes = $temp$classes;
							node = $temp$node;
							has = $temp$has;
							transform = $temp$transform;
							styles = $temp$styles;
							attrs = $temp$attrs;
							children = $temp$children;
							elementAttrs = $temp$elementAttrs;
							continue gatherAttrRecursive;
						} else {
							var $temp$classes = $mdgriffith$elm_ui$Internal$Model$alignXName(x) + (' ' + classes),
								$temp$node = node,
								$temp$has = function (flags) {
								switch (x.$) {
									case 'CenterX':
										return A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$centerX, flags);
									case 'Right':
										return A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$alignRight, flags);
									default:
										return flags;
								}
							}(
								A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$xAlign, has)),
								$temp$transform = transform,
								$temp$styles = styles,
								$temp$attrs = attrs,
								$temp$children = children,
								$temp$elementAttrs = remaining;
							classes = $temp$classes;
							node = $temp$node;
							has = $temp$has;
							transform = $temp$transform;
							styles = $temp$styles;
							attrs = $temp$attrs;
							children = $temp$children;
							elementAttrs = $temp$elementAttrs;
							continue gatherAttrRecursive;
						}
					default:
						var y = attribute.a;
						if (A2($mdgriffith$elm_ui$Internal$Flag$present, $mdgriffith$elm_ui$Internal$Flag$yAlign, has)) {
							var $temp$classes = classes,
								$temp$node = node,
								$temp$has = has,
								$temp$transform = transform,
								$temp$styles = styles,
								$temp$attrs = attrs,
								$temp$children = children,
								$temp$elementAttrs = remaining;
							classes = $temp$classes;
							node = $temp$node;
							has = $temp$has;
							transform = $temp$transform;
							styles = $temp$styles;
							attrs = $temp$attrs;
							children = $temp$children;
							elementAttrs = $temp$elementAttrs;
							continue gatherAttrRecursive;
						} else {
							var $temp$classes = $mdgriffith$elm_ui$Internal$Model$alignYName(y) + (' ' + classes),
								$temp$node = node,
								$temp$has = function (flags) {
								switch (y.$) {
									case 'CenterY':
										return A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$centerY, flags);
									case 'Bottom':
										return A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$alignBottom, flags);
									default:
										return flags;
								}
							}(
								A2($mdgriffith$elm_ui$Internal$Flag$add, $mdgriffith$elm_ui$Internal$Flag$yAlign, has)),
								$temp$transform = transform,
								$temp$styles = styles,
								$temp$attrs = attrs,
								$temp$children = children,
								$temp$elementAttrs = remaining;
							classes = $temp$classes;
							node = $temp$node;
							has = $temp$has;
							transform = $temp$transform;
							styles = $temp$styles;
							attrs = $temp$attrs;
							children = $temp$children;
							elementAttrs = $temp$elementAttrs;
							continue gatherAttrRecursive;
						}
				}
			}
		}
	});
var $mdgriffith$elm_ui$Internal$Model$Untransformed = {$: 'Untransformed'};
var $mdgriffith$elm_ui$Internal$Model$untransformed = $mdgriffith$elm_ui$Internal$Model$Untransformed;
var $mdgriffith$elm_ui$Internal$Model$element = F4(
	function (context, node, attributes, children) {
		return A3(
			$mdgriffith$elm_ui$Internal$Model$createElement,
			context,
			children,
			A8(
				$mdgriffith$elm_ui$Internal$Model$gatherAttrRecursive,
				$mdgriffith$elm_ui$Internal$Model$contextClasses(context),
				node,
				$mdgriffith$elm_ui$Internal$Flag$none,
				$mdgriffith$elm_ui$Internal$Model$untransformed,
				_List_Nil,
				_List_Nil,
				$mdgriffith$elm_ui$Internal$Model$NoNearbyChildren,
				$elm$core$List$reverse(attributes)));
	});
var $mdgriffith$elm_ui$Internal$Model$Height = function (a) {
	return {$: 'Height', a: a};
};
var $mdgriffith$elm_ui$Element$height = $mdgriffith$elm_ui$Internal$Model$Height;
var $mdgriffith$elm_ui$Internal$Model$Attr = function (a) {
	return {$: 'Attr', a: a};
};
var $mdgriffith$elm_ui$Internal$Model$htmlClass = function (cls) {
	return $mdgriffith$elm_ui$Internal$Model$Attr(
		$elm$html$Html$Attributes$class(cls));
};
var $mdgriffith$elm_ui$Internal$Model$Content = {$: 'Content'};
var $mdgriffith$elm_ui$Element$shrink = $mdgriffith$elm_ui$Internal$Model$Content;
var $mdgriffith$elm_ui$Internal$Model$Width = function (a) {
	return {$: 'Width', a: a};
};
var $mdgriffith$elm_ui$Element$width = $mdgriffith$elm_ui$Internal$Model$Width;
var $mdgriffith$elm_ui$Element$column = F2(
	function (attrs, children) {
		return A4(
			$mdgriffith$elm_ui$Internal$Model$element,
			$mdgriffith$elm_ui$Internal$Model$asColumn,
			$mdgriffith$elm_ui$Internal$Model$div,
			A2(
				$elm$core$List$cons,
				$mdgriffith$elm_ui$Internal$Model$htmlClass($mdgriffith$elm_ui$Internal$Style$classes.contentTop + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.contentLeft)),
				A2(
					$elm$core$List$cons,
					$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$shrink),
					A2(
						$elm$core$List$cons,
						$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$shrink),
						attrs))),
			$mdgriffith$elm_ui$Internal$Model$Unkeyed(children));
	});
var $mdgriffith$elm_ui$Element$el = F2(
	function (attrs, child) {
		return A4(
			$mdgriffith$elm_ui$Internal$Model$element,
			$mdgriffith$elm_ui$Internal$Model$asEl,
			$mdgriffith$elm_ui$Internal$Model$div,
			A2(
				$elm$core$List$cons,
				$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$shrink),
				A2(
					$elm$core$List$cons,
					$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$shrink),
					attrs)),
			$mdgriffith$elm_ui$Internal$Model$Unkeyed(
				_List_fromArray(
					[child])));
	});
var $mdgriffith$elm_ui$Internal$Model$Fill = function (a) {
	return {$: 'Fill', a: a};
};
var $mdgriffith$elm_ui$Element$fill = $mdgriffith$elm_ui$Internal$Model$Fill(1);
var $mdgriffith$elm_ui$Element$htmlAttribute = $mdgriffith$elm_ui$Internal$Model$Attr;
var $elm$svg$Svg$Attributes$d = _VirtualDom_attribute('d');
var $elm$svg$Svg$Attributes$fill = _VirtualDom_attribute('fill');
var $mdgriffith$elm_ui$Internal$Model$unstyled = A2($elm$core$Basics$composeL, $mdgriffith$elm_ui$Internal$Model$Unstyled, $elm$core$Basics$always);
var $mdgriffith$elm_ui$Element$html = $mdgriffith$elm_ui$Internal$Model$unstyled;
var $author$project$Frontend$Visuals$iconSvgPathsData = function (icon) {
	switch (icon.$) {
		case 'ChatActionIcon':
			return {
				height: 24,
				offsetX: 0,
				offsetY: 0,
				paths: _List_fromArray(
					[
						{fillNone: false, pathData: 'M20 2H4c-1.1 0-2 .9-2 2v18l4-4h14c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2z'}
					]),
				width: 24
			};
		case 'GitHubActionIcon':
			return {
				height: 24,
				offsetX: 0,
				offsetY: 0,
				paths: _List_fromArray(
					[
						{fillNone: false, pathData: 'M12 1a11 11 0 1 0 0 22 11 11 0 0 0 0-22zm2.9 19.968h-.086a.471.471 0 0 1-.35-.129.471.471 0 0 1-.129-.34v-1.29c.006-.428.01-.86.01-1.297a3.385 3.385 0 0 0-.139-.943 1.679 1.679 0 0 0-.496-.802 7.34 7.34 0 0 0 1.868-.432 3.715 3.715 0 0 0 1.344-.883c.373-.392.65-.864.81-1.381.196-.632.289-1.29.276-1.952a3.797 3.797 0 0 0-.24-1.353 3.569 3.569 0 0 0-.727-1.177c.068-.172.118-.351.148-.534a3.286 3.286 0 0 0-.036-1.262 4.87 4.87 0 0 0-.203-.7.269.269 0 0 0-.102-.018h-.1c-.21.002-.419.037-.618.102-.22.064-.436.144-.645.239a5.97 5.97 0 0 0-.606.314 9.992 9.992 0 0 0-.525.332 8.78 8.78 0 0 0-4.714 0 12.367 12.367 0 0 0-.525-.332 5.52 5.52 0 0 0-.616-.314 4.14 4.14 0 0 0-.646-.239 2.02 2.02 0 0 0-.607-.102h-.1a.266.266 0 0 0-.1.019 5.356 5.356 0 0 0-.213.699 3.441 3.441 0 0 0-.027 1.262c.03.183.079.362.147.534a3.565 3.565 0 0 0-.726 1.177 3.797 3.797 0 0 0-.24 1.353 6.298 6.298 0 0 0 .266 1.942c.167.517.443.992.811 1.391.38.386.838.687 1.344.883.598.23 1.225.377 1.863.437-.178.161-.32.36-.414.58-.09.219-.153.448-.184.682a2.524 2.524 0 0 1-1.077.248 1.639 1.639 0 0 1-.976-.276 2.661 2.661 0 0 1-.69-.755 2.914 2.914 0 0 0-.267-.35 2.459 2.459 0 0 0-.34-.314 1.687 1.687 0 0 0-.397-.22 1.1 1.1 0 0 0-.441-.093.942.942 0 0 0-.11.01c-.05 0-.1.006-.148.018a.376.376 0 0 0-.12.055.107.107 0 0 0-.054.091.304.304 0 0 0 .129.222c.084.068.155.12.212.157l.026.019c.123.094.24.196.35.305.104.09.197.192.276.303.083.108.154.226.212.349.067.123.138.264.212.424.172.434.478.802.874 1.05.415.223.882.334 1.353.322.16 0 .32-.01.48-.028.156-.025.313-.052.47-.083v1.598a.459.459 0 0 1-.488.477h-.057a9.428 9.428 0 1 1 5.797 0v.005z'}
					]),
				width: 24
			};
		case 'GrowActionIcon':
			return {
				height: 24,
				offsetX: 0,
				offsetY: 0,
				paths: _List_fromArray(
					[
						{fillNone: false, pathData: 'M14.5 0L14.5 2.5L19.5 2.5L13.5 8.5L15.5 10.5L21.0 5.0L21.0 9.5L24.0 9.5L24.0 0L14.5 0Z'},
						{fillNone: false, pathData: 'M9.5 24.0L9.5 21.5L4.5 21.5L10.5 15.5L8.5 13.5L3.0 19.0L3.0 14.5L0 14.5L0 24.0L9.5 24.0Z'}
					]),
				width: 24
			};
		case 'ShrinkActionIcon':
			return {
				height: 24,
				offsetX: 0,
				offsetY: 0,
				paths: _List_fromArray(
					[
						{fillNone: false, pathData: 'M23.0 10.5L23.0 8.0L18.0 8.0L24.0 2.0L22.0 0L16.5 5.5L16.5 1.0L13.5 1.0L13.5 10.5L23.0 10.5Z'},
						{fillNone: false, pathData: 'M1.0 13.5L1.0 16.0L6.0 16.0L0 22.0L2.0 24.0L7.5 18.5L7.5 23.0L10.5 23.0L10.5 13.5L1.0 13.5Z'}
					]),
				width: 24
			};
		case 'DirectoryExpandedIcon':
			return {
				height: 200,
				offsetX: 0,
				offsetY: 0,
				paths: _List_fromArray(
					[
						{fillNone: false, pathData: 'M20 40L100 120L180 40L200 60L100 160L0 60L20 40Z'}
					]),
				width: 200
			};
		case 'DirectoryCollapsedIcon':
			return {
				height: 200,
				offsetX: 0,
				offsetY: 0,
				paths: _List_fromArray(
					[
						{fillNone: false, pathData: 'M40 20L120 100L40 180L60 200L160 100L60 0L40 20Z'}
					]),
				width: 200
			};
		case 'CloseEditorIcon':
			return {
				height: 200,
				offsetX: 0,
				offsetY: 0,
				paths: _List_fromArray(
					[
						{fillNone: false, pathData: 'M0 20L80 100L0 180L20 200L100 120L180 200L200 180L120 100L200 20L180 0L100 80L20 0L0 20Z'}
					]),
				width: 200
			};
		case 'FileTypeElmIcon':
			return {
				height: 640,
				offsetX: 0,
				offsetY: 0,
				paths: _List_fromArray(
					[
						{fillNone: false, pathData: 'M0 620L300 320L0 20L0 620Z'},
						{fillNone: false, pathData: 'M620 640L20 640L320 338.92L620 640Z'},
						{fillNone: false, pathData: 'M160 140L460 140L320 0L20 0L160 140Z'},
						{fillNone: false, pathData: 'M640 280L640 0L360 0L640 280Z'},
						{fillNone: false, pathData: 'M320 300L460 160L180 160L320 300Z'},
						{fillNone: false, pathData: 'M490 470L640 320L490 168.92L340 320L490 470Z'},
						{fillNone: false, pathData: 'M640 620L640 360L510 490L640 620Z'}
					]),
				width: 640
			};
		case 'FileTypeJsonIcon':
			return {
				height: 18,
				offsetX: 7,
				offsetY: 7,
				paths: _List_fromArray(
					[
						{fillNone: false, pathData: 'M7.5 15.1c1.5 0 1.7-.8 1.7-1.5 0-.6-.1-1.1-.1-1.7S9 10.7 9 10.2c0-2.1 1.3-3 3.4-3h.8v1.9h-.4c-1 0-1.3.6-1.3 1.6 0 .4.1.8.1 1.3 0 .4.1.9.1 1.5 0 1.7-.7 2.3-1.9 2.6 1.2.3 1.9.9 1.9 2.6 0 .6-.1 1.1-.1 1.5 0 .4-.1.9-.1 1.2 0 1 .3 1.6 1.3 1.6h.4v1.9h-.8c-2 0-3.3-.8-3.3-3 0-.6 0-1.1.1-1.7.1-.6.1-1.2.1-1.7 0-.6-.2-1.5-1.7-1.5l-.1-1.9zm17 1.7c-1.5 0-1.7.9-1.7 1.5s.1 1.1.1 1.7c.1.6.1 1.2.1 1.7 0 2.2-1.4 3-3.4 3h-.8V23h.4c1 0 1.3-.6 1.3-1.6 0-.4 0-.8-.1-1.2 0-.5-.1-1-.1-1.5 0-1.7.7-2.3 1.9-2.6-1.2-.3-1.9-.9-1.9-2.6 0-.6.1-1.1.1-1.5.1-.5.1-.9.1-1.3 0-1-.4-1.5-1.3-1.6h-.4V7.2h.8c2.1 0 3.4.9 3.4 3 0 .6-.1 1.1-.1 1.7-.1.6-.1 1.2-.1 1.7 0 .7.2 1.5 1.7 1.5v1.7z'}
					]),
				width: 18
			};
		default:
			return {
				height: 20,
				offsetX: 6,
				offsetY: 6,
				paths: _List_fromArray(
					[
						{fillNone: false, pathData: 'M20.7 6.7v9.9h3.8c-2.9 3-5.8 5.9-8.7 8.8-2.7-2.8-5.6-5.8-8.4-8.7h3.5V6.6c1.3.9 4.4 3.1 5 3.1.6 0 3.6-2.2 4.8-3z'}
					]),
				width: 20
			};
	}
};
var $elm$svg$Svg$trustedNode = _VirtualDom_nodeNS('http://www.w3.org/2000/svg');
var $elm$svg$Svg$path = $elm$svg$Svg$trustedNode('path');
var $elm$svg$Svg$svg = $elm$svg$Svg$trustedNode('svg');
var $elm$svg$Svg$Attributes$viewBox = _VirtualDom_attribute('viewBox');
var $author$project$Frontend$Visuals$iconSvgElementFromIcon = F2(
	function (_v0, iconType) {
		var color = _v0.color;
		var iconSvg = $author$project$Frontend$Visuals$iconSvgPathsData(iconType);
		var pathsElements = A2(
			$elm$core$List$map,
			function (pathInfo) {
				var fillAttributes = pathInfo.fillNone ? _List_fromArray(
					[
						$elm$svg$Svg$Attributes$fill('none')
					]) : _List_Nil;
				return A2(
					$elm$svg$Svg$path,
					A2(
						$elm$core$List$cons,
						$elm$svg$Svg$Attributes$d(pathInfo.pathData),
						fillAttributes),
					_List_Nil);
			},
			iconSvg.paths);
		return $mdgriffith$elm_ui$Element$html(
			A2(
				$elm$svg$Svg$svg,
				_List_fromArray(
					[
						$elm$svg$Svg$Attributes$viewBox(
						A2(
							$elm$core$String$join,
							' ',
							A2(
								$elm$core$List$map,
								$elm$core$String$fromInt,
								_List_fromArray(
									[iconSvg.offsetX, iconSvg.offsetY, iconSvg.width, iconSvg.height])))),
						$elm$svg$Svg$Attributes$fill(color)
					]),
				pathsElements));
	});
var $elm$html$Html$Attributes$href = function (url) {
	return A2(
		$elm$html$Html$Attributes$stringProperty,
		'href',
		_VirtualDom_noJavaScriptUri(url));
};
var $elm$html$Html$Attributes$rel = _VirtualDom_attribute('rel');
var $mdgriffith$elm_ui$Element$link = F2(
	function (attrs, _v0) {
		var url = _v0.url;
		var label = _v0.label;
		return A4(
			$mdgriffith$elm_ui$Internal$Model$element,
			$mdgriffith$elm_ui$Internal$Model$asEl,
			$mdgriffith$elm_ui$Internal$Model$NodeName('a'),
			A2(
				$elm$core$List$cons,
				$mdgriffith$elm_ui$Internal$Model$Attr(
					$elm$html$Html$Attributes$href(url)),
				A2(
					$elm$core$List$cons,
					$mdgriffith$elm_ui$Internal$Model$Attr(
						$elm$html$Html$Attributes$rel('noopener noreferrer')),
					A2(
						$elm$core$List$cons,
						$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$shrink),
						A2(
							$elm$core$List$cons,
							$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$shrink),
							A2(
								$elm$core$List$cons,
								$mdgriffith$elm_ui$Internal$Model$htmlClass($mdgriffith$elm_ui$Internal$Style$classes.contentCenterX + (' ' + ($mdgriffith$elm_ui$Internal$Style$classes.contentCenterY + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.link)))),
								attrs))))),
			$mdgriffith$elm_ui$Internal$Model$Unkeyed(
				_List_fromArray(
					[label])));
	});
var $mdgriffith$elm_ui$Internal$Model$Hover = {$: 'Hover'};
var $mdgriffith$elm_ui$Internal$Model$PseudoSelector = F2(
	function (a, b) {
		return {$: 'PseudoSelector', a: a, b: b};
	});
var $mdgriffith$elm_ui$Internal$Flag$hover = $mdgriffith$elm_ui$Internal$Flag$flag(33);
var $mdgriffith$elm_ui$Internal$Model$Class = F2(
	function (a, b) {
		return {$: 'Class', a: a, b: b};
	});
var $mdgriffith$elm_ui$Internal$Model$Describe = function (a) {
	return {$: 'Describe', a: a};
};
var $mdgriffith$elm_ui$Internal$Model$Nearby = F2(
	function (a, b) {
		return {$: 'Nearby', a: a, b: b};
	});
var $mdgriffith$elm_ui$Internal$Model$NoAttribute = {$: 'NoAttribute'};
var $mdgriffith$elm_ui$Internal$Model$TransformComponent = F2(
	function (a, b) {
		return {$: 'TransformComponent', a: a, b: b};
	});
var $mdgriffith$elm_ui$Internal$Model$Empty = {$: 'Empty'};
var $mdgriffith$elm_ui$Internal$Model$Text = function (a) {
	return {$: 'Text', a: a};
};
var $mdgriffith$elm_ui$Internal$Model$map = F2(
	function (fn, el) {
		switch (el.$) {
			case 'Styled':
				var styled = el.a;
				return $mdgriffith$elm_ui$Internal$Model$Styled(
					{
						html: F2(
							function (add, context) {
								return A2(
									$elm$virtual_dom$VirtualDom$map,
									fn,
									A2(styled.html, add, context));
							}),
						styles: styled.styles
					});
			case 'Unstyled':
				var html = el.a;
				return $mdgriffith$elm_ui$Internal$Model$Unstyled(
					A2(
						$elm$core$Basics$composeL,
						$elm$virtual_dom$VirtualDom$map(fn),
						html));
			case 'Text':
				var str = el.a;
				return $mdgriffith$elm_ui$Internal$Model$Text(str);
			default:
				return $mdgriffith$elm_ui$Internal$Model$Empty;
		}
	});
var $elm$virtual_dom$VirtualDom$mapAttribute = _VirtualDom_mapAttribute;
var $mdgriffith$elm_ui$Internal$Model$mapAttrFromStyle = F2(
	function (fn, attr) {
		switch (attr.$) {
			case 'NoAttribute':
				return $mdgriffith$elm_ui$Internal$Model$NoAttribute;
			case 'Describe':
				var description = attr.a;
				return $mdgriffith$elm_ui$Internal$Model$Describe(description);
			case 'AlignX':
				var x = attr.a;
				return $mdgriffith$elm_ui$Internal$Model$AlignX(x);
			case 'AlignY':
				var y = attr.a;
				return $mdgriffith$elm_ui$Internal$Model$AlignY(y);
			case 'Width':
				var x = attr.a;
				return $mdgriffith$elm_ui$Internal$Model$Width(x);
			case 'Height':
				var x = attr.a;
				return $mdgriffith$elm_ui$Internal$Model$Height(x);
			case 'Class':
				var x = attr.a;
				var y = attr.b;
				return A2($mdgriffith$elm_ui$Internal$Model$Class, x, y);
			case 'StyleClass':
				var flag = attr.a;
				var style = attr.b;
				return A2($mdgriffith$elm_ui$Internal$Model$StyleClass, flag, style);
			case 'Nearby':
				var location = attr.a;
				var elem = attr.b;
				return A2(
					$mdgriffith$elm_ui$Internal$Model$Nearby,
					location,
					A2($mdgriffith$elm_ui$Internal$Model$map, fn, elem));
			case 'Attr':
				var htmlAttr = attr.a;
				return $mdgriffith$elm_ui$Internal$Model$Attr(
					A2($elm$virtual_dom$VirtualDom$mapAttribute, fn, htmlAttr));
			default:
				var fl = attr.a;
				var trans = attr.b;
				return A2($mdgriffith$elm_ui$Internal$Model$TransformComponent, fl, trans);
		}
	});
var $mdgriffith$elm_ui$Internal$Model$removeNever = function (style) {
	return A2($mdgriffith$elm_ui$Internal$Model$mapAttrFromStyle, $elm$core$Basics$never, style);
};
var $mdgriffith$elm_ui$Internal$Model$unwrapDecsHelper = F2(
	function (attr, _v0) {
		var styles = _v0.a;
		var trans = _v0.b;
		var _v1 = $mdgriffith$elm_ui$Internal$Model$removeNever(attr);
		switch (_v1.$) {
			case 'StyleClass':
				var style = _v1.b;
				return _Utils_Tuple2(
					A2($elm$core$List$cons, style, styles),
					trans);
			case 'TransformComponent':
				var flag = _v1.a;
				var component = _v1.b;
				return _Utils_Tuple2(
					styles,
					A2($mdgriffith$elm_ui$Internal$Model$composeTransformation, trans, component));
			default:
				return _Utils_Tuple2(styles, trans);
		}
	});
var $mdgriffith$elm_ui$Internal$Model$unwrapDecorations = function (attrs) {
	var _v0 = A3(
		$elm$core$List$foldl,
		$mdgriffith$elm_ui$Internal$Model$unwrapDecsHelper,
		_Utils_Tuple2(_List_Nil, $mdgriffith$elm_ui$Internal$Model$Untransformed),
		attrs);
	var styles = _v0.a;
	var transform = _v0.b;
	return A2(
		$elm$core$List$cons,
		$mdgriffith$elm_ui$Internal$Model$Transform(transform),
		styles);
};
var $mdgriffith$elm_ui$Element$mouseOver = function (decs) {
	return A2(
		$mdgriffith$elm_ui$Internal$Model$StyleClass,
		$mdgriffith$elm_ui$Internal$Flag$hover,
		A2(
			$mdgriffith$elm_ui$Internal$Model$PseudoSelector,
			$mdgriffith$elm_ui$Internal$Model$Hover,
			$mdgriffith$elm_ui$Internal$Model$unwrapDecorations(decs)));
};
var $mdgriffith$elm_ui$Internal$Model$PaddingStyle = F5(
	function (a, b, c, d, e) {
		return {$: 'PaddingStyle', a: a, b: b, c: c, d: d, e: e};
	});
var $mdgriffith$elm_ui$Internal$Flag$padding = $mdgriffith$elm_ui$Internal$Flag$flag(2);
var $mdgriffith$elm_ui$Element$padding = function (x) {
	var f = x;
	return A2(
		$mdgriffith$elm_ui$Internal$Model$StyleClass,
		$mdgriffith$elm_ui$Internal$Flag$padding,
		A5(
			$mdgriffith$elm_ui$Internal$Model$PaddingStyle,
			'p-' + $elm$core$String$fromInt(x),
			f,
			f,
			f,
			f));
};
var $mdgriffith$elm_ui$Internal$Flag$cursor = $mdgriffith$elm_ui$Internal$Flag$flag(21);
var $mdgriffith$elm_ui$Element$pointer = A2($mdgriffith$elm_ui$Internal$Model$Class, $mdgriffith$elm_ui$Internal$Flag$cursor, $mdgriffith$elm_ui$Internal$Style$classes.cursorPointer);
var $mdgriffith$elm_ui$Internal$Model$Px = function (a) {
	return {$: 'Px', a: a};
};
var $mdgriffith$elm_ui$Element$px = $mdgriffith$elm_ui$Internal$Model$Px;
var $mdgriffith$elm_ui$Internal$Model$Rgba = F4(
	function (a, b, c, d) {
		return {$: 'Rgba', a: a, b: b, c: c, d: d};
	});
var $mdgriffith$elm_ui$Element$rgb = F3(
	function (r, g, b) {
		return A4($mdgriffith$elm_ui$Internal$Model$Rgba, r, g, b, 1);
	});
var $mdgriffith$elm_ui$Internal$Model$SpacingStyle = F3(
	function (a, b, c) {
		return {$: 'SpacingStyle', a: a, b: b, c: c};
	});
var $mdgriffith$elm_ui$Internal$Flag$spacing = $mdgriffith$elm_ui$Internal$Flag$flag(3);
var $mdgriffith$elm_ui$Internal$Model$spacingName = F2(
	function (x, y) {
		return 'spacing-' + ($elm$core$String$fromInt(x) + ('-' + $elm$core$String$fromInt(y)));
	});
var $mdgriffith$elm_ui$Element$spacing = function (x) {
	return A2(
		$mdgriffith$elm_ui$Internal$Model$StyleClass,
		$mdgriffith$elm_ui$Internal$Flag$spacing,
		A3(
			$mdgriffith$elm_ui$Internal$Model$SpacingStyle,
			A2($mdgriffith$elm_ui$Internal$Model$spacingName, x, x),
			x,
			x));
};
var $elm$html$Html$Attributes$title = $elm$html$Html$Attributes$stringProperty('title');
var $author$project$Frontend$Main$activityBar = function () {
	var bottomActionItems = _List_fromArray(
		[
			{
			icon: $author$project$Frontend$Visuals$ChatActionIcon,
			linkUrl: $elm$core$Maybe$Just('https://github.com/pine-vm/pine/discussions'),
			title: 'Elm Editor Discussions'
		},
			{
			icon: $author$project$Frontend$Visuals$GitHubActionIcon,
			linkUrl: $elm$core$Maybe$Just('https://github.com/pine-vm/pine/tree/main/implement/example-apps/elm-editor'),
			title: 'Elm Editor source code on GitHub'
		}
		]);
	var actionItemSpacing = 4;
	var actionItemIconPadding = 8;
	var actionItemWrapper = function (itemConfig) {
		var linkWrapper = function () {
			var _v0 = itemConfig.linkUrl;
			if (_v0.$ === 'Nothing') {
				return $elm$core$Basics$identity;
			} else {
				var justLinkUrl = _v0.a;
				return function (linkLabel) {
					return A2(
						$mdgriffith$elm_ui$Element$link,
						_List_fromArray(
							[
								$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
								$mdgriffith$elm_ui$Element$htmlAttribute(
								$elm$html$Html$Attributes$title(itemConfig.title))
							]),
						{label: linkLabel, url: justLinkUrl});
				};
			}
		}();
		return A3(
			$elm$core$Basics$composeR,
			$mdgriffith$elm_ui$Element$el(
				_List_fromArray(
					[
						$mdgriffith$elm_ui$Element$padding(actionItemIconPadding),
						$mdgriffith$elm_ui$Element$centerX,
						$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
						$mdgriffith$elm_ui$Element$alpha(0.4),
						$mdgriffith$elm_ui$Element$mouseOver(
						_List_fromArray(
							[
								$mdgriffith$elm_ui$Element$alpha(1)
							])),
						$mdgriffith$elm_ui$Element$pointer
					])),
			linkWrapper,
			A2(
				$author$project$Frontend$Visuals$iconSvgElementFromIcon,
				{color: 'white'},
				itemConfig.icon));
	};
	return A2(
		$mdgriffith$elm_ui$Element$column,
		_List_fromArray(
			[
				$mdgriffith$elm_ui$Element$width(
				$mdgriffith$elm_ui$Element$px($author$project$Frontend$Main$activityBarWidth)),
				$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),
				$mdgriffith$elm_ui$Element$Background$color(
				A3($mdgriffith$elm_ui$Element$rgb, 0.09, 0.09, 0.09))
			]),
		_List_fromArray(
			[
				A2(
				$mdgriffith$elm_ui$Element$column,
				_List_fromArray(
					[
						$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
						$mdgriffith$elm_ui$Element$spacing(actionItemSpacing),
						$mdgriffith$elm_ui$Element$alignBottom
					]),
				A2($elm$core$List$map, actionItemWrapper, bottomActionItems))
			]));
}();
var $mdgriffith$elm_ui$Internal$Model$Left = {$: 'Left'};
var $mdgriffith$elm_ui$Element$alignLeft = $mdgriffith$elm_ui$Internal$Model$AlignX($mdgriffith$elm_ui$Internal$Model$Left);
var $mdgriffith$elm_ui$Internal$Model$Right = {$: 'Right'};
var $mdgriffith$elm_ui$Element$alignRight = $mdgriffith$elm_ui$Internal$Model$AlignX($mdgriffith$elm_ui$Internal$Model$Right);
var $mdgriffith$elm_ui$Internal$Model$Top = {$: 'Top'};
var $mdgriffith$elm_ui$Element$alignTop = $mdgriffith$elm_ui$Internal$Model$AlignY($mdgriffith$elm_ui$Internal$Model$Top);
var $author$project$Frontend$Main$backgroundColor = A3($mdgriffith$elm_ui$Element$rgb, 0.12, 0.12, 0.12);
var $mdgriffith$elm_ui$Internal$Model$Button = {$: 'Button'};
var $elm$html$Html$Attributes$boolProperty = F2(
	function (key, bool) {
		return A2(
			_VirtualDom_property,
			key,
			$elm$json$Json$Encode$bool(bool));
	});
var $elm$html$Html$Attributes$disabled = $elm$html$Html$Attributes$boolProperty('disabled');
var $mdgriffith$elm_ui$Element$Input$enter = 'Enter';
var $mdgriffith$elm_ui$Element$Input$hasFocusStyle = function (attr) {
	if (((attr.$ === 'StyleClass') && (attr.b.$ === 'PseudoSelector')) && (attr.b.a.$ === 'Focus')) {
		var _v1 = attr.b;
		var _v2 = _v1.a;
		return true;
	} else {
		return false;
	}
};
var $mdgriffith$elm_ui$Element$Input$focusDefault = function (attrs) {
	return A2($elm$core$List$any, $mdgriffith$elm_ui$Element$Input$hasFocusStyle, attrs) ? $mdgriffith$elm_ui$Internal$Model$NoAttribute : $mdgriffith$elm_ui$Internal$Model$htmlClass('focusable');
};
var $elm$virtual_dom$VirtualDom$Normal = function (a) {
	return {$: 'Normal', a: a};
};
var $elm$virtual_dom$VirtualDom$on = _VirtualDom_on;
var $elm$html$Html$Events$on = F2(
	function (event, decoder) {
		return A2(
			$elm$virtual_dom$VirtualDom$on,
			event,
			$elm$virtual_dom$VirtualDom$Normal(decoder));
	});
var $elm$html$Html$Events$onClick = function (msg) {
	return A2(
		$elm$html$Html$Events$on,
		'click',
		$elm$json$Json$Decode$succeed(msg));
};
var $mdgriffith$elm_ui$Element$Events$onClick = A2($elm$core$Basics$composeL, $mdgriffith$elm_ui$Internal$Model$Attr, $elm$html$Html$Events$onClick);
var $elm$virtual_dom$VirtualDom$MayPreventDefault = function (a) {
	return {$: 'MayPreventDefault', a: a};
};
var $elm$html$Html$Events$preventDefaultOn = F2(
	function (event, decoder) {
		return A2(
			$elm$virtual_dom$VirtualDom$on,
			event,
			$elm$virtual_dom$VirtualDom$MayPreventDefault(decoder));
	});
var $mdgriffith$elm_ui$Element$Input$onKeyLookup = function (lookup) {
	var decode = function (code) {
		var _v0 = lookup(code);
		if (_v0.$ === 'Nothing') {
			return $elm$json$Json$Decode$fail('No key matched');
		} else {
			var msg = _v0.a;
			return $elm$json$Json$Decode$succeed(msg);
		}
	};
	var isKey = A2(
		$elm$json$Json$Decode$andThen,
		decode,
		A2($elm$json$Json$Decode$field, 'key', $elm$json$Json$Decode$string));
	return $mdgriffith$elm_ui$Internal$Model$Attr(
		A2(
			$elm$html$Html$Events$preventDefaultOn,
			'keydown',
			A2(
				$elm$json$Json$Decode$map,
				function (fired) {
					return _Utils_Tuple2(fired, true);
				},
				isKey)));
};
var $mdgriffith$elm_ui$Element$Input$space = ' ';
var $elm$html$Html$Attributes$tabindex = function (n) {
	return A2(
		_VirtualDom_attribute,
		'tabIndex',
		$elm$core$String$fromInt(n));
};
var $mdgriffith$elm_ui$Element$Input$button = F2(
	function (attrs, _v0) {
		var onPress = _v0.onPress;
		var label = _v0.label;
		return A4(
			$mdgriffith$elm_ui$Internal$Model$element,
			$mdgriffith$elm_ui$Internal$Model$asEl,
			$mdgriffith$elm_ui$Internal$Model$div,
			A2(
				$elm$core$List$cons,
				$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$shrink),
				A2(
					$elm$core$List$cons,
					$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$shrink),
					A2(
						$elm$core$List$cons,
						$mdgriffith$elm_ui$Internal$Model$htmlClass($mdgriffith$elm_ui$Internal$Style$classes.contentCenterX + (' ' + ($mdgriffith$elm_ui$Internal$Style$classes.contentCenterY + (' ' + ($mdgriffith$elm_ui$Internal$Style$classes.seButton + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.noTextSelection)))))),
						A2(
							$elm$core$List$cons,
							$mdgriffith$elm_ui$Element$pointer,
							A2(
								$elm$core$List$cons,
								$mdgriffith$elm_ui$Element$Input$focusDefault(attrs),
								A2(
									$elm$core$List$cons,
									$mdgriffith$elm_ui$Internal$Model$Describe($mdgriffith$elm_ui$Internal$Model$Button),
									A2(
										$elm$core$List$cons,
										$mdgriffith$elm_ui$Internal$Model$Attr(
											$elm$html$Html$Attributes$tabindex(0)),
										function () {
											if (onPress.$ === 'Nothing') {
												return A2(
													$elm$core$List$cons,
													$mdgriffith$elm_ui$Internal$Model$Attr(
														$elm$html$Html$Attributes$disabled(true)),
													attrs);
											} else {
												var msg = onPress.a;
												return A2(
													$elm$core$List$cons,
													$mdgriffith$elm_ui$Element$Events$onClick(msg),
													A2(
														$elm$core$List$cons,
														$mdgriffith$elm_ui$Element$Input$onKeyLookup(
															function (code) {
																return _Utils_eq(code, $mdgriffith$elm_ui$Element$Input$enter) ? $elm$core$Maybe$Just(msg) : (_Utils_eq(code, $mdgriffith$elm_ui$Element$Input$space) ? $elm$core$Maybe$Just(msg) : $elm$core$Maybe$Nothing);
															}),
														attrs));
											}
										}()))))))),
			$mdgriffith$elm_ui$Internal$Model$Unkeyed(
				_List_fromArray(
					[label])));
	});
var $author$project$Frontend$Main$buttonBackgroundColor = {
	_default: A3($mdgriffith$elm_ui$Element$rgb, 0.055, 0.388, 0.612),
	mouseOver: A3($mdgriffith$elm_ui$Element$rgb, 0.067, 0.467, 0.733)
};
var $author$project$Frontend$Main$defaultFontSize = 14;
var $mdgriffith$elm_ui$Element$paddingXY = F2(
	function (x, y) {
		if (_Utils_eq(x, y)) {
			var f = x;
			return A2(
				$mdgriffith$elm_ui$Internal$Model$StyleClass,
				$mdgriffith$elm_ui$Internal$Flag$padding,
				A5(
					$mdgriffith$elm_ui$Internal$Model$PaddingStyle,
					'p-' + $elm$core$String$fromInt(x),
					f,
					f,
					f,
					f));
		} else {
			var yFloat = y;
			var xFloat = x;
			return A2(
				$mdgriffith$elm_ui$Internal$Model$StyleClass,
				$mdgriffith$elm_ui$Internal$Flag$padding,
				A5(
					$mdgriffith$elm_ui$Internal$Model$PaddingStyle,
					'p-' + ($elm$core$String$fromInt(x) + ('-' + $elm$core$String$fromInt(y))),
					yFloat,
					xFloat,
					yFloat,
					xFloat));
		}
	});
var $mdgriffith$elm_ui$Internal$Flag$borderRound = $mdgriffith$elm_ui$Internal$Flag$flag(17);
var $mdgriffith$elm_ui$Element$Border$rounded = function (radius) {
	return A2(
		$mdgriffith$elm_ui$Internal$Model$StyleClass,
		$mdgriffith$elm_ui$Internal$Flag$borderRound,
		A3(
			$mdgriffith$elm_ui$Internal$Model$Single,
			'br-' + $elm$core$String$fromInt(radius),
			'border-radius',
			$elm$core$String$fromInt(radius) + 'px'));
};
var $author$project$Frontend$Main$buttonElement = function (buttonConfig) {
	return A2(
		$mdgriffith$elm_ui$Element$Input$button,
		_List_fromArray(
			[
				$mdgriffith$elm_ui$Element$Background$color($author$project$Frontend$Main$buttonBackgroundColor._default),
				$mdgriffith$elm_ui$Element$mouseOver(
				_List_fromArray(
					[
						$mdgriffith$elm_ui$Element$Background$color($author$project$Frontend$Main$buttonBackgroundColor.mouseOver)
					])),
				A2($mdgriffith$elm_ui$Element$paddingXY, $author$project$Frontend$Main$defaultFontSize, ($author$project$Frontend$Main$defaultFontSize / 2) | 0),
				$mdgriffith$elm_ui$Element$Border$rounded(2)
			]),
		{label: buttonConfig.label, onPress: buttonConfig.onPress});
};
var $lattyware$elm_fontawesome$FontAwesome$IconDef = F4(
	function (prefix, name, size, paths) {
		return {name: name, paths: paths, prefix: prefix, size: size};
	});
var $lattyware$elm_fontawesome$FontAwesome$Solid$Definitions$circlePlay = A4(
	$lattyware$elm_fontawesome$FontAwesome$IconDef,
	'fas',
	'circle-play',
	_Utils_Tuple2(512, 512),
	_Utils_Tuple2('M0 256a256 256 0 1 1 512 0A256 256 0 1 1 0 256zM188.3 147.1c-7.6 4.2-12.3 12.3-12.3 20.9l0 176c0 8.7 4.7 16.7 12.3 20.9s16.8 4.1 24.3-.5l144-88c7.1-4.4 11.5-12.1 11.5-20.5s-4.4-16.1-11.5-20.5l-144-88c-7.4-4.5-16.7-4.7-24.3-.5z', $elm$core$Maybe$Nothing));
var $lattyware$elm_fontawesome$FontAwesome$Internal$Icon = function (a) {
	return {$: 'Icon', a: a};
};
var $lattyware$elm_fontawesome$FontAwesome$present = function (icon) {
	return $lattyware$elm_fontawesome$FontAwesome$Internal$Icon(
		{attributes: _List_Nil, icon: icon, id: $elm$core$Maybe$Nothing, outer: $elm$core$Maybe$Nothing, role: 'img', title: $elm$core$Maybe$Nothing, transforms: _List_Nil});
};
var $lattyware$elm_fontawesome$FontAwesome$Solid$circlePlay = $lattyware$elm_fontawesome$FontAwesome$present($lattyware$elm_fontawesome$FontAwesome$Solid$Definitions$circlePlay);
var $lattyware$elm_fontawesome$FontAwesome$Solid$playCircle = $lattyware$elm_fontawesome$FontAwesome$Solid$circlePlay;
var $mdgriffith$elm_ui$Internal$Model$AsRow = {$: 'AsRow'};
var $mdgriffith$elm_ui$Internal$Model$asRow = $mdgriffith$elm_ui$Internal$Model$AsRow;
var $mdgriffith$elm_ui$Element$row = F2(
	function (attrs, children) {
		return A4(
			$mdgriffith$elm_ui$Internal$Model$element,
			$mdgriffith$elm_ui$Internal$Model$asRow,
			$mdgriffith$elm_ui$Internal$Model$div,
			A2(
				$elm$core$List$cons,
				$mdgriffith$elm_ui$Internal$Model$htmlClass($mdgriffith$elm_ui$Internal$Style$classes.contentLeft + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.contentCenterY)),
				A2(
					$elm$core$List$cons,
					$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$shrink),
					A2(
						$elm$core$List$cons,
						$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$shrink),
						attrs))),
			$mdgriffith$elm_ui$Internal$Model$Unkeyed(children));
	});
var $mdgriffith$elm_ui$Element$text = function (content) {
	return $mdgriffith$elm_ui$Internal$Model$Text(content);
};
var $elm$html$Html$Attributes$attribute = $elm$virtual_dom$VirtualDom$attribute;
var $elm$svg$Svg$Attributes$class = _VirtualDom_attribute('class');
var $elm$svg$Svg$Attributes$id = _VirtualDom_attribute('id');
var $elm$html$Html$Attributes$map = $elm$virtual_dom$VirtualDom$mapAttribute;
var $elm$svg$Svg$text = $elm$virtual_dom$VirtualDom$text;
var $elm$svg$Svg$title = $elm$svg$Svg$trustedNode('title');
var $lattyware$elm_fontawesome$FontAwesome$Internal$topLevelDimensions = function (_v1) {
	var icon = _v1.a.icon;
	var outer = _v1.a.outer;
	return A2(
		$elm$core$Maybe$withDefault,
		icon.size,
		A2($elm$core$Maybe$map, $lattyware$elm_fontawesome$FontAwesome$Internal$topLevelDimensionsInternal, outer));
};
var $lattyware$elm_fontawesome$FontAwesome$Internal$topLevelDimensionsInternal = function (_v0) {
	var icon = _v0.a.icon;
	var outer = _v0.a.outer;
	return A2(
		$elm$core$Maybe$withDefault,
		icon.size,
		A2($elm$core$Maybe$map, $lattyware$elm_fontawesome$FontAwesome$Internal$topLevelDimensions, outer));
};
var $elm$svg$Svg$defs = $elm$svg$Svg$trustedNode('defs');
var $elm$svg$Svg$Attributes$height = _VirtualDom_attribute('height');
var $elm$svg$Svg$Attributes$width = _VirtualDom_attribute('width');
var $elm$svg$Svg$Attributes$x = _VirtualDom_attribute('x');
var $elm$svg$Svg$Attributes$y = _VirtualDom_attribute('y');
var $lattyware$elm_fontawesome$FontAwesome$Svg$fill = _List_fromArray(
	[
		$elm$svg$Svg$Attributes$x('0'),
		$elm$svg$Svg$Attributes$y('0'),
		$elm$svg$Svg$Attributes$width('100%'),
		$elm$svg$Svg$Attributes$height('100%')
	]);
var $elm$svg$Svg$g = $elm$svg$Svg$trustedNode('g');
var $elm$svg$Svg$mask = $elm$svg$Svg$trustedNode('mask');
var $elm$svg$Svg$Attributes$mask = _VirtualDom_attribute('mask');
var $elm$svg$Svg$Attributes$maskContentUnits = _VirtualDom_attribute('maskContentUnits');
var $elm$svg$Svg$Attributes$maskUnits = _VirtualDom_attribute('maskUnits');
var $lattyware$elm_fontawesome$FontAwesome$Transforms$Internal$add = F2(
	function (transform, combined) {
		switch (transform.$) {
			case 'Scale':
				var by = transform.a;
				return _Utils_update(
					combined,
					{size: combined.size + by});
			case 'Reposition':
				var axis = transform.a;
				var by = transform.b;
				var _v1 = function () {
					if (axis.$ === 'Vertical') {
						return _Utils_Tuple2(0, by);
					} else {
						return _Utils_Tuple2(by, 0);
					}
				}();
				var x = _v1.a;
				var y = _v1.b;
				return _Utils_update(
					combined,
					{x: combined.x + x, y: combined.y + y});
			case 'Rotate':
				var rotation = transform.a;
				return _Utils_update(
					combined,
					{rotate: combined.rotate + rotation});
			default:
				var axis = transform.a;
				if (axis.$ === 'Vertical') {
					return _Utils_update(
						combined,
						{flipY: !combined.flipY});
				} else {
					return _Utils_update(
						combined,
						{flipX: !combined.flipX});
				}
		}
	});
var $lattyware$elm_fontawesome$FontAwesome$Transforms$Internal$baseSize = 16;
var $lattyware$elm_fontawesome$FontAwesome$Transforms$Internal$meaninglessTransform = {flipX: false, flipY: false, rotate: 0, size: $lattyware$elm_fontawesome$FontAwesome$Transforms$Internal$baseSize, x: 0, y: 0};
var $lattyware$elm_fontawesome$FontAwesome$Transforms$Internal$combine = function (transforms) {
	return A3($elm$core$List$foldl, $lattyware$elm_fontawesome$FontAwesome$Transforms$Internal$add, $lattyware$elm_fontawesome$FontAwesome$Transforms$Internal$meaninglessTransform, transforms);
};
var $lattyware$elm_fontawesome$FontAwesome$Transforms$Internal$meaningfulTransform = function (transforms) {
	var combined = $lattyware$elm_fontawesome$FontAwesome$Transforms$Internal$combine(transforms);
	return _Utils_eq(combined, $lattyware$elm_fontawesome$FontAwesome$Transforms$Internal$meaninglessTransform) ? $elm$core$Maybe$Nothing : $elm$core$Maybe$Just(combined);
};
var $elm$svg$Svg$rect = $elm$svg$Svg$trustedNode('rect');
var $elm$svg$Svg$Attributes$transform = _VirtualDom_attribute('transform');
var $lattyware$elm_fontawesome$FontAwesome$Transforms$Internal$transformForSvg = F3(
	function (containerWidth, iconWidth, transform) {
		var path = 'translate(' + ($elm$core$String$fromFloat((iconWidth / 2) * (-1)) + ' -256)');
		var outer = 'translate(' + ($elm$core$String$fromFloat(containerWidth / 2) + ' 256)');
		var innerTranslate = 'translate(' + ($elm$core$String$fromFloat(transform.x * 32) + (',' + ($elm$core$String$fromFloat(transform.y * 32) + ') ')));
		var innerRotate = 'rotate(' + ($elm$core$String$fromFloat(transform.rotate) + ' 0 0)');
		var flipY = transform.flipY ? (-1) : 1;
		var scaleY = (transform.size / $lattyware$elm_fontawesome$FontAwesome$Transforms$Internal$baseSize) * flipY;
		var flipX = transform.flipX ? (-1) : 1;
		var scaleX = (transform.size / $lattyware$elm_fontawesome$FontAwesome$Transforms$Internal$baseSize) * flipX;
		var innerScale = 'scale(' + ($elm$core$String$fromFloat(scaleX) + (', ' + ($elm$core$String$fromFloat(scaleY) + ') ')));
		return {
			inner: $elm$svg$Svg$Attributes$transform(
				_Utils_ap(
					innerTranslate,
					_Utils_ap(innerScale, innerRotate))),
			outer: $elm$svg$Svg$Attributes$transform(outer),
			path: $elm$svg$Svg$Attributes$transform(path)
		};
	});
var $lattyware$elm_fontawesome$FontAwesome$Svg$viewPath = F2(
	function (attrs, d) {
		return A2(
			$elm$svg$Svg$path,
			A2(
				$elm$core$List$cons,
				$elm$svg$Svg$Attributes$d(d),
				attrs),
			_List_Nil);
	});
var $lattyware$elm_fontawesome$FontAwesome$Svg$viewPaths = F2(
	function (attrs, _v0) {
		var paths = _v0.paths;
		if (paths.b.$ === 'Nothing') {
			var only = paths.a;
			var _v2 = paths.b;
			return A2($lattyware$elm_fontawesome$FontAwesome$Svg$viewPath, attrs, only);
		} else {
			var secondary = paths.a;
			var primary = paths.b.a;
			return A2(
				$elm$svg$Svg$g,
				_List_fromArray(
					[
						$elm$svg$Svg$Attributes$class('fa-group')
					]),
				_List_fromArray(
					[
						A2(
						$lattyware$elm_fontawesome$FontAwesome$Svg$viewPath,
						A2(
							$elm$core$List$cons,
							$elm$svg$Svg$Attributes$class('fa-secondary'),
							attrs),
						secondary),
						A2(
						$lattyware$elm_fontawesome$FontAwesome$Svg$viewPath,
						A2(
							$elm$core$List$cons,
							$elm$svg$Svg$Attributes$class('fa-primary'),
							attrs),
						primary)
					]));
		}
	});
var $lattyware$elm_fontawesome$FontAwesome$Svg$viewWithTransform = F3(
	function (color, _v0, icon) {
		var outer = _v0.outer;
		var inner = _v0.inner;
		var path = _v0.path;
		return A2(
			$elm$svg$Svg$g,
			_List_fromArray(
				[outer]),
			_List_fromArray(
				[
					A2(
					$elm$svg$Svg$g,
					_List_fromArray(
						[inner]),
					_List_fromArray(
						[
							A2(
							$lattyware$elm_fontawesome$FontAwesome$Svg$viewPaths,
							_List_fromArray(
								[
									$elm$svg$Svg$Attributes$fill(color),
									path
								]),
							icon)
						]))
				]));
	});
var $lattyware$elm_fontawesome$FontAwesome$Svg$viewInColor = F2(
	function (color, fullIcon) {
		var icon = fullIcon.a.icon;
		var transforms = fullIcon.a.transforms;
		var id = fullIcon.a.id;
		var outer = fullIcon.a.outer;
		var combinedTransforms = $lattyware$elm_fontawesome$FontAwesome$Transforms$Internal$meaningfulTransform(transforms);
		var _v0 = icon.size;
		var width = _v0.a;
		var _v1 = $lattyware$elm_fontawesome$FontAwesome$Internal$topLevelDimensions(fullIcon);
		var topLevelWidth = _v1.a;
		if (combinedTransforms.$ === 'Just') {
			var meaningfulTransform = combinedTransforms.a;
			var svgTransform = A3($lattyware$elm_fontawesome$FontAwesome$Transforms$Internal$transformForSvg, topLevelWidth, width, meaningfulTransform);
			if (outer.$ === 'Just') {
				var outerIcon = outer.a;
				return A4($lattyware$elm_fontawesome$FontAwesome$Svg$viewMaskedWithTransform, color, svgTransform, icon, outerIcon);
			} else {
				return A3($lattyware$elm_fontawesome$FontAwesome$Svg$viewWithTransform, color, svgTransform, icon);
			}
		} else {
			return A2(
				$lattyware$elm_fontawesome$FontAwesome$Svg$viewPaths,
				_List_fromArray(
					[
						$elm$svg$Svg$Attributes$fill(color)
					]),
				icon);
		}
	});
var $lattyware$elm_fontawesome$FontAwesome$Svg$viewMaskedWithTransform = F4(
	function (color, transforms, exclude, include) {
		var id = include.a.id;
		var alwaysId = A2($elm$core$Maybe$withDefault, '', id);
		var clipId = 'clip-' + alwaysId;
		var maskId = 'mask-' + alwaysId;
		var maskTag = A2(
			$elm$svg$Svg$mask,
			A2(
				$elm$core$List$cons,
				$elm$svg$Svg$Attributes$id(maskId),
				A2(
					$elm$core$List$cons,
					$elm$svg$Svg$Attributes$maskUnits('userSpaceOnUse'),
					A2(
						$elm$core$List$cons,
						$elm$svg$Svg$Attributes$maskContentUnits('userSpaceOnUse'),
						$lattyware$elm_fontawesome$FontAwesome$Svg$fill))),
			_List_fromArray(
				[
					A2($lattyware$elm_fontawesome$FontAwesome$Svg$viewInColor, 'white', include),
					A3($lattyware$elm_fontawesome$FontAwesome$Svg$viewWithTransform, 'black', transforms, exclude)
				]));
		var defs = A2(
			$elm$svg$Svg$defs,
			_List_Nil,
			_List_fromArray(
				[maskTag]));
		var rect = A2(
			$elm$svg$Svg$rect,
			A2(
				$elm$core$List$cons,
				$elm$svg$Svg$Attributes$fill(color),
				A2(
					$elm$core$List$cons,
					$elm$svg$Svg$Attributes$mask('url(#' + (maskId + ')')),
					$lattyware$elm_fontawesome$FontAwesome$Svg$fill)),
			_List_Nil);
		return A2(
			$elm$svg$Svg$g,
			_List_Nil,
			_List_fromArray(
				[defs, rect]));
	});
var $lattyware$elm_fontawesome$FontAwesome$Svg$view = $lattyware$elm_fontawesome$FontAwesome$Svg$viewInColor('currentColor');
var $lattyware$elm_fontawesome$FontAwesome$internalView = F2(
	function (fullIcon, extraAttributes) {
		var icon = fullIcon.a.icon;
		var transforms = fullIcon.a.transforms;
		var role = fullIcon.a.role;
		var id = fullIcon.a.id;
		var title = fullIcon.a.title;
		var outer = fullIcon.a.outer;
		var attributes = fullIcon.a.attributes;
		var contents = $lattyware$elm_fontawesome$FontAwesome$Svg$view(fullIcon);
		var _v0 = function () {
			if (title.$ === 'Just') {
				var givenTitle = title.a;
				var titleId = A2($elm$core$Maybe$withDefault, '', id) + '-title';
				return _Utils_Tuple2(
					A2($elm$html$Html$Attributes$attribute, 'aria-labelledby', titleId),
					_List_fromArray(
						[
							A2(
							$elm$svg$Svg$title,
							_List_fromArray(
								[
									$elm$svg$Svg$Attributes$id(titleId)
								]),
							_List_fromArray(
								[
									$elm$svg$Svg$text(givenTitle)
								])),
							contents
						]));
			} else {
				return _Utils_Tuple2(
					A2($elm$html$Html$Attributes$attribute, 'aria-hidden', 'true'),
					_List_fromArray(
						[contents]));
			}
		}();
		var semantics = _v0.a;
		var potentiallyTitledContents = _v0.b;
		var _v2 = $lattyware$elm_fontawesome$FontAwesome$Internal$topLevelDimensions(fullIcon);
		var width = _v2.a;
		var height = _v2.b;
		var aspectRatio = $elm$core$Basics$ceiling((width / height) * 16);
		var classes = _List_fromArray(
			[
				'svg-inline--fa',
				'fa-' + icon.name,
				'fa-w-' + $elm$core$String$fromInt(aspectRatio)
			]);
		return A2(
			$elm$svg$Svg$svg,
			$elm$core$List$concat(
				_List_fromArray(
					[
						_List_fromArray(
						[
							A2($elm$html$Html$Attributes$attribute, 'role', role),
							A2($elm$html$Html$Attributes$attribute, 'xmlns', 'http://www.w3.org/2000/svg'),
							$elm$svg$Svg$Attributes$viewBox(
							'0 0 ' + ($elm$core$String$fromInt(width) + (' ' + $elm$core$String$fromInt(height)))),
							semantics
						]),
						A2($elm$core$List$map, $elm$svg$Svg$Attributes$class, classes),
						A2(
						$elm$core$List$map,
						$elm$html$Html$Attributes$map($elm$core$Basics$never),
						attributes),
						extraAttributes
					])),
			potentiallyTitledContents);
	});
var $lattyware$elm_fontawesome$FontAwesome$view = function (presentation) {
	return A2($lattyware$elm_fontawesome$FontAwesome$internalView, presentation, _List_Nil);
};
var $author$project$Frontend$Main$buttonCompile = $author$project$Frontend$Main$buttonElement(
	{
		label: A2(
			$mdgriffith$elm_ui$Element$row,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$spacing($author$project$Frontend$Main$defaultFontSize),
					$mdgriffith$elm_ui$Element$htmlAttribute(
					$elm$html$Html$Attributes$title('Compile'))
				]),
			_List_fromArray(
				[
					A2(
					$mdgriffith$elm_ui$Element$el,
					_List_Nil,
					$mdgriffith$elm_ui$Element$html(
						$lattyware$elm_fontawesome$FontAwesome$view($lattyware$elm_fontawesome$FontAwesome$Solid$playCircle))),
					$mdgriffith$elm_ui$Element$text('Compile')
				])),
		onPress: $elm$core$Maybe$Just($author$project$Frontend$Main$UserInputCompile)
	});
var $mdgriffith$elm_ui$Internal$Model$CenterY = {$: 'CenterY'};
var $mdgriffith$elm_ui$Element$centerY = $mdgriffith$elm_ui$Internal$Model$AlignY($mdgriffith$elm_ui$Internal$Model$CenterY);
var $mdgriffith$elm_ui$Internal$Flag$overflow = $mdgriffith$elm_ui$Internal$Flag$flag(20);
var $mdgriffith$elm_ui$Element$clip = A2($mdgriffith$elm_ui$Internal$Model$Class, $mdgriffith$elm_ui$Internal$Flag$overflow, $mdgriffith$elm_ui$Internal$Style$classes.clip);
var $mdgriffith$elm_ui$Internal$Flag$fontColor = $mdgriffith$elm_ui$Internal$Flag$flag(14);
var $mdgriffith$elm_ui$Element$Font$color = function (fontColor) {
	return A2(
		$mdgriffith$elm_ui$Internal$Model$StyleClass,
		$mdgriffith$elm_ui$Internal$Flag$fontColor,
		A3(
			$mdgriffith$elm_ui$Internal$Model$Colored,
			'fc-' + $mdgriffith$elm_ui$Internal$Model$formatColorClass(fontColor),
			'color',
			fontColor));
};
var $elm$html$Html$node = $elm$virtual_dom$VirtualDom$node;
var $lattyware$elm_fontawesome$FontAwesome$Styles$css = A3(
	$elm$html$Html$node,
	'style',
	_List_Nil,
	_List_fromArray(
		[
			$elm$html$Html$text(':root, :host {  --fa-font-solid: normal 900 1em/1 \"Font Awesome 6 Free\";  --fa-font-regular: normal 400 1em/1 \"Font Awesome 6 Free\";  --fa-font-light: normal 300 1em/1 \"Font Awesome 6 Pro\";  --fa-font-thin: normal 100 1em/1 \"Font Awesome 6 Pro\";  --fa-font-duotone: normal 900 1em/1 \"Font Awesome 6 Duotone\";  --fa-font-duotone-regular: normal 400 1em/1 \"Font Awesome 6 Duotone\";  --fa-font-duotone-light: normal 300 1em/1 \"Font Awesome 6 Duotone\";  --fa-font-duotone-thin: normal 100 1em/1 \"Font Awesome 6 Duotone\";  --fa-font-brands: normal 400 1em/1 \"Font Awesome 6 Brands\";  --fa-font-sharp-solid: normal 900 1em/1 \"Font Awesome 6 Sharp\";  --fa-font-sharp-regular: normal 400 1em/1 \"Font Awesome 6 Sharp\";  --fa-font-sharp-light: normal 300 1em/1 \"Font Awesome 6 Sharp\";  --fa-font-sharp-thin: normal 100 1em/1 \"Font Awesome 6 Sharp\";  --fa-font-sharp-duotone-solid: normal 900 1em/1 \"Font Awesome 6 Sharp Duotone\";  --fa-font-sharp-duotone-regular: normal 400 1em/1 \"Font Awesome 6 Sharp Duotone\";  --fa-font-sharp-duotone-light: normal 300 1em/1 \"Font Awesome 6 Sharp Duotone\";  --fa-font-sharp-duotone-thin: normal 100 1em/1 \"Font Awesome 6 Sharp Duotone\";}svg:not(:root).svg-inline--fa, svg:not(:host).svg-inline--fa {  overflow: visible;  box-sizing: content-box;}.svg-inline--fa {  display: var(--fa-display, inline-block);  height: 1em;  overflow: visible;  vertical-align: -0.125em;}.svg-inline--fa.fa-2xs {  vertical-align: 0.1em;}.svg-inline--fa.fa-xs {  vertical-align: 0em;}.svg-inline--fa.fa-sm {  vertical-align: -0.0714285705em;}.svg-inline--fa.fa-lg {  vertical-align: -0.2em;}.svg-inline--fa.fa-xl {  vertical-align: -0.25em;}.svg-inline--fa.fa-2xl {  vertical-align: -0.3125em;}.svg-inline--fa.fa-pull-left {  margin-right: var(--fa-pull-margin, 0.3em);  width: auto;}.svg-inline--fa.fa-pull-right {  margin-left: var(--fa-pull-margin, 0.3em);  width: auto;}.svg-inline--fa.fa-li {  width: var(--fa-li-width, 2em);  top: 0.25em;}.svg-inline--fa.fa-fw {  width: var(--fa-fw-width, 1.25em);}.fa-layers svg.svg-inline--fa {  bottom: 0;  left: 0;  margin: auto;  position: absolute;  right: 0;  top: 0;}.fa-layers-counter, .fa-layers-text {  display: inline-block;  position: absolute;  text-align: center;}.fa-layers {  display: inline-block;  height: 1em;  position: relative;  text-align: center;  vertical-align: -0.125em;  width: 1em;}.fa-layers svg.svg-inline--fa {  transform-origin: center center;}.fa-layers-text {  left: 50%;  top: 50%;  transform: translate(-50%, -50%);  transform-origin: center center;}.fa-layers-counter {  background-color: var(--fa-counter-background-color, #ff253a);  border-radius: var(--fa-counter-border-radius, 1em);  box-sizing: border-box;  color: var(--fa-inverse, #fff);  line-height: var(--fa-counter-line-height, 1);  max-width: var(--fa-counter-max-width, 5em);  min-width: var(--fa-counter-min-width, 1.5em);  overflow: hidden;  padding: var(--fa-counter-padding, 0.25em 0.5em);  right: var(--fa-right, 0);  text-overflow: ellipsis;  top: var(--fa-top, 0);  transform: scale(var(--fa-counter-scale, 0.25));  transform-origin: top right;}.fa-layers-bottom-right {  bottom: var(--fa-bottom, 0);  right: var(--fa-right, 0);  top: auto;  transform: scale(var(--fa-layers-scale, 0.25));  transform-origin: bottom right;}.fa-layers-bottom-left {  bottom: var(--fa-bottom, 0);  left: var(--fa-left, 0);  right: auto;  top: auto;  transform: scale(var(--fa-layers-scale, 0.25));  transform-origin: bottom left;}.fa-layers-top-right {  top: var(--fa-top, 0);  right: var(--fa-right, 0);  transform: scale(var(--fa-layers-scale, 0.25));  transform-origin: top right;}.fa-layers-top-left {  left: var(--fa-left, 0);  right: auto;  top: var(--fa-top, 0);  transform: scale(var(--fa-layers-scale, 0.25));  transform-origin: top left;}.fa-1x {  font-size: 1em;}.fa-2x {  font-size: 2em;}.fa-3x {  font-size: 3em;}.fa-4x {  font-size: 4em;}.fa-5x {  font-size: 5em;}.fa-6x {  font-size: 6em;}.fa-7x {  font-size: 7em;}.fa-8x {  font-size: 8em;}.fa-9x {  font-size: 9em;}.fa-10x {  font-size: 10em;}.fa-2xs {  font-size: 0.625em;  line-height: 0.1em;  vertical-align: 0.225em;}.fa-xs {  font-size: 0.75em;  line-height: 0.0833333337em;  vertical-align: 0.125em;}.fa-sm {  font-size: 0.875em;  line-height: 0.0714285718em;  vertical-align: 0.0535714295em;}.fa-lg {  font-size: 1.25em;  line-height: 0.05em;  vertical-align: -0.075em;}.fa-xl {  font-size: 1.5em;  line-height: 0.0416666682em;  vertical-align: -0.125em;}.fa-2xl {  font-size: 2em;  line-height: 0.03125em;  vertical-align: -0.1875em;}.fa-fw {  text-align: center;  width: 1.25em;}.fa-ul {  list-style-type: none;  margin-left: var(--fa-li-margin, 2.5em);  padding-left: 0;}.fa-ul > li {  position: relative;}.fa-li {  left: calc(-1 * var(--fa-li-width, 2em));  position: absolute;  text-align: center;  width: var(--fa-li-width, 2em);  line-height: inherit;}.fa-border {  border-color: var(--fa-border-color, #eee);  border-radius: var(--fa-border-radius, 0.1em);  border-style: var(--fa-border-style, solid);  border-width: var(--fa-border-width, 0.08em);  padding: var(--fa-border-padding, 0.2em 0.25em 0.15em);}.fa-pull-left {  float: left;  margin-right: var(--fa-pull-margin, 0.3em);}.fa-pull-right {  float: right;  margin-left: var(--fa-pull-margin, 0.3em);}.fa-beat {  animation-name: fa-beat;  animation-delay: var(--fa-animation-delay, 0s);  animation-direction: var(--fa-animation-direction, normal);  animation-duration: var(--fa-animation-duration, 1s);  animation-iteration-count: var(--fa-animation-iteration-count, infinite);  animation-timing-function: var(--fa-animation-timing, ease-in-out);}.fa-bounce {  animation-name: fa-bounce;  animation-delay: var(--fa-animation-delay, 0s);  animation-direction: var(--fa-animation-direction, normal);  animation-duration: var(--fa-animation-duration, 1s);  animation-iteration-count: var(--fa-animation-iteration-count, infinite);  animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.28, 0.84, 0.42, 1));}.fa-fade {  animation-name: fa-fade;  animation-delay: var(--fa-animation-delay, 0s);  animation-direction: var(--fa-animation-direction, normal);  animation-duration: var(--fa-animation-duration, 1s);  animation-iteration-count: var(--fa-animation-iteration-count, infinite);  animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.4, 0, 0.6, 1));}.fa-beat-fade {  animation-name: fa-beat-fade;  animation-delay: var(--fa-animation-delay, 0s);  animation-direction: var(--fa-animation-direction, normal);  animation-duration: var(--fa-animation-duration, 1s);  animation-iteration-count: var(--fa-animation-iteration-count, infinite);  animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.4, 0, 0.6, 1));}.fa-flip {  animation-name: fa-flip;  animation-delay: var(--fa-animation-delay, 0s);  animation-direction: var(--fa-animation-direction, normal);  animation-duration: var(--fa-animation-duration, 1s);  animation-iteration-count: var(--fa-animation-iteration-count, infinite);  animation-timing-function: var(--fa-animation-timing, ease-in-out);}.fa-shake {  animation-name: fa-shake;  animation-delay: var(--fa-animation-delay, 0s);  animation-direction: var(--fa-animation-direction, normal);  animation-duration: var(--fa-animation-duration, 1s);  animation-iteration-count: var(--fa-animation-iteration-count, infinite);  animation-timing-function: var(--fa-animation-timing, linear);}.fa-spin {  animation-name: fa-spin;  animation-delay: var(--fa-animation-delay, 0s);  animation-direction: var(--fa-animation-direction, normal);  animation-duration: var(--fa-animation-duration, 2s);  animation-iteration-count: var(--fa-animation-iteration-count, infinite);  animation-timing-function: var(--fa-animation-timing, linear);}.fa-spin-reverse {  --fa-animation-direction: reverse;}.fa-pulse,.fa-spin-pulse {  animation-name: fa-spin;  animation-direction: var(--fa-animation-direction, normal);  animation-duration: var(--fa-animation-duration, 1s);  animation-iteration-count: var(--fa-animation-iteration-count, infinite);  animation-timing-function: var(--fa-animation-timing, steps(8));}@media (prefers-reduced-motion: reduce) {  .fa-beat,.fa-bounce,.fa-fade,.fa-beat-fade,.fa-flip,.fa-pulse,.fa-shake,.fa-spin,.fa-spin-pulse {    animation-delay: -1ms;    animation-duration: 1ms;    animation-iteration-count: 1;    transition-delay: 0s;    transition-duration: 0s;  }}@keyframes fa-beat {  0%, 90% {    transform: scale(1);  }  45% {    transform: scale(var(--fa-beat-scale, 1.25));  }}@keyframes fa-bounce {  0% {    transform: scale(1, 1) translateY(0);  }  10% {    transform: scale(var(--fa-bounce-start-scale-x, 1.1), var(--fa-bounce-start-scale-y, 0.9)) translateY(0);  }  30% {    transform: scale(var(--fa-bounce-jump-scale-x, 0.9), var(--fa-bounce-jump-scale-y, 1.1)) translateY(var(--fa-bounce-height, -0.5em));  }  50% {    transform: scale(var(--fa-bounce-land-scale-x, 1.05), var(--fa-bounce-land-scale-y, 0.95)) translateY(0);  }  57% {    transform: scale(1, 1) translateY(var(--fa-bounce-rebound, -0.125em));  }  64% {    transform: scale(1, 1) translateY(0);  }  100% {    transform: scale(1, 1) translateY(0);  }}@keyframes fa-fade {  50% {    opacity: var(--fa-fade-opacity, 0.4);  }}@keyframes fa-beat-fade {  0%, 100% {    opacity: var(--fa-beat-fade-opacity, 0.4);    transform: scale(1);  }  50% {    opacity: 1;    transform: scale(var(--fa-beat-fade-scale, 1.125));  }}@keyframes fa-flip {  50% {    transform: rotate3d(var(--fa-flip-x, 0), var(--fa-flip-y, 1), var(--fa-flip-z, 0), var(--fa-flip-angle, -180deg));  }}@keyframes fa-shake {  0% {    transform: rotate(-15deg);  }  4% {    transform: rotate(15deg);  }  8%, 24% {    transform: rotate(-18deg);  }  12%, 28% {    transform: rotate(18deg);  }  16% {    transform: rotate(-22deg);  }  20% {    transform: rotate(22deg);  }  32% {    transform: rotate(-12deg);  }  36% {    transform: rotate(12deg);  }  40%, 100% {    transform: rotate(0deg);  }}@keyframes fa-spin {  0% {    transform: rotate(0deg);  }  100% {    transform: rotate(360deg);  }}.fa-rotate-90 {  transform: rotate(90deg);}.fa-rotate-180 {  transform: rotate(180deg);}.fa-rotate-270 {  transform: rotate(270deg);}.fa-flip-horizontal {  transform: scale(-1, 1);}.fa-flip-vertical {  transform: scale(1, -1);}.fa-flip-both,.fa-flip-horizontal.fa-flip-vertical {  transform: scale(-1, -1);}.fa-rotate-by {  transform: rotate(var(--fa-rotate-angle, 0));}.fa-stack {  display: inline-block;  vertical-align: middle;  height: 2em;  position: relative;  width: 2.5em;}.fa-stack-1x,.fa-stack-2x {  bottom: 0;  left: 0;  margin: auto;  position: absolute;  right: 0;  top: 0;  z-index: var(--fa-stack-z-index, auto);}.svg-inline--fa.fa-stack-1x {  height: 1em;  width: 1.25em;}.svg-inline--fa.fa-stack-2x {  height: 2em;  width: 2.5em;}.fa-inverse {  color: var(--fa-inverse, #fff);}.sr-only,.fa-sr-only {  position: absolute;  width: 1px;  height: 1px;  padding: 0;  margin: -1px;  overflow: hidden;  clip: rect(0, 0, 0, 0);  white-space: nowrap;  border-width: 0;}.sr-only-focusable:not(:focus),.fa-sr-only-focusable:not(:focus) {  position: absolute;  width: 1px;  height: 1px;  padding: 0;  margin: -1px;  overflow: hidden;  clip: rect(0, 0, 0, 0);  white-space: nowrap;  border-width: 0;}.svg-inline--fa .fa-primary {  fill: var(--fa-primary-color, currentColor);  opacity: var(--fa-primary-opacity, 1);}.svg-inline--fa .fa-secondary {  fill: var(--fa-secondary-color, currentColor);  opacity: var(--fa-secondary-opacity, 0.4);}.svg-inline--fa.fa-swap-opacity .fa-primary {  opacity: var(--fa-secondary-opacity, 0.4);}.svg-inline--fa.fa-swap-opacity .fa-secondary {  opacity: var(--fa-primary-opacity, 1);}.svg-inline--fa mask .fa-primary,.svg-inline--fa mask .fa-secondary {  fill: black;}')
		]));
var $author$project$Frontend$Main$errorTextColor = A3($mdgriffith$elm_ui$Element$rgb, 1, 0.64, 0);
var $mdgriffith$elm_ui$Internal$Model$Paragraph = {$: 'Paragraph'};
var $mdgriffith$elm_ui$Element$paragraph = F2(
	function (attrs, children) {
		return A4(
			$mdgriffith$elm_ui$Internal$Model$element,
			$mdgriffith$elm_ui$Internal$Model$asParagraph,
			$mdgriffith$elm_ui$Internal$Model$div,
			A2(
				$elm$core$List$cons,
				$mdgriffith$elm_ui$Internal$Model$Describe($mdgriffith$elm_ui$Internal$Model$Paragraph),
				A2(
					$elm$core$List$cons,
					$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
					A2(
						$elm$core$List$cons,
						$mdgriffith$elm_ui$Element$spacing(5),
						attrs))),
			$mdgriffith$elm_ui$Internal$Model$Unkeyed(children));
	});
var $elm$virtual_dom$VirtualDom$style = _VirtualDom_style;
var $elm$html$Html$Attributes$style = $elm$virtual_dom$VirtualDom$style;
var $author$project$Frontend$Main$dialogErrorElementFromDescription = A2(
	$elm$core$Basics$composeR,
	$elm$html$Html$text,
	A2(
		$elm$core$Basics$composeR,
		$mdgriffith$elm_ui$Element$html,
		A2(
			$elm$core$Basics$composeR,
			$mdgriffith$elm_ui$Element$el(
				_List_fromArray(
					[
						$mdgriffith$elm_ui$Element$htmlAttribute(
						A2($elm$html$Html$Attributes$style, 'white-space', 'pre-wrap'))
					])),
			A2(
				$elm$core$Basics$composeR,
				$elm$core$List$singleton,
				$mdgriffith$elm_ui$Element$paragraph(
					_List_fromArray(
						[
							$mdgriffith$elm_ui$Element$Font$color($author$project$Frontend$Main$errorTextColor)
						]))))));
var $author$project$Frontend$Main$describeErrorLoadingContentsFromGit = function (loadError) {
	return 'Failed to load contents from git: ' + $author$project$Frontend$Main$describeHttpError(loadError);
};
var $author$project$Frontend$Main$elementToDisplayLoadFromGitError = A2(
	$elm$core$Basics$composeR,
	$author$project$Frontend$Main$describeErrorLoadingContentsFromGit,
	A2(
		$elm$core$Basics$composeR,
		$elm$core$String$left(500),
		$author$project$Frontend$Main$dialogErrorElementFromDescription));
var $author$project$Frontend$Visuals$elmEditorIconSvg = function (size) {
	var foregroundPaths = _List_fromArray(
		['M 42.901 68.565 L 42.901 76.396 L 11 76.396 L 11 20 L 42.901 20 L 42.901 27.792 L 20.219 27.792 L 20.219 43.145 L 41.474 43.145 L 41.474 50.859 L 20.219 50.859 L 20.219 68.565 L 42.901 68.565 Z', 'M 89.344 52.209 L 89.344 57.108 L 60.915 57.108 Q 61.108 63.319 64.271 66.656 A 11.689 11.689 0 0 0 73.182 69.992 Q 76.962 69.992 80.221 69.279 A 36.901 36.901 0 0 0 87.223 66.906 L 87.223 74.274 A 27.832 27.832 0 0 1 80.511 76.511 A 41.157 41.157 0 0 1 72.757 77.167 A 20.638 20.638 0 0 1 57.193 71.362 Q 51.58 65.556 51.58 55.373 A 24.326 24.326 0 0 1 56.626 39.128 A 18.314 18.314 0 0 1 56.788 38.94 A 17.987 17.987 0 0 1 71.099 32.961 A 17.58 17.58 0 0 1 84.445 38.091 A 19.604 19.604 0 0 1 89.344 52.209 Z M 61.069 50.551 L 80.434 50.551 A 11.809 11.809 0 0 0 77.888 42.547 A 8.708 8.708 0 0 0 71.099 39.827 Q 66.778 39.827 64.175 42.566 Q 61.571 45.305 61.069 50.551 Z', 'M0 100L0 0L100 0L100 100L0 100ZM4 97L97 97L97 3L3 3L3 97Z']);
	var foregroundPathsElements = A2(
		$elm$core$List$map,
		function (pathData) {
			return A2(
				$elm$svg$Svg$path,
				_List_fromArray(
					[
						$elm$svg$Svg$Attributes$d(pathData),
						$elm$svg$Svg$Attributes$fill('#7BCA39')
					]),
				_List_Nil);
		},
		foregroundPaths);
	var backgroundPathData = 'M1 99L1 1L99 1L99 99L1 99Z';
	return A2(
		$elm$svg$Svg$svg,
		_List_fromArray(
			[
				$elm$svg$Svg$Attributes$viewBox(
				A2(
					$elm$core$String$join,
					' ',
					A2(
						$elm$core$List$map,
						$elm$core$String$fromInt,
						_List_fromArray(
							[0, 0, 100, 100])))),
				$elm$svg$Svg$Attributes$width(size),
				$elm$svg$Svg$Attributes$height(size)
			]),
		A2(
			$elm$core$List$cons,
			A2(
				$elm$svg$Svg$path,
				_List_fromArray(
					[
						$elm$svg$Svg$Attributes$d(backgroundPathData),
						$elm$svg$Svg$Attributes$fill('#1A2B0C')
					]),
				_List_Nil),
			foregroundPathsElements));
};
var $mdgriffith$elm_ui$Internal$Model$FontFamily = F2(
	function (a, b) {
		return {$: 'FontFamily', a: a, b: b};
	});
var $mdgriffith$elm_ui$Internal$Flag$fontFamily = $mdgriffith$elm_ui$Internal$Flag$flag(5);
var $elm$core$String$words = _String_words;
var $mdgriffith$elm_ui$Internal$Model$renderFontClassName = F2(
	function (font, current) {
		return _Utils_ap(
			current,
			function () {
				switch (font.$) {
					case 'Serif':
						return 'serif';
					case 'SansSerif':
						return 'sans-serif';
					case 'Monospace':
						return 'monospace';
					case 'Typeface':
						var name = font.a;
						return A2(
							$elm$core$String$join,
							'-',
							$elm$core$String$words(
								$elm$core$String$toLower(name)));
					case 'ImportFont':
						var name = font.a;
						var url = font.b;
						return A2(
							$elm$core$String$join,
							'-',
							$elm$core$String$words(
								$elm$core$String$toLower(name)));
					default:
						var name = font.a.name;
						return A2(
							$elm$core$String$join,
							'-',
							$elm$core$String$words(
								$elm$core$String$toLower(name)));
				}
			}());
	});
var $mdgriffith$elm_ui$Element$Font$family = function (families) {
	return A2(
		$mdgriffith$elm_ui$Internal$Model$StyleClass,
		$mdgriffith$elm_ui$Internal$Flag$fontFamily,
		A2(
			$mdgriffith$elm_ui$Internal$Model$FontFamily,
			A3($elm$core$List$foldl, $mdgriffith$elm_ui$Internal$Model$renderFontClassName, 'ff-', families),
			families));
};
var $mdgriffith$elm_ui$Element$fillPortion = $mdgriffith$elm_ui$Internal$Model$Fill;
var $author$project$Frontend$Main$elementFontSizePercent = function (percent) {
	return $mdgriffith$elm_ui$Element$htmlAttribute(
		A2(
			$elm$html$Html$Attributes$style,
			'font-size',
			$elm$core$String$fromInt(percent) + '%'));
};
var $mdgriffith$elm_ui$Internal$Model$Heading = function (a) {
	return {$: 'Heading', a: a};
};
var $mdgriffith$elm_ui$Element$Region$heading = A2($elm$core$Basics$composeL, $mdgriffith$elm_ui$Internal$Model$Describe, $mdgriffith$elm_ui$Internal$Model$Heading);
var $author$project$Frontend$Main$headingAttributes = function (rank) {
	var fontSizePercent = A2($elm$core$Basics$max, 0, 90 - (rank * 20)) + 100;
	return _List_fromArray(
		[
			$author$project$Frontend$Main$elementFontSizePercent(fontSizePercent),
			$mdgriffith$elm_ui$Element$Region$heading(rank)
		]);
};
var $author$project$Frontend$Visuals$FileTypeElmIcon = {$: 'FileTypeElmIcon'};
var $author$project$Frontend$Visuals$FileTypeJsonIcon = {$: 'FileTypeJsonIcon'};
var $author$project$Frontend$Visuals$FileTypeMarkdownIcon = {$: 'FileTypeMarkdownIcon'};
var $author$project$Frontend$Visuals$iconFromFileContentType = function (contentType) {
	switch (contentType.$) {
		case 'ElmContent':
			return $elm$core$Maybe$Just(
				_Utils_Tuple2($author$project$Frontend$Visuals$FileTypeElmIcon, '#529BBA'));
		case 'JsonContent':
			return $elm$core$Maybe$Just(
				_Utils_Tuple2($author$project$Frontend$Visuals$FileTypeJsonIcon, '#DBCD68'));
		case 'MarkdownContent':
			return $elm$core$Maybe$Just(
				_Utils_Tuple2($author$project$Frontend$Visuals$FileTypeMarkdownIcon, '#529BBA'));
		default:
			return $elm$core$Maybe$Nothing;
	}
};
var $author$project$Frontend$Visuals$iconFromFileName = function (fileName) {
	return A2(
		$elm$core$Maybe$andThen,
		$author$project$Frontend$Visuals$iconFromFileContentType,
		$author$project$Frontend$FileEditor$fileContentTypeFromFileName(fileName));
};
var $elm$html$Html$Attributes$id = $elm$html$Html$Attributes$stringProperty('id');
var $mdgriffith$elm_ui$Internal$Model$InFront = {$: 'InFront'};
var $mdgriffith$elm_ui$Element$createNearby = F2(
	function (loc, element) {
		if (element.$ === 'Empty') {
			return $mdgriffith$elm_ui$Internal$Model$NoAttribute;
		} else {
			return A2($mdgriffith$elm_ui$Internal$Model$Nearby, loc, element);
		}
	});
var $mdgriffith$elm_ui$Element$inFront = function (element) {
	return A2($mdgriffith$elm_ui$Element$createNearby, $mdgriffith$elm_ui$Internal$Model$InFront, element);
};
var $lattyware$elm_fontawesome$FontAwesome$Solid$Definitions$indent = A4(
	$lattyware$elm_fontawesome$FontAwesome$IconDef,
	'fas',
	'indent',
	_Utils_Tuple2(448, 512),
	_Utils_Tuple2('M0 64C0 46.3 14.3 32 32 32l384 0c17.7 0 32 14.3 32 32s-14.3 32-32 32L32 96C14.3 96 0 81.7 0 64zM192 192c0-17.7 14.3-32 32-32l192 0c17.7 0 32 14.3 32 32s-14.3 32-32 32l-192 0c-17.7 0-32-14.3-32-32zm32 96l192 0c17.7 0 32 14.3 32 32s-14.3 32-32 32l-192 0c-17.7 0-32-14.3-32-32s14.3-32 32-32zM0 448c0-17.7 14.3-32 32-32l384 0c17.7 0 32 14.3 32 32s-14.3 32-32 32L32 480c-17.7 0-32-14.3-32-32zM127.8 268.6L25.8 347.9C15.3 356.1 0 348.6 0 335.3L0 176.7c0-13.3 15.3-20.8 25.8-12.6l101.9 79.3c8.2 6.4 8.2 18.9 0 25.3z', $elm$core$Maybe$Nothing));
var $lattyware$elm_fontawesome$FontAwesome$Solid$indent = $lattyware$elm_fontawesome$FontAwesome$present($lattyware$elm_fontawesome$FontAwesome$Solid$Definitions$indent);
var $mdgriffith$elm_ui$Internal$Model$OnlyDynamic = F2(
	function (a, b) {
		return {$: 'OnlyDynamic', a: a, b: b};
	});
var $mdgriffith$elm_ui$Internal$Model$StaticRootAndDynamic = F2(
	function (a, b) {
		return {$: 'StaticRootAndDynamic', a: a, b: b};
	});
var $mdgriffith$elm_ui$Internal$Model$AllowHover = {$: 'AllowHover'};
var $mdgriffith$elm_ui$Internal$Model$Layout = {$: 'Layout'};
var $mdgriffith$elm_ui$Internal$Model$focusDefaultStyle = {
	backgroundColor: $elm$core$Maybe$Nothing,
	borderColor: $elm$core$Maybe$Nothing,
	shadow: $elm$core$Maybe$Just(
		{
			blur: 0,
			color: A4($mdgriffith$elm_ui$Internal$Model$Rgba, 155 / 255, 203 / 255, 1, 1),
			offset: _Utils_Tuple2(0, 0),
			size: 3
		})
};
var $mdgriffith$elm_ui$Internal$Model$optionsToRecord = function (options) {
	var combine = F2(
		function (opt, record) {
			switch (opt.$) {
				case 'HoverOption':
					var hoverable = opt.a;
					var _v4 = record.hover;
					if (_v4.$ === 'Nothing') {
						return _Utils_update(
							record,
							{
								hover: $elm$core$Maybe$Just(hoverable)
							});
					} else {
						return record;
					}
				case 'FocusStyleOption':
					var focusStyle = opt.a;
					var _v5 = record.focus;
					if (_v5.$ === 'Nothing') {
						return _Utils_update(
							record,
							{
								focus: $elm$core$Maybe$Just(focusStyle)
							});
					} else {
						return record;
					}
				default:
					var renderMode = opt.a;
					var _v6 = record.mode;
					if (_v6.$ === 'Nothing') {
						return _Utils_update(
							record,
							{
								mode: $elm$core$Maybe$Just(renderMode)
							});
					} else {
						return record;
					}
			}
		});
	var andFinally = function (record) {
		return {
			focus: function () {
				var _v0 = record.focus;
				if (_v0.$ === 'Nothing') {
					return $mdgriffith$elm_ui$Internal$Model$focusDefaultStyle;
				} else {
					var focusable = _v0.a;
					return focusable;
				}
			}(),
			hover: function () {
				var _v1 = record.hover;
				if (_v1.$ === 'Nothing') {
					return $mdgriffith$elm_ui$Internal$Model$AllowHover;
				} else {
					var hoverable = _v1.a;
					return hoverable;
				}
			}(),
			mode: function () {
				var _v2 = record.mode;
				if (_v2.$ === 'Nothing') {
					return $mdgriffith$elm_ui$Internal$Model$Layout;
				} else {
					var actualMode = _v2.a;
					return actualMode;
				}
			}()
		};
	};
	return andFinally(
		A3(
			$elm$core$List$foldr,
			combine,
			{focus: $elm$core$Maybe$Nothing, hover: $elm$core$Maybe$Nothing, mode: $elm$core$Maybe$Nothing},
			options));
};
var $mdgriffith$elm_ui$Internal$Model$toHtml = F2(
	function (mode, el) {
		switch (el.$) {
			case 'Unstyled':
				var html = el.a;
				return html($mdgriffith$elm_ui$Internal$Model$asEl);
			case 'Styled':
				var styles = el.a.styles;
				var html = el.a.html;
				return A2(
					html,
					mode(styles),
					$mdgriffith$elm_ui$Internal$Model$asEl);
			case 'Text':
				var text = el.a;
				return $mdgriffith$elm_ui$Internal$Model$textElement(text);
			default:
				return $mdgriffith$elm_ui$Internal$Model$textElement('');
		}
	});
var $mdgriffith$elm_ui$Internal$Model$renderRoot = F3(
	function (optionList, attributes, child) {
		var options = $mdgriffith$elm_ui$Internal$Model$optionsToRecord(optionList);
		var embedStyle = function () {
			var _v0 = options.mode;
			if (_v0.$ === 'NoStaticStyleSheet') {
				return $mdgriffith$elm_ui$Internal$Model$OnlyDynamic(options);
			} else {
				return $mdgriffith$elm_ui$Internal$Model$StaticRootAndDynamic(options);
			}
		}();
		return A2(
			$mdgriffith$elm_ui$Internal$Model$toHtml,
			embedStyle,
			A4(
				$mdgriffith$elm_ui$Internal$Model$element,
				$mdgriffith$elm_ui$Internal$Model$asEl,
				$mdgriffith$elm_ui$Internal$Model$div,
				attributes,
				$mdgriffith$elm_ui$Internal$Model$Unkeyed(
					_List_fromArray(
						[child]))));
	});
var $mdgriffith$elm_ui$Internal$Model$FontSize = function (a) {
	return {$: 'FontSize', a: a};
};
var $mdgriffith$elm_ui$Internal$Model$SansSerif = {$: 'SansSerif'};
var $mdgriffith$elm_ui$Internal$Model$Typeface = function (a) {
	return {$: 'Typeface', a: a};
};
var $mdgriffith$elm_ui$Internal$Flag$fontSize = $mdgriffith$elm_ui$Internal$Flag$flag(4);
var $mdgriffith$elm_ui$Internal$Model$rootStyle = function () {
	var families = _List_fromArray(
		[
			$mdgriffith$elm_ui$Internal$Model$Typeface('Open Sans'),
			$mdgriffith$elm_ui$Internal$Model$Typeface('Helvetica'),
			$mdgriffith$elm_ui$Internal$Model$Typeface('Verdana'),
			$mdgriffith$elm_ui$Internal$Model$SansSerif
		]);
	return _List_fromArray(
		[
			A2(
			$mdgriffith$elm_ui$Internal$Model$StyleClass,
			$mdgriffith$elm_ui$Internal$Flag$bgColor,
			A3(
				$mdgriffith$elm_ui$Internal$Model$Colored,
				'bg-' + $mdgriffith$elm_ui$Internal$Model$formatColorClass(
					A4($mdgriffith$elm_ui$Internal$Model$Rgba, 1, 1, 1, 0)),
				'background-color',
				A4($mdgriffith$elm_ui$Internal$Model$Rgba, 1, 1, 1, 0))),
			A2(
			$mdgriffith$elm_ui$Internal$Model$StyleClass,
			$mdgriffith$elm_ui$Internal$Flag$fontColor,
			A3(
				$mdgriffith$elm_ui$Internal$Model$Colored,
				'fc-' + $mdgriffith$elm_ui$Internal$Model$formatColorClass(
					A4($mdgriffith$elm_ui$Internal$Model$Rgba, 0, 0, 0, 1)),
				'color',
				A4($mdgriffith$elm_ui$Internal$Model$Rgba, 0, 0, 0, 1))),
			A2(
			$mdgriffith$elm_ui$Internal$Model$StyleClass,
			$mdgriffith$elm_ui$Internal$Flag$fontSize,
			$mdgriffith$elm_ui$Internal$Model$FontSize(20)),
			A2(
			$mdgriffith$elm_ui$Internal$Model$StyleClass,
			$mdgriffith$elm_ui$Internal$Flag$fontFamily,
			A2(
				$mdgriffith$elm_ui$Internal$Model$FontFamily,
				A3($elm$core$List$foldl, $mdgriffith$elm_ui$Internal$Model$renderFontClassName, 'font-', families),
				families))
		]);
}();
var $mdgriffith$elm_ui$Element$layoutWith = F3(
	function (_v0, attrs, child) {
		var options = _v0.options;
		return A3(
			$mdgriffith$elm_ui$Internal$Model$renderRoot,
			options,
			A2(
				$elm$core$List$cons,
				$mdgriffith$elm_ui$Internal$Model$htmlClass(
					A2(
						$elm$core$String$join,
						' ',
						_List_fromArray(
							[$mdgriffith$elm_ui$Internal$Style$classes.root, $mdgriffith$elm_ui$Internal$Style$classes.any, $mdgriffith$elm_ui$Internal$Style$classes.single]))),
				_Utils_ap($mdgriffith$elm_ui$Internal$Model$rootStyle, attrs)),
			child);
	});
var $mdgriffith$elm_ui$Element$layout = $mdgriffith$elm_ui$Element$layoutWith(
	{options: _List_Nil});
var $mdgriffith$elm_ui$Internal$Flag$borderColor = $mdgriffith$elm_ui$Internal$Flag$flag(28);
var $mdgriffith$elm_ui$Element$Border$color = function (clr) {
	return A2(
		$mdgriffith$elm_ui$Internal$Model$StyleClass,
		$mdgriffith$elm_ui$Internal$Flag$borderColor,
		A3(
			$mdgriffith$elm_ui$Internal$Model$Colored,
			'bc-' + $mdgriffith$elm_ui$Internal$Model$formatColorClass(clr),
			'border-color',
			clr));
};
var $mdgriffith$elm_ui$Element$rgba = $mdgriffith$elm_ui$Internal$Model$Rgba;
var $mdgriffith$elm_ui$Internal$Model$BorderWidth = F5(
	function (a, b, c, d, e) {
		return {$: 'BorderWidth', a: a, b: b, c: c, d: d, e: e};
	});
var $mdgriffith$elm_ui$Element$Border$width = function (v) {
	return A2(
		$mdgriffith$elm_ui$Internal$Model$StyleClass,
		$mdgriffith$elm_ui$Internal$Flag$borderWidth,
		A5(
			$mdgriffith$elm_ui$Internal$Model$BorderWidth,
			'b-' + $elm$core$String$fromInt(v),
			v,
			v,
			v,
			v));
};
var $mdgriffith$elm_ui$Element$Border$widthXY = F2(
	function (x, y) {
		return A2(
			$mdgriffith$elm_ui$Internal$Model$StyleClass,
			$mdgriffith$elm_ui$Internal$Flag$borderWidth,
			A5(
				$mdgriffith$elm_ui$Internal$Model$BorderWidth,
				'b-' + ($elm$core$String$fromInt(x) + ('-' + $elm$core$String$fromInt(y))),
				y,
				x,
				y,
				x));
	});
var $mdgriffith$elm_ui$Element$Border$widthEach = function (_v0) {
	var bottom = _v0.bottom;
	var top = _v0.top;
	var left = _v0.left;
	var right = _v0.right;
	return (_Utils_eq(top, bottom) && _Utils_eq(left, right)) ? (_Utils_eq(top, right) ? $mdgriffith$elm_ui$Element$Border$width(top) : A2($mdgriffith$elm_ui$Element$Border$widthXY, left, top)) : A2(
		$mdgriffith$elm_ui$Internal$Model$StyleClass,
		$mdgriffith$elm_ui$Internal$Flag$borderWidth,
		A5(
			$mdgriffith$elm_ui$Internal$Model$BorderWidth,
			'b-' + ($elm$core$String$fromInt(top) + ('-' + ($elm$core$String$fromInt(right) + ('-' + ($elm$core$String$fromInt(bottom) + ('-' + $elm$core$String$fromInt(left))))))),
			top,
			right,
			bottom,
			left));
};
var $author$project$Frontend$Main$elementLinkStyleAttributes = _List_fromArray(
	[
		$mdgriffith$elm_ui$Element$pointer,
		$mdgriffith$elm_ui$Element$Border$widthEach(
		{bottom: 1, left: 0, right: 0, top: 0}),
		$mdgriffith$elm_ui$Element$Border$color(
		A4($mdgriffith$elm_ui$Element$rgba, 0, 0, 0, 0)),
		$mdgriffith$elm_ui$Element$mouseOver(
		_List_fromArray(
			[
				$mdgriffith$elm_ui$Element$Border$color(
				A4($mdgriffith$elm_ui$Element$rgba, 0.7, 0.7, 1, 0.5))
			]))
	]);
var $author$project$Frontend$Main$linkElementFromUrlAndTextLabel = function (_v0) {
	var url = _v0.url;
	var labelText = _v0.labelText;
	return A2(
		$mdgriffith$elm_ui$Element$link,
		$author$project$Frontend$Main$elementLinkStyleAttributes,
		{
			label: $mdgriffith$elm_ui$Element$text(labelText),
			url: url
		});
};
var $mdgriffith$elm_ui$Element$map = $mdgriffith$elm_ui$Internal$Model$map;
var $mdgriffith$elm_ui$Internal$Model$Min = F2(
	function (a, b) {
		return {$: 'Min', a: a, b: b};
	});
var $mdgriffith$elm_ui$Element$minimum = F2(
	function (i, l) {
		return A2($mdgriffith$elm_ui$Internal$Model$Min, i, l);
	});
var $elm$html$Html$iframe = _VirtualDom_node('iframe');
var $author$project$MonacoHtml$monacoCdnURLs = _List_fromArray(
	['https://cdn.jsdelivr.net/npm/monaco-editor@0.46.0/min', 'https://unpkg.com/monaco-editor@0.46.0/min']);
var $author$project$MonacoHtml$monacoHtmlDocumentFromCdnUrl = function (cdnUrlToMin) {
	return '\n<!DOCTYPE html>\n<html>\n<head>\n    <meta http-equiv="Content-Type" content="text/html;charset=utf-8" >\n    <script type="text/javascript" src="monarch.js"></script>\n</head>\n<body style="margin:0;height:93vh;">\n\n<script type="text/javascript" src=\"' + (cdnUrlToMin + ('/vs/loader.js"></script>\n\n<script>\n\n    getCompletionItemsTimeoutMilliseconds = 2000;\n    getHoverTimeoutMilliseconds = 1500;\n    provideCompletionItemsEventFromElm = function(){};\n    provideHoverEventFromElm = function(){};\n    provideDefinitionEventFromElm = function(){};\n\n    function getEditorModel() {\n        if(typeof monaco != "object")\n            return null;\n\n        return monaco?.editor?.getModels()[0];\n    }\n\n    function monacoEditorOpenDocument(openDocument) {\n\n        if(typeof monaco != "object")\n            return;\n\n        const editor =\n            monaco.editor?.getEditors()[0];\n\n        if(typeof editor != "object") {\n\n            console.error("No editor found to open document.");\n\n            return;\n        }\n\n        let monacoUri =\n            monaco.Uri.parse(openDocument.uri)\n\n        var textModel =\n            monaco.editor?.getModel(monacoUri);\n\n        const reuseModel =\n            textModel?.uri.toString() === openDocument.uri\n\n        if(!reuseModel) {\n\n            console.log("Creating new model for " + monacoUri);\n\n            const modelsToDispose =\n                monaco.editor?.getModels() ?? [];\n\n            modelsToDispose.forEach(model => {\n\n                console.log("Previous model uri: " + model.uri);\n\n                model.dispose();\n            });\n\n            textModel =\n                monaco.editor?.createModel(openDocument.value, openDocument.language, monacoUri);\n\n            editor.setModel(textModel);\n        }\n\n        if(textModel == null) {\n            return;\n        }\n\n        textModel.setValue(openDocument.value);\n        monaco.editor?.setModelLanguage(textModel, openDocument.language);\n\n        editor.revealPositionInCenter(openDocument.position);\n        editor.setPosition(openDocument.position);\n    }\n\n    function monacoEditorSetModelMarkers(markers) {\n\n        if(typeof monaco != "object")\n            return;\n\n        monaco?.editor?.setModelMarkers(getEditorModel(), "", markers.map(monacoMarkerFromElmMonacoMarker));\n    }\n\n    function monacoEditorRevealPositionInCenter(position) {\n\n        const editor =\n            monaco.editor?.getEditors()[0];\n\n        if(typeof editor != "object") {\n\n            console.error("No editor found.");\n\n            return;\n        }\n\n        editor.revealPositionInCenter(position);\n    }\n\n    function monacoMarkerFromElmMonacoMarker(elmMonacoMarker) {\n        return {\n            message : elmMonacoMarker.message,\n            startLineNumber : elmMonacoMarker.startLineNumber,\n            startColumn : elmMonacoMarker.startColumn,\n            endLineNumber : elmMonacoMarker.endLineNumber,\n            endColumn : elmMonacoMarker.endColumn,\n            severity : monacoMarkerSeverityFromElmMonacoMarkerSeverity(elmMonacoMarker.severity),\n        };\n    }\n\n    function monacoMarkerSeverityFromElmMonacoMarkerSeverity(elmMonacoMarkerSeverity) {\n        if (typeof monaco === \'undefined\')\n            return -1;\n\n        if (elmMonacoMarkerSeverity.ErrorSeverity != null)\n            return monaco?.MarkerSeverity.Error;\n\n        if (elmMonacoMarkerSeverity.WarningSeverity != null)\n            return monaco?.MarkerSeverity.Warning;\n\n        if (elmMonacoMarkerSeverity.InfoSeverity != null)\n            return monaco?.MarkerSeverity.Info;\n\n        if (elmMonacoMarkerSeverity.HintSeverity != null)\n            return monaco?.MarkerSeverity.Hint;\n    }\n\n    function monacoCompletionItemFromElmMonacoCompletionItem(range, completionItem) {\n        return {\n                label: completionItem.label,\n                kind: monacoCompletionItemKindFromElmCompletionItemKind(completionItem.kind),\n\n                // https://github.com/microsoft/monaco-editor/issues/1074#issuecomment-423956977\n                documentation: { value : completionItem.documentation },\n\n                insertText: completionItem.insertText,\n                range: range\n            };\n    }\n\n    function monacoCompletionItemKindFromElmCompletionItemKind(completionItemKind) {\n        if (typeof monaco === \'undefined\')\n            return -1;\n\n        if (completionItemKind.ConstructorCompletionItemKind != null)\n            return monaco?.languages.CompletionItemKind.Constructor;\n\n        if (completionItemKind.EnumCompletionItemKind != null)\n            return monaco?.languages.CompletionItemKind.Enum;\n\n        if (completionItemKind.EnumMemberCompletionItemKind != null)\n            return monaco?.languages.CompletionItemKind.EnumMember;\n\n        if (completionItemKind.FunctionCompletionItemKind != null)\n            return monaco?.languages.CompletionItemKind.Function;\n\n        if (completionItemKind.ModuleCompletionItemKind != null)\n            return monaco?.languages.CompletionItemKind.Module;\n\n        if (completionItemKind.StructCompletionItemKind != null)\n            return monaco?.languages.CompletionItemKind.Struct;\n\n        console.error("Unexpected shape of completionItemKind: " + JSON.stringify(completionItemKind));\n    }\n\n    function dispatchMessage(message) {\n        if(message.OpenDocumentEvent) {\n\n            monacoEditorOpenDocument(\n                message.OpenDocumentEvent[0]);\n        }\n\n        if(message.SetModelMarkers)\n            monacoEditorSetModelMarkers(message.SetModelMarkers[0]);\n\n        if(message.RevealPositionInCenter)\n            monacoEditorRevealPositionInCenter(message.RevealPositionInCenter[0]);\n\n        if(message.ProvideCompletionItemsEvent)\n            provideCompletionItemsEventFromElm(message.ProvideCompletionItemsEvent[0]);\n\n        if(message.ProvideHoverEvent)\n            provideHoverEventFromElm(message.ProvideHoverEvent[0]);\n\n        if(message.ProvideDefinitionEvent)\n            provideDefinitionEventFromElm(message.ProvideDefinitionEvent[0]);\n    }\n\n    function editorEventOnDidFocusEditorWidget() {\n        parent?.messageFromMonacoFrame?.({ DidFocusEditorWidgetEvent: []});\n    }\n\n    function editorActionCloseEditor() {\n        parent?.messageFromMonacoFrame?.({ EditorActionCloseEditorEvent:[]});\n    }\n\n    function editorActionFormatDocument() {\n        parent?.messageFromMonacoFrame?.({ EditorActionFormatDocumentEvent: []});\n    }\n\n    function editorActionCompile() {\n        parent?.messageFromMonacoFrame?.({ EditorActionCompileEvent: []});\n    }\n\n    function editorActionInspectSyntax() {\n        parent?.messageFromMonacoFrame?.({ EditorActionInspectSyntaxEvent: []});\n    }\n\n    function editorProvideCompletionItemsFromRangeAndLeadingText(uri, range, textUntilPosition, cursorLineNumber, cursorColumn) {\n\n        return new Promise(function (resolve, reject) {\n\n            const timeout =\n                setTimeout(() => {\n                    const message = "Did not get completion items from Elm within " + getCompletionItemsTimeoutMilliseconds + " milliseconds.";\n\n                console.error(message);\n                reject(message);\n                return;\n            }, getCompletionItemsTimeoutMilliseconds);\n\n            provideCompletionItemsEventFromElm = function(completionItemsFromElm)\n            {\n                clearTimeout(timeout);\n\n                const completionItemsForMonaco =\n                    completionItemsFromElm.map(item => monacoCompletionItemFromElmMonacoCompletionItem(range, item))\n\n                resolve({ suggestions: completionItemsForMonaco ?? [] });\n\n                provideCompletionItemsEventFromElm = function(){};\n            }\n\n            parent?.messageFromMonacoFrame?.({\n                RequestCompletionItemsEvent:\n                    [\n                    { uri: uri\n                    , textUntilPosition: textUntilPosition\n                    , cursorLineNumber: cursorLineNumber\n                    , cursorColumn: cursorColumn\n                    }\n                    ]});\n        });\n    }\n\n    function editorProvideHoverFromPosition(uri, position, lineText, word) {\n\n        return new Promise(function (resolve, reject) {\n\n            const timeout =\n                setTimeout(() => {\n                    const message = "Did not get hover from Elm within " + getHoverTimeoutMilliseconds + " milliseconds.";\n\n                console.error(message);\n                reject(message);\n            }, getHoverTimeoutMilliseconds);\n\n            provideHoverEventFromElm = function(hoverFromElm)\n            {\n                clearTimeout(timeout);\n\n                const contents =\n                    hoverFromElm.map(content => ({ value: content }))\n\n                resolve({ contents: contents ?? [] });\n\n                provideHoverEventFromElm = function(){};\n            }\n\n            parent?.messageFromMonacoFrame?.({\n                RequestHoverEvent:\n                    [\n                    { uri: uri\n                    , positionLineNumber: position.lineNumber\n                    , positionColumn: position.column\n                    , lineText: lineText\n                    , word: word.word\n                    }\n                    ]});\n        });\n    }\n\n    function editorProvideDefinitionFromPosition(uri, position, lineText, word) {\n\n        return new Promise(function (resolve, reject) {\n\n            const timeout =\n                setTimeout(() => {\n                    const message = "Did not get definition from Elm within " + getHoverTimeoutMilliseconds + " milliseconds.";\n\n                console.error(message);\n                reject(message);\n            }, getHoverTimeoutMilliseconds);\n\n            provideDefinitionEventFromElm = function(responseFromElm)\n            {\n                clearTimeout(timeout);\n\n                const responseForResolve = responseFromElm\n\n                console.log("responseForResolve", responseForResolve);\n\n                resolve(responseForResolve);\n\n                provideDefinitionEventFromElm = function(){};\n            }\n\n            parent?.messageFromMonacoFrame?.({\n                RequestDefinitionEvent:\n                    [\n                    { uri : uri\n                    , positionLineNumber: position.lineNumber\n                    , positionColumn: position.column\n                    , lineText: lineText\n                    , word: word.word\n                    }\n                    ]});\n        });\n    }\n\n\n\n</script>\n\n<script>\n  monacoStorageSettingExpandSuggestionDocs = true;\n\n  require.config({ paths: { \'vs\': \'' + (cdnUrlToMin + ('/vs\' }});\n\n  // Before loading vs/editor/editor.main, define a global MonacoEnvironment that overwrites\n  // the default worker url location (used when creating WebWorkers). The problem here is that\n  // HTML5 does not allow cross-domain web workers, so we need to proxy the instantiation of\n  // a web worker through a same-domain script\n  window.MonacoEnvironment = {\n    getWorkerUrl: function(workerId, label) {\n      return `data:text/javascript;charset=utf-8,${encodeURIComponent(`\n        self.MonacoEnvironment = {\n          baseUrl: \'' + (cdnUrlToMin + ('/\'\n        };\n        importScripts(\'' + (cdnUrlToMin + '/vs/base/worker/workerMain.js\');`\n      )}`;\n    }\n  };\n\n    require([\'vs/editor/editor.main\'], function() {\n\n        monaco.languages.register({\n            id: \'Elm\',\n            aliases: ["elm"],\n            extensions: [".elm"]\n            });\n\n        monaco.languages.setMonarchTokensProvider(\'Elm\', window.elm_monarch);\n\n        monaco.editor.registerEditorOpener({\n            openCodeEditor: function (source, resource, selectionOrPosition) {\n\n                const uri =\n                    resource.toString();\n\n                console.log(\'Resource uri: \', uri);\n                console.log(\'selectionOrPosition: \', selectionOrPosition);\n\n\n                [lineNumber, column] =\n                    Object.hasOwn(selectionOrPosition, \'startLineNumber\')\n                        ? [selectionOrPosition.startLineNumber, selectionOrPosition.startColumn]\n                        : [selectionOrPosition.lineNumber, selectionOrPosition.column]\n\n                parent?.messageFromMonacoFrame?.({\n                    OpenCodeEditorEvent:\n                        [\n                        { uri: uri\n                        , position: { lineNumber: lineNumber, column: column }\n                        }\n                        ]});\n\n                return true;\n            }\n        });\n\n        monaco.languages.registerCompletionItemProvider(\'Elm\', {\n            provideCompletionItems: function(model, position) {\n\n                const uri =\n                    model.uri.toString()\n\n                console.log("position:");\n                console.log(position);\n\n                // find out if we are completing a property in the \'dependencies\' object.\n                const textUntilPosition =\n                    model.getValueInRange({startLineNumber: 1, startColumn: 1, endLineNumber: position.lineNumber, endColumn: position.column})\n\n                const word =\n                    model.getWordUntilPosition(position)\n\n                const range = {\n                    startLineNumber: position.lineNumber,\n                    endLineNumber: position.lineNumber,\n                    startColumn: word.startColumn,\n                    endColumn: word.endColumn\n                };\n\n                return editorProvideCompletionItemsFromRangeAndLeadingText(\n                    uri,\n                    range,\n                    textUntilPosition,\n                    position.lineNumber,\n                    position.column);\n            },\n\n            triggerCharacters: [".", " "]\n        });\n\n        monaco.editor.onDidCreateModel(function(model) {\n            function forwardDidChangeContent() {\n            \n                const textModelValue = model.getValue();\n\n                // console.log("onDidChangeContent:\\n" + textModelValue);\n\n                const eventRecord = {\n                    textModelValue : textModelValue,\n                    uri : model.uri.toString()\n                };\n\n                parent?.messageFromMonacoFrame?.({\n                    DidChangeContentEvent : [ eventRecord ]\n                    });\n            }\n\n            var handle = null;\n            model.onDidChangeContent(() => {\n            // debounce\n            clearTimeout(handle);\n            handle = setTimeout(() => forwardDidChangeContent(), 400);\n            });\n\n            parent?.messageFromMonacoFrame?.({CompletedSetupEvent: []});\n        });\n\n\n        monaco.languages.registerHoverProvider(\'Elm\', {\n            provideHover: function (model, position) {\n\n                const uri =\n                    model.uri.toString()\n\n                const textUntilPosition =\n                    model.getValueInRange({startLineNumber: 1, startColumn: 1, endLineNumber: position.lineNumber, endColumn: position.column});\n\n                const lineText =\n                    model.getLineContent(position.lineNumber);\n\n                const word =\n                    model.getWordAtPosition(position);\n\n                return editorProvideHoverFromPosition(uri, position, lineText, word);\n            }\n        });\n\n        monaco.languages.registerDefinitionProvider(\'Elm\', {\n            provideDefinition: function (model, position) {\n\n                const uri =\n                    model.uri.toString()\n\n                const textUntilPosition =\n                    model.getValueInRange({startLineNumber: 1, startColumn: 1, endLineNumber: position.lineNumber, endColumn: position.column});\n\n                const lineText =\n                    model.getLineContent(position.lineNumber)\n\n                const word =\n                    model.getWordAtPosition(position)\n\n                return editorProvideDefinitionFromPosition(uri, position, lineText, word);\n            }\n        });\n\n        monaco.editor.defineTheme(\'dark-plus\', {\n            base: \'vs-dark\',\n            inherit: true,\n            rules: [\n                { token: \'keyword\', foreground: \'#C586C0\' },\n                { token: \'type\', foreground: \'#569CD6\' },\n                { token: \'function.name\', foreground: \'#DCDCAA\' },\n            ],\n            colors: {},\n        });\n\n        customElements.define(\n            "code-view-monaco",\n            class CodeViewMonaco extends HTMLElement {\n                _monacoEditor;\n                /** @type HTMLElement */\n                _editor;\n\n                constructor() {\n                    super();\n\n                    /*\n                    Setting up in the constructor would work when using shadow DOM, but since we integrate without shadow DOM, setup is done from connectedCallback.\n\n                    this.setupMonaco();\n                    */\n                }\n\n                connectedCallback() {\n\n                    this.setupMonaco();\n                }\n\n                setupMonaco() {\n\n                    const template = /** @type HTMLTemplateElement */ (\n                        document.getElementById("editor-template")\n                    );\n\n                    const editorNode = template.content.cloneNode(true);\n\n                    /*\n                    At the moment, we avoid implementations placing Monaco in a shadow DOM because of this bug that breaks hover providers: <https://github.com/microsoft/monaco-editor/issues/3409>\n                    Other features like markers and completion suggestions worked normally inside the shadow DOM, but the hover popups did not show up.\n\n                    const shadowRoot = this.attachShadow({ mode: "open" });\n\n                    // Copy over editor styles\n                    const styles = document.querySelectorAll(\n                        "link[rel=\'stylesheet\'][data-name^=\'vs/\']"\n                    );\n\n                    for (const style of styles) {\n                        shadowRoot.appendChild(style.cloneNode(true));\n                    }\n\n                    shadowRoot.appendChild(editorNode);\n\n                    this._editor = shadowRoot.querySelector("#monaco-container");\n                    */\n\n                    this.appendChild(editorNode);\n                    this._editor = this.querySelector("#monaco-container");\n\n                    this._monacoEditor = monaco.editor.create(this._editor, {\n                        automaticLayout: true,\n                        language: \'Elm\',\n                        value: "Initialization of editor is not complete yet",\n                        scrollBeyondLastLine: false,\n                        theme: "dark-plus",\n                    }, {\n                        // https://github.com/microsoft/monaco-editor/issues/2241#issuecomment-764694521\n                        // https://stackoverflow.com/questions/54795603/always-show-the-show-more-section-in-monaco-editor/59040199#59040199\n                        storageService: {\n                            get(key) {\n                                // console.log("storageService.get: " + key);\n                            },\n                            remove() { },\n                            getBoolean(key) {\n                                // console.log("storageService.getBoolean: " + key);\n\n                                if (key === \'expandSuggestionDocs\') {\n                                    return monacoStorageSettingExpandSuggestionDocs;\n                                }\n                            },\n                            getNumber(key) {\n                                // console.log("storageService.getNumber: " + key);\n                            },\n                            store(key, value) {\n                                // console.log("storageService.store: " + key);\n\n                                if (key === \'expandSuggestionDocs\')\n                                    monacoStorageSettingExpandSuggestionDocs = value;\n                            },\n                            set(key) {\n                                // console.log("storageService.set: " + key);\n                            },\n                            onWillSaveState() {},\n                            onDidChangeStorage() {},\n                            onDidChangeValue() {},\n                        }\n                    });\n\n                    this._monacoEditor.onDidFocusEditorWidget(() => {\n\n                        editorEventOnDidFocusEditorWidget();\n                    });\n\n                    this._monacoEditor.addAction({\n                        id: \'close-editor-action\',\n                        label: \'Close Editor\',\n                        keybindings: [],\n                        precondition: null,\n                        keybindingContext: null,\n\n                        contextMenuGroupId: \'z-other\',\n                        contextMenuOrder: 99,\n\n                        run: function(ed) {\n                            editorActionCloseEditor();\n                            return null;\n                        }\n                    });\n\n                    this._monacoEditor.addAction({\n                        id: \'format-document-action\',\n                        label: \'Format Document\',\n                        keybindings: [\n                            monaco.KeyMod.Shift | monaco.KeyMod.Alt | monaco.KeyCode.KEY_F\n                        ],\n                        precondition: null,\n                        keybindingContext: null,\n\n                        run: function(ed) {\n                            editorActionFormatDocument();\n                            return null;\n                        }\n                    });\n\n                    this._monacoEditor.addAction({\n                        id: \'compile-action\',\n                        label: \'Compile\',\n                        keybindings: [\n                            monaco.KeyMod.Shift | monaco.KeyMod.CtrlCmd | monaco.KeyCode.Enter\n                        ],\n                        precondition: null,\n                        keybindingContext: null,\n\n                        run: function(ed) {\n                            editorActionCompile();\n                            return null;\n                        }\n                    });\n\n                    this._monacoEditor.addAction({\n                        id: \'inspect-syntax-action\',\n                        label: \'Inspect Syntax\',\n                        keybindings: [],\n                        precondition: null,\n                        keybindingContext: null,\n\n                        run: function(ed) {\n                            editorActionInspectSyntax();\n                            return null;\n                        }\n                    });\n                }\n            }\n        );\n    });\n</script>\n\n<template id="editor-template">\n\t<div\n\t\tid="monaco-container"\n\t\tstyle="overflow: hidden; width: 100%; height: 100%; position: absolute"\n\t></div>\n</template>\n\n<code-view-monaco></code-view-monaco>\n\n</body>\n</html>\n')))))));
};
var $author$project$MonacoHtml$monacoHtmlDocument = $author$project$MonacoHtml$monacoHtmlDocumentFromCdnUrl(
	A2(
		$elm$core$Maybe$withDefault,
		'Missing URL to CDN',
		$elm$core$List$head($author$project$MonacoHtml$monacoCdnURLs)));
var $elm$html$Html$Attributes$srcdoc = $elm$html$Html$Attributes$stringProperty('srcdoc');
var $author$project$Frontend$Main$monacoEditorElement = function (_v0) {
	return $mdgriffith$elm_ui$Element$html(
		A2(
			$elm$html$Html$iframe,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$srcdoc($author$project$MonacoHtml$monacoHtmlDocument),
					$elm$html$Html$Attributes$id('monaco-iframe'),
					A2($elm$html$Html$Attributes$style, 'width', '100%'),
					A2($elm$html$Html$Attributes$style, 'height', '100%'),
					A2($elm$html$Html$Attributes$style, 'border', '0')
				]),
			_List_Nil));
};
var $mdgriffith$elm_ui$Element$none = $mdgriffith$elm_ui$Internal$Model$Empty;
var $elm$virtual_dom$VirtualDom$Custom = function (a) {
	return {$: 'Custom', a: a};
};
var $elm$html$Html$Events$custom = F2(
	function (event, decoder) {
		return A2(
			$elm$virtual_dom$VirtualDom$on,
			event,
			$elm$virtual_dom$VirtualDom$Custom(decoder));
	});
var $lattyware$elm_fontawesome$FontAwesome$Solid$Definitions$xmark = A4(
	$lattyware$elm_fontawesome$FontAwesome$IconDef,
	'fas',
	'xmark',
	_Utils_Tuple2(384, 512),
	_Utils_Tuple2('M342.6 150.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L192 210.7 86.6 105.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L146.7 256 41.4 361.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L192 301.3 297.4 406.6c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L237.3 256 342.6 150.6z', $elm$core$Maybe$Nothing));
var $lattyware$elm_fontawesome$FontAwesome$Solid$xmark = $lattyware$elm_fontawesome$FontAwesome$present($lattyware$elm_fontawesome$FontAwesome$Solid$Definitions$xmark);
var $author$project$Frontend$Main$popupWindowElementAttributesFromAttributes = function (_v0) {
	var title = _v0.title;
	var titleIcon = _v0.titleIcon;
	var guideParagraphItems = _v0.guideParagraphItems;
	var contentElement = _v0.contentElement;
	return _List_fromArray(
		[
			$mdgriffith$elm_ui$Element$inFront(
			A2(
				$mdgriffith$elm_ui$Element$el,
				_List_fromArray(
					[
						$mdgriffith$elm_ui$Element$Background$color(
						A4($mdgriffith$elm_ui$Element$rgba, 0, 0, 0, 0.3)),
						$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),
						$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
						$mdgriffith$elm_ui$Element$Events$onClick($author$project$Frontend$Main$UserInputClosePopup),
						$mdgriffith$elm_ui$Element$htmlAttribute(
						A2($elm$html$Html$Attributes$style, 'backdrop-filter', 'blur(1px)'))
					]),
				A2(
					$mdgriffith$elm_ui$Element$el,
					_List_fromArray(
						[
							$mdgriffith$elm_ui$Element$Background$color(
							A3($mdgriffith$elm_ui$Element$rgb, 0, 0, 0)),
							$mdgriffith$elm_ui$Element$Border$color(
							A3($mdgriffith$elm_ui$Element$rgb, 0.8, 0.8, 0.8)),
							$mdgriffith$elm_ui$Element$Border$width(1),
							$mdgriffith$elm_ui$Element$Border$rounded(8),
							$mdgriffith$elm_ui$Element$width(
							$mdgriffith$elm_ui$Element$px(800)),
							$mdgriffith$elm_ui$Element$centerX,
							$mdgriffith$elm_ui$Element$centerY,
							$mdgriffith$elm_ui$Element$htmlAttribute(
							A2(
								$elm$html$Html$Events$custom,
								'click',
								$elm$json$Json$Decode$succeed(
									{message: $author$project$Frontend$Main$DiscardEvent, preventDefault: false, stopPropagation: true})))
						]),
					A2(
						$mdgriffith$elm_ui$Element$column,
						_List_fromArray(
							[
								$mdgriffith$elm_ui$Element$spacing($author$project$Frontend$Main$defaultFontSize),
								$mdgriffith$elm_ui$Element$padding($author$project$Frontend$Main$defaultFontSize),
								$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)
							]),
						_List_fromArray(
							[
								A2(
								$mdgriffith$elm_ui$Element$row,
								A2(
									$elm$core$List$cons,
									$mdgriffith$elm_ui$Element$spacing($author$project$Frontend$Main$defaultFontSize),
									A2(
										$elm$core$List$cons,
										$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
										$author$project$Frontend$Main$headingAttributes(3))),
								_List_fromArray(
									[
										A2(
										$elm$core$Maybe$withDefault,
										$mdgriffith$elm_ui$Element$none,
										A2(
											$elm$core$Maybe$map,
											A2(
												$elm$core$Basics$composeR,
												$lattyware$elm_fontawesome$FontAwesome$view,
												A2(
													$elm$core$Basics$composeR,
													$mdgriffith$elm_ui$Element$html,
													$mdgriffith$elm_ui$Element$el(_List_Nil))),
											titleIcon)),
										$mdgriffith$elm_ui$Element$text(title),
										A2(
										$mdgriffith$elm_ui$Element$Input$button,
										_List_fromArray(
											[
												$mdgriffith$elm_ui$Element$mouseOver(
												_List_fromArray(
													[
														$mdgriffith$elm_ui$Element$Background$color(
														A4($mdgriffith$elm_ui$Element$rgba, 1, 1, 1, 0.2))
													])),
												$mdgriffith$elm_ui$Element$padding(3),
												$mdgriffith$elm_ui$Element$alignRight,
												$mdgriffith$elm_ui$Element$htmlAttribute(
												$elm$html$Html$Attributes$title('Close'))
											]),
										{
											label: A2(
												$mdgriffith$elm_ui$Element$el,
												_List_Nil,
												$mdgriffith$elm_ui$Element$html(
													$lattyware$elm_fontawesome$FontAwesome$view($lattyware$elm_fontawesome$FontAwesome$Solid$xmark))),
											onPress: $elm$core$Maybe$Just($author$project$Frontend$Main$UserInputClosePopup)
										})
									])),
								A2(
								$mdgriffith$elm_ui$Element$paragraph,
								_List_fromArray(
									[
										$author$project$Frontend$Main$elementFontSizePercent(80)
									]),
								guideParagraphItems),
								contentElement
							])))))
		]);
};
var $author$project$Frontend$Main$rootFontFamily = _List_fromArray(
	['Segoe UI', 'Tahoma', 'Geneva', 'Verdana', 'sans-serif']);
var $mdgriffith$elm_ui$Internal$Model$Scale = function (a) {
	return {$: 'Scale', a: a};
};
var $mdgriffith$elm_ui$Internal$Flag$scale = $mdgriffith$elm_ui$Internal$Flag$flag(23);
var $mdgriffith$elm_ui$Element$scale = function (n) {
	return A2(
		$mdgriffith$elm_ui$Internal$Model$TransformComponent,
		$mdgriffith$elm_ui$Internal$Flag$scale,
		$mdgriffith$elm_ui$Internal$Model$Scale(
			_Utils_Tuple3(n, n, 1)));
};
var $mdgriffith$elm_ui$Element$scrollbarY = A2($mdgriffith$elm_ui$Internal$Model$Class, $mdgriffith$elm_ui$Internal$Flag$overflow, $mdgriffith$elm_ui$Internal$Style$classes.scrollbarsY);
var $mdgriffith$elm_ui$Element$scrollbars = A2($mdgriffith$elm_ui$Internal$Model$Class, $mdgriffith$elm_ui$Internal$Flag$overflow, $mdgriffith$elm_ui$Internal$Style$classes.scrollbars);
var $mdgriffith$elm_ui$Internal$Flag$fontWeight = $mdgriffith$elm_ui$Internal$Flag$flag(13);
var $mdgriffith$elm_ui$Element$Font$semiBold = A2($mdgriffith$elm_ui$Internal$Model$Class, $mdgriffith$elm_ui$Internal$Flag$fontWeight, $mdgriffith$elm_ui$Internal$Style$classes.textSemiBold);
var $mdgriffith$elm_ui$Element$Font$size = function (i) {
	return A2(
		$mdgriffith$elm_ui$Internal$Model$StyleClass,
		$mdgriffith$elm_ui$Internal$Flag$fontSize,
		$mdgriffith$elm_ui$Internal$Model$FontSize(i));
};
var $author$project$FileTree$isBlobNode = function (node) {
	if (node.$ === 'BlobNode') {
		return true;
	} else {
		return false;
	}
};
var $author$project$Frontend$Main$sortFileTreeForExplorerView = function (node) {
	if (node.$ === 'BlobNode') {
		return node;
	} else {
		var tree = node.a;
		return $author$project$FileTree$TreeNode(
			A2(
				$elm$core$List$sortBy,
				function (_v1) {
					var child = _v1.b;
					return $author$project$FileTree$isBlobNode(child) ? 0 : 1;
				},
				A2(
					$elm$core$List$map,
					$elm$core$Tuple$mapSecond($author$project$Frontend$Main$sortFileTreeForExplorerView),
					tree)));
	}
};
var $author$project$Frontend$Main$UserInputMouseOverTitleBarMenu = function (a) {
	return {$: 'UserInputMouseOverTitleBarMenu', a: a};
};
var $author$project$Frontend$Main$UserInputToggleTitleBarMenu = function (a) {
	return {$: 'UserInputToggleTitleBarMenu', a: a};
};
var $mdgriffith$elm_ui$Internal$Model$Below = {$: 'Below'};
var $mdgriffith$elm_ui$Element$below = function (element) {
	return A2($mdgriffith$elm_ui$Element$createNearby, $mdgriffith$elm_ui$Internal$Model$Below, element);
};
var $elm$html$Html$Events$onMouseEnter = function (msg) {
	return A2(
		$elm$html$Html$Events$on,
		'mouseenter',
		$elm$json$Json$Decode$succeed(msg));
};
var $mdgriffith$elm_ui$Element$Events$onMouseEnter = A2($elm$core$Basics$composeL, $mdgriffith$elm_ui$Internal$Model$Attr, $elm$html$Html$Events$onMouseEnter);
var $elm$html$Html$Events$onMouseLeave = function (msg) {
	return A2(
		$elm$html$Html$Events$on,
		'mouseleave',
		$elm$json$Json$Decode$succeed(msg));
};
var $mdgriffith$elm_ui$Element$Events$onMouseLeave = A2($elm$core$Basics$composeL, $mdgriffith$elm_ui$Internal$Model$Attr, $elm$html$Html$Events$onMouseLeave);
var $author$project$Frontend$Main$ImportFromZipArchiveOpenDialog = {$: 'ImportFromZipArchiveOpenDialog'};
var $author$project$Frontend$Main$UserInputExportWorkspaceToZipArchive = function (a) {
	return {$: 'UserInputExportWorkspaceToZipArchive', a: a};
};
var $author$project$Frontend$Main$UserInputGetLinkToWorkspace = function (a) {
	return {$: 'UserInputGetLinkToWorkspace', a: a};
};
var $author$project$Frontend$Main$UserInputImportWorkspaceFromZipArchive = function (a) {
	return {$: 'UserInputImportWorkspaceFromZipArchive', a: a};
};
var $author$project$Frontend$Main$UserInputLoadFromGitOpenDialog = {$: 'UserInputLoadFromGitOpenDialog'};
var $lattyware$elm_fontawesome$FontAwesome$Solid$Definitions$bookmark = A4(
	$lattyware$elm_fontawesome$FontAwesome$IconDef,
	'fas',
	'bookmark',
	_Utils_Tuple2(384, 512),
	_Utils_Tuple2('M0 48V487.7C0 501.1 10.9 512 24.3 512c5 0 9.9-1.5 14-4.4L192 400 345.7 507.6c4.1 2.9 9 4.4 14 4.4c13.4 0 24.3-10.9 24.3-24.3V48c0-26.5-21.5-48-48-48H48C21.5 0 0 21.5 0 48z', $elm$core$Maybe$Nothing));
var $lattyware$elm_fontawesome$FontAwesome$Solid$bookmark = $lattyware$elm_fontawesome$FontAwesome$present($lattyware$elm_fontawesome$FontAwesome$Solid$Definitions$bookmark);
var $lattyware$elm_fontawesome$FontAwesome$Solid$Definitions$cloudArrowDown = A4(
	$lattyware$elm_fontawesome$FontAwesome$IconDef,
	'fas',
	'cloud-arrow-down',
	_Utils_Tuple2(640, 512),
	_Utils_Tuple2('M144 480C64.5 480 0 415.5 0 336c0-62.8 40.2-116.2 96.2-135.9c-.1-2.7-.2-5.4-.2-8.1c0-88.4 71.6-160 160-160c59.3 0 111 32.2 138.7 80.2C409.9 102 428.3 96 448 96c53 0 96 43 96 96c0 12.2-2.3 23.8-6.4 34.6C596 238.4 640 290.1 640 352c0 70.7-57.3 128-128 128l-368 0zm79-167l80 80c9.4 9.4 24.6 9.4 33.9 0l80-80c9.4-9.4 9.4-24.6 0-33.9s-24.6-9.4-33.9 0l-39 39L344 184c0-13.3-10.7-24-24-24s-24 10.7-24 24l0 134.1-39-39c-9.4-9.4-24.6-9.4-33.9 0s-9.4 24.6 0 33.9z', $elm$core$Maybe$Nothing));
var $lattyware$elm_fontawesome$FontAwesome$Solid$cloudArrowDown = $lattyware$elm_fontawesome$FontAwesome$present($lattyware$elm_fontawesome$FontAwesome$Solid$Definitions$cloudArrowDown);
var $lattyware$elm_fontawesome$FontAwesome$Solid$cloudDownloadAlt = $lattyware$elm_fontawesome$FontAwesome$Solid$cloudArrowDown;
var $lattyware$elm_fontawesome$FontAwesome$Solid$Definitions$fileExport = A4(
	$lattyware$elm_fontawesome$FontAwesome$IconDef,
	'fas',
	'file-export',
	_Utils_Tuple2(576, 512),
	_Utils_Tuple2('M0 64C0 28.7 28.7 0 64 0L224 0l0 128c0 17.7 14.3 32 32 32l128 0 0 128-168 0c-13.3 0-24 10.7-24 24s10.7 24 24 24l168 0 0 112c0 35.3-28.7 64-64 64L64 512c-35.3 0-64-28.7-64-64L0 64zM384 336l0-48 110.1 0-39-39c-9.4-9.4-9.4-24.6 0-33.9s24.6-9.4 33.9 0l80 80c9.4 9.4 9.4 24.6 0 33.9l-80 80c-9.4 9.4-24.6 9.4-33.9 0s-9.4-24.6 0-33.9l39-39L384 336zm0-208l-128 0L256 0 384 128z', $elm$core$Maybe$Nothing));
var $lattyware$elm_fontawesome$FontAwesome$Solid$fileExport = $lattyware$elm_fontawesome$FontAwesome$present($lattyware$elm_fontawesome$FontAwesome$Solid$Definitions$fileExport);
var $lattyware$elm_fontawesome$FontAwesome$Solid$Definitions$fileImport = A4(
	$lattyware$elm_fontawesome$FontAwesome$IconDef,
	'fas',
	'file-import',
	_Utils_Tuple2(512, 512),
	_Utils_Tuple2('M128 64c0-35.3 28.7-64 64-64L352 0l0 128c0 17.7 14.3 32 32 32l128 0 0 288c0 35.3-28.7 64-64 64l-256 0c-35.3 0-64-28.7-64-64l0-112 174.1 0-39 39c-9.4 9.4-9.4 24.6 0 33.9s24.6 9.4 33.9 0l80-80c9.4-9.4 9.4-24.6 0-33.9l-80-80c-9.4-9.4-24.6-9.4-33.9 0s-9.4 24.6 0 33.9l39 39L128 288l0-224zm0 224l0 48L24 336c-13.3 0-24-10.7-24-24s10.7-24 24-24l104 0zM512 128l-128 0L384 0 512 128z', $elm$core$Maybe$Nothing));
var $lattyware$elm_fontawesome$FontAwesome$Solid$fileImport = $lattyware$elm_fontawesome$FontAwesome$present($lattyware$elm_fontawesome$FontAwesome$Solid$Definitions$fileImport);
var $mdgriffith$elm_ui$Internal$Flag$borderStyle = $mdgriffith$elm_ui$Internal$Flag$flag(11);
var $mdgriffith$elm_ui$Element$Border$solid = A2($mdgriffith$elm_ui$Internal$Model$Class, $mdgriffith$elm_ui$Internal$Flag$borderStyle, $mdgriffith$elm_ui$Internal$Style$classes.borderSolid);
var $mdgriffith$elm_ui$Element$rgb255 = F3(
	function (red, green, blue) {
		return A4($mdgriffith$elm_ui$Internal$Model$Rgba, red / 255, green / 255, blue / 255, 1);
	});
var $author$project$Frontend$Main$titlebarMenuEntry = F4(
	function (onPressEventIfEnabled, maybeIcon, label, isEnabled) {
		var opacity = isEnabled ? 1 : 0.5;
		var mouseOverAttributes = isEnabled ? _List_fromArray(
			[
				$mdgriffith$elm_ui$Element$mouseOver(
				_List_fromArray(
					[
						$mdgriffith$elm_ui$Element$Background$color(
						A3($mdgriffith$elm_ui$Element$rgb255, 4, 57, 94))
					]))
			]) : _List_Nil;
		var cursor = isEnabled ? 'pointer' : 'default';
		return A2(
			$mdgriffith$elm_ui$Element$el,
			A2(
				$elm$core$List$cons,
				$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
				A2(
					$elm$core$List$cons,
					$mdgriffith$elm_ui$Element$Border$rounded(4),
					mouseOverAttributes)),
			A2(
				$mdgriffith$elm_ui$Element$Input$button,
				_List_fromArray(
					[
						$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
						A2($mdgriffith$elm_ui$Element$paddingXY, $author$project$Frontend$Main$defaultFontSize, 4),
						$mdgriffith$elm_ui$Element$htmlAttribute(
						A2($elm$html$Html$Attributes$style, 'cursor', cursor))
					]),
				{
					label: A2(
						$mdgriffith$elm_ui$Element$row,
						_List_fromArray(
							[
								$mdgriffith$elm_ui$Element$spacing(($author$project$Frontend$Main$defaultFontSize / 2) | 0),
								$mdgriffith$elm_ui$Element$alpha(opacity)
							]),
						_List_fromArray(
							[
								A2(
								$mdgriffith$elm_ui$Element$el,
								_List_fromArray(
									[
										$mdgriffith$elm_ui$Element$width(
										$mdgriffith$elm_ui$Element$px((($author$project$Frontend$Main$defaultFontSize * 6) / 5) | 0))
									]),
								A2(
									$elm$core$Maybe$withDefault,
									$mdgriffith$elm_ui$Element$none,
									A2(
										$elm$core$Maybe$map,
										A2(
											$elm$core$Basics$composeR,
											$lattyware$elm_fontawesome$FontAwesome$view,
											A2(
												$elm$core$Basics$composeR,
												$mdgriffith$elm_ui$Element$html,
												$mdgriffith$elm_ui$Element$el(
													_List_fromArray(
														[$mdgriffith$elm_ui$Element$centerX])))),
										maybeIcon))),
								$mdgriffith$elm_ui$Element$text(label)
							])),
					onPress: isEnabled ? $elm$core$Maybe$Just(onPressEventIfEnabled) : $elm$core$Maybe$Nothing
				}));
	});
var $author$project$Frontend$Main$titlebarMenuEntryDropdownContent = F2(
	function (state, menuEntry) {
		var canSaveWorkspace = function () {
			var _v1 = state.workspace;
			if (_v1.$ === 'WorkspaceActive') {
				return true;
			} else {
				return false;
			}
		}();
		var menuEntries = _List_fromArray(
			[
				A4(
				$author$project$Frontend$Main$titlebarMenuEntry,
				$author$project$Frontend$Main$UserInputLoadFromGitOpenDialog,
				$elm$core$Maybe$Just($lattyware$elm_fontawesome$FontAwesome$Solid$cloudDownloadAlt),
				'Load From Git Repository',
				true),
				A4(
				$author$project$Frontend$Main$titlebarMenuEntry,
				$author$project$Frontend$Main$UserInputImportWorkspaceFromZipArchive($author$project$Frontend$Main$ImportFromZipArchiveOpenDialog),
				$elm$core$Maybe$Just($lattyware$elm_fontawesome$FontAwesome$Solid$fileImport),
				'Import From Zip Archive',
				true),
				A4(
				$author$project$Frontend$Main$titlebarMenuEntry,
				$author$project$Frontend$Main$UserInputGetLinkToWorkspace(
					{createDiffIfBaseAvailable: true}),
				$elm$core$Maybe$Just($lattyware$elm_fontawesome$FontAwesome$Solid$bookmark),
				'Get Link for Bookmarking or Sharing',
				canSaveWorkspace),
				A4(
				$author$project$Frontend$Main$titlebarMenuEntry,
				$author$project$Frontend$Main$UserInputExportWorkspaceToZipArchive(
					{sendDownloadCmd: false}),
				$elm$core$Maybe$Just($lattyware$elm_fontawesome$FontAwesome$Solid$fileExport),
				'Export To Zip Archive',
				canSaveWorkspace)
			]);
		return A2(
			$mdgriffith$elm_ui$Element$el,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$Background$color(
					A3($mdgriffith$elm_ui$Element$rgb, 0.13, 0.13, 0.13)),
					$mdgriffith$elm_ui$Element$Border$color(
					A3($mdgriffith$elm_ui$Element$rgb, 0.27, 0.27, 0.27)),
					$mdgriffith$elm_ui$Element$Border$solid,
					$mdgriffith$elm_ui$Element$Border$width(1),
					$mdgriffith$elm_ui$Element$Border$rounded(6)
				]),
			A2(
				$mdgriffith$elm_ui$Element$column,
				_List_fromArray(
					[
						$mdgriffith$elm_ui$Element$spacing(2),
						A2($mdgriffith$elm_ui$Element$paddingXY, 4, 4),
						$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$shrink)
					]),
				menuEntries));
	});
var $author$project$Frontend$Main$titlebarMenuEntryLabel = function (menuEntry) {
	return 'Workspace';
};
var $author$project$Frontend$Main$titlebarMenuEntryButton = F2(
	function (state, menuEntry) {
		var isOpen = _Utils_eq(
			state.popup,
			$elm$core$Maybe$Just(
				A2($author$project$Frontend$Main$TitlebarMenu, menuEntry, true)));
		var isHighlighted = _Utils_eq(
			state.popup,
			$elm$core$Maybe$Just(
				A2($author$project$Frontend$Main$TitlebarMenu, menuEntry, false))) || isOpen;
		var greyFromLightness = function (l) {
			return A3($mdgriffith$elm_ui$Element$rgb, l, l, l);
		};
		var highlightColor = greyFromLightness(0.18);
		var entryBackgroundColor = isHighlighted ? highlightColor : A4($mdgriffith$elm_ui$Element$rgba, 0, 0, 0, 0);
		var dropdownAttributes = isOpen ? _List_fromArray(
			[
				$mdgriffith$elm_ui$Element$below(
				A2($author$project$Frontend$Main$titlebarMenuEntryDropdownContent, state, menuEntry))
			]) : _List_Nil;
		return A2(
			$mdgriffith$elm_ui$Element$el,
			dropdownAttributes,
			A2(
				$mdgriffith$elm_ui$Element$Input$button,
				_List_fromArray(
					[
						$mdgriffith$elm_ui$Element$Background$color(entryBackgroundColor),
						A2($mdgriffith$elm_ui$Element$paddingXY, ($author$project$Frontend$Main$defaultFontSize / 2) | 0, 5),
						$mdgriffith$elm_ui$Element$Events$onMouseEnter(
						$author$project$Frontend$Main$UserInputMouseOverTitleBarMenu(
							$elm$core$Maybe$Just(menuEntry))),
						$mdgriffith$elm_ui$Element$Events$onMouseLeave(
						$author$project$Frontend$Main$UserInputMouseOverTitleBarMenu($elm$core$Maybe$Nothing)),
						$mdgriffith$elm_ui$Element$Border$rounded(4),
						$mdgriffith$elm_ui$Element$centerY,
						$mdgriffith$elm_ui$Element$mouseOver(
						_List_fromArray(
							[
								$mdgriffith$elm_ui$Element$Background$color(highlightColor)
							]))
					]),
				{
					label: $mdgriffith$elm_ui$Element$text(
						$author$project$Frontend$Main$titlebarMenuEntryLabel(menuEntry)),
					onPress: $elm$core$Maybe$Just(
						$author$project$Frontend$Main$UserInputToggleTitleBarMenu(menuEntry))
				}));
	});
var $author$project$Frontend$Visuals$GrowActionIcon = {$: 'GrowActionIcon'};
var $author$project$Frontend$Visuals$ShrinkActionIcon = {$: 'ShrinkActionIcon'};
var $author$project$Frontend$Main$UserInputSetEnlargedPane = function (a) {
	return {$: 'UserInputSetEnlargedPane', a: a};
};
var $author$project$Frontend$Main$toggleEnlargedPaneButton = F2(
	function (state, pane) {
		var titleSubject = function () {
			if (pane.$ === 'EditorPane') {
				return 'Editor Pane';
			} else {
				return 'Output Pane';
			}
		}();
		var iconSize = 20;
		var _v0 = _Utils_eq(
			state.viewEnlargedPane,
			$elm$core$Maybe$Just(pane)) ? _Utils_Tuple3($author$project$Frontend$Visuals$ShrinkActionIcon, $elm$core$Maybe$Nothing, 'Shrink') : (_Utils_eq(state.viewEnlargedPane, $elm$core$Maybe$Nothing) ? _Utils_Tuple3(
			$author$project$Frontend$Visuals$GrowActionIcon,
			$elm$core$Maybe$Just(pane),
			'Enlarge') : _Utils_Tuple3($author$project$Frontend$Visuals$GrowActionIcon, $elm$core$Maybe$Nothing, 'Enlarge'));
		var icon = _v0.a;
		var onPress = _v0.b;
		var titleVerb = _v0.c;
		var title = titleVerb + (' ' + titleSubject);
		return A2(
			$mdgriffith$elm_ui$Element$el,
			_List_fromArray(
				[$mdgriffith$elm_ui$Element$alignRight]),
			A2(
				$mdgriffith$elm_ui$Element$Input$button,
				_List_fromArray(
					[
						$mdgriffith$elm_ui$Element$Background$color(
						A3($mdgriffith$elm_ui$Element$rgb, 0.2, 0.2, 0.2)),
						$mdgriffith$elm_ui$Element$mouseOver(
						_List_fromArray(
							[
								$mdgriffith$elm_ui$Element$Background$color(
								A3($mdgriffith$elm_ui$Element$rgb, 0.3, 0.3, 0.3))
							])),
						$mdgriffith$elm_ui$Element$padding(4),
						$mdgriffith$elm_ui$Element$htmlAttribute(
						$elm$html$Html$Attributes$title(title))
					]),
				{
					label: A2(
						$mdgriffith$elm_ui$Element$el,
						_List_fromArray(
							[
								$mdgriffith$elm_ui$Element$width(
								$mdgriffith$elm_ui$Element$px(iconSize)),
								$mdgriffith$elm_ui$Element$height(
								$mdgriffith$elm_ui$Element$px(iconSize))
							]),
						A2(
							$author$project$Frontend$Visuals$iconSvgElementFromIcon,
							{color: 'rgba(255,255,255,0.7)'},
							icon)),
					onPress: $elm$core$Maybe$Just(
						$author$project$Frontend$Main$UserInputSetEnlargedPane(onPress))
				}));
	});
var $mdgriffith$elm_ui$Element$transparent = function (on) {
	return on ? A2(
		$mdgriffith$elm_ui$Internal$Model$StyleClass,
		$mdgriffith$elm_ui$Internal$Flag$transparency,
		A2($mdgriffith$elm_ui$Internal$Model$Transparency, 'transparent', 1.0)) : A2(
		$mdgriffith$elm_ui$Internal$Model$StyleClass,
		$mdgriffith$elm_ui$Internal$Flag$transparency,
		A2($mdgriffith$elm_ui$Internal$Model$Transparency, 'visible', 0.0));
};
var $mdgriffith$elm_ui$Element$Font$typeface = $mdgriffith$elm_ui$Internal$Model$Typeface;
var $elm$core$List$sum = function (numbers) {
	return A3($elm$core$List$foldl, $elm$core$Basics$add, 0, numbers);
};
var $mdgriffith$elm_ui$Internal$Model$AsTextColumn = {$: 'AsTextColumn'};
var $mdgriffith$elm_ui$Internal$Model$asTextColumn = $mdgriffith$elm_ui$Internal$Model$AsTextColumn;
var $mdgriffith$elm_ui$Internal$Model$Max = F2(
	function (a, b) {
		return {$: 'Max', a: a, b: b};
	});
var $mdgriffith$elm_ui$Element$maximum = F2(
	function (i, l) {
		return A2($mdgriffith$elm_ui$Internal$Model$Max, i, l);
	});
var $mdgriffith$elm_ui$Element$textColumn = F2(
	function (attrs, children) {
		return A4(
			$mdgriffith$elm_ui$Internal$Model$element,
			$mdgriffith$elm_ui$Internal$Model$asTextColumn,
			$mdgriffith$elm_ui$Internal$Model$div,
			A2(
				$elm$core$List$cons,
				$mdgriffith$elm_ui$Element$width(
					A2(
						$mdgriffith$elm_ui$Element$maximum,
						750,
						A2($mdgriffith$elm_ui$Element$minimum, 500, $mdgriffith$elm_ui$Element$fill))),
				attrs),
			$mdgriffith$elm_ui$Internal$Model$Unkeyed(children));
	});
var $author$project$Frontend$Main$workspaceSummaryElementForDialog = function (workspaceState) {
	var workspaceStateHashBase16 = $author$project$Frontend$WorkspaceStateInUrl$workspaceStateCompositionHash(
		$author$project$FileTreeInWorkspace$mapBlobsToBytes(workspaceState));
	var workspaceFiles = $author$project$FileTree$flatListOfBlobsFromFileTreeNode(workspaceState);
	return A2(
		$mdgriffith$elm_ui$Element$textColumn,
		_List_Nil,
		A2(
			$elm$core$List$map,
			A2(
				$elm$core$Basics$composeR,
				$mdgriffith$elm_ui$Element$text,
				A2(
					$elm$core$Basics$composeR,
					$elm$core$List$singleton,
					$mdgriffith$elm_ui$Element$paragraph(_List_Nil))),
			_List_fromArray(
				[
					'The current workspace state has the hash code ' + workspaceStateHashBase16,
					'It contains ' + ($elm$core$String$fromInt(
					$elm$core$List$length(workspaceFiles)) + (' files with an aggregate size of ' + ($elm$core$String$fromInt(
					$elm$core$List$sum(
						A2(
							$elm$core$List$map,
							A2(
								$elm$core$Basics$composeR,
								$elm$core$Tuple$second,
								A2(
									$elm$core$Basics$composeR,
									function ($) {
										return $.asBytes;
									},
									$elm$bytes$Bytes$width)),
							workspaceFiles))) + ' bytes.')))
				])));
};
var $author$project$Frontend$Main$viewExportToZipArchiveDialog = function (workspaceState) {
	var buttonDownloadArchive = $author$project$Frontend$Main$buttonElement(
		{
			label: $mdgriffith$elm_ui$Element$text('Download Archive'),
			onPress: $elm$core$Maybe$Just(
				$author$project$Frontend$Main$UserInputExportWorkspaceToZipArchive(
					{sendDownloadCmd: true}))
		});
	return {
		contentElement: A2(
			$mdgriffith$elm_ui$Element$column,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$spacing($author$project$Frontend$Main$defaultFontSize),
					$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)
				]),
			_List_fromArray(
				[
					$author$project$Frontend$Main$workspaceSummaryElementForDialog(workspaceState),
					A2(
					$mdgriffith$elm_ui$Element$el,
					_List_fromArray(
						[$mdgriffith$elm_ui$Element$centerX]),
					buttonDownloadArchive)
				])),
		guideParagraphItems: _List_fromArray(
			[
				$mdgriffith$elm_ui$Element$text('Download a zip archive containing all files in your workspace. You can also use this archive with the \'Import from Zip Archive\' function to load your workspace into the editor again later.')
			]),
		title: 'Export Workspace to Zip Archive',
		titleIcon: $elm$core$Maybe$Just($lattyware$elm_fontawesome$FontAwesome$Solid$fileExport)
	};
};
var $author$project$Frontend$Visuals$DirectoryExpandedIcon = {$: 'DirectoryExpandedIcon'};
var $author$project$Frontend$Main$buildFileTreeViewList = F3(
	function (configuration, path, _v0) {
		var currentNodeName = _v0.a;
		var currentNodeContent = _v0.b;
		var icon = function () {
			if (currentNodeContent.$ === 'TreeNode') {
				return $elm$core$Maybe$Just(
					_Utils_Tuple2($author$project$Frontend$Visuals$DirectoryExpandedIcon, 'white'));
			} else {
				return configuration.iconFromFileName(currentNodeName);
			}
		}();
		var currentItem = {
			icon: icon,
			indentLevel: $elm$core$List$length(path),
			label: currentNodeName,
			selectEvent: A2(
				configuration.selectEventFromNode,
				path,
				_Utils_Tuple2(currentNodeName, currentNodeContent))
		};
		if (currentNodeContent.$ === 'BlobNode') {
			return _List_fromArray(
				[currentItem]);
		} else {
			var tree = currentNodeContent.a;
			return A2(
				$elm$core$List$cons,
				currentItem,
				A2(
					$elm$core$List$concatMap,
					A2(
						$author$project$Frontend$Main$buildFileTreeViewList,
						configuration,
						_Utils_ap(
							path,
							_List_fromArray(
								[currentNodeName]))),
					tree));
		}
	});
var $mdgriffith$elm_ui$Internal$Model$paddingName = F4(
	function (top, right, bottom, left) {
		return 'pad-' + ($elm$core$String$fromInt(top) + ('-' + ($elm$core$String$fromInt(right) + ('-' + ($elm$core$String$fromInt(bottom) + ('-' + $elm$core$String$fromInt(left)))))));
	});
var $mdgriffith$elm_ui$Element$paddingEach = function (_v0) {
	var top = _v0.top;
	var right = _v0.right;
	var bottom = _v0.bottom;
	var left = _v0.left;
	if (_Utils_eq(top, right) && (_Utils_eq(top, bottom) && _Utils_eq(top, left))) {
		var topFloat = top;
		return A2(
			$mdgriffith$elm_ui$Internal$Model$StyleClass,
			$mdgriffith$elm_ui$Internal$Flag$padding,
			A5(
				$mdgriffith$elm_ui$Internal$Model$PaddingStyle,
				'p-' + $elm$core$String$fromInt(top),
				topFloat,
				topFloat,
				topFloat,
				topFloat));
	} else {
		return A2(
			$mdgriffith$elm_ui$Internal$Model$StyleClass,
			$mdgriffith$elm_ui$Internal$Flag$padding,
			A5(
				$mdgriffith$elm_ui$Internal$Model$PaddingStyle,
				A4($mdgriffith$elm_ui$Internal$Model$paddingName, top, right, bottom, left),
				top,
				right,
				bottom,
				left));
	}
};
var $author$project$Frontend$Main$viewFileTreeList = A2(
	$elm$core$Basics$composeR,
	$elm$core$List$map(
		function (item) {
			var interactionAttributes = A2(
				$elm$core$Maybe$withDefault,
				_List_Nil,
				A2(
					$elm$core$Maybe$map,
					function (event) {
						return _List_fromArray(
							[
								$mdgriffith$elm_ui$Element$Events$onClick(event),
								$mdgriffith$elm_ui$Element$mouseOver(
								_List_fromArray(
									[
										$mdgriffith$elm_ui$Element$Background$color(
										A4($mdgriffith$elm_ui$Element$rgba, 1, 1, 1, 0.1))
									])),
								$mdgriffith$elm_ui$Element$pointer
							]);
					},
					item.selectEvent));
			var iconElement = function () {
				var _v0 = item.icon;
				if (_v0.$ === 'Nothing') {
					return $mdgriffith$elm_ui$Element$none;
				} else {
					var _v1 = _v0.a;
					var iconType = _v1.a;
					var iconColor = _v1.b;
					return A2(
						$author$project$Frontend$Visuals$iconSvgElementFromIcon,
						{color: iconColor},
						iconType);
				}
			}();
			var currentNodeElement = A2(
				$mdgriffith$elm_ui$Element$el,
				A2(
					$elm$core$List$cons,
					$mdgriffith$elm_ui$Element$paddingEach(
						{bottom: 0, left: item.indentLevel * $author$project$Frontend$Main$defaultFontSize, right: 0, top: 0}),
					A2(
						$elm$core$List$cons,
						$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
						interactionAttributes)),
				A2(
					$mdgriffith$elm_ui$Element$row,
					_List_fromArray(
						[
							$mdgriffith$elm_ui$Element$spacing(($author$project$Frontend$Main$defaultFontSize / 2) | 0),
							$mdgriffith$elm_ui$Element$padding(5)
						]),
					_List_fromArray(
						[
							A2(
							$mdgriffith$elm_ui$Element$el,
							_List_fromArray(
								[
									$mdgriffith$elm_ui$Element$width(
									$mdgriffith$elm_ui$Element$px($author$project$Frontend$Main$defaultFontSize))
								]),
							iconElement),
							$mdgriffith$elm_ui$Element$text(item.label)
						])));
			return currentNodeElement;
		}),
	$mdgriffith$elm_ui$Element$column(
		_List_fromArray(
			[
				$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)
			])));
var $author$project$Frontend$Main$viewFileTree = F2(
	function (configuration, rootNode) {
		if (rootNode.$ === 'BlobNode') {
			return $mdgriffith$elm_ui$Element$text('Error: Root node is a blob, not a tree');
		} else {
			var treeItems = rootNode.a;
			return $author$project$Frontend$Main$viewFileTreeList(
				A2(
					$elm$core$List$concatMap,
					A2($author$project$Frontend$Main$buildFileTreeViewList, configuration, _List_Nil),
					treeItems));
		}
	});
var $elm$html$Html$a = _VirtualDom_node('a');
var $author$project$Frontend$Main$linkElementWithWrappedLabel = function (_v0) {
	var url = _v0.url;
	var labelText = _v0.labelText;
	return A2(
		$mdgriffith$elm_ui$Element$column,
		_List_Nil,
		_List_fromArray(
			[
				$mdgriffith$elm_ui$Element$html(
				A3(
					$elm$html$Html$node,
					'style',
					_List_Nil,
					_List_fromArray(
						[
							$elm$html$Html$text('\na:link {\n  color: inherit;\n  text-decoration: none;\n}\n\na:visited {\n  color: inherit;\n}\n\na:hover {\n  color: inherit;\n  text-decoration: underline;\n}')
						]))),
				$mdgriffith$elm_ui$Element$html(
				A2(
					$elm$html$Html$a,
					_List_fromArray(
						[
							$elm$html$Html$Attributes$href(url),
							A2($elm$html$Html$Attributes$style, 'overflow-wrap', 'anywhere'),
							A2($elm$html$Html$Attributes$style, 'white-space', 'pre-wrap')
						]),
					_List_fromArray(
						[
							$elm$html$Html$text(labelText)
						])))
			]));
};
var $author$project$Frontend$Main$viewGetLinkToWorkspaceDialog = F2(
	function (dialogState, workspaceState) {
		var linkElementFromUrl = function (urlToWorkspace) {
			var maybeDependencyUrl = function () {
				var _v0 = A2(
					$elm$core$Maybe$andThen,
					$author$project$Frontend$WorkspaceStateInUrl$workspaceStateDescriptionFromUrl,
					$elm$url$Url$fromString(urlToWorkspace));
				if (_v0.$ === 'Nothing') {
					return $elm$core$Maybe$Nothing;
				} else {
					if (_v0.a.$ === 'Err') {
						return $elm$core$Maybe$Nothing;
					} else {
						var workspaceDescription = _v0.a.a;
						switch (workspaceDescription.$) {
							case 'LiteralWorkspaceState':
								return $elm$core$Maybe$Nothing;
							case 'LinkWorkspaceState':
								var link = workspaceDescription.a;
								return $elm$core$Maybe$Just(link);
							default:
								var diffWorkspaceState = workspaceDescription.a;
								return $elm$core$Maybe$Just(diffWorkspaceState.base);
						}
					}
				}
			}();
			var dependenciesDescriptionLines = A2(
				$elm$core$Maybe$withDefault,
				_List_Nil,
				A2(
					$elm$core$Maybe$map,
					function (dependencyUrl) {
						return _List_fromArray(
							[
								A2(
								$mdgriffith$elm_ui$Element$paragraph,
								_List_Nil,
								_List_fromArray(
									[
										$mdgriffith$elm_ui$Element$text('The workspace state in this link depends on loading related data from the following URL: '),
										$author$project$Frontend$Main$linkElementFromUrlAndTextLabel(
										{labelText: dependencyUrl, url: dependencyUrl})
									]))
							]);
					},
					maybeDependencyUrl));
			var linkDescriptionLines = A2(
				$elm$core$List$cons,
				A2(
					$mdgriffith$elm_ui$Element$paragraph,
					_List_Nil,
					_List_fromArray(
						[
							$mdgriffith$elm_ui$Element$text(
							'Length of this link: ' + $elm$core$String$fromInt(
								$elm$core$String$length(urlToWorkspace)))
						])),
				dependenciesDescriptionLines);
			return A2(
				$mdgriffith$elm_ui$Element$column,
				_List_fromArray(
					[
						$mdgriffith$elm_ui$Element$spacing($author$project$Frontend$Main$defaultFontSize),
						$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)
					]),
				_List_fromArray(
					[
						A2(
						$mdgriffith$elm_ui$Element$el,
						_List_fromArray(
							[
								$mdgriffith$elm_ui$Element$height(
								$mdgriffith$elm_ui$Element$px(100)),
								$mdgriffith$elm_ui$Element$scrollbarY,
								$mdgriffith$elm_ui$Element$Font$size((($author$project$Frontend$Main$defaultFontSize * 4) / 5) | 0)
							]),
						$author$project$Frontend$Main$linkElementWithWrappedLabel(
							{labelText: urlToWorkspace, url: urlToWorkspace})),
						A2(
						$mdgriffith$elm_ui$Element$textColumn,
						_List_fromArray(
							[
								$mdgriffith$elm_ui$Element$Font$size((($author$project$Frontend$Main$defaultFontSize * 4) / 5) | 0),
								$mdgriffith$elm_ui$Element$padding($author$project$Frontend$Main$defaultFontSize)
							]),
						linkDescriptionLines)
					]));
		};
		var buttonGenerateLinkOrResultElement = A2(
			$mdgriffith$elm_ui$Element$column,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$spacing($author$project$Frontend$Main$defaultFontSize)
				]),
			_List_fromArray(
				[
					A2(
					$mdgriffith$elm_ui$Element$paragraph,
					_List_Nil,
					_List_fromArray(
						[
							$mdgriffith$elm_ui$Element$text('Use the link below to load your workspace\'s current state again later. This link is a fast way to share your workspace with other people.')
						])),
					linkElementFromUrl(dialogState.urlToWorkspace)
				]));
		return {
			contentElement: A2(
				$mdgriffith$elm_ui$Element$column,
				_List_fromArray(
					[
						$mdgriffith$elm_ui$Element$spacing($author$project$Frontend$Main$defaultFontSize),
						$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)
					]),
				_List_fromArray(
					[
						$author$project$Frontend$Main$workspaceSummaryElementForDialog(workspaceState),
						A2(
						$mdgriffith$elm_ui$Element$el,
						_List_fromArray(
							[
								$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)
							]),
						buttonGenerateLinkOrResultElement)
					])),
			guideParagraphItems: _List_fromArray(
				[
					$mdgriffith$elm_ui$Element$text('Get a link to save or share your workspace\'s current state.')
				]),
			title: 'Get Link to Workspace for Bookmarking or Sharing',
			titleIcon: $elm$core$Maybe$Just($lattyware$elm_fontawesome$FontAwesome$Solid$bookmark)
		};
	});
var $author$project$Frontend$Main$FromZipArchiveWorkspaceState = function (a) {
	return {$: 'FromZipArchiveWorkspaceState', a: a};
};
var $author$project$Frontend$Main$ImportFromZipArchiveSelectFile = {$: 'ImportFromZipArchiveSelectFile'};
var $author$project$Frontend$Main$UserInputLoadOrImportTakeWorkspaceStateEvent = function (a) {
	return {$: 'UserInputLoadOrImportTakeWorkspaceStateEvent', a: a};
};
var $author$project$Frontend$Main$viewLoadOrImportDialogResultElement = F3(
	function (elementToDisplayFromError, commitEvent, loadCompositionResult) {
		if (loadCompositionResult.$ === 'Err') {
			var loadError = loadCompositionResult.a;
			return elementToDisplayFromError(loadError);
		} else {
			var loadOk = loadCompositionResult.a;
			var _v1 = function () {
				if (loadOk.$ === 'FromZipArchiveWorkspaceState') {
					var fromZip = loadOk.a;
					return _Utils_Tuple2(fromZip.fileTree, fromZip.compositionIdCache);
				} else {
					var fromGit = loadOk.a;
					return _Utils_Tuple2(fromGit.fileTree, fromGit.compositionIdCache);
				}
			}();
			var fileTree = _v1.a;
			var compositionIdCache = _v1.b;
			return A2(
				$mdgriffith$elm_ui$Element$column,
				_List_fromArray(
					[
						$mdgriffith$elm_ui$Element$spacing(($author$project$Frontend$Main$defaultFontSize / 2) | 0)
					]),
				_List_fromArray(
					[
						A2(
						$mdgriffith$elm_ui$Element$paragraph,
						_List_Nil,
						_List_fromArray(
							[
								$mdgriffith$elm_ui$Element$text(
								'Loaded composition ' + (compositionIdCache + (' containing ' + ($elm$core$String$fromInt(
									$elm$core$List$length(
										$author$project$FileTree$flatListOfBlobsFromFileTreeNode(fileTree))) + ' files:'))))
							])),
						A2(
						$mdgriffith$elm_ui$Element$el,
						_List_fromArray(
							[
								$mdgriffith$elm_ui$Element$scrollbars,
								$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
								$mdgriffith$elm_ui$Element$height(
								$mdgriffith$elm_ui$Element$px(200)),
								$mdgriffith$elm_ui$Element$padding($author$project$Frontend$Main$defaultFontSize),
								$mdgriffith$elm_ui$Element$Border$width(1),
								$mdgriffith$elm_ui$Element$Border$color(
								A4($mdgriffith$elm_ui$Element$rgba, 1, 1, 1, 0.5))
							]),
						A2(
							$author$project$Frontend$Main$viewFileTree,
							{
								iconFromFileName: $author$project$Frontend$Visuals$iconFromFileName,
								selectEventFromNode: $elm$core$Basics$always(
									$elm$core$Basics$always($elm$core$Maybe$Nothing))
							},
							$author$project$Frontend$Main$sortFileTreeForExplorerView(fileTree))),
						A2(
						$mdgriffith$elm_ui$Element$el,
						_List_fromArray(
							[$mdgriffith$elm_ui$Element$centerX]),
						$author$project$Frontend$Main$buttonElement(
							{
								label: $mdgriffith$elm_ui$Element$text('Set these files as workspace state'),
								onPress: $elm$core$Maybe$Just(
									commitEvent(loadOk))
							}))
					]));
		}
	});
var $author$project$Frontend$Main$viewImportFromZipArchiveDialog = function (dialogState) {
	var selectFileButton = A2(
		$mdgriffith$elm_ui$Element$el,
		_List_fromArray(
			[$mdgriffith$elm_ui$Element$centerX]),
		$author$project$Frontend$Main$buttonElement(
			{
				label: $mdgriffith$elm_ui$Element$text('Select zip archive file'),
				onPress: $elm$core$Maybe$Just(
					$author$project$Frontend$Main$UserInputImportWorkspaceFromZipArchive($author$project$Frontend$Main$ImportFromZipArchiveSelectFile))
			}));
	var resultElement = A2(
		$elm$core$Maybe$withDefault,
		$mdgriffith$elm_ui$Element$none,
		A2(
			$elm$core$Maybe$map,
			A2(
				$elm$core$Basics$composeR,
				$elm$core$Result$map($author$project$Frontend$Main$FromZipArchiveWorkspaceState),
				A2($author$project$Frontend$Main$viewLoadOrImportDialogResultElement, $author$project$Frontend$Main$dialogErrorElementFromDescription, $author$project$Frontend$Main$UserInputLoadOrImportTakeWorkspaceStateEvent)),
			dialogState.loadCompositionResult));
	return {
		contentElement: A2(
			$mdgriffith$elm_ui$Element$column,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
					$mdgriffith$elm_ui$Element$spacing($author$project$Frontend$Main$defaultFontSize)
				]),
			_List_fromArray(
				[selectFileButton, resultElement])),
		guideParagraphItems: _List_fromArray(
			[
				$mdgriffith$elm_ui$Element$text('Load workspace files from a zip archive. Here you can select a zip archive file from your system to load as the workspace state.')
			]),
		title: 'Import Workspace from Zip Archive',
		titleIcon: $elm$core$Maybe$Just($lattyware$elm_fontawesome$FontAwesome$Solid$fileImport)
	};
};
var $author$project$Frontend$Main$FromGitWorkspaceState = function (a) {
	return {$: 'FromGitWorkspaceState', a: a};
};
var $author$project$Frontend$Main$LoadFromGitBeginRequestEvent = function (a) {
	return {$: 'LoadFromGitBeginRequestEvent', a: a};
};
var $author$project$Frontend$Main$LoadFromGitEnterUrlEvent = function (a) {
	return {$: 'LoadFromGitEnterUrlEvent', a: a};
};
var $author$project$Frontend$Main$UserInputLoadFromGit = function (a) {
	return {$: 'UserInputLoadFromGit', a: a};
};
var $author$project$Frontend$Main$elementTransparent = function (makeTransparent) {
	return $mdgriffith$elm_ui$Element$htmlAttribute(
		A2(
			$elm$html$Html$Attributes$style,
			'visibility',
			makeTransparent ? 'hidden' : 'inherit'));
};
var $mdgriffith$elm_ui$Element$Input$Above = {$: 'Above'};
var $mdgriffith$elm_ui$Element$Input$Label = F3(
	function (a, b, c) {
		return {$: 'Label', a: a, b: b, c: c};
	});
var $mdgriffith$elm_ui$Element$Input$labelAbove = $mdgriffith$elm_ui$Element$Input$Label($mdgriffith$elm_ui$Element$Input$Above);
var $author$project$Frontend$Main$onKeyDownEnter = function (msg) {
	return $mdgriffith$elm_ui$Element$htmlAttribute(
		A2(
			$elm$html$Html$Events$on,
			'keydown',
			A2(
				$elm$json$Json$Decode$andThen,
				function (key) {
					return (key === 'Enter') ? $elm$json$Json$Decode$succeed(msg) : $elm$json$Json$Decode$fail('Not the enter key');
				},
				A2($elm$json$Json$Decode$field, 'key', $elm$json$Json$Decode$string))));
};
var $mdgriffith$elm_ui$Element$Input$Placeholder = F2(
	function (a, b) {
		return {$: 'Placeholder', a: a, b: b};
	});
var $mdgriffith$elm_ui$Element$Input$placeholder = $mdgriffith$elm_ui$Element$Input$Placeholder;
var $mdgriffith$elm_ui$Element$Input$TextInputNode = function (a) {
	return {$: 'TextInputNode', a: a};
};
var $mdgriffith$elm_ui$Element$Input$TextArea = {$: 'TextArea'};
var $mdgriffith$elm_ui$Internal$Model$LivePolite = {$: 'LivePolite'};
var $mdgriffith$elm_ui$Element$Region$announce = $mdgriffith$elm_ui$Internal$Model$Describe($mdgriffith$elm_ui$Internal$Model$LivePolite);
var $mdgriffith$elm_ui$Element$Input$applyLabel = F3(
	function (attrs, label, input) {
		if (label.$ === 'HiddenLabel') {
			var labelText = label.a;
			return A4(
				$mdgriffith$elm_ui$Internal$Model$element,
				$mdgriffith$elm_ui$Internal$Model$asColumn,
				$mdgriffith$elm_ui$Internal$Model$NodeName('label'),
				attrs,
				$mdgriffith$elm_ui$Internal$Model$Unkeyed(
					_List_fromArray(
						[input])));
		} else {
			var position = label.a;
			var labelAttrs = label.b;
			var labelChild = label.c;
			var labelElement = A4(
				$mdgriffith$elm_ui$Internal$Model$element,
				$mdgriffith$elm_ui$Internal$Model$asEl,
				$mdgriffith$elm_ui$Internal$Model$div,
				labelAttrs,
				$mdgriffith$elm_ui$Internal$Model$Unkeyed(
					_List_fromArray(
						[labelChild])));
			switch (position.$) {
				case 'Above':
					return A4(
						$mdgriffith$elm_ui$Internal$Model$element,
						$mdgriffith$elm_ui$Internal$Model$asColumn,
						$mdgriffith$elm_ui$Internal$Model$NodeName('label'),
						A2(
							$elm$core$List$cons,
							$mdgriffith$elm_ui$Internal$Model$htmlClass($mdgriffith$elm_ui$Internal$Style$classes.inputLabel),
							attrs),
						$mdgriffith$elm_ui$Internal$Model$Unkeyed(
							_List_fromArray(
								[labelElement, input])));
				case 'Below':
					return A4(
						$mdgriffith$elm_ui$Internal$Model$element,
						$mdgriffith$elm_ui$Internal$Model$asColumn,
						$mdgriffith$elm_ui$Internal$Model$NodeName('label'),
						A2(
							$elm$core$List$cons,
							$mdgriffith$elm_ui$Internal$Model$htmlClass($mdgriffith$elm_ui$Internal$Style$classes.inputLabel),
							attrs),
						$mdgriffith$elm_ui$Internal$Model$Unkeyed(
							_List_fromArray(
								[input, labelElement])));
				case 'OnRight':
					return A4(
						$mdgriffith$elm_ui$Internal$Model$element,
						$mdgriffith$elm_ui$Internal$Model$asRow,
						$mdgriffith$elm_ui$Internal$Model$NodeName('label'),
						A2(
							$elm$core$List$cons,
							$mdgriffith$elm_ui$Internal$Model$htmlClass($mdgriffith$elm_ui$Internal$Style$classes.inputLabel),
							attrs),
						$mdgriffith$elm_ui$Internal$Model$Unkeyed(
							_List_fromArray(
								[input, labelElement])));
				default:
					return A4(
						$mdgriffith$elm_ui$Internal$Model$element,
						$mdgriffith$elm_ui$Internal$Model$asRow,
						$mdgriffith$elm_ui$Internal$Model$NodeName('label'),
						A2(
							$elm$core$List$cons,
							$mdgriffith$elm_ui$Internal$Model$htmlClass($mdgriffith$elm_ui$Internal$Style$classes.inputLabel),
							attrs),
						$mdgriffith$elm_ui$Internal$Model$Unkeyed(
							_List_fromArray(
								[labelElement, input])));
			}
		}
	});
var $mdgriffith$elm_ui$Element$Input$autofill = A2(
	$elm$core$Basics$composeL,
	$mdgriffith$elm_ui$Internal$Model$Attr,
	$elm$html$Html$Attributes$attribute('autocomplete'));
var $mdgriffith$elm_ui$Internal$Model$Behind = {$: 'Behind'};
var $mdgriffith$elm_ui$Element$behindContent = function (element) {
	return A2($mdgriffith$elm_ui$Element$createNearby, $mdgriffith$elm_ui$Internal$Model$Behind, element);
};
var $mdgriffith$elm_ui$Internal$Model$MoveY = function (a) {
	return {$: 'MoveY', a: a};
};
var $mdgriffith$elm_ui$Internal$Flag$moveY = $mdgriffith$elm_ui$Internal$Flag$flag(26);
var $mdgriffith$elm_ui$Element$moveUp = function (y) {
	return A2(
		$mdgriffith$elm_ui$Internal$Model$TransformComponent,
		$mdgriffith$elm_ui$Internal$Flag$moveY,
		$mdgriffith$elm_ui$Internal$Model$MoveY(-y));
};
var $mdgriffith$elm_ui$Element$Input$calcMoveToCompensateForPadding = function (attrs) {
	var gatherSpacing = F2(
		function (attr, found) {
			if ((attr.$ === 'StyleClass') && (attr.b.$ === 'SpacingStyle')) {
				var _v2 = attr.b;
				var x = _v2.b;
				var y = _v2.c;
				if (found.$ === 'Nothing') {
					return $elm$core$Maybe$Just(y);
				} else {
					return found;
				}
			} else {
				return found;
			}
		});
	var _v0 = A3($elm$core$List$foldr, gatherSpacing, $elm$core$Maybe$Nothing, attrs);
	if (_v0.$ === 'Nothing') {
		return $mdgriffith$elm_ui$Internal$Model$NoAttribute;
	} else {
		var vSpace = _v0.a;
		return $mdgriffith$elm_ui$Element$moveUp(
			$elm$core$Basics$floor(vSpace / 2));
	}
};
var $mdgriffith$elm_ui$Element$Input$darkGrey = A3($mdgriffith$elm_ui$Element$rgb, 186 / 255, 189 / 255, 182 / 255);
var $mdgriffith$elm_ui$Element$Input$defaultTextPadding = A2($mdgriffith$elm_ui$Element$paddingXY, 12, 12);
var $mdgriffith$elm_ui$Element$Input$white = A3($mdgriffith$elm_ui$Element$rgb, 1, 1, 1);
var $mdgriffith$elm_ui$Element$Input$defaultTextBoxStyle = _List_fromArray(
	[
		$mdgriffith$elm_ui$Element$Input$defaultTextPadding,
		$mdgriffith$elm_ui$Element$Border$rounded(3),
		$mdgriffith$elm_ui$Element$Border$color($mdgriffith$elm_ui$Element$Input$darkGrey),
		$mdgriffith$elm_ui$Element$Background$color($mdgriffith$elm_ui$Element$Input$white),
		$mdgriffith$elm_ui$Element$Border$width(1),
		$mdgriffith$elm_ui$Element$spacing(5),
		$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
		$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$shrink)
	]);
var $mdgriffith$elm_ui$Element$Input$getHeight = function (attr) {
	if (attr.$ === 'Height') {
		var h = attr.a;
		return $elm$core$Maybe$Just(h);
	} else {
		return $elm$core$Maybe$Nothing;
	}
};
var $mdgriffith$elm_ui$Internal$Model$Label = function (a) {
	return {$: 'Label', a: a};
};
var $mdgriffith$elm_ui$Element$Input$hiddenLabelAttribute = function (label) {
	if (label.$ === 'HiddenLabel') {
		var textLabel = label.a;
		return $mdgriffith$elm_ui$Internal$Model$Describe(
			$mdgriffith$elm_ui$Internal$Model$Label(textLabel));
	} else {
		return $mdgriffith$elm_ui$Internal$Model$NoAttribute;
	}
};
var $mdgriffith$elm_ui$Element$Input$isConstrained = function (len) {
	isConstrained:
	while (true) {
		switch (len.$) {
			case 'Content':
				return false;
			case 'Px':
				return true;
			case 'Fill':
				return true;
			case 'Min':
				var l = len.b;
				var $temp$len = l;
				len = $temp$len;
				continue isConstrained;
			default:
				var l = len.b;
				return true;
		}
	}
};
var $mdgriffith$elm_ui$Element$Input$isHiddenLabel = function (label) {
	if (label.$ === 'HiddenLabel') {
		return true;
	} else {
		return false;
	}
};
var $mdgriffith$elm_ui$Element$Input$isStacked = function (label) {
	if (label.$ === 'Label') {
		var loc = label.a;
		switch (loc.$) {
			case 'OnRight':
				return false;
			case 'OnLeft':
				return false;
			case 'Above':
				return true;
			default:
				return true;
		}
	} else {
		return true;
	}
};
var $mdgriffith$elm_ui$Element$Input$negateBox = function (box) {
	return {bottom: -box.bottom, left: -box.left, right: -box.right, top: -box.top};
};
var $elm$html$Html$Events$alwaysStop = function (x) {
	return _Utils_Tuple2(x, true);
};
var $elm$virtual_dom$VirtualDom$MayStopPropagation = function (a) {
	return {$: 'MayStopPropagation', a: a};
};
var $elm$html$Html$Events$stopPropagationOn = F2(
	function (event, decoder) {
		return A2(
			$elm$virtual_dom$VirtualDom$on,
			event,
			$elm$virtual_dom$VirtualDom$MayStopPropagation(decoder));
	});
var $elm$json$Json$Decode$at = F2(
	function (fields, decoder) {
		return A3($elm$core$List$foldr, $elm$json$Json$Decode$field, decoder, fields);
	});
var $elm$html$Html$Events$targetValue = A2(
	$elm$json$Json$Decode$at,
	_List_fromArray(
		['target', 'value']),
	$elm$json$Json$Decode$string);
var $elm$html$Html$Events$onInput = function (tagger) {
	return A2(
		$elm$html$Html$Events$stopPropagationOn,
		'input',
		A2(
			$elm$json$Json$Decode$map,
			$elm$html$Html$Events$alwaysStop,
			A2($elm$json$Json$Decode$map, tagger, $elm$html$Html$Events$targetValue)));
};
var $mdgriffith$elm_ui$Element$Input$isFill = function (len) {
	isFill:
	while (true) {
		switch (len.$) {
			case 'Fill':
				return true;
			case 'Content':
				return false;
			case 'Px':
				return false;
			case 'Min':
				var l = len.b;
				var $temp$len = l;
				len = $temp$len;
				continue isFill;
			default:
				var l = len.b;
				var $temp$len = l;
				len = $temp$len;
				continue isFill;
		}
	}
};
var $mdgriffith$elm_ui$Element$Input$isPixel = function (len) {
	isPixel:
	while (true) {
		switch (len.$) {
			case 'Content':
				return false;
			case 'Px':
				return true;
			case 'Fill':
				return false;
			case 'Min':
				var l = len.b;
				var $temp$len = l;
				len = $temp$len;
				continue isPixel;
			default:
				var l = len.b;
				var $temp$len = l;
				len = $temp$len;
				continue isPixel;
		}
	}
};
var $mdgriffith$elm_ui$Internal$Model$paddingNameFloat = F4(
	function (top, right, bottom, left) {
		return 'pad-' + ($mdgriffith$elm_ui$Internal$Model$floatClass(top) + ('-' + ($mdgriffith$elm_ui$Internal$Model$floatClass(right) + ('-' + ($mdgriffith$elm_ui$Internal$Model$floatClass(bottom) + ('-' + $mdgriffith$elm_ui$Internal$Model$floatClass(left)))))));
	});
var $mdgriffith$elm_ui$Element$Input$redistributeOver = F4(
	function (isMultiline, stacked, attr, els) {
		switch (attr.$) {
			case 'Nearby':
				return _Utils_update(
					els,
					{
						parent: A2($elm$core$List$cons, attr, els.parent)
					});
			case 'Width':
				var width = attr.a;
				return $mdgriffith$elm_ui$Element$Input$isFill(width) ? _Utils_update(
					els,
					{
						fullParent: A2($elm$core$List$cons, attr, els.fullParent),
						input: A2($elm$core$List$cons, attr, els.input),
						parent: A2($elm$core$List$cons, attr, els.parent)
					}) : (stacked ? _Utils_update(
					els,
					{
						fullParent: A2($elm$core$List$cons, attr, els.fullParent)
					}) : _Utils_update(
					els,
					{
						parent: A2($elm$core$List$cons, attr, els.parent)
					}));
			case 'Height':
				var height = attr.a;
				return (!stacked) ? _Utils_update(
					els,
					{
						fullParent: A2($elm$core$List$cons, attr, els.fullParent),
						parent: A2($elm$core$List$cons, attr, els.parent)
					}) : ($mdgriffith$elm_ui$Element$Input$isFill(height) ? _Utils_update(
					els,
					{
						fullParent: A2($elm$core$List$cons, attr, els.fullParent),
						parent: A2($elm$core$List$cons, attr, els.parent)
					}) : ($mdgriffith$elm_ui$Element$Input$isPixel(height) ? _Utils_update(
					els,
					{
						parent: A2($elm$core$List$cons, attr, els.parent)
					}) : _Utils_update(
					els,
					{
						parent: A2($elm$core$List$cons, attr, els.parent)
					})));
			case 'AlignX':
				return _Utils_update(
					els,
					{
						fullParent: A2($elm$core$List$cons, attr, els.fullParent)
					});
			case 'AlignY':
				return _Utils_update(
					els,
					{
						fullParent: A2($elm$core$List$cons, attr, els.fullParent)
					});
			case 'StyleClass':
				switch (attr.b.$) {
					case 'SpacingStyle':
						var _v1 = attr.b;
						return _Utils_update(
							els,
							{
								fullParent: A2($elm$core$List$cons, attr, els.fullParent),
								input: A2($elm$core$List$cons, attr, els.input),
								parent: A2($elm$core$List$cons, attr, els.parent),
								wrapper: A2($elm$core$List$cons, attr, els.wrapper)
							});
					case 'PaddingStyle':
						var cls = attr.a;
						var _v2 = attr.b;
						var pad = _v2.a;
						var t = _v2.b;
						var r = _v2.c;
						var b = _v2.d;
						var l = _v2.e;
						if (isMultiline) {
							return _Utils_update(
								els,
								{
									cover: A2($elm$core$List$cons, attr, els.cover),
									parent: A2($elm$core$List$cons, attr, els.parent)
								});
						} else {
							var newTop = t - A2($elm$core$Basics$min, t, b);
							var newLineHeight = $mdgriffith$elm_ui$Element$htmlAttribute(
								A2(
									$elm$html$Html$Attributes$style,
									'line-height',
									'calc(1.0em + ' + ($elm$core$String$fromFloat(
										2 * A2($elm$core$Basics$min, t, b)) + 'px)')));
							var newHeight = $mdgriffith$elm_ui$Element$htmlAttribute(
								A2(
									$elm$html$Html$Attributes$style,
									'height',
									'calc(1.0em + ' + ($elm$core$String$fromFloat(
										2 * A2($elm$core$Basics$min, t, b)) + 'px)')));
							var newBottom = b - A2($elm$core$Basics$min, t, b);
							var reducedVerticalPadding = A2(
								$mdgriffith$elm_ui$Internal$Model$StyleClass,
								$mdgriffith$elm_ui$Internal$Flag$padding,
								A5(
									$mdgriffith$elm_ui$Internal$Model$PaddingStyle,
									A4($mdgriffith$elm_ui$Internal$Model$paddingNameFloat, newTop, r, newBottom, l),
									newTop,
									r,
									newBottom,
									l));
							return _Utils_update(
								els,
								{
									cover: A2($elm$core$List$cons, attr, els.cover),
									input: A2(
										$elm$core$List$cons,
										newHeight,
										A2($elm$core$List$cons, newLineHeight, els.input)),
									parent: A2($elm$core$List$cons, reducedVerticalPadding, els.parent)
								});
						}
					case 'BorderWidth':
						var _v3 = attr.b;
						return _Utils_update(
							els,
							{
								cover: A2($elm$core$List$cons, attr, els.cover),
								parent: A2($elm$core$List$cons, attr, els.parent)
							});
					case 'Transform':
						return _Utils_update(
							els,
							{
								cover: A2($elm$core$List$cons, attr, els.cover),
								parent: A2($elm$core$List$cons, attr, els.parent)
							});
					case 'FontSize':
						return _Utils_update(
							els,
							{
								fullParent: A2($elm$core$List$cons, attr, els.fullParent)
							});
					case 'FontFamily':
						var _v4 = attr.b;
						return _Utils_update(
							els,
							{
								fullParent: A2($elm$core$List$cons, attr, els.fullParent)
							});
					default:
						var flag = attr.a;
						var cls = attr.b;
						return _Utils_update(
							els,
							{
								parent: A2($elm$core$List$cons, attr, els.parent)
							});
				}
			case 'NoAttribute':
				return els;
			case 'Attr':
				var a = attr.a;
				return _Utils_update(
					els,
					{
						input: A2($elm$core$List$cons, attr, els.input)
					});
			case 'Describe':
				return _Utils_update(
					els,
					{
						input: A2($elm$core$List$cons, attr, els.input)
					});
			case 'Class':
				return _Utils_update(
					els,
					{
						parent: A2($elm$core$List$cons, attr, els.parent)
					});
			default:
				return _Utils_update(
					els,
					{
						input: A2($elm$core$List$cons, attr, els.input)
					});
		}
	});
var $mdgriffith$elm_ui$Element$Input$redistribute = F3(
	function (isMultiline, stacked, attrs) {
		return function (redist) {
			return {
				cover: $elm$core$List$reverse(redist.cover),
				fullParent: $elm$core$List$reverse(redist.fullParent),
				input: $elm$core$List$reverse(redist.input),
				parent: $elm$core$List$reverse(redist.parent),
				wrapper: $elm$core$List$reverse(redist.wrapper)
			};
		}(
			A3(
				$elm$core$List$foldl,
				A2($mdgriffith$elm_ui$Element$Input$redistributeOver, isMultiline, stacked),
				{cover: _List_Nil, fullParent: _List_Nil, input: _List_Nil, parent: _List_Nil, wrapper: _List_Nil},
				attrs));
	});
var $mdgriffith$elm_ui$Element$Input$renderBox = function (_v0) {
	var top = _v0.top;
	var right = _v0.right;
	var bottom = _v0.bottom;
	var left = _v0.left;
	return $elm$core$String$fromInt(top) + ('px ' + ($elm$core$String$fromInt(right) + ('px ' + ($elm$core$String$fromInt(bottom) + ('px ' + ($elm$core$String$fromInt(left) + 'px'))))));
};
var $mdgriffith$elm_ui$Element$Input$charcoal = A3($mdgriffith$elm_ui$Element$rgb, 136 / 255, 138 / 255, 133 / 255);
var $mdgriffith$elm_ui$Element$Input$renderPlaceholder = F3(
	function (_v0, forPlaceholder, on) {
		var placeholderAttrs = _v0.a;
		var placeholderEl = _v0.b;
		return A2(
			$mdgriffith$elm_ui$Element$el,
			_Utils_ap(
				forPlaceholder,
				_Utils_ap(
					_List_fromArray(
						[
							$mdgriffith$elm_ui$Element$Font$color($mdgriffith$elm_ui$Element$Input$charcoal),
							$mdgriffith$elm_ui$Internal$Model$htmlClass($mdgriffith$elm_ui$Internal$Style$classes.noTextSelection + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.passPointerEvents)),
							$mdgriffith$elm_ui$Element$clip,
							$mdgriffith$elm_ui$Element$Border$color(
							A4($mdgriffith$elm_ui$Element$rgba, 0, 0, 0, 0)),
							$mdgriffith$elm_ui$Element$Background$color(
							A4($mdgriffith$elm_ui$Element$rgba, 0, 0, 0, 0)),
							$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),
							$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
							$mdgriffith$elm_ui$Element$alpha(
							on ? 1 : 0)
						]),
					placeholderAttrs)),
			placeholderEl);
	});
var $elm$html$Html$span = _VirtualDom_node('span');
var $elm$html$Html$Attributes$spellcheck = $elm$html$Html$Attributes$boolProperty('spellcheck');
var $mdgriffith$elm_ui$Element$Input$spellcheck = A2($elm$core$Basics$composeL, $mdgriffith$elm_ui$Internal$Model$Attr, $elm$html$Html$Attributes$spellcheck);
var $elm$html$Html$Attributes$type_ = $elm$html$Html$Attributes$stringProperty('type');
var $elm$html$Html$Attributes$value = $elm$html$Html$Attributes$stringProperty('value');
var $mdgriffith$elm_ui$Element$Input$value = A2($elm$core$Basics$composeL, $mdgriffith$elm_ui$Internal$Model$Attr, $elm$html$Html$Attributes$value);
var $mdgriffith$elm_ui$Element$Input$textHelper = F3(
	function (textInput, attrs, textOptions) {
		var withDefaults = _Utils_ap($mdgriffith$elm_ui$Element$Input$defaultTextBoxStyle, attrs);
		var redistributed = A3(
			$mdgriffith$elm_ui$Element$Input$redistribute,
			_Utils_eq(textInput.type_, $mdgriffith$elm_ui$Element$Input$TextArea),
			$mdgriffith$elm_ui$Element$Input$isStacked(textOptions.label),
			withDefaults);
		var onlySpacing = function (attr) {
			if ((attr.$ === 'StyleClass') && (attr.b.$ === 'SpacingStyle')) {
				var _v9 = attr.b;
				return true;
			} else {
				return false;
			}
		};
		var heightConstrained = function () {
			var _v7 = textInput.type_;
			if (_v7.$ === 'TextInputNode') {
				var inputType = _v7.a;
				return false;
			} else {
				return A2(
					$elm$core$Maybe$withDefault,
					false,
					A2(
						$elm$core$Maybe$map,
						$mdgriffith$elm_ui$Element$Input$isConstrained,
						$elm$core$List$head(
							$elm$core$List$reverse(
								A2($elm$core$List$filterMap, $mdgriffith$elm_ui$Element$Input$getHeight, withDefaults)))));
			}
		}();
		var getPadding = function (attr) {
			if ((attr.$ === 'StyleClass') && (attr.b.$ === 'PaddingStyle')) {
				var cls = attr.a;
				var _v6 = attr.b;
				var pad = _v6.a;
				var t = _v6.b;
				var r = _v6.c;
				var b = _v6.d;
				var l = _v6.e;
				return $elm$core$Maybe$Just(
					{
						bottom: A2(
							$elm$core$Basics$max,
							0,
							$elm$core$Basics$floor(b - 3)),
						left: A2(
							$elm$core$Basics$max,
							0,
							$elm$core$Basics$floor(l - 3)),
						right: A2(
							$elm$core$Basics$max,
							0,
							$elm$core$Basics$floor(r - 3)),
						top: A2(
							$elm$core$Basics$max,
							0,
							$elm$core$Basics$floor(t - 3))
					});
			} else {
				return $elm$core$Maybe$Nothing;
			}
		};
		var parentPadding = A2(
			$elm$core$Maybe$withDefault,
			{bottom: 0, left: 0, right: 0, top: 0},
			$elm$core$List$head(
				$elm$core$List$reverse(
					A2($elm$core$List$filterMap, getPadding, withDefaults))));
		var inputElement = A4(
			$mdgriffith$elm_ui$Internal$Model$element,
			$mdgriffith$elm_ui$Internal$Model$asEl,
			function () {
				var _v3 = textInput.type_;
				if (_v3.$ === 'TextInputNode') {
					var inputType = _v3.a;
					return $mdgriffith$elm_ui$Internal$Model$NodeName('input');
				} else {
					return $mdgriffith$elm_ui$Internal$Model$NodeName('textarea');
				}
			}(),
			_Utils_ap(
				function () {
					var _v4 = textInput.type_;
					if (_v4.$ === 'TextInputNode') {
						var inputType = _v4.a;
						return _List_fromArray(
							[
								$mdgriffith$elm_ui$Internal$Model$Attr(
								$elm$html$Html$Attributes$type_(inputType)),
								$mdgriffith$elm_ui$Internal$Model$htmlClass($mdgriffith$elm_ui$Internal$Style$classes.inputText)
							]);
					} else {
						return _List_fromArray(
							[
								$mdgriffith$elm_ui$Element$clip,
								$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),
								$mdgriffith$elm_ui$Internal$Model$htmlClass($mdgriffith$elm_ui$Internal$Style$classes.inputMultiline),
								$mdgriffith$elm_ui$Element$Input$calcMoveToCompensateForPadding(withDefaults),
								$mdgriffith$elm_ui$Element$paddingEach(parentPadding),
								$mdgriffith$elm_ui$Internal$Model$Attr(
								A2(
									$elm$html$Html$Attributes$style,
									'margin',
									$mdgriffith$elm_ui$Element$Input$renderBox(
										$mdgriffith$elm_ui$Element$Input$negateBox(parentPadding)))),
								$mdgriffith$elm_ui$Internal$Model$Attr(
								A2($elm$html$Html$Attributes$style, 'box-sizing', 'content-box'))
							]);
					}
				}(),
				_Utils_ap(
					_List_fromArray(
						[
							$mdgriffith$elm_ui$Element$Input$value(textOptions.text),
							$mdgriffith$elm_ui$Internal$Model$Attr(
							$elm$html$Html$Events$onInput(textOptions.onChange)),
							$mdgriffith$elm_ui$Element$Input$hiddenLabelAttribute(textOptions.label),
							$mdgriffith$elm_ui$Element$Input$spellcheck(textInput.spellchecked),
							A2(
							$elm$core$Maybe$withDefault,
							$mdgriffith$elm_ui$Internal$Model$NoAttribute,
							A2($elm$core$Maybe$map, $mdgriffith$elm_ui$Element$Input$autofill, textInput.autofill))
						]),
					redistributed.input)),
			$mdgriffith$elm_ui$Internal$Model$Unkeyed(_List_Nil));
		var wrappedInput = function () {
			var _v0 = textInput.type_;
			if (_v0.$ === 'TextArea') {
				return A4(
					$mdgriffith$elm_ui$Internal$Model$element,
					$mdgriffith$elm_ui$Internal$Model$asEl,
					$mdgriffith$elm_ui$Internal$Model$div,
					_Utils_ap(
						(heightConstrained ? $elm$core$List$cons($mdgriffith$elm_ui$Element$scrollbarY) : $elm$core$Basics$identity)(
							_List_fromArray(
								[
									$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
									A2($elm$core$List$any, $mdgriffith$elm_ui$Element$Input$hasFocusStyle, withDefaults) ? $mdgriffith$elm_ui$Internal$Model$NoAttribute : $mdgriffith$elm_ui$Internal$Model$htmlClass($mdgriffith$elm_ui$Internal$Style$classes.focusedWithin),
									$mdgriffith$elm_ui$Internal$Model$htmlClass($mdgriffith$elm_ui$Internal$Style$classes.inputMultilineWrapper)
								])),
						redistributed.parent),
					$mdgriffith$elm_ui$Internal$Model$Unkeyed(
						_List_fromArray(
							[
								A4(
								$mdgriffith$elm_ui$Internal$Model$element,
								$mdgriffith$elm_ui$Internal$Model$asParagraph,
								$mdgriffith$elm_ui$Internal$Model$div,
								A2(
									$elm$core$List$cons,
									$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
									A2(
										$elm$core$List$cons,
										$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),
										A2(
											$elm$core$List$cons,
											$mdgriffith$elm_ui$Element$inFront(inputElement),
											A2(
												$elm$core$List$cons,
												$mdgriffith$elm_ui$Internal$Model$htmlClass($mdgriffith$elm_ui$Internal$Style$classes.inputMultilineParent),
												redistributed.wrapper)))),
								$mdgriffith$elm_ui$Internal$Model$Unkeyed(
									function () {
										if (textOptions.text === '') {
											var _v1 = textOptions.placeholder;
											if (_v1.$ === 'Nothing') {
												return _List_fromArray(
													[
														$mdgriffith$elm_ui$Element$text('\u00A0')
													]);
											} else {
												var place = _v1.a;
												return _List_fromArray(
													[
														A3($mdgriffith$elm_ui$Element$Input$renderPlaceholder, place, _List_Nil, textOptions.text === '')
													]);
											}
										} else {
											return _List_fromArray(
												[
													$mdgriffith$elm_ui$Internal$Model$unstyled(
													A2(
														$elm$html$Html$span,
														_List_fromArray(
															[
																$elm$html$Html$Attributes$class($mdgriffith$elm_ui$Internal$Style$classes.inputMultilineFiller)
															]),
														_List_fromArray(
															[
																$elm$html$Html$text(textOptions.text + '\u00A0')
															])))
												]);
										}
									}()))
							])));
			} else {
				var inputType = _v0.a;
				return A4(
					$mdgriffith$elm_ui$Internal$Model$element,
					$mdgriffith$elm_ui$Internal$Model$asEl,
					$mdgriffith$elm_ui$Internal$Model$div,
					A2(
						$elm$core$List$cons,
						$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
						A2(
							$elm$core$List$cons,
							A2($elm$core$List$any, $mdgriffith$elm_ui$Element$Input$hasFocusStyle, withDefaults) ? $mdgriffith$elm_ui$Internal$Model$NoAttribute : $mdgriffith$elm_ui$Internal$Model$htmlClass($mdgriffith$elm_ui$Internal$Style$classes.focusedWithin),
							$elm$core$List$concat(
								_List_fromArray(
									[
										redistributed.parent,
										function () {
										var _v2 = textOptions.placeholder;
										if (_v2.$ === 'Nothing') {
											return _List_Nil;
										} else {
											var place = _v2.a;
											return _List_fromArray(
												[
													$mdgriffith$elm_ui$Element$behindContent(
													A3($mdgriffith$elm_ui$Element$Input$renderPlaceholder, place, redistributed.cover, textOptions.text === ''))
												]);
										}
									}()
									])))),
					$mdgriffith$elm_ui$Internal$Model$Unkeyed(
						_List_fromArray(
							[inputElement])));
			}
		}();
		return A3(
			$mdgriffith$elm_ui$Element$Input$applyLabel,
			A2(
				$elm$core$List$cons,
				A2($mdgriffith$elm_ui$Internal$Model$Class, $mdgriffith$elm_ui$Internal$Flag$cursor, $mdgriffith$elm_ui$Internal$Style$classes.cursorText),
				A2(
					$elm$core$List$cons,
					$mdgriffith$elm_ui$Element$Input$isHiddenLabel(textOptions.label) ? $mdgriffith$elm_ui$Internal$Model$NoAttribute : $mdgriffith$elm_ui$Element$spacing(5),
					A2($elm$core$List$cons, $mdgriffith$elm_ui$Element$Region$announce, redistributed.fullParent))),
			textOptions.label,
			wrappedInput);
	});
var $mdgriffith$elm_ui$Element$Input$text = $mdgriffith$elm_ui$Element$Input$textHelper(
	{
		autofill: $elm$core$Maybe$Nothing,
		spellchecked: false,
		type_: $mdgriffith$elm_ui$Element$Input$TextInputNode('text')
	});
var $author$project$Frontend$Main$viewLoadFromGitDialog = function (dialogState) {
	var userInputBeginLoadingDialogEvent = $author$project$Frontend$Main$LoadFromGitBeginRequestEvent(
		{urlIntoGitRepository: dialogState.urlIntoGitRepository});
	var userInputBeginLoadingEvent = $author$project$Frontend$Main$UserInputLoadFromGit(userInputBeginLoadingDialogEvent);
	var userInputBeginLoadingCouldHaveEffect = !_Utils_eq(
		A3(
			$author$project$Frontend$Main$updateForUserInputLoadFromGit,
			{
				time: $elm$time$Time$millisToPosix(0)
			},
			userInputBeginLoadingDialogEvent,
			dialogState),
		_Utils_Tuple2(dialogState, $elm$core$Platform$Cmd$none));
	var urlInputElement = A2(
		$mdgriffith$elm_ui$Element$Input$text,
		_List_fromArray(
			[
				$mdgriffith$elm_ui$Element$Background$color($author$project$Frontend$Main$backgroundColor),
				$author$project$Frontend$Main$onKeyDownEnter(userInputBeginLoadingEvent),
				$mdgriffith$elm_ui$Element$htmlAttribute(
				$elm$html$Html$Attributes$id($author$project$Frontend$Main$inputUrlElementId))
			]),
		{
			label: A2(
				$mdgriffith$elm_ui$Element$Input$labelAbove,
				_List_Nil,
				$mdgriffith$elm_ui$Element$text('URL to tree in git repository')),
			onChange: function (url) {
				return $author$project$Frontend$Main$UserInputLoadFromGit(
					$author$project$Frontend$Main$LoadFromGitEnterUrlEvent(
						{urlIntoGitRepository: url}));
			},
			placeholder: $elm$core$Maybe$Just(
				A2(
					$mdgriffith$elm_ui$Element$Input$placeholder,
					_List_Nil,
					$mdgriffith$elm_ui$Element$text('URL to tree in git repository'))),
			text: dialogState.urlIntoGitRepository
		});
	var sendRequestButton = $author$project$Frontend$Main$buttonElement(
		{
			label: $mdgriffith$elm_ui$Element$text('Begin Loading'),
			onPress: $elm$core$Maybe$Just(userInputBeginLoadingEvent)
		});
	var resultElement = A2(
		$elm$core$Maybe$withDefault,
		$mdgriffith$elm_ui$Element$none,
		A2(
			$elm$core$Maybe$map,
			A2(
				$elm$core$Basics$composeR,
				A2(
					$elm_community$result_extra$Result$Extra$unpack,
					A2($elm$core$Basics$composeR, $author$project$Frontend$Main$describeHttpError, $elm$core$Result$Err),
					$elm$core$Basics$identity),
				A2(
					$elm$core$Basics$composeR,
					$elm$core$Result$mapError(
						$elm$core$String$left(500)),
					A2(
						$elm$core$Basics$composeR,
						$elm$core$Result$map($author$project$Frontend$Main$FromGitWorkspaceState),
						A2($author$project$Frontend$Main$viewLoadOrImportDialogResultElement, $author$project$Frontend$Main$dialogErrorElementFromDescription, $author$project$Frontend$Main$UserInputLoadOrImportTakeWorkspaceStateEvent)))),
			dialogState.loadCompositionResult));
	var inputOrProgressElement = function () {
		var _v0 = dialogState.request;
		if (_v0.$ === 'Nothing') {
			return A2(
				$mdgriffith$elm_ui$Element$column,
				_List_fromArray(
					[
						$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
						$mdgriffith$elm_ui$Element$spacing($author$project$Frontend$Main$defaultFontSize)
					]),
				_List_fromArray(
					[
						urlInputElement,
						A2(
						$mdgriffith$elm_ui$Element$el,
						_List_fromArray(
							[
								$mdgriffith$elm_ui$Element$centerX,
								$author$project$Frontend$Main$elementTransparent(!userInputBeginLoadingCouldHaveEffect)
							]),
						sendRequestButton)
					]));
		} else {
			var request = _v0.a;
			var describeProgress = function () {
				var _v1 = dialogState.loadCompositionResult;
				if (_v1.$ === 'Nothing') {
					return 'in progress...';
				} else {
					if (_v1.a.$ === 'Err') {
						return 'failed';
					} else {
						if (_v1.a.a.$ === 'Err') {
							return 'failed';
						} else {
							return 'completed';
						}
					}
				}
			}();
			return A2(
				$mdgriffith$elm_ui$Element$paragraph,
				_List_Nil,
				_List_fromArray(
					[
						$mdgriffith$elm_ui$Element$text('Loading from '),
						$author$project$Frontend$Main$linkElementFromUrlAndTextLabel(
						{labelText: request.url, url: request.url}),
						$mdgriffith$elm_ui$Element$text(' ' + describeProgress)
					]));
		}
	}();
	var exampleUrl = 'https://github.com/onlinegamemaker/making-online-games/tree/6838f7100dd86c8c8afcfe3efd553f8fa39c77ae/games-program-codes/simple-snake';
	return {
		contentElement: A2(
			$mdgriffith$elm_ui$Element$column,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
					$mdgriffith$elm_ui$Element$spacing($author$project$Frontend$Main$defaultFontSize)
				]),
			_List_fromArray(
				[inputOrProgressElement, resultElement])),
		guideParagraphItems: _List_fromArray(
			[
				$mdgriffith$elm_ui$Element$text('Load workspace files from a public git repository URL. Here is an example of such a URL: '),
				$author$project$Frontend$Main$linkElementFromUrlAndTextLabel(
				{labelText: exampleUrl, url: exampleUrl})
			]),
		title: 'Load Workspace from Git Repository',
		titleIcon: $elm$core$Maybe$Just($lattyware$elm_fontawesome$FontAwesome$Solid$cloudDownloadAlt)
	};
};
var $author$project$Frontend$Main$attributeMonospaceFont = A2($elm$html$Html$Attributes$style, 'font-family', 'monospace, monospace');
var $stil4m$elm_syntax$Elm$Syntax$Comments$encode = $elm$json$Json$Encode$string;
var $stil4m$elm_syntax$Elm$Syntax$Documentation$encode = $elm$json$Json$Encode$string;
var $elm$json$Json$Encode$float = _Json_wrap;
var $stil4m$elm_syntax$Elm$Syntax$Pattern$encode = function (pattern) {
	switch (pattern.$) {
		case 'AllPattern':
			return A2(
				$stil4m$elm_syntax$Elm$Json$Util$encodeTyped,
				'all',
				$elm$json$Json$Encode$object(_List_Nil));
		case 'UnitPattern':
			return A2(
				$stil4m$elm_syntax$Elm$Json$Util$encodeTyped,
				'unit',
				$elm$json$Json$Encode$object(_List_Nil));
		case 'CharPattern':
			var c = pattern.a;
			return A2(
				$stil4m$elm_syntax$Elm$Json$Util$encodeTyped,
				'char',
				$elm$json$Json$Encode$object(
					_List_fromArray(
						[
							_Utils_Tuple2(
							'value',
							$elm$json$Json$Encode$string(
								$elm$core$String$fromChar(c)))
						])));
		case 'StringPattern':
			var v = pattern.a;
			return A2(
				$stil4m$elm_syntax$Elm$Json$Util$encodeTyped,
				'string',
				$elm$json$Json$Encode$object(
					_List_fromArray(
						[
							_Utils_Tuple2(
							'value',
							$elm$json$Json$Encode$string(v))
						])));
		case 'HexPattern':
			var h = pattern.a;
			return A2(
				$stil4m$elm_syntax$Elm$Json$Util$encodeTyped,
				'hex',
				$elm$json$Json$Encode$object(
					_List_fromArray(
						[
							_Utils_Tuple2(
							'value',
							$elm$json$Json$Encode$int(h))
						])));
		case 'IntPattern':
			var i = pattern.a;
			return A2(
				$stil4m$elm_syntax$Elm$Json$Util$encodeTyped,
				'int',
				$elm$json$Json$Encode$object(
					_List_fromArray(
						[
							_Utils_Tuple2(
							'value',
							$elm$json$Json$Encode$int(i))
						])));
		case 'FloatPattern':
			var f = pattern.a;
			return A2(
				$stil4m$elm_syntax$Elm$Json$Util$encodeTyped,
				'float',
				$elm$json$Json$Encode$object(
					_List_fromArray(
						[
							_Utils_Tuple2(
							'value',
							$elm$json$Json$Encode$float(f))
						])));
		case 'TuplePattern':
			var patterns = pattern.a;
			return A2(
				$stil4m$elm_syntax$Elm$Json$Util$encodeTyped,
				'tuple',
				$elm$json$Json$Encode$object(
					_List_fromArray(
						[
							_Utils_Tuple2(
							'value',
							A2(
								$elm$json$Json$Encode$list,
								$stil4m$elm_syntax$Elm$Syntax$Node$encode($stil4m$elm_syntax$Elm$Syntax$Pattern$encode),
								patterns))
						])));
		case 'RecordPattern':
			var pointers = pattern.a;
			return A2(
				$stil4m$elm_syntax$Elm$Json$Util$encodeTyped,
				'record',
				$elm$json$Json$Encode$object(
					_List_fromArray(
						[
							_Utils_Tuple2(
							'value',
							A2(
								$elm$json$Json$Encode$list,
								$stil4m$elm_syntax$Elm$Syntax$Node$encode($elm$json$Json$Encode$string),
								pointers))
						])));
		case 'UnConsPattern':
			var p1 = pattern.a;
			var p2 = pattern.b;
			return A2(
				$stil4m$elm_syntax$Elm$Json$Util$encodeTyped,
				'uncons',
				$elm$json$Json$Encode$object(
					_List_fromArray(
						[
							_Utils_Tuple2(
							'left',
							A2($stil4m$elm_syntax$Elm$Syntax$Node$encode, $stil4m$elm_syntax$Elm$Syntax$Pattern$encode, p1)),
							_Utils_Tuple2(
							'right',
							A2($stil4m$elm_syntax$Elm$Syntax$Node$encode, $stil4m$elm_syntax$Elm$Syntax$Pattern$encode, p2))
						])));
		case 'ListPattern':
			var patterns = pattern.a;
			return A2(
				$stil4m$elm_syntax$Elm$Json$Util$encodeTyped,
				'list',
				$elm$json$Json$Encode$object(
					_List_fromArray(
						[
							_Utils_Tuple2(
							'value',
							A2(
								$elm$json$Json$Encode$list,
								$stil4m$elm_syntax$Elm$Syntax$Node$encode($stil4m$elm_syntax$Elm$Syntax$Pattern$encode),
								patterns))
						])));
		case 'VarPattern':
			var name = pattern.a;
			return A2(
				$stil4m$elm_syntax$Elm$Json$Util$encodeTyped,
				'var',
				$elm$json$Json$Encode$object(
					_List_fromArray(
						[
							_Utils_Tuple2(
							'value',
							$elm$json$Json$Encode$string(name))
						])));
		case 'NamedPattern':
			var qualifiedNameRef = pattern.a;
			var patterns = pattern.b;
			return A2(
				$stil4m$elm_syntax$Elm$Json$Util$encodeTyped,
				'named',
				$elm$json$Json$Encode$object(
					_List_fromArray(
						[
							_Utils_Tuple2(
							'qualified',
							$elm$json$Json$Encode$object(
								_List_fromArray(
									[
										_Utils_Tuple2(
										'moduleName',
										$stil4m$elm_syntax$Elm$Syntax$ModuleName$encode(qualifiedNameRef.moduleName)),
										_Utils_Tuple2(
										'name',
										$elm$json$Json$Encode$string(qualifiedNameRef.name))
									]))),
							_Utils_Tuple2(
							'patterns',
							A2(
								$elm$json$Json$Encode$list,
								$stil4m$elm_syntax$Elm$Syntax$Node$encode($stil4m$elm_syntax$Elm$Syntax$Pattern$encode),
								patterns))
						])));
		case 'AsPattern':
			var destructured = pattern.a;
			var name = pattern.b;
			return A2(
				$stil4m$elm_syntax$Elm$Json$Util$encodeTyped,
				'as',
				$elm$json$Json$Encode$object(
					_List_fromArray(
						[
							_Utils_Tuple2(
							'name',
							A2($stil4m$elm_syntax$Elm$Syntax$Node$encode, $elm$json$Json$Encode$string, name)),
							_Utils_Tuple2(
							'pattern',
							A2($stil4m$elm_syntax$Elm$Syntax$Node$encode, $stil4m$elm_syntax$Elm$Syntax$Pattern$encode, destructured))
						])));
		default:
			var p1 = pattern.a;
			return A2(
				$stil4m$elm_syntax$Elm$Json$Util$encodeTyped,
				'parentisized',
				$elm$json$Json$Encode$object(
					_List_fromArray(
						[
							_Utils_Tuple2(
							'value',
							A2($stil4m$elm_syntax$Elm$Syntax$Node$encode, $stil4m$elm_syntax$Elm$Syntax$Pattern$encode, p1))
						])));
	}
};
var $stil4m$elm_syntax$Elm$Syntax$Signature$encode = function (_v0) {
	var name = _v0.name;
	var typeAnnotation = _v0.typeAnnotation;
	return $elm$json$Json$Encode$object(
		_List_fromArray(
			[
				_Utils_Tuple2(
				'name',
				A2($stil4m$elm_syntax$Elm$Syntax$Node$encode, $elm$json$Json$Encode$string, name)),
				_Utils_Tuple2(
				'typeAnnotation',
				A2($stil4m$elm_syntax$Elm$Syntax$Node$encode, $stil4m$elm_syntax$Elm$Syntax$TypeAnnotation$encode, typeAnnotation))
			]));
};
var $stil4m$elm_syntax$Elm$Syntax$Infix$encodeDirection = function (d) {
	switch (d.$) {
		case 'Left':
			return $elm$json$Json$Encode$string('left');
		case 'Right':
			return $elm$json$Json$Encode$string('right');
		default:
			return $elm$json$Json$Encode$string('non');
	}
};
var $stil4m$elm_syntax$Elm$Syntax$Expression$encode = function (expr) {
	switch (expr.$) {
		case 'UnitExpr':
			return A2($stil4m$elm_syntax$Elm$Json$Util$encodeTyped, 'unit', $elm$json$Json$Encode$null);
		case 'Application':
			var l = expr.a;
			return A2(
				$stil4m$elm_syntax$Elm$Json$Util$encodeTyped,
				'application',
				A2(
					$elm$json$Json$Encode$list,
					$stil4m$elm_syntax$Elm$Syntax$Node$encode($stil4m$elm_syntax$Elm$Syntax$Expression$encode),
					l));
		case 'OperatorApplication':
			var op = expr.a;
			var dir = expr.b;
			var left = expr.c;
			var right = expr.d;
			return A2(
				$stil4m$elm_syntax$Elm$Json$Util$encodeTyped,
				'operatorapplication',
				A4($stil4m$elm_syntax$Elm$Syntax$Expression$encodeOperatorApplication, op, dir, left, right));
		case 'FunctionOrValue':
			var moduleName = expr.a;
			var name = expr.b;
			return A2(
				$stil4m$elm_syntax$Elm$Json$Util$encodeTyped,
				'functionOrValue',
				$elm$json$Json$Encode$object(
					_List_fromArray(
						[
							_Utils_Tuple2(
							'moduleName',
							$stil4m$elm_syntax$Elm$Syntax$ModuleName$encode(moduleName)),
							_Utils_Tuple2(
							'name',
							$elm$json$Json$Encode$string(name))
						])));
		case 'IfBlock':
			var c = expr.a;
			var t = expr.b;
			var e = expr.c;
			return A2(
				$stil4m$elm_syntax$Elm$Json$Util$encodeTyped,
				'ifBlock',
				$elm$json$Json$Encode$object(
					_List_fromArray(
						[
							_Utils_Tuple2(
							'clause',
							A2($stil4m$elm_syntax$Elm$Syntax$Node$encode, $stil4m$elm_syntax$Elm$Syntax$Expression$encode, c)),
							_Utils_Tuple2(
							'then',
							A2($stil4m$elm_syntax$Elm$Syntax$Node$encode, $stil4m$elm_syntax$Elm$Syntax$Expression$encode, t)),
							_Utils_Tuple2(
							'else',
							A2($stil4m$elm_syntax$Elm$Syntax$Node$encode, $stil4m$elm_syntax$Elm$Syntax$Expression$encode, e))
						])));
		case 'PrefixOperator':
			var x = expr.a;
			return A2(
				$stil4m$elm_syntax$Elm$Json$Util$encodeTyped,
				'prefixoperator',
				$elm$json$Json$Encode$string(x));
		case 'Operator':
			var x = expr.a;
			return A2(
				$stil4m$elm_syntax$Elm$Json$Util$encodeTyped,
				'operator',
				$elm$json$Json$Encode$string(x));
		case 'Hex':
			var h = expr.a;
			return A2(
				$stil4m$elm_syntax$Elm$Json$Util$encodeTyped,
				'hex',
				$elm$json$Json$Encode$int(h));
		case 'Integer':
			var x = expr.a;
			return A2(
				$stil4m$elm_syntax$Elm$Json$Util$encodeTyped,
				'integer',
				$elm$json$Json$Encode$int(x));
		case 'Floatable':
			var x = expr.a;
			return A2(
				$stil4m$elm_syntax$Elm$Json$Util$encodeTyped,
				'float',
				$elm$json$Json$Encode$float(x));
		case 'Negation':
			var x = expr.a;
			return A2(
				$stil4m$elm_syntax$Elm$Json$Util$encodeTyped,
				'negation',
				A2($stil4m$elm_syntax$Elm$Syntax$Node$encode, $stil4m$elm_syntax$Elm$Syntax$Expression$encode, x));
		case 'Literal':
			var x = expr.a;
			return A2(
				$stil4m$elm_syntax$Elm$Json$Util$encodeTyped,
				'literal',
				$elm$json$Json$Encode$string(x));
		case 'CharLiteral':
			var c = expr.a;
			return A2(
				$stil4m$elm_syntax$Elm$Json$Util$encodeTyped,
				'charLiteral',
				$elm$json$Json$Encode$string(
					$elm$core$String$fromChar(c)));
		case 'TupledExpression':
			var xs = expr.a;
			return A2(
				$stil4m$elm_syntax$Elm$Json$Util$encodeTyped,
				'tupled',
				A2(
					$elm$json$Json$Encode$list,
					$stil4m$elm_syntax$Elm$Syntax$Node$encode($stil4m$elm_syntax$Elm$Syntax$Expression$encode),
					xs));
		case 'ListExpr':
			var xs = expr.a;
			return A2(
				$stil4m$elm_syntax$Elm$Json$Util$encodeTyped,
				'list',
				A2(
					$elm$json$Json$Encode$list,
					$stil4m$elm_syntax$Elm$Syntax$Node$encode($stil4m$elm_syntax$Elm$Syntax$Expression$encode),
					xs));
		case 'ParenthesizedExpression':
			var x = expr.a;
			return A2(
				$stil4m$elm_syntax$Elm$Json$Util$encodeTyped,
				'parenthesized',
				A2($stil4m$elm_syntax$Elm$Syntax$Node$encode, $stil4m$elm_syntax$Elm$Syntax$Expression$encode, x));
		case 'LetExpression':
			var x = expr.a;
			return A2(
				$stil4m$elm_syntax$Elm$Json$Util$encodeTyped,
				'let',
				$stil4m$elm_syntax$Elm$Syntax$Expression$encodeLetBlock(x));
		case 'CaseExpression':
			var x = expr.a;
			return A2(
				$stil4m$elm_syntax$Elm$Json$Util$encodeTyped,
				'case',
				$stil4m$elm_syntax$Elm$Syntax$Expression$encodeCaseBlock(x));
		case 'LambdaExpression':
			var x = expr.a;
			return A2(
				$stil4m$elm_syntax$Elm$Json$Util$encodeTyped,
				'lambda',
				$stil4m$elm_syntax$Elm$Syntax$Expression$encodeLambda(x));
		case 'RecordAccess':
			var exp = expr.a;
			var name = expr.b;
			return A2(
				$stil4m$elm_syntax$Elm$Json$Util$encodeTyped,
				'recordAccess',
				$elm$json$Json$Encode$object(
					_List_fromArray(
						[
							_Utils_Tuple2(
							'expression',
							A2($stil4m$elm_syntax$Elm$Syntax$Node$encode, $stil4m$elm_syntax$Elm$Syntax$Expression$encode, exp)),
							_Utils_Tuple2(
							'name',
							A2($stil4m$elm_syntax$Elm$Syntax$Node$encode, $elm$json$Json$Encode$string, name))
						])));
		case 'RecordAccessFunction':
			var x = expr.a;
			return A2(
				$stil4m$elm_syntax$Elm$Json$Util$encodeTyped,
				'recordAccessFunction',
				$elm$json$Json$Encode$string(x));
		case 'RecordExpr':
			var xs = expr.a;
			return A2(
				$stil4m$elm_syntax$Elm$Json$Util$encodeTyped,
				'record',
				A2(
					$elm$json$Json$Encode$list,
					$stil4m$elm_syntax$Elm$Syntax$Node$encode($stil4m$elm_syntax$Elm$Syntax$Expression$encodeRecordSetter),
					xs));
		case 'RecordUpdateExpression':
			var name = expr.a;
			var updates = expr.b;
			return A2(
				$stil4m$elm_syntax$Elm$Json$Util$encodeTyped,
				'recordUpdate',
				A2($stil4m$elm_syntax$Elm$Syntax$Expression$encodeRecordUpdate, name, updates));
		default:
			var x = expr.a;
			return A2(
				$stil4m$elm_syntax$Elm$Json$Util$encodeTyped,
				'glsl',
				$elm$json$Json$Encode$string(x));
	}
};
var $stil4m$elm_syntax$Elm$Syntax$Expression$encodeCase = function (_v7) {
	var pattern = _v7.a;
	var expression = _v7.b;
	return $elm$json$Json$Encode$object(
		_List_fromArray(
			[
				_Utils_Tuple2(
				'pattern',
				A2($stil4m$elm_syntax$Elm$Syntax$Node$encode, $stil4m$elm_syntax$Elm$Syntax$Pattern$encode, pattern)),
				_Utils_Tuple2(
				'expression',
				A2($stil4m$elm_syntax$Elm$Syntax$Node$encode, $stil4m$elm_syntax$Elm$Syntax$Expression$encode, expression))
			]));
};
var $stil4m$elm_syntax$Elm$Syntax$Expression$encodeCaseBlock = function (_v6) {
	var expression = _v6.expression;
	var cases = _v6.cases;
	return $elm$json$Json$Encode$object(
		_List_fromArray(
			[
				_Utils_Tuple2(
				'cases',
				A2($elm$json$Json$Encode$list, $stil4m$elm_syntax$Elm$Syntax$Expression$encodeCase, cases)),
				_Utils_Tuple2(
				'expression',
				A2($stil4m$elm_syntax$Elm$Syntax$Node$encode, $stil4m$elm_syntax$Elm$Syntax$Expression$encode, expression))
			]));
};
var $stil4m$elm_syntax$Elm$Syntax$Expression$encodeDestructuring = F2(
	function (pattern, expression) {
		return $elm$json$Json$Encode$object(
			_List_fromArray(
				[
					_Utils_Tuple2(
					'pattern',
					A2($stil4m$elm_syntax$Elm$Syntax$Node$encode, $stil4m$elm_syntax$Elm$Syntax$Pattern$encode, pattern)),
					_Utils_Tuple2(
					'expression',
					A2($stil4m$elm_syntax$Elm$Syntax$Node$encode, $stil4m$elm_syntax$Elm$Syntax$Expression$encode, expression))
				]));
	});
var $stil4m$elm_syntax$Elm$Syntax$Expression$encodeFunction = function (_v5) {
	var documentation = _v5.documentation;
	var signature = _v5.signature;
	var declaration = _v5.declaration;
	return $elm$json$Json$Encode$object(
		_List_fromArray(
			[
				_Utils_Tuple2(
				'documentation',
				A2(
					$elm$core$Maybe$withDefault,
					$elm$json$Json$Encode$null,
					A2(
						$elm$core$Maybe$map,
						$stil4m$elm_syntax$Elm$Syntax$Node$encode($stil4m$elm_syntax$Elm$Syntax$Documentation$encode),
						documentation))),
				_Utils_Tuple2(
				'signature',
				A2(
					$elm$core$Maybe$withDefault,
					$elm$json$Json$Encode$null,
					A2(
						$elm$core$Maybe$map,
						$stil4m$elm_syntax$Elm$Syntax$Node$encode($stil4m$elm_syntax$Elm$Syntax$Signature$encode),
						signature))),
				_Utils_Tuple2(
				'declaration',
				A2($stil4m$elm_syntax$Elm$Syntax$Node$encode, $stil4m$elm_syntax$Elm$Syntax$Expression$encodeFunctionDeclaration, declaration))
			]));
};
var $stil4m$elm_syntax$Elm$Syntax$Expression$encodeFunctionDeclaration = function (_v4) {
	var name = _v4.name;
	var _arguments = _v4._arguments;
	var expression = _v4.expression;
	return $elm$json$Json$Encode$object(
		_List_fromArray(
			[
				_Utils_Tuple2(
				'name',
				A2($stil4m$elm_syntax$Elm$Syntax$Node$encode, $elm$json$Json$Encode$string, name)),
				_Utils_Tuple2(
				'arguments',
				A2(
					$elm$json$Json$Encode$list,
					$stil4m$elm_syntax$Elm$Syntax$Node$encode($stil4m$elm_syntax$Elm$Syntax$Pattern$encode),
					_arguments)),
				_Utils_Tuple2(
				'expression',
				A2($stil4m$elm_syntax$Elm$Syntax$Node$encode, $stil4m$elm_syntax$Elm$Syntax$Expression$encode, expression))
			]));
};
var $stil4m$elm_syntax$Elm$Syntax$Expression$encodeLambda = function (_v3) {
	var args = _v3.args;
	var expression = _v3.expression;
	return $elm$json$Json$Encode$object(
		_List_fromArray(
			[
				_Utils_Tuple2(
				'patterns',
				A2(
					$elm$json$Json$Encode$list,
					$stil4m$elm_syntax$Elm$Syntax$Node$encode($stil4m$elm_syntax$Elm$Syntax$Pattern$encode),
					args)),
				_Utils_Tuple2(
				'expression',
				A2($stil4m$elm_syntax$Elm$Syntax$Node$encode, $stil4m$elm_syntax$Elm$Syntax$Expression$encode, expression))
			]));
};
var $stil4m$elm_syntax$Elm$Syntax$Expression$encodeLetBlock = function (_v2) {
	var declarations = _v2.declarations;
	var expression = _v2.expression;
	return $elm$json$Json$Encode$object(
		_List_fromArray(
			[
				_Utils_Tuple2(
				'declarations',
				A2(
					$elm$json$Json$Encode$list,
					$stil4m$elm_syntax$Elm$Syntax$Node$encode($stil4m$elm_syntax$Elm$Syntax$Expression$encodeLetDeclaration),
					declarations)),
				_Utils_Tuple2(
				'expression',
				A2($stil4m$elm_syntax$Elm$Syntax$Node$encode, $stil4m$elm_syntax$Elm$Syntax$Expression$encode, expression))
			]));
};
var $stil4m$elm_syntax$Elm$Syntax$Expression$encodeLetDeclaration = function (letDeclaration) {
	if (letDeclaration.$ === 'LetFunction') {
		var f = letDeclaration.a;
		return A2(
			$stil4m$elm_syntax$Elm$Json$Util$encodeTyped,
			'function',
			$stil4m$elm_syntax$Elm$Syntax$Expression$encodeFunction(f));
	} else {
		var pattern = letDeclaration.a;
		var expression = letDeclaration.b;
		return A2(
			$stil4m$elm_syntax$Elm$Json$Util$encodeTyped,
			'destructuring',
			A2($stil4m$elm_syntax$Elm$Syntax$Expression$encodeDestructuring, pattern, expression));
	}
};
var $stil4m$elm_syntax$Elm$Syntax$Expression$encodeOperatorApplication = F4(
	function (operator, direction, left, right) {
		return $elm$json$Json$Encode$object(
			_List_fromArray(
				[
					_Utils_Tuple2(
					'operator',
					$elm$json$Json$Encode$string(operator)),
					_Utils_Tuple2(
					'direction',
					$stil4m$elm_syntax$Elm$Syntax$Infix$encodeDirection(direction)),
					_Utils_Tuple2(
					'left',
					A2($stil4m$elm_syntax$Elm$Syntax$Node$encode, $stil4m$elm_syntax$Elm$Syntax$Expression$encode, left)),
					_Utils_Tuple2(
					'right',
					A2($stil4m$elm_syntax$Elm$Syntax$Node$encode, $stil4m$elm_syntax$Elm$Syntax$Expression$encode, right))
				]));
	});
var $stil4m$elm_syntax$Elm$Syntax$Expression$encodeRecordSetter = function (_v0) {
	var field = _v0.a;
	var expression = _v0.b;
	return $elm$json$Json$Encode$object(
		_List_fromArray(
			[
				_Utils_Tuple2(
				'field',
				A2($stil4m$elm_syntax$Elm$Syntax$Node$encode, $elm$json$Json$Encode$string, field)),
				_Utils_Tuple2(
				'expression',
				A2($stil4m$elm_syntax$Elm$Syntax$Node$encode, $stil4m$elm_syntax$Elm$Syntax$Expression$encode, expression))
			]));
};
var $stil4m$elm_syntax$Elm$Syntax$Expression$encodeRecordUpdate = F2(
	function (name, updates) {
		return $elm$json$Json$Encode$object(
			_List_fromArray(
				[
					_Utils_Tuple2(
					'name',
					A2($stil4m$elm_syntax$Elm$Syntax$Node$encode, $elm$json$Json$Encode$string, name)),
					_Utils_Tuple2(
					'updates',
					A2(
						$elm$json$Json$Encode$list,
						$stil4m$elm_syntax$Elm$Syntax$Node$encode($stil4m$elm_syntax$Elm$Syntax$Expression$encodeRecordSetter),
						updates))
				]));
	});
var $stil4m$elm_syntax$Elm$Syntax$Infix$encode = function (inf) {
	return $elm$json$Json$Encode$object(
		_List_fromArray(
			[
				_Utils_Tuple2(
				'direction',
				A2($stil4m$elm_syntax$Elm$Syntax$Node$encode, $stil4m$elm_syntax$Elm$Syntax$Infix$encodeDirection, inf.direction)),
				_Utils_Tuple2(
				'precedence',
				A2($stil4m$elm_syntax$Elm$Syntax$Node$encode, $elm$json$Json$Encode$int, inf.precedence)),
				_Utils_Tuple2(
				'operator',
				A2($stil4m$elm_syntax$Elm$Syntax$Node$encode, $elm$json$Json$Encode$string, inf.operator)),
				_Utils_Tuple2(
				'function',
				A2($stil4m$elm_syntax$Elm$Syntax$Node$encode, $elm$json$Json$Encode$string, inf._function))
			]));
};
var $stil4m$elm_syntax$Elm$Syntax$Type$encodeValueConstructor = function (_v0) {
	var name = _v0.name;
	var _arguments = _v0._arguments;
	return $elm$json$Json$Encode$object(
		_List_fromArray(
			[
				_Utils_Tuple2(
				'name',
				A2($stil4m$elm_syntax$Elm$Syntax$Node$encode, $elm$json$Json$Encode$string, name)),
				_Utils_Tuple2(
				'arguments',
				A2(
					$elm$json$Json$Encode$list,
					$stil4m$elm_syntax$Elm$Syntax$Node$encode($stil4m$elm_syntax$Elm$Syntax$TypeAnnotation$encode),
					_arguments))
			]));
};
var $stil4m$elm_syntax$Elm$Syntax$Type$encode = function (_v0) {
	var documentation = _v0.documentation;
	var name = _v0.name;
	var generics = _v0.generics;
	var constructors = _v0.constructors;
	return $elm$json$Json$Encode$object(
		_List_fromArray(
			[
				_Utils_Tuple2(
				'documentation',
				A2(
					$elm$core$Maybe$withDefault,
					$elm$json$Json$Encode$null,
					A2(
						$elm$core$Maybe$map,
						$stil4m$elm_syntax$Elm$Syntax$Node$encode($stil4m$elm_syntax$Elm$Syntax$Documentation$encode),
						documentation))),
				_Utils_Tuple2(
				'name',
				A2($stil4m$elm_syntax$Elm$Syntax$Node$encode, $elm$json$Json$Encode$string, name)),
				_Utils_Tuple2(
				'generics',
				A2(
					$elm$json$Json$Encode$list,
					$stil4m$elm_syntax$Elm$Syntax$Node$encode($elm$json$Json$Encode$string),
					generics)),
				_Utils_Tuple2(
				'constructors',
				A2(
					$elm$json$Json$Encode$list,
					$stil4m$elm_syntax$Elm$Syntax$Node$encode($stil4m$elm_syntax$Elm$Syntax$Type$encodeValueConstructor),
					constructors))
			]));
};
var $stil4m$elm_syntax$Elm$Syntax$TypeAlias$encode = function (_v0) {
	var documentation = _v0.documentation;
	var name = _v0.name;
	var generics = _v0.generics;
	var typeAnnotation = _v0.typeAnnotation;
	return $elm$json$Json$Encode$object(
		_List_fromArray(
			[
				_Utils_Tuple2(
				'documentation',
				A2(
					$elm$core$Maybe$withDefault,
					$elm$json$Json$Encode$null,
					A2(
						$elm$core$Maybe$map,
						$stil4m$elm_syntax$Elm$Syntax$Node$encode($stil4m$elm_syntax$Elm$Syntax$Documentation$encode),
						documentation))),
				_Utils_Tuple2(
				'name',
				A2($stil4m$elm_syntax$Elm$Syntax$Node$encode, $elm$json$Json$Encode$string, name)),
				_Utils_Tuple2(
				'generics',
				A2(
					$elm$json$Json$Encode$list,
					$stil4m$elm_syntax$Elm$Syntax$Node$encode($elm$json$Json$Encode$string),
					generics)),
				_Utils_Tuple2(
				'typeAnnotation',
				A2($stil4m$elm_syntax$Elm$Syntax$Node$encode, $stil4m$elm_syntax$Elm$Syntax$TypeAnnotation$encode, typeAnnotation))
			]));
};
var $stil4m$elm_syntax$Elm$Syntax$Declaration$encode = function (decl) {
	switch (decl.$) {
		case 'FunctionDeclaration':
			var _function = decl.a;
			return A2(
				$stil4m$elm_syntax$Elm$Json$Util$encodeTyped,
				'function',
				$stil4m$elm_syntax$Elm$Syntax$Expression$encodeFunction(_function));
		case 'AliasDeclaration':
			var typeAlias = decl.a;
			return A2(
				$stil4m$elm_syntax$Elm$Json$Util$encodeTyped,
				'typeAlias',
				$stil4m$elm_syntax$Elm$Syntax$TypeAlias$encode(typeAlias));
		case 'CustomTypeDeclaration':
			var typeDeclaration = decl.a;
			return A2(
				$stil4m$elm_syntax$Elm$Json$Util$encodeTyped,
				'typedecl',
				$stil4m$elm_syntax$Elm$Syntax$Type$encode(typeDeclaration));
		case 'PortDeclaration':
			var sig = decl.a;
			return A2(
				$stil4m$elm_syntax$Elm$Json$Util$encodeTyped,
				'port',
				$stil4m$elm_syntax$Elm$Syntax$Signature$encode(sig));
		case 'InfixDeclaration':
			var inf = decl.a;
			return A2(
				$stil4m$elm_syntax$Elm$Json$Util$encodeTyped,
				'infix',
				$stil4m$elm_syntax$Elm$Syntax$Infix$encode(inf));
		default:
			var pattern = decl.a;
			var expression = decl.b;
			return A2(
				$stil4m$elm_syntax$Elm$Json$Util$encodeTyped,
				'destructuring',
				$elm$json$Json$Encode$object(
					_List_fromArray(
						[
							_Utils_Tuple2(
							'pattern',
							A2($stil4m$elm_syntax$Elm$Syntax$Node$encode, $stil4m$elm_syntax$Elm$Syntax$Pattern$encode, pattern)),
							_Utils_Tuple2(
							'expression',
							A2($stil4m$elm_syntax$Elm$Syntax$Node$encode, $stil4m$elm_syntax$Elm$Syntax$Expression$encode, expression))
						])));
	}
};
var $stil4m$elm_syntax$Elm$Syntax$Exposing$encodeExposedType = function (_v0) {
	var name = _v0.name;
	var open = _v0.open;
	return $elm$json$Json$Encode$object(
		_List_fromArray(
			[
				_Utils_Tuple2(
				'name',
				$elm$json$Json$Encode$string(name)),
				_Utils_Tuple2(
				'open',
				A2(
					$elm$core$Maybe$withDefault,
					$elm$json$Json$Encode$null,
					A2($elm$core$Maybe$map, $stil4m$elm_syntax$Elm$Syntax$Range$encode, open)))
			]));
};
var $stil4m$elm_syntax$Elm$Syntax$Exposing$encodeTopLevelExpose = $stil4m$elm_syntax$Elm$Syntax$Node$encode(
	function (exp) {
		switch (exp.$) {
			case 'InfixExpose':
				var x = exp.a;
				return A2(
					$stil4m$elm_syntax$Elm$Json$Util$encodeTyped,
					'infix',
					$elm$json$Json$Encode$object(
						_List_fromArray(
							[
								_Utils_Tuple2(
								'name',
								$elm$json$Json$Encode$string(x))
							])));
			case 'FunctionExpose':
				var x = exp.a;
				return A2(
					$stil4m$elm_syntax$Elm$Json$Util$encodeTyped,
					'function',
					$elm$json$Json$Encode$object(
						_List_fromArray(
							[
								_Utils_Tuple2(
								'name',
								$elm$json$Json$Encode$string(x))
							])));
			case 'TypeOrAliasExpose':
				var x = exp.a;
				return A2(
					$stil4m$elm_syntax$Elm$Json$Util$encodeTyped,
					'typeOrAlias',
					$elm$json$Json$Encode$object(
						_List_fromArray(
							[
								_Utils_Tuple2(
								'name',
								$elm$json$Json$Encode$string(x))
							])));
			default:
				var exposedType = exp.a;
				return A2(
					$stil4m$elm_syntax$Elm$Json$Util$encodeTyped,
					'typeexpose',
					$stil4m$elm_syntax$Elm$Syntax$Exposing$encodeExposedType(exposedType));
		}
	});
var $stil4m$elm_syntax$Elm$Syntax$Exposing$encode = function (exp) {
	if (exp.$ === 'All') {
		var r = exp.a;
		return A2(
			$stil4m$elm_syntax$Elm$Json$Util$encodeTyped,
			'all',
			$stil4m$elm_syntax$Elm$Syntax$Range$encode(r));
	} else {
		var l = exp.a;
		return A2(
			$stil4m$elm_syntax$Elm$Json$Util$encodeTyped,
			'explicit',
			A2($elm$json$Json$Encode$list, $stil4m$elm_syntax$Elm$Syntax$Exposing$encodeTopLevelExpose, l));
	}
};
var $stil4m$elm_syntax$Elm$Syntax$Import$encode = function (_v0) {
	var moduleName = _v0.moduleName;
	var moduleAlias = _v0.moduleAlias;
	var exposingList = _v0.exposingList;
	return $elm$json$Json$Encode$object(
		_List_fromArray(
			[
				_Utils_Tuple2(
				'moduleName',
				A2($stil4m$elm_syntax$Elm$Syntax$Node$encode, $stil4m$elm_syntax$Elm$Syntax$ModuleName$encode, moduleName)),
				_Utils_Tuple2(
				'moduleAlias',
				A2(
					$elm$core$Maybe$withDefault,
					$elm$json$Json$Encode$null,
					A2(
						$elm$core$Maybe$map,
						$stil4m$elm_syntax$Elm$Syntax$Node$encode($stil4m$elm_syntax$Elm$Syntax$ModuleName$encode),
						moduleAlias))),
				_Utils_Tuple2(
				'exposingList',
				A2(
					$elm$core$Maybe$withDefault,
					$elm$json$Json$Encode$null,
					A2(
						$elm$core$Maybe$map,
						$stil4m$elm_syntax$Elm$Syntax$Node$encode($stil4m$elm_syntax$Elm$Syntax$Exposing$encode),
						exposingList)))
			]));
};
var $stil4m$elm_syntax$Elm$Syntax$Module$encodeDefaultModuleData = function (moduleData) {
	return $elm$json$Json$Encode$object(
		_List_fromArray(
			[
				_Utils_Tuple2(
				'moduleName',
				A2($stil4m$elm_syntax$Elm$Syntax$Node$encode, $stil4m$elm_syntax$Elm$Syntax$ModuleName$encode, moduleData.moduleName)),
				_Utils_Tuple2(
				'exposingList',
				A2($stil4m$elm_syntax$Elm$Syntax$Node$encode, $stil4m$elm_syntax$Elm$Syntax$Exposing$encode, moduleData.exposingList))
			]));
};
var $stil4m$elm_syntax$Elm$Syntax$Module$encodeEffectModuleData = function (moduleData) {
	return $elm$json$Json$Encode$object(
		_List_fromArray(
			[
				_Utils_Tuple2(
				'moduleName',
				A2($stil4m$elm_syntax$Elm$Syntax$Node$encode, $stil4m$elm_syntax$Elm$Syntax$ModuleName$encode, moduleData.moduleName)),
				_Utils_Tuple2(
				'exposingList',
				A2($stil4m$elm_syntax$Elm$Syntax$Node$encode, $stil4m$elm_syntax$Elm$Syntax$Exposing$encode, moduleData.exposingList)),
				_Utils_Tuple2(
				'command',
				A2(
					$elm$core$Maybe$withDefault,
					$elm$json$Json$Encode$null,
					A2(
						$elm$core$Maybe$map,
						$stil4m$elm_syntax$Elm$Syntax$Node$encode($elm$json$Json$Encode$string),
						moduleData.command))),
				_Utils_Tuple2(
				'subscription',
				A2(
					$elm$core$Maybe$withDefault,
					$elm$json$Json$Encode$null,
					A2(
						$elm$core$Maybe$map,
						$stil4m$elm_syntax$Elm$Syntax$Node$encode($elm$json$Json$Encode$string),
						moduleData.subscription)))
			]));
};
var $stil4m$elm_syntax$Elm$Syntax$Module$encode = function (m) {
	switch (m.$) {
		case 'NormalModule':
			var d = m.a;
			return A2(
				$stil4m$elm_syntax$Elm$Json$Util$encodeTyped,
				'normal',
				$stil4m$elm_syntax$Elm$Syntax$Module$encodeDefaultModuleData(d));
		case 'PortModule':
			var d = m.a;
			return A2(
				$stil4m$elm_syntax$Elm$Json$Util$encodeTyped,
				'port',
				$stil4m$elm_syntax$Elm$Syntax$Module$encodeDefaultModuleData(d));
		default:
			var d = m.a;
			return A2(
				$stil4m$elm_syntax$Elm$Json$Util$encodeTyped,
				'effect',
				$stil4m$elm_syntax$Elm$Syntax$Module$encodeEffectModuleData(d));
	}
};
var $stil4m$elm_syntax$Elm$Syntax$File$encode = function (_v0) {
	var moduleDefinition = _v0.moduleDefinition;
	var imports = _v0.imports;
	var declarations = _v0.declarations;
	var comments = _v0.comments;
	return $elm$json$Json$Encode$object(
		_List_fromArray(
			[
				_Utils_Tuple2(
				'moduleDefinition',
				A2($stil4m$elm_syntax$Elm$Syntax$Node$encode, $stil4m$elm_syntax$Elm$Syntax$Module$encode, moduleDefinition)),
				_Utils_Tuple2(
				'imports',
				A2(
					$elm$json$Json$Encode$list,
					$stil4m$elm_syntax$Elm$Syntax$Node$encode($stil4m$elm_syntax$Elm$Syntax$Import$encode),
					imports)),
				_Utils_Tuple2(
				'declarations',
				A2(
					$elm$json$Json$Encode$list,
					$stil4m$elm_syntax$Elm$Syntax$Node$encode($stil4m$elm_syntax$Elm$Syntax$Declaration$encode),
					declarations)),
				_Utils_Tuple2(
				'comments',
				A2(
					$elm$json$Json$Encode$list,
					$stil4m$elm_syntax$Elm$Syntax$Node$encode($stil4m$elm_syntax$Elm$Syntax$Comments$encode),
					comments))
			]));
};
var $mdgriffith$elm_ui$Element$scrollbarX = A2($mdgriffith$elm_ui$Internal$Model$Class, $mdgriffith$elm_ui$Internal$Flag$overflow, $mdgriffith$elm_ui$Internal$Style$classes.scrollbarsX);
var $author$project$Frontend$Main$UserInputSetInspectionOnCompile = function (a) {
	return {$: 'UserInputSetInspectionOnCompile', a: a};
};
var $mdgriffith$elm_ui$Element$Font$bold = A2($mdgriffith$elm_ui$Internal$Model$Class, $mdgriffith$elm_ui$Internal$Flag$fontWeight, $mdgriffith$elm_ui$Internal$Style$classes.bold);
var $author$project$Frontend$Main$compileHtmlDocumentForEmbedding = function (_v0) {
	var htmlFromElmMake = _v0.htmlFromElmMake;
	var script = '\n            <script>\n            document.addEventListener(\'DOMContentLoaded\', function() {\n                document.body.addEventListener(\'click\', function(e) {\n                    if (e.target.tagName === \'A\') {\n                        e.preventDefault();\n                        window.parent.postMessage({\n                            type: \'clicked-link-in-iframe\',\n                            href: e.target.getAttribute(\'href\')\n                        }, \'*\'); // Be mindful of the security implications of \'*\'\n                    }\n                }, false);\n            });\n            </script>\n            ';
	var closingBodyTag = '</body>';
	var newBodyTag = A2(
		$elm$core$String$join,
		'\n',
		_List_fromArray(
			[script, closingBodyTag]));
	return A3($elm$core$String$replace, closingBodyTag, newBodyTag, htmlFromElmMake);
};
var $author$project$Frontend$Main$indentOneLevel = $mdgriffith$elm_ui$Element$el(
	_List_fromArray(
		[
			$mdgriffith$elm_ui$Element$paddingEach(
			{bottom: 0, left: $author$project$Frontend$Main$defaultFontSize, right: 0, top: 0})
		]));
var $lattyware$elm_fontawesome$FontAwesome$Solid$Definitions$magnifyingGlass = A4(
	$lattyware$elm_fontawesome$FontAwesome$IconDef,
	'fas',
	'magnifying-glass',
	_Utils_Tuple2(512, 512),
	_Utils_Tuple2('M416 208c0 45.9-14.9 88.3-40 122.7L502.6 457.4c12.5 12.5 12.5 32.8 0 45.3s-32.8 12.5-45.3 0L330.7 376c-34.4 25.2-76.8 40-122.7 40C93.1 416 0 322.9 0 208S93.1 0 208 0S416 93.1 416 208zM208 352a144 144 0 1 0 0-288 144 144 0 1 0 0 288z', $elm$core$Maybe$Nothing));
var $lattyware$elm_fontawesome$FontAwesome$Solid$magnifyingGlass = $lattyware$elm_fontawesome$FontAwesome$present($lattyware$elm_fontawesome$FontAwesome$Solid$Definitions$magnifyingGlass);
var $lattyware$elm_fontawesome$FontAwesome$Solid$Definitions$triangleExclamation = A4(
	$lattyware$elm_fontawesome$FontAwesome$IconDef,
	'fas',
	'triangle-exclamation',
	_Utils_Tuple2(512, 512),
	_Utils_Tuple2('M256 32c14.2 0 27.3 7.5 34.5 19.8l216 368c7.3 12.4 7.3 27.7 .2 40.1S486.3 480 472 480L40 480c-14.3 0-27.6-7.7-34.7-20.1s-7-27.8 .2-40.1l216-368C228.7 39.5 241.8 32 256 32zm0 128c-13.3 0-24 10.7-24 24l0 112c0 13.3 10.7 24 24 24s24-10.7 24-24l0-112c0-13.3-10.7-24-24-24zm32 224a32 32 0 1 0 -64 0 32 32 0 1 0 64 0z', $elm$core$Maybe$Nothing));
var $lattyware$elm_fontawesome$FontAwesome$Solid$triangleExclamation = $lattyware$elm_fontawesome$FontAwesome$present($lattyware$elm_fontawesome$FontAwesome$Solid$Definitions$triangleExclamation);
var $author$project$Frontend$Main$styledTextFromElmMakeReportMessageListItem = function (elmMakeReportMessageListItem) {
	if (elmMakeReportMessageListItem.$ === 'ElmMakeReportMessageListItemPlain') {
		var text = elmMakeReportMessageListItem.a;
		return {bold: false, color: $elm$core$Maybe$Nothing, string: text, underline: false};
	} else {
		var styled = elmMakeReportMessageListItem.a;
		return styled;
	}
};
var $author$project$Frontend$Main$viewElementFromElmMakeCompileErrorMessage = function () {
	var elementFromStyledTextElement = function (styledTextElement) {
		return A2(
			$elm$html$Html$span,
			_List_fromArray(
				[
					A2(
					$elm$html$Html$Attributes$style,
					'font-weight',
					styledTextElement.bold ? 'bold' : 'inherit'),
					A2(
					$elm$html$Html$Attributes$style,
					'text-decoration',
					styledTextElement.underline ? 'underline' : 'none'),
					A2(
					$elm$html$Html$Attributes$style,
					'color',
					A2($elm$core$Maybe$withDefault, 'inherit', styledTextElement.color))
				]),
			_List_fromArray(
				[
					$elm$html$Html$text(styledTextElement.string)
				]));
	};
	return A2(
		$elm$core$Basics$composeR,
		$elm$core$List$map($author$project$Frontend$Main$styledTextFromElmMakeReportMessageListItem),
		A2(
			$elm$core$Basics$composeR,
			$elm$core$List$map(elementFromStyledTextElement),
			A2(
				$elm$core$Basics$composeR,
				$elm$html$Html$span(
					_List_fromArray(
						[
							A2($elm$html$Html$Attributes$style, 'font-size', '90%'),
							A2($elm$html$Html$Attributes$style, 'filter', 'contrast(0.5) brightness(1.3)')
						])),
				A2(
					$elm$core$Basics$composeR,
					$mdgriffith$elm_ui$Element$html,
					A2(
						$elm$core$Basics$composeR,
						$elm$core$List$singleton,
						$mdgriffith$elm_ui$Element$paragraph(
							_List_fromArray(
								[
									$mdgriffith$elm_ui$Element$htmlAttribute(
									A2($elm$html$Html$Attributes$style, 'white-space', 'pre-wrap')),
									$mdgriffith$elm_ui$Element$htmlAttribute($author$project$Frontend$Main$attributeMonospaceFont)
								])))))));
}();
var $author$project$Frontend$Main$UserInputRevealPositionInEditor = function (a) {
	return {$: 'UserInputRevealPositionInEditor', a: a};
};
var $author$project$Frontend$Main$viewElmMakeErrorLocation = F2(
	function (fileLocation, regionInFile) {
		var _v0 = fileLocation;
		var directoryPath = _v0.a;
		var fileName = _v0.b;
		var filePath = _Utils_ap(
			directoryPath,
			_List_fromArray(
				[fileName]));
		return A2(
			$mdgriffith$elm_ui$Element$el,
			A2(
				$elm$core$List$cons,
				$mdgriffith$elm_ui$Element$Events$onClick(
					$author$project$Frontend$Main$UserInputRevealPositionInEditor(
						{column: regionInFile.start.column, fileLocation: fileLocation, lineNumber: regionInFile.start.line})),
				$author$project$Frontend$Main$elementLinkStyleAttributes),
			$mdgriffith$elm_ui$Element$text(
				A2($elm$core$String$join, '/', filePath) + (' - Line ' + ($elm$core$String$fromInt(regionInFile.start.line) + (', Column ' + $elm$core$String$fromInt(regionInFile.start.column))))));
	});
var $author$project$Frontend$Main$viewElmMakeCompileError = F2(
	function (elmMakeRequest, elmMakeError) {
		return A2(
			$mdgriffith$elm_ui$Element$column,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$spacing($author$project$Frontend$Main$defaultFontSize),
					$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)
				]),
			A2(
				$elm$core$List$map,
				function (elmMakeProblem) {
					var displayPath = A2(
						$author$project$Frontend$Main$filePathFromExistingPathsAndElmMakeReportPathString,
						A2(
							$elm$core$List$map,
							function ($) {
								return $.path;
							},
							elmMakeRequest.files),
						elmMakeError.path);
					var displayPathLocation = function () {
						var _v0 = $elm$core$List$reverse(displayPath);
						if (!_v0.b) {
							return _Utils_Tuple2(_List_Nil, 'error parsing - empty path');
						} else {
							var fileName = _v0.a;
							var directoryPathReversed = _v0.b;
							return _Utils_Tuple2(
								$elm$core$List$reverse(directoryPathReversed),
								fileName);
						}
					}();
					var problemHeadingElement = A2(
						$mdgriffith$elm_ui$Element$column,
						_List_fromArray(
							[
								$mdgriffith$elm_ui$Element$spacing(($author$project$Frontend$Main$defaultFontSize / 2) | 0),
								$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)
							]),
						_List_fromArray(
							[
								A2(
								$mdgriffith$elm_ui$Element$el,
								_List_fromArray(
									[$mdgriffith$elm_ui$Element$Font$bold]),
								$mdgriffith$elm_ui$Element$text(
									$author$project$Frontend$Main$elmEditorProblemDisplayTitleFromReportTitle(elmMakeProblem.title))),
								A2($author$project$Frontend$Main$viewElmMakeErrorLocation, displayPathLocation, elmMakeProblem.region)
							]));
					return A2(
						$mdgriffith$elm_ui$Element$column,
						_List_fromArray(
							[
								$mdgriffith$elm_ui$Element$spacing(($author$project$Frontend$Main$defaultFontSize / 2) | 0),
								$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)
							]),
						_List_fromArray(
							[
								problemHeadingElement,
								$author$project$Frontend$Main$indentOneLevel(
								$author$project$Frontend$Main$viewElementFromElmMakeCompileErrorMessage(elmMakeProblem.message))
							]));
				},
				elmMakeError.problems));
	});
var $author$project$Frontend$Main$viewLoweringCompileError = function (locatedLoweringError) {
	var errorLocation = locatedLoweringError.a;
	var loweringError = locatedLoweringError.b;
	var _v1 = $elm$core$List$reverse(errorLocation.filePath);
	if (!_v1.b) {
		return $mdgriffith$elm_ui$Element$none;
	} else {
		var fileName = _v1.a;
		var directoryPathReversed = _v1.b;
		var locationElement = A2(
			$author$project$Frontend$Main$viewElmMakeErrorLocation,
			_Utils_Tuple2(
				$elm$core$List$reverse(directoryPathReversed),
				fileName),
			$author$project$Frontend$Main$compilationSyntaxRangeAsElmMakeReportRegion(errorLocation.locationInModuleText));
		var errorDescriptionElement = A2(
			$mdgriffith$elm_ui$Element$paragraph,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$htmlAttribute(
					A2($elm$html$Html$Attributes$style, 'white-space', 'pre-wrap')),
					$mdgriffith$elm_ui$Element$htmlAttribute($author$project$Frontend$Main$attributeMonospaceFont)
				]),
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$html(
					$elm$html$Html$text(
						$author$project$Frontend$Main$loweringCompilationErrorDisplayText(loweringError)))
				]));
		return A2(
			$mdgriffith$elm_ui$Element$column,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$spacing(($author$project$Frontend$Main$defaultFontSize / 2) | 0),
					$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)
				]),
			_List_fromArray(
				[locationElement, errorDescriptionElement]));
	}
};
var $author$project$Frontend$Main$viewOutputPaneContentFromCompilationComplete = F4(
	function (workspace, compilation, loweringComplete, elmMakeResult) {
		var outputElementFromPlainText = function (outputText) {
			return A2(
				$mdgriffith$elm_ui$Element$paragraph,
				_List_fromArray(
					[
						$mdgriffith$elm_ui$Element$htmlAttribute(
						A2($elm$html$Html$Attributes$style, 'white-space', 'pre-wrap')),
						$mdgriffith$elm_ui$Element$htmlAttribute($author$project$Frontend$Main$attributeMonospaceFont)
					]),
				_List_fromArray(
					[
						$mdgriffith$elm_ui$Element$html(
						$elm$html$Html$text(outputText))
					]));
		};
		var offerToggleInspection = function () {
			var _v13 = loweringComplete.loweringResult;
			if (_v13.$ === 'Err') {
				return false;
			} else {
				if (elmMakeResult.$ === 'Err') {
					return false;
				} else {
					var elmMakeOk = elmMakeResult.a;
					return !_Utils_eq(elmMakeOk.compiledHtmlDocument, $elm$core$Maybe$Nothing);
				}
			}
		}();
		var elmMakeRequestFromCurrentState = $author$project$Frontend$Main$prepareCompileForFileOpenedInEditor(workspace);
		var elmMakeRequest = compilation.origin.requestFromUser;
		var elmMakeRequestEntryPointFilePathAbs = _Utils_ap(elmMakeRequest.workingDirectoryPath, elmMakeRequest.entryPointFilePathFromWorkingDirectory);
		var elmMakeErrorElement = function (elmMakeError) {
			return A2(
				$mdgriffith$elm_ui$Element$textColumn,
				_List_fromArray(
					[
						$mdgriffith$elm_ui$Element$spacing(4),
						$mdgriffith$elm_ui$Element$padding($author$project$Frontend$Main$defaultFontSize)
					]),
				A2(
					$elm$core$List$map,
					A2(
						$elm$core$Basics$composeR,
						$mdgriffith$elm_ui$Element$text,
						A2(
							$elm$core$Basics$composeR,
							$elm$core$List$singleton,
							$mdgriffith$elm_ui$Element$paragraph(_List_Nil))),
					_Utils_ap(
						_List_fromArray(
							['Error:']),
						$elm$core$String$lines(
							$author$project$Frontend$Main$describeHttpError(elmMakeError)))));
		};
		var elmMakeResultElement = function () {
			if (elmMakeResult.$ === 'Err') {
				var elmMakeError = elmMakeResult.a;
				return elmMakeErrorElement(elmMakeError);
			} else {
				var elmMakeOk = elmMakeResult.a;
				var continueWithProcessOutput = function (_v12) {
					return A2(
						$mdgriffith$elm_ui$Element$column,
						_List_fromArray(
							[
								$mdgriffith$elm_ui$Element$spacing($author$project$Frontend$Main$defaultFontSize * 2),
								$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
								$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),
								$mdgriffith$elm_ui$Element$padding(($author$project$Frontend$Main$defaultFontSize / 2) | 0)
							]),
						A2(
							$elm$core$List$map,
							function (_v11) {
								var channel = _v11.a;
								var outputElement = _v11.b;
								return A2(
									$mdgriffith$elm_ui$Element$column,
									_List_fromArray(
										[
											$mdgriffith$elm_ui$Element$spacing(($author$project$Frontend$Main$defaultFontSize / 2) | 0),
											$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)
										]),
									_List_fromArray(
										[
											A2(
											$mdgriffith$elm_ui$Element$el,
											$author$project$Frontend$Main$headingAttributes(3),
											$mdgriffith$elm_ui$Element$text(channel)),
											$author$project$Frontend$Main$indentOneLevel(outputElement)
										]));
							},
							_List_fromArray(
								[
									((!elmMakeOk.response.reportJsonProcessOutput.exitCode) && $elm$core$String$isEmpty(
									$elm$core$String$trim(elmMakeOk.response.reportJsonProcessOutput.standardError))) ? _Utils_Tuple2(
									'✔ No Errors',
									A2(
										$mdgriffith$elm_ui$Element$paragraph,
										_List_Nil,
										_List_fromArray(
											[
												$mdgriffith$elm_ui$Element$text(
												'Found no errors in module \'' + (A2($elm$core$String$join, '/', elmMakeRequestEntryPointFilePathAbs) + '\''))
											]))) : _Utils_Tuple2(
									'Errors',
									function () {
										var _v10 = elmMakeOk.reportFromJson;
										if (_v10.$ === 'Nothing') {
											return outputElementFromPlainText(elmMakeOk.response.processOutput.standardError);
										} else {
											if (_v10.a.$ === 'Err') {
												var decodeError = _v10.a.a;
												return outputElementFromPlainText('Failed to decode JSON report: ' + decodeError);
											} else {
												if (_v10.a.a.$ === 'CompileErrorsReport') {
													var compileErrors = _v10.a.a.a;
													return A2(
														$mdgriffith$elm_ui$Element$column,
														_List_fromArray(
															[
																$mdgriffith$elm_ui$Element$spacing($author$project$Frontend$Main$defaultFontSize),
																$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)
															]),
														A2(
															$elm$core$List$map,
															$author$project$Frontend$Main$viewElmMakeCompileError(elmMakeRequest),
															compileErrors));
												} else {
													var error = _v10.a.a.a;
													return A2(
														$mdgriffith$elm_ui$Element$column,
														_List_fromArray(
															[
																$mdgriffith$elm_ui$Element$spacing(($author$project$Frontend$Main$defaultFontSize / 2) | 0),
																$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)
															]),
														_List_fromArray(
															[
																A2(
																$mdgriffith$elm_ui$Element$el,
																_List_fromArray(
																	[$mdgriffith$elm_ui$Element$Font$bold]),
																$mdgriffith$elm_ui$Element$text(error.title)),
																$author$project$Frontend$Main$viewElementFromElmMakeCompileErrorMessage(error.message)
															]));
												}
											}
										}
									}()),
									_Utils_Tuple2(
									'Elm make standard output',
									outputElementFromPlainText(elmMakeOk.response.processOutput.standardOutput))
								])));
				};
				var _v8 = elmMakeOk.compiledHtmlDocument;
				if (_v8.$ === 'Nothing') {
					return continueWithProcessOutput(_Utils_Tuple0);
				} else {
					var htmlDocumentFromElmMake = _v8.a;
					var htmlDocumentForEmbedding = $author$project$Frontend$Main$compileHtmlDocumentForEmbedding(
						{htmlFromElmMake: htmlDocumentFromElmMake});
					var _v9 = loweringComplete.loweringResult;
					if (_v9.$ === 'Err') {
						return continueWithProcessOutput(_Utils_Tuple0);
					} else {
						return A2(
							$mdgriffith$elm_ui$Element$el,
							_List_fromArray(
								[
									$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
									$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill)
								]),
							$mdgriffith$elm_ui$Element$html(
								A2(
									$elm$html$Html$iframe,
									_List_fromArray(
										[
											$elm$html$Html$Attributes$srcdoc(htmlDocumentForEmbedding),
											A2($elm$html$Html$Attributes$style, 'height', '98%')
										]),
									_List_Nil)));
					}
				}
			}
		}();
		var elementWithScrollbarY = function (elementsToScroll) {
			return A2(
				$mdgriffith$elm_ui$Element$row,
				_List_fromArray(
					[
						$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
						$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),
						$mdgriffith$elm_ui$Element$clip,
						$mdgriffith$elm_ui$Element$htmlAttribute(
						A2($elm$html$Html$Attributes$style, 'flex-shrink', '1'))
					]),
				_List_fromArray(
					[
						A2(
						$mdgriffith$elm_ui$Element$el,
						_List_fromArray(
							[
								$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
								$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),
								$mdgriffith$elm_ui$Element$scrollbarY
							]),
						elementsToScroll)
					]));
		};
		var currentFileContentIsStillSame = _Utils_eq(
			$elm$core$Maybe$Just(elmMakeRequest.files),
			A2(
				$elm$core$Maybe$map,
				A2(
					$elm$core$Basics$composeR,
					function ($) {
						return $.requestFromUserIdentity;
					},
					function ($) {
						return $.files;
					}),
				elmMakeRequestFromCurrentState));
		var warnAboutOutdatedCompilationText = function () {
			var _v5 = $author$project$Frontend$Main$fileLocationOpenInEditorFromWorkspace(workspace);
			if (_v5.$ === 'Nothing') {
				return $elm$core$Maybe$Nothing;
			} else {
				var editing = _v5.a;
				var _v6 = editing.fileLocation;
				var directoryPath = _v6.a;
				var fileName = _v6.b;
				var filePathOpenedInEditor = _Utils_ap(
					directoryPath,
					_List_fromArray(
						[fileName]));
				return (!_Utils_eq(elmMakeRequestEntryPointFilePathAbs, filePathOpenedInEditor)) ? $elm$core$Maybe$Just(
					'Last compilation started for another file: \'' + (A2($elm$core$String$join, '/', elmMakeRequestEntryPointFilePathAbs) + '\'')) : (currentFileContentIsStillSame ? $elm$core$Maybe$Nothing : $elm$core$Maybe$Just('File contents changed since compiling'));
			}
		}();
		var compileResultElement = function () {
			var _v3 = loweringComplete.loweringResult;
			if (_v3.$ === 'Err') {
				var loweringError = _v3.a;
				var loweringErrorElement = function () {
					if (loweringError.$ === 'LoweringError') {
						var failedLowering = loweringError.a;
						return A2(
							$mdgriffith$elm_ui$Element$column,
							_List_fromArray(
								[
									$mdgriffith$elm_ui$Element$spacing($author$project$Frontend$Main$defaultFontSize * 2),
									$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
									$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill)
								]),
							_List_fromArray(
								[
									A2(
									$mdgriffith$elm_ui$Element$paragraph,
									_List_Nil,
									_List_fromArray(
										[
											$mdgriffith$elm_ui$Element$text(
											'Failed to lower the program code files with ' + ($elm$core$String$fromInt(
												$elm$core$List$length(failedLowering)) + ' errors:'))
										])),
									A2(
									$mdgriffith$elm_ui$Element$column,
									_List_fromArray(
										[
											$mdgriffith$elm_ui$Element$spacing($author$project$Frontend$Main$defaultFontSize),
											$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)
										]),
									A2(
										$elm$core$List$map,
										A2(
											$elm$core$Basics$composeR,
											$author$project$Frontend$Main$viewLoweringCompileError,
											A2(
												$elm$core$Basics$composeR,
												$elm$core$List$singleton,
												$mdgriffith$elm_ui$Element$paragraph(_List_Nil))),
										failedLowering)),
									A2(
									$mdgriffith$elm_ui$Element$paragraph,
									_List_Nil,
									_List_fromArray(
										[
											$mdgriffith$elm_ui$Element$text('Probably the response from \'elm make\' below has more details on the error:')
										])),
									elmMakeResultElement
								]));
					} else {
						var elmMakeError = loweringError.a;
						return elmMakeErrorElement(elmMakeError);
					}
				}();
				return elementWithScrollbarY(loweringErrorElement);
			} else {
				return elementWithScrollbarY(elmMakeResultElement);
			}
		}();
		var _v0 = elmMakeRequest.makeOptionDebug ? _Utils_Tuple2(
			_Utils_Tuple2($elm$core$Maybe$Nothing, 'Disable Inspection'),
			$author$project$Frontend$Main$UserInputSetInspectionOnCompile(false)) : _Utils_Tuple2(
			_Utils_Tuple2(
				$elm$core$Maybe$Just($lattyware$elm_fontawesome$FontAwesome$Solid$magnifyingGlass),
				'Enable Inspection'),
			$author$project$Frontend$Main$UserInputSetInspectionOnCompile(true));
		var _v1 = _v0.a;
		var toggleInspectionLabelIcon = _v1.a;
		var toggleInspectionLabelText = _v1.b;
		var toggleInspectionEvent = _v0.b;
		var warnAboutOutdatedOrOfferModifyCompilationElement = function () {
			if (warnAboutOutdatedCompilationText.$ === 'Just') {
				var warnText = warnAboutOutdatedCompilationText.a;
				return A2(
					$mdgriffith$elm_ui$Element$paragraph,
					_List_fromArray(
						[
							$mdgriffith$elm_ui$Element$padding(($author$project$Frontend$Main$defaultFontSize / 2) | 0),
							$mdgriffith$elm_ui$Element$Background$color(
							A3($mdgriffith$elm_ui$Element$rgb, 0.4, 0.1, 0)),
							$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
							$mdgriffith$elm_ui$Element$transparent(
							_Utils_eq(warnAboutOutdatedCompilationText, $elm$core$Maybe$Nothing)),
							$mdgriffith$elm_ui$Element$htmlAttribute(
							A2($elm$html$Html$Attributes$style, 'user-select', 'none'))
						]),
					_List_fromArray(
						[
							A2(
							$mdgriffith$elm_ui$Element$el,
							_List_Nil,
							$mdgriffith$elm_ui$Element$html(
								$lattyware$elm_fontawesome$FontAwesome$view($lattyware$elm_fontawesome$FontAwesome$Solid$triangleExclamation))),
							$mdgriffith$elm_ui$Element$text(' '),
							$mdgriffith$elm_ui$Element$text(warnText)
						]));
			} else {
				return offerToggleInspection ? $author$project$Frontend$Main$buttonElement(
					{
						label: A2(
							$mdgriffith$elm_ui$Element$row,
							_List_fromArray(
								[
									$mdgriffith$elm_ui$Element$spacing($author$project$Frontend$Main$defaultFontSize)
								]),
							_List_fromArray(
								[
									A2(
									$elm$core$Maybe$withDefault,
									$mdgriffith$elm_ui$Element$none,
									A2(
										$elm$core$Maybe$map,
										A2(
											$elm$core$Basics$composeR,
											$lattyware$elm_fontawesome$FontAwesome$view,
											A2(
												$elm$core$Basics$composeR,
												$mdgriffith$elm_ui$Element$html,
												$mdgriffith$elm_ui$Element$el(_List_Nil))),
										toggleInspectionLabelIcon)),
									$mdgriffith$elm_ui$Element$text(toggleInspectionLabelText)
								])),
						onPress: $elm$core$Maybe$Just(toggleInspectionEvent)
					}) : $mdgriffith$elm_ui$Element$none;
			}
		}();
		return {header: warnAboutOutdatedOrOfferModifyCompilationElement, mainContent: compileResultElement};
	});
var $author$project$Frontend$Main$viewOutputPaneContent = function (state) {
	var _v0 = state.syntaxInspection;
	if (_v0.$ === 'Just') {
		var syntaxInspection = _v0.a;
		var monospaceTextWithScrollbarsElement = A2(
			$elm$core$Basics$composeR,
			$elm$html$Html$text,
			A2(
				$elm$core$Basics$composeR,
				$mdgriffith$elm_ui$Element$html,
				A2(
					$elm$core$Basics$composeR,
					$mdgriffith$elm_ui$Element$el(
						_List_fromArray(
							[
								$mdgriffith$elm_ui$Element$htmlAttribute(
								A2($elm$html$Html$Attributes$style, 'white-space', 'pre')),
								$mdgriffith$elm_ui$Element$htmlAttribute($author$project$Frontend$Main$attributeMonospaceFont),
								$mdgriffith$elm_ui$Element$htmlAttribute(
								A2($elm$html$Html$Attributes$style, 'line-height', 'normal')),
								$mdgriffith$elm_ui$Element$padding(($author$project$Frontend$Main$defaultFontSize / 2) | 0)
							])),
					A2(
						$elm$core$Basics$composeR,
						$elm$core$List$singleton,
						$mdgriffith$elm_ui$Element$column(
							_List_fromArray(
								[
									$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
									$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),
									$mdgriffith$elm_ui$Element$scrollbarX,
									$mdgriffith$elm_ui$Element$scrollbarY,
									$mdgriffith$elm_ui$Element$Background$color(
									A3($mdgriffith$elm_ui$Element$rgb, 0.2, 0.2, 0.2))
								]))))));
		var errorElement = function (errorText) {
			return A2(
				$mdgriffith$elm_ui$Element$column,
				_List_fromArray(
					[
						$mdgriffith$elm_ui$Element$spacing($author$project$Frontend$Main$defaultFontSize),
						$mdgriffith$elm_ui$Element$Font$color($author$project$Frontend$Main$errorTextColor),
						$mdgriffith$elm_ui$Element$padding($author$project$Frontend$Main$defaultFontSize),
						$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
						$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill)
					]),
				_List_fromArray(
					[
						$mdgriffith$elm_ui$Element$text('Error'),
						monospaceTextWithScrollbarsElement(errorText)
					]));
		};
		var mainContent = function () {
			var _v1 = syntaxInspection.parseFileResult;
			if (_v1.$ === 'Err') {
				var error = _v1.a;
				return errorElement(error);
			} else {
				if (_v1.a.b.$ === 'Err') {
					var _v2 = _v1.a;
					var fileContentString = _v2.a;
					var parseErrors = _v2.b.a;
					return errorElement(
						A2(
							$elm$core$String$join,
							'\n\n',
							A2(
								$elm$core$List$map,
								$author$project$CompileElmApp$parserDeadEndToString(fileContentString),
								parseErrors)));
				} else {
					var _v3 = _v1.a;
					var parsedFile = _v3.b.a;
					return A2(
						$mdgriffith$elm_ui$Element$column,
						_List_fromArray(
							[
								$mdgriffith$elm_ui$Element$padding($author$project$Frontend$Main$defaultFontSize),
								$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
								$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill)
							]),
						$elm$core$List$singleton(
							monospaceTextWithScrollbarsElement(
								A2(
									$elm$json$Json$Encode$encode,
									4,
									$stil4m$elm_syntax$Elm$Syntax$File$encode(parsedFile)))));
				}
			}
		}();
		return {header: $mdgriffith$elm_ui$Element$none, mainContent: mainContent};
	} else {
		var _v4 = state.compilation;
		if (_v4.$ === 'Nothing') {
			return {
				header: $mdgriffith$elm_ui$Element$none,
				mainContent: _Utils_eq(
					$author$project$Frontend$Main$fileLocationOpenInEditorFromWorkspace(state),
					$elm$core$Maybe$Nothing) ? $mdgriffith$elm_ui$Element$none : A2(
					$mdgriffith$elm_ui$Element$paragraph,
					_List_fromArray(
						[
							$mdgriffith$elm_ui$Element$padding($author$project$Frontend$Main$defaultFontSize)
						]),
					_List_fromArray(
						[
							$mdgriffith$elm_ui$Element$text('No compilation started. You can use the \'Compile\' button to check program text for errors and see your app in action.')
						]))
			};
		} else {
			var compilation = _v4.a;
			var continueWithInProgress = function (_v7) {
				var elmMakeRequestEntryPointFilePathAbs = _Utils_ap(compilation.origin.requestFromUser.workingDirectoryPath, compilation.origin.requestFromUser.entryPointFilePathFromWorkingDirectory);
				return {
					header: $mdgriffith$elm_ui$Element$none,
					mainContent: A2(
						$mdgriffith$elm_ui$Element$paragraph,
						_List_fromArray(
							[
								$mdgriffith$elm_ui$Element$padding($author$project$Frontend$Main$defaultFontSize)
							]),
						_List_fromArray(
							[
								$mdgriffith$elm_ui$Element$text(
								'Compiling module \'' + (A2($elm$core$String$join, '/', elmMakeRequestEntryPointFilePathAbs) + ('\' with inspection ' + ((compilation.origin.requestFromUser.makeOptionDebug ? 'enabled' : 'disabled') + ' ...'))))
							]))
				};
			};
			var _v5 = compilation.loweringLastIteration;
			if (_v5.$ === 'LoweringComplete') {
				var loweringComplete = _v5.a;
				var _v6 = loweringComplete.elmMakeResult;
				if (_v6.$ === 'Nothing') {
					return continueWithInProgress(_Utils_Tuple0);
				} else {
					var elmMakeResult = _v6.a;
					return A4($author$project$Frontend$Main$viewOutputPaneContentFromCompilationComplete, state, compilation, loweringComplete, elmMakeResult);
				}
			} else {
				return continueWithInProgress(_Utils_Tuple0);
			}
		}
	}
};
var $mdgriffith$elm_ui$Internal$Model$Padding = F5(
	function (a, b, c, d, e) {
		return {$: 'Padding', a: a, b: b, c: c, d: d, e: e};
	});
var $mdgriffith$elm_ui$Internal$Model$Spaced = F3(
	function (a, b, c) {
		return {$: 'Spaced', a: a, b: b, c: c};
	});
var $mdgriffith$elm_ui$Internal$Model$extractSpacingAndPadding = function (attrs) {
	return A3(
		$elm$core$List$foldr,
		F2(
			function (attr, _v0) {
				var pad = _v0.a;
				var spacing = _v0.b;
				return _Utils_Tuple2(
					function () {
						if (pad.$ === 'Just') {
							var x = pad.a;
							return pad;
						} else {
							if ((attr.$ === 'StyleClass') && (attr.b.$ === 'PaddingStyle')) {
								var _v3 = attr.b;
								var name = _v3.a;
								var t = _v3.b;
								var r = _v3.c;
								var b = _v3.d;
								var l = _v3.e;
								return $elm$core$Maybe$Just(
									A5($mdgriffith$elm_ui$Internal$Model$Padding, name, t, r, b, l));
							} else {
								return $elm$core$Maybe$Nothing;
							}
						}
					}(),
					function () {
						if (spacing.$ === 'Just') {
							var x = spacing.a;
							return spacing;
						} else {
							if ((attr.$ === 'StyleClass') && (attr.b.$ === 'SpacingStyle')) {
								var _v6 = attr.b;
								var name = _v6.a;
								var x = _v6.b;
								var y = _v6.c;
								return $elm$core$Maybe$Just(
									A3($mdgriffith$elm_ui$Internal$Model$Spaced, name, x, y));
							} else {
								return $elm$core$Maybe$Nothing;
							}
						}
					}());
			}),
		_Utils_Tuple2($elm$core$Maybe$Nothing, $elm$core$Maybe$Nothing),
		attrs);
};
var $mdgriffith$elm_ui$Element$wrappedRow = F2(
	function (attrs, children) {
		var _v0 = $mdgriffith$elm_ui$Internal$Model$extractSpacingAndPadding(attrs);
		var padded = _v0.a;
		var spaced = _v0.b;
		if (spaced.$ === 'Nothing') {
			return A4(
				$mdgriffith$elm_ui$Internal$Model$element,
				$mdgriffith$elm_ui$Internal$Model$asRow,
				$mdgriffith$elm_ui$Internal$Model$div,
				A2(
					$elm$core$List$cons,
					$mdgriffith$elm_ui$Internal$Model$htmlClass($mdgriffith$elm_ui$Internal$Style$classes.contentLeft + (' ' + ($mdgriffith$elm_ui$Internal$Style$classes.contentCenterY + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.wrapped)))),
					A2(
						$elm$core$List$cons,
						$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$shrink),
						A2(
							$elm$core$List$cons,
							$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$shrink),
							attrs))),
				$mdgriffith$elm_ui$Internal$Model$Unkeyed(children));
		} else {
			var _v2 = spaced.a;
			var spaceName = _v2.a;
			var x = _v2.b;
			var y = _v2.c;
			var newPadding = function () {
				if (padded.$ === 'Just') {
					var _v5 = padded.a;
					var name = _v5.a;
					var t = _v5.b;
					var r = _v5.c;
					var b = _v5.d;
					var l = _v5.e;
					if ((_Utils_cmp(r, x / 2) > -1) && (_Utils_cmp(b, y / 2) > -1)) {
						var newTop = t - (y / 2);
						var newRight = r - (x / 2);
						var newLeft = l - (x / 2);
						var newBottom = b - (y / 2);
						return $elm$core$Maybe$Just(
							A2(
								$mdgriffith$elm_ui$Internal$Model$StyleClass,
								$mdgriffith$elm_ui$Internal$Flag$padding,
								A5(
									$mdgriffith$elm_ui$Internal$Model$PaddingStyle,
									A4($mdgriffith$elm_ui$Internal$Model$paddingNameFloat, newTop, newRight, newBottom, newLeft),
									newTop,
									newRight,
									newBottom,
									newLeft)));
					} else {
						return $elm$core$Maybe$Nothing;
					}
				} else {
					return $elm$core$Maybe$Nothing;
				}
			}();
			if (newPadding.$ === 'Just') {
				var pad = newPadding.a;
				return A4(
					$mdgriffith$elm_ui$Internal$Model$element,
					$mdgriffith$elm_ui$Internal$Model$asRow,
					$mdgriffith$elm_ui$Internal$Model$div,
					A2(
						$elm$core$List$cons,
						$mdgriffith$elm_ui$Internal$Model$htmlClass($mdgriffith$elm_ui$Internal$Style$classes.contentLeft + (' ' + ($mdgriffith$elm_ui$Internal$Style$classes.contentCenterY + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.wrapped)))),
						A2(
							$elm$core$List$cons,
							$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$shrink),
							A2(
								$elm$core$List$cons,
								$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$shrink),
								_Utils_ap(
									attrs,
									_List_fromArray(
										[pad]))))),
					$mdgriffith$elm_ui$Internal$Model$Unkeyed(children));
			} else {
				var halfY = -(y / 2);
				var halfX = -(x / 2);
				return A4(
					$mdgriffith$elm_ui$Internal$Model$element,
					$mdgriffith$elm_ui$Internal$Model$asEl,
					$mdgriffith$elm_ui$Internal$Model$div,
					attrs,
					$mdgriffith$elm_ui$Internal$Model$Unkeyed(
						_List_fromArray(
							[
								A4(
								$mdgriffith$elm_ui$Internal$Model$element,
								$mdgriffith$elm_ui$Internal$Model$asRow,
								$mdgriffith$elm_ui$Internal$Model$div,
								A2(
									$elm$core$List$cons,
									$mdgriffith$elm_ui$Internal$Model$htmlClass($mdgriffith$elm_ui$Internal$Style$classes.contentLeft + (' ' + ($mdgriffith$elm_ui$Internal$Style$classes.contentCenterY + (' ' + $mdgriffith$elm_ui$Internal$Style$classes.wrapped)))),
									A2(
										$elm$core$List$cons,
										$mdgriffith$elm_ui$Internal$Model$Attr(
											A2(
												$elm$html$Html$Attributes$style,
												'margin',
												$elm$core$String$fromFloat(halfY) + ('px' + (' ' + ($elm$core$String$fromFloat(halfX) + 'px'))))),
										A2(
											$elm$core$List$cons,
											$mdgriffith$elm_ui$Internal$Model$Attr(
												A2(
													$elm$html$Html$Attributes$style,
													'width',
													'calc(100% + ' + ($elm$core$String$fromInt(x) + 'px)'))),
											A2(
												$elm$core$List$cons,
												$mdgriffith$elm_ui$Internal$Model$Attr(
													A2(
														$elm$html$Html$Attributes$style,
														'height',
														'calc(100% + ' + ($elm$core$String$fromInt(y) + 'px)'))),
												A2(
													$elm$core$List$cons,
													A2(
														$mdgriffith$elm_ui$Internal$Model$StyleClass,
														$mdgriffith$elm_ui$Internal$Flag$spacing,
														A3($mdgriffith$elm_ui$Internal$Model$SpacingStyle, spaceName, x, y)),
													_List_Nil))))),
								$mdgriffith$elm_ui$Internal$Model$Unkeyed(children))
							])));
			}
		}
	});
var $author$project$Frontend$Main$view = function (state) {
	var titlebarEntries = A2(
		$elm$core$List$map,
		$author$project$Frontend$Main$titlebarMenuEntryButton(state),
		_List_fromArray(
			[$author$project$Frontend$Main$WorkspaceMenuEntry]));
	var popupWindowAttributes = function () {
		var _v14 = state.popup;
		if (_v14.$ === 'Nothing') {
			return _List_Nil;
		} else {
			if (_v14.a.$ === 'TitlebarMenu') {
				var _v15 = _v14.a;
				return _List_Nil;
			} else {
				switch (_v14.a.a.$) {
					case 'GetLinkToWorkspaceDialog':
						var dialog = _v14.a.a.a;
						var _v16 = state.workspace;
						if (_v16.$ === 'WorkspaceActive') {
							var workspaceActive = _v16.a;
							return $author$project$Frontend$Main$popupWindowElementAttributesFromAttributes(
								A2($author$project$Frontend$Main$viewGetLinkToWorkspaceDialog, dialog, workspaceActive.fileTree));
						} else {
							return _List_Nil;
						}
					case 'LoadFromGitDialog':
						var dialogState = _v14.a.a.a;
						return $author$project$Frontend$Main$popupWindowElementAttributesFromAttributes(
							$author$project$Frontend$Main$viewLoadFromGitDialog(dialogState));
					case 'ExportToZipArchiveDialog':
						var _v17 = _v14.a.a;
						var _v18 = state.workspace;
						if (_v18.$ === 'WorkspaceActive') {
							var workspaceActive = _v18.a;
							return $author$project$Frontend$Main$popupWindowElementAttributesFromAttributes(
								$author$project$Frontend$Main$viewExportToZipArchiveDialog(workspaceActive.fileTree));
						} else {
							return _List_Nil;
						}
					default:
						var dialogState = _v14.a.a.a;
						return $author$project$Frontend$Main$popupWindowElementAttributesFromAttributes(
							$author$project$Frontend$Main$viewImportFromZipArchiveDialog(dialogState));
				}
			}
		}
	}();
	var mainContentFromLoadingFromLink = function (_v13) {
		var linkUrl = _v13.linkUrl;
		var progressOrResultElement = _v13.progressOrResultElement;
		var expectedCompositionHash = _v13.expectedCompositionHash;
		return A2(
			$mdgriffith$elm_ui$Element$column,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$spacing(($author$project$Frontend$Main$defaultFontSize / 2) | 0),
					$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)
				]),
			A2(
				$elm$core$List$map,
				$mdgriffith$elm_ui$Element$el(
					_List_fromArray(
						[$mdgriffith$elm_ui$Element$centerX])),
				_List_fromArray(
					[
						$mdgriffith$elm_ui$Element$text('Loading workspace from '),
						$author$project$Frontend$Main$linkElementFromUrlAndTextLabel(
						{labelText: linkUrl, url: linkUrl}),
						$mdgriffith$elm_ui$Element$text(
						A2(
							$elm$core$Maybe$withDefault,
							'',
							A2(
								$elm$core$Maybe$map,
								$elm$core$Basics$append('Expecting composition with hash '),
								expectedCompositionHash))),
						progressOrResultElement
					])));
	};
	var mainContent = function () {
		var _v0 = state.workspace;
		switch (_v0.$) {
			case 'WorkspaceLoadingFromLink':
				var loadingWorkspaceStateFromLink = _v0.a;
				var loadResult = A2(
					$elm$core$Maybe$andThen,
					function (_v2) {
						var requestUrl = _v2.a;
						var result = _v2.b;
						return _Utils_eq(requestUrl, loadingWorkspaceStateFromLink.workspaceStateDescription.base) ? $elm$core$Maybe$Just(result) : $elm$core$Maybe$Nothing;
					},
					state.lastBackendLoadFromGitResult);
				var progressOrResultElement = function () {
					if (loadResult.$ === 'Nothing') {
						return $mdgriffith$elm_ui$Element$text('Loading in progress ...');
					} else {
						if (loadResult.a.$ === 'Err') {
							var loadError = loadResult.a.a;
							return $author$project$Frontend$Main$elementToDisplayLoadFromGitError(loadError);
						} else {
							return $mdgriffith$elm_ui$Element$text('Completed');
						}
					}
				}();
				var expectedCompositionHash = _Utils_eq(loadingWorkspaceStateFromLink.workspaceStateDescription.differenceFromBase, $author$project$WorkspaceState_2021_01$noDifference) ? loadingWorkspaceStateFromLink.expectedCompositionHash : $elm$core$Maybe$Nothing;
				return mainContentFromLoadingFromLink(
					{expectedCompositionHash: expectedCompositionHash, linkUrl: loadingWorkspaceStateFromLink.workspaceStateDescription.base, progressOrResultElement: progressOrResultElement});
			case 'WorkspaceActive':
				var workspaceActive = _v0.a;
				var workspaceView = function () {
					var _v3 = workspaceActive.editing;
					if (_v3.$ === 'Nothing') {
						return {
							editorPaneContent: function () {
								var selectEventFromFileTreeNode = F2(
									function (upperPath, _v5) {
										var nodeName = _v5.a;
										var nodeContent = _v5.b;
										if (nodeContent.$ === 'BlobNode') {
											return $elm$core$Maybe$Just(
												$author$project$Frontend$Main$UserInputOpenFileInEditor(
													_Utils_Tuple2(upperPath, nodeName)));
										} else {
											return $elm$core$Maybe$Nothing;
										}
									});
								return A2(
									$mdgriffith$elm_ui$Element$el,
									_List_fromArray(
										[
											$mdgriffith$elm_ui$Element$scrollbars,
											$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
											$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),
											$mdgriffith$elm_ui$Element$padding($author$project$Frontend$Main$defaultFontSize)
										]),
									A2(
										$author$project$Frontend$Main$viewFileTree,
										{iconFromFileName: $author$project$Frontend$Visuals$iconFromFileName, selectEventFromNode: selectEventFromFileTreeNode},
										$author$project$Frontend$Main$sortFileTreeForExplorerView(workspaceActive.fileTree)));
							}(),
							editorPaneHeader: A2(
								$mdgriffith$elm_ui$Element$paragraph,
								_List_Nil,
								_List_fromArray(
									[
										$mdgriffith$elm_ui$Element$text('Choose a file to open in the editor')
									]))
						};
					} else {
						var editing = _v3.a;
						var headerIconElementFromTypeAndColor = function (maybeTypeAndColor) {
							return A2(
								$mdgriffith$elm_ui$Element$el,
								_List_fromArray(
									[
										$mdgriffith$elm_ui$Element$width(
										$mdgriffith$elm_ui$Element$px($author$project$Frontend$Main$defaultFontSize))
									]),
								A2(
									$elm$core$Maybe$withDefault,
									$mdgriffith$elm_ui$Element$none,
									A2(
										$elm$core$Maybe$map,
										function (_v12) {
											var iconType = _v12.a;
											var iconColor = _v12.b;
											return A2(
												$author$project$Frontend$Visuals$iconSvgElementFromIcon,
												{color: iconColor},
												iconType);
										},
										maybeTypeAndColor)));
						};
						var editorModalOverlay = function () {
							var _v9 = workspaceActive.elmFormat;
							if (_v9.$ === 'Nothing') {
								return $elm$core$Maybe$Nothing;
							} else {
								var elmFormat = _v9.a;
								var buttonCancelFormat = $author$project$Frontend$Main$buttonElement(
									{
										label: $mdgriffith$elm_ui$Element$text('Cancel formatting'),
										onPress: $elm$core$Maybe$Just($author$project$Frontend$Main$UserInputCancelFormatting)
									});
								var continueWithHeadingAndContent = function (config) {
									return A2(
										$mdgriffith$elm_ui$Element$column,
										_List_fromArray(
											[
												$mdgriffith$elm_ui$Element$spacing($author$project$Frontend$Main$defaultFontSize),
												$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
												$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill)
											]),
										_List_fromArray(
											[
												A2(
												$mdgriffith$elm_ui$Element$el,
												$author$project$Frontend$Main$headingAttributes(3),
												$mdgriffith$elm_ui$Element$text(config.headingText)),
												A2(
												$mdgriffith$elm_ui$Element$el,
												_List_fromArray(
													[
														$mdgriffith$elm_ui$Element$padding($author$project$Frontend$Main$defaultFontSize),
														$mdgriffith$elm_ui$Element$scrollbarY,
														$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
														$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill)
													]),
												config.mainContent),
												A2(
												$mdgriffith$elm_ui$Element$el,
												_List_fromArray(
													[$mdgriffith$elm_ui$Element$alignBottom, $mdgriffith$elm_ui$Element$alignLeft]),
												buttonCancelFormat)
											]));
								};
								var continueWithErrorText = function (errorText) {
									return continueWithHeadingAndContent(
										{
											headingText: 'Formatting failed',
											mainContent: A2(
												$mdgriffith$elm_ui$Element$column,
												_List_fromArray(
													[
														$mdgriffith$elm_ui$Element$spacing($author$project$Frontend$Main$defaultFontSize),
														$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
														$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill)
													]),
												_List_fromArray(
													[
														$author$project$Frontend$Main$dialogErrorElementFromDescription(errorText),
														A2(
														$mdgriffith$elm_ui$Element$wrappedRow,
														_List_fromArray(
															[
																$mdgriffith$elm_ui$Element$spacing($author$project$Frontend$Main$defaultFontSize)
															]),
														_List_fromArray(
															[
																$mdgriffith$elm_ui$Element$text('To see syntax errors in the code editor, use \'Compile\''),
																$author$project$Frontend$Main$buttonCompile
															]))
													]))
										});
								};
								if (elmFormat.$ === 'ElmFormatInProgress') {
									return $elm$core$Maybe$Just(
										continueWithHeadingAndContent(
											{headingText: 'Formatting ...', mainContent: $mdgriffith$elm_ui$Element$none}));
								} else {
									var formatResult = elmFormat.b;
									if (formatResult.$ === 'Err') {
										var httpError = formatResult.a;
										return $elm$core$Maybe$Just(
											continueWithErrorText(
												A2(
													$elm$core$String$join,
													'\n',
													_List_fromArray(
														[
															'HTTP Error:',
															$author$project$Frontend$Main$describeHttpError(httpError)
														]))));
									} else {
										if (formatResult.a.$ === 'Err') {
											var errorResponse = formatResult.a.a;
											return $elm$core$Maybe$Just(
												continueWithErrorText(
													A2(
														$elm$core$String$join,
														'\n',
														_List_fromArray(
															['elm-format reported an error:', errorResponse.processOutput.standardError, errorResponse.processOutput.standardOutput]))));
										} else {
											return $elm$core$Maybe$Nothing;
										}
									}
								}
							}
						}();
						var editorPaneContent = A2(
							$mdgriffith$elm_ui$Element$el,
							_Utils_ap(
								A2(
									$elm$core$Maybe$withDefault,
									_List_Nil,
									A2(
										$elm$core$Maybe$map,
										A2(
											$elm$core$Basics$composeR,
											$mdgriffith$elm_ui$Element$el(
												_List_fromArray(
													[
														$mdgriffith$elm_ui$Element$padding($author$project$Frontend$Main$defaultFontSize),
														$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
														$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill)
													])),
											A2($elm$core$Basics$composeR, $mdgriffith$elm_ui$Element$inFront, $elm$core$List$singleton)),
										editorModalOverlay)),
								_List_fromArray(
									[
										$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
										$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill)
									])),
							A2(
								$mdgriffith$elm_ui$Element$el,
								_List_fromArray(
									[
										$mdgriffith$elm_ui$Element$transparent(
										!_Utils_eq(editorModalOverlay, $elm$core$Maybe$Nothing)),
										$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
										$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill)
									]),
								$author$project$Frontend$Main$monacoEditorElement(state)));
						var closeEditorElement = A2(
							$mdgriffith$elm_ui$Element$Input$button,
							_List_fromArray(
								[
									$mdgriffith$elm_ui$Element$mouseOver(
									_List_fromArray(
										[
											$mdgriffith$elm_ui$Element$Background$color(
											A4($mdgriffith$elm_ui$Element$rgba, 1, 1, 1, 0.2))
										])),
									$mdgriffith$elm_ui$Element$padding(4),
									$mdgriffith$elm_ui$Element$scale(0.8),
									$mdgriffith$elm_ui$Element$centerY,
									$mdgriffith$elm_ui$Element$htmlAttribute(
									$elm$html$Html$Attributes$title('Close'))
								]),
							{
								label: headerIconElementFromTypeAndColor(
									$elm$core$Maybe$Just(
										_Utils_Tuple2($author$project$Frontend$Visuals$CloseEditorIcon, 'white'))),
								onPress: $elm$core$Maybe$Just($author$project$Frontend$Main$UserInputCloseEditor)
							});
						var _v6 = editing.fileLocation;
						var directoryPath = _v6.a;
						var fileName = _v6.b;
						var fileContentType = $author$project$Frontend$FileEditor$fileContentTypeFromFileName(fileName);
						var buttonsElements = function () {
							if ((fileContentType.$ === 'Just') && (fileContentType.a.$ === 'ElmContent')) {
								var _v8 = fileContentType.a;
								return _List_fromArray(
									[
										$author$project$Frontend$Main$buttonElement(
										{
											label: A2(
												$mdgriffith$elm_ui$Element$row,
												_List_fromArray(
													[
														$mdgriffith$elm_ui$Element$spacing($author$project$Frontend$Main$defaultFontSize),
														$mdgriffith$elm_ui$Element$htmlAttribute(
														$elm$html$Html$Attributes$title('Format'))
													]),
												_List_fromArray(
													[
														A2(
														$mdgriffith$elm_ui$Element$el,
														_List_Nil,
														$mdgriffith$elm_ui$Element$html(
															$lattyware$elm_fontawesome$FontAwesome$view($lattyware$elm_fontawesome$FontAwesome$Solid$indent))),
														$mdgriffith$elm_ui$Element$text('Format')
													])),
											onPress: $elm$core$Maybe$Just($author$project$Frontend$Main$UserInputFormat)
										}),
										$author$project$Frontend$Main$buttonCompile
									]);
							} else {
								return _List_Nil;
							}
						}();
						var filePathElement = function () {
							var fileIconElement = headerIconElementFromTypeAndColor(
								$author$project$Frontend$Visuals$iconFromFileName(fileName));
							var directorySeparatorIconElement = headerIconElementFromTypeAndColor(
								$elm$core$Maybe$Just(
									_Utils_Tuple2($author$project$Frontend$Visuals$DirectoryCollapsedIcon, 'white')));
							var elementFromPathSegmentText = F2(
								function (appendDirectorySeparator, segmentText) {
									return A2(
										$mdgriffith$elm_ui$Element$row,
										_List_fromArray(
											[
												$mdgriffith$elm_ui$Element$spacing(($author$project$Frontend$Main$defaultFontSize / 2) | 0),
												$mdgriffith$elm_ui$Element$alpha(0.83)
											]),
										_List_fromArray(
											[
												$mdgriffith$elm_ui$Element$text(segmentText),
												appendDirectorySeparator ? directorySeparatorIconElement : $mdgriffith$elm_ui$Element$none
											]));
								});
							return A2(
								$mdgriffith$elm_ui$Element$row,
								_List_fromArray(
									[
										$mdgriffith$elm_ui$Element$spacing(($author$project$Frontend$Main$defaultFontSize / 2) | 0)
									]),
								_Utils_ap(
									A2(
										$elm$core$List$map,
										elementFromPathSegmentText(true),
										directoryPath),
									_List_fromArray(
										[
											A2(
											$mdgriffith$elm_ui$Element$row,
											_List_fromArray(
												[
													$mdgriffith$elm_ui$Element$spacing(($author$project$Frontend$Main$defaultFontSize / 2) | 0)
												]),
											_List_fromArray(
												[
													fileIconElement,
													A2(elementFromPathSegmentText, false, fileName)
												]))
										])));
						}();
						var headerElement = A2(
							$mdgriffith$elm_ui$Element$wrappedRow,
							_List_fromArray(
								[
									$mdgriffith$elm_ui$Element$spacing($author$project$Frontend$Main$defaultFontSize),
									A2($mdgriffith$elm_ui$Element$paddingXY, $author$project$Frontend$Main$defaultFontSize, 0),
									$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)
								]),
							_List_fromArray(
								[
									A2(
									$mdgriffith$elm_ui$Element$row,
									_List_fromArray(
										[
											$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
											$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),
											$mdgriffith$elm_ui$Element$spacing($author$project$Frontend$Main$defaultFontSize),
											$mdgriffith$elm_ui$Element$alignLeft,
											$mdgriffith$elm_ui$Element$htmlAttribute(
											A2($elm$html$Html$Attributes$style, 'user-select', 'none'))
										]),
									_List_fromArray(
										[filePathElement, closeEditorElement])),
									A2(
									$mdgriffith$elm_ui$Element$row,
									_List_fromArray(
										[
											$mdgriffith$elm_ui$Element$spacing($author$project$Frontend$Main$defaultFontSize),
											$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)
										]),
									buttonsElements)
								]));
						return {editorPaneContent: editorPaneContent, editorPaneHeader: headerElement};
					}
				}();
				var workspacePaneLayout = function (paneProperties) {
					var widthFillPortion = _Utils_eq(
						workspaceActive.viewEnlargedPane,
						$elm$core$Maybe$Just(paneProperties.pane)) ? 40 : 4;
					return A2(
						$mdgriffith$elm_ui$Element$column,
						_List_fromArray(
							[
								$mdgriffith$elm_ui$Element$width(
								A2(
									$mdgriffith$elm_ui$Element$minimum,
									80,
									$mdgriffith$elm_ui$Element$fillPortion(widthFillPortion))),
								$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill)
							]),
						_List_fromArray(
							[
								A2(
								$mdgriffith$elm_ui$Element$row,
								_List_fromArray(
									[
										$mdgriffith$elm_ui$Element$spacing($author$project$Frontend$Main$defaultFontSize),
										$mdgriffith$elm_ui$Element$padding(($author$project$Frontend$Main$defaultFontSize / 2) | 0),
										$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)
									]),
								_List_fromArray(
									[
										A2(
										$mdgriffith$elm_ui$Element$el,
										_List_fromArray(
											[
												$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
												$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),
												$mdgriffith$elm_ui$Element$clip,
												$mdgriffith$elm_ui$Element$htmlAttribute(
												A2($elm$html$Html$Attributes$style, 'flex-shrink', '1'))
											]),
										paneProperties.headerElement),
										A2(
										$mdgriffith$elm_ui$Element$el,
										_List_fromArray(
											[$mdgriffith$elm_ui$Element$alignTop, $mdgriffith$elm_ui$Element$alignRight]),
										A2($author$project$Frontend$Main$toggleEnlargedPaneButton, workspaceActive, paneProperties.pane))
									])),
								paneProperties.mainContent
							]));
				};
				var outputPaneElements = $author$project$Frontend$Main$viewOutputPaneContent(workspaceActive);
				return A2(
					$mdgriffith$elm_ui$Element$column,
					_List_fromArray(
						[
							$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
							$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill)
						]),
					_List_fromArray(
						[
							A2(
							$mdgriffith$elm_ui$Element$map,
							$author$project$Frontend$Main$WorkspaceEvent,
							A2(
								$mdgriffith$elm_ui$Element$row,
								_List_fromArray(
									[
										$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
										$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill)
									]),
								_List_fromArray(
									[
										workspacePaneLayout(
										{headerElement: workspaceView.editorPaneHeader, mainContent: workspaceView.editorPaneContent, pane: $author$project$Frontend$Main$EditorPane}),
										workspacePaneLayout(
										{
											headerElement: outputPaneElements.header,
											mainContent: A2(
												$mdgriffith$elm_ui$Element$el,
												_List_fromArray(
													[
														$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
														$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),
														$mdgriffith$elm_ui$Element$clip,
														$mdgriffith$elm_ui$Element$htmlAttribute(
														A2($elm$html$Html$Attributes$style, 'flex-shrink', '1'))
													]),
												outputPaneElements.mainContent),
											pane: $author$project$Frontend$Main$OutputPane
										})
									])))
						]));
			default:
				var workspaceStateError = _v0.a;
				return A2(
					$mdgriffith$elm_ui$Element$column,
					_List_fromArray(
						[
							$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
							$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill)
						]),
					_List_fromArray(
						[
							A2(
							$mdgriffith$elm_ui$Element$el,
							_List_fromArray(
								[
									$mdgriffith$elm_ui$Element$padding($author$project$Frontend$Main$defaultFontSize),
									$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
									$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),
									$mdgriffith$elm_ui$Element$scrollbarY
								]),
							$author$project$Frontend$Main$dialogErrorElementFromDescription(
								'Failed to load workspace state: ' + A2($elm$core$String$left, 1000, workspaceStateError)))
						]));
		}
	}();
	var logoElement = A2(
		$mdgriffith$elm_ui$Element$row,
		_List_fromArray(
			[
				$mdgriffith$elm_ui$Element$spacing($author$project$Frontend$Main$defaultFontSize),
				$mdgriffith$elm_ui$Element$htmlAttribute(
				A2($elm$html$Html$Attributes$style, 'cursor', 'default')),
				$mdgriffith$elm_ui$Element$htmlAttribute(
				A2($elm$html$Html$Attributes$style, 'user-select', 'none'))
			]),
		_List_fromArray(
			[
				A2(
				$mdgriffith$elm_ui$Element$el,
				_List_Nil,
				$mdgriffith$elm_ui$Element$html(
					$author$project$Frontend$Visuals$elmEditorIconSvg('1.4em'))),
				A2(
				$mdgriffith$elm_ui$Element$el,
				_List_fromArray(
					[$mdgriffith$elm_ui$Element$Font$semiBold]),
				$mdgriffith$elm_ui$Element$text('Elm Editor'))
			]));
	var titlebar = A2(
		$mdgriffith$elm_ui$Element$row,
		_List_fromArray(
			[
				$mdgriffith$elm_ui$Element$spacing($author$project$Frontend$Main$defaultFontSize),
				$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
				$mdgriffith$elm_ui$Element$height(
				$mdgriffith$elm_ui$Element$px(34)),
				$mdgriffith$elm_ui$Element$Background$color(
				A3($mdgriffith$elm_ui$Element$rgb, 0.09, 0.09, 0.09)),
				$mdgriffith$elm_ui$Element$Font$color(
				A3($mdgriffith$elm_ui$Element$rgb, 0.84, 0.84, 0.84))
			]),
		_List_fromArray(
			[
				A2(
				$mdgriffith$elm_ui$Element$el,
				_List_fromArray(
					[
						A2($mdgriffith$elm_ui$Element$paddingXY, $author$project$Frontend$Main$defaultFontSize, 0)
					]),
				logoElement),
				A2(
				$mdgriffith$elm_ui$Element$row,
				_List_fromArray(
					[
						$mdgriffith$elm_ui$Element$htmlAttribute(
						$elm$html$Html$Attributes$id($author$project$Frontend$Main$titleBarMenubarElementId)),
						$mdgriffith$elm_ui$Element$spacing($author$project$Frontend$Main$defaultFontSize)
					]),
				titlebarEntries)
			]));
	var body = A2(
		$mdgriffith$elm_ui$Element$layout,
		_Utils_ap(
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$Font$family(
					A2($elm$core$List$map, $mdgriffith$elm_ui$Element$Font$typeface, $author$project$Frontend$Main$rootFontFamily)),
					$mdgriffith$elm_ui$Element$Font$size($author$project$Frontend$Main$defaultFontSize),
					$mdgriffith$elm_ui$Element$Font$color(
					A3($mdgriffith$elm_ui$Element$rgb, 0.95, 0.95, 0.95)),
					$mdgriffith$elm_ui$Element$Background$color($author$project$Frontend$Main$backgroundColor),
					$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill)
				]),
			popupWindowAttributes),
		A2(
			$mdgriffith$elm_ui$Element$column,
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
					$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill)
				]),
			_List_fromArray(
				[
					$mdgriffith$elm_ui$Element$html($lattyware$elm_fontawesome$FontAwesome$Styles$css),
					titlebar,
					A2(
					$mdgriffith$elm_ui$Element$el,
					_List_fromArray(
						[
							$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
							$mdgriffith$elm_ui$Element$height(
							$mdgriffith$elm_ui$Element$px(1)),
							$mdgriffith$elm_ui$Element$Background$color(
							A3($mdgriffith$elm_ui$Element$rgb, 0.17, 0.17, 0.17))
						]),
					$mdgriffith$elm_ui$Element$none),
					A2(
					$mdgriffith$elm_ui$Element$row,
					_List_fromArray(
						[
							$mdgriffith$elm_ui$Element$width($mdgriffith$elm_ui$Element$fill),
							$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),
							$mdgriffith$elm_ui$Element$htmlAttribute(
							A2(
								$elm$html$Html$Events$on,
								'focusin',
								$elm$json$Json$Decode$succeed($author$project$Frontend$Main$UserInputFocusOutsideTitlebarMenu)))
						]),
					_List_fromArray(
						[
							$author$project$Frontend$Main$activityBar,
							A2(
							$mdgriffith$elm_ui$Element$el,
							_List_fromArray(
								[
									$mdgriffith$elm_ui$Element$width(
									$mdgriffith$elm_ui$Element$px(1)),
									$mdgriffith$elm_ui$Element$height($mdgriffith$elm_ui$Element$fill),
									$mdgriffith$elm_ui$Element$Background$color(
									A3($mdgriffith$elm_ui$Element$rgb, 0.17, 0.17, 0.17))
								]),
							$mdgriffith$elm_ui$Element$none),
							mainContent
						]))
				])));
	return {
		body: _List_fromArray(
			[body]),
		title: 'Elm Editor'
	};
};
var $author$project$Frontend$Main$main = $author$project$Frontend$BrowserApplicationInitWithTime$application(
	{
		init: $author$project$Frontend$Main$init,
		onUrlChange: $author$project$Frontend$Main$UrlChange,
		onUrlRequest: $author$project$Frontend$Main$UrlRequest,
		subscriptions: $author$project$Frontend$Main$subscriptions,
		update: $author$project$Frontend$Main$update,
		view: $author$project$Frontend$Main$view,
		viewWhileWaitingForTime: {
			body: _List_fromArray(
				[
					$elm$html$Html$text('Waiting for first measurement of time...')
				]),
			title: 'Elm Editor - Initializing'
		}
	});
_Platform_export({'Frontend':{'Main':{'init':$author$project$Frontend$Main$main(
	$elm$json$Json$Decode$succeed(_Utils_Tuple0))(0)}}});}(this));" }

elm_make_output_src_LanguageServiceWorker_elm_javascript =
    { base64 = "(function(scope){
'use strict';

function F(arity, fun, wrapper) {
  wrapper.a = arity;
  wrapper.f = fun;
  return wrapper;
}

function F2(fun) {
  return F(2, fun, function(a) { return function(b) { return fun(a,b); }; })
}
function F3(fun) {
  return F(3, fun, function(a) {
    return function(b) { return function(c) { return fun(a, b, c); }; };
  });
}
function F4(fun) {
  return F(4, fun, function(a) { return function(b) { return function(c) {
    return function(d) { return fun(a, b, c, d); }; }; };
  });
}
function F5(fun) {
  return F(5, fun, function(a) { return function(b) { return function(c) {
    return function(d) { return function(e) { return fun(a, b, c, d, e); }; }; }; };
  });
}
function F6(fun) {
  return F(6, fun, function(a) { return function(b) { return function(c) {
    return function(d) { return function(e) { return function(f) {
    return fun(a, b, c, d, e, f); }; }; }; }; };
  });
}
function F7(fun) {
  return F(7, fun, function(a) { return function(b) { return function(c) {
    return function(d) { return function(e) { return function(f) {
    return function(g) { return fun(a, b, c, d, e, f, g); }; }; }; }; }; };
  });
}
function F8(fun) {
  return F(8, fun, function(a) { return function(b) { return function(c) {
    return function(d) { return function(e) { return function(f) {
    return function(g) { return function(h) {
    return fun(a, b, c, d, e, f, g, h); }; }; }; }; }; }; };
  });
}
function F9(fun) {
  return F(9, fun, function(a) { return function(b) { return function(c) {
    return function(d) { return function(e) { return function(f) {
    return function(g) { return function(h) { return function(i) {
    return fun(a, b, c, d, e, f, g, h, i); }; }; }; }; }; }; }; };
  });
}

function A2(fun, a, b) {
  return fun.a === 2 ? fun.f(a, b) : fun(a)(b);
}
function A3(fun, a, b, c) {
  return fun.a === 3 ? fun.f(a, b, c) : fun(a)(b)(c);
}
function A4(fun, a, b, c, d) {
  return fun.a === 4 ? fun.f(a, b, c, d) : fun(a)(b)(c)(d);
}
function A5(fun, a, b, c, d, e) {
  return fun.a === 5 ? fun.f(a, b, c, d, e) : fun(a)(b)(c)(d)(e);
}
function A6(fun, a, b, c, d, e, f) {
  return fun.a === 6 ? fun.f(a, b, c, d, e, f) : fun(a)(b)(c)(d)(e)(f);
}
function A7(fun, a, b, c, d, e, f, g) {
  return fun.a === 7 ? fun.f(a, b, c, d, e, f, g) : fun(a)(b)(c)(d)(e)(f)(g);
}
function A8(fun, a, b, c, d, e, f, g, h) {
  return fun.a === 8 ? fun.f(a, b, c, d, e, f, g, h) : fun(a)(b)(c)(d)(e)(f)(g)(h);
}
function A9(fun, a, b, c, d, e, f, g, h, i) {
  return fun.a === 9 ? fun.f(a, b, c, d, e, f, g, h, i) : fun(a)(b)(c)(d)(e)(f)(g)(h)(i);
}

console.warn('Compiled in DEV mode. Follow the advice at https://elm-lang.org/0.19.1/optimize for better performance and smaller assets.');


var _List_Nil_UNUSED = { $: 0 };
var _List_Nil = { $: '[]' };

function _List_Cons_UNUSED(hd, tl) { return { $: 1, a: hd, b: tl }; }
function _List_Cons(hd, tl) { return { $: '::', a: hd, b: tl }; }


var _List_cons = F2(_List_Cons);

function _List_fromArray(arr)
{
	var out = _List_Nil;
	for (var i = arr.length; i--; )
	{
		out = _List_Cons(arr[i], out);
	}
	return out;
}

function _List_toArray(xs)
{
	for (var out = []; xs.b; xs = xs.b) // WHILE_CONS
	{
		out.push(xs.a);
	}
	return out;
}

var _List_map2 = F3(function(f, xs, ys)
{
	for (var arr = []; xs.b && ys.b; xs = xs.b, ys = ys.b) // WHILE_CONSES
	{
		arr.push(A2(f, xs.a, ys.a));
	}
	return _List_fromArray(arr);
});

var _List_map3 = F4(function(f, xs, ys, zs)
{
	for (var arr = []; xs.b && ys.b && zs.b; xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES
	{
		arr.push(A3(f, xs.a, ys.a, zs.a));
	}
	return _List_fromArray(arr);
});

var _List_map4 = F5(function(f, ws, xs, ys, zs)
{
	for (var arr = []; ws.b && xs.b && ys.b && zs.b; ws = ws.b, xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES
	{
		arr.push(A4(f, ws.a, xs.a, ys.a, zs.a));
	}
	return _List_fromArray(arr);
});

var _List_map5 = F6(function(f, vs, ws, xs, ys, zs)
{
	for (var arr = []; vs.b && ws.b && xs.b && ys.b && zs.b; vs = vs.b, ws = ws.b, xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES
	{
		arr.push(A5(f, vs.a, ws.a, xs.a, ys.a, zs.a));
	}
	return _List_fromArray(arr);
});

var _List_sortBy = F2(function(f, xs)
{
	return _List_fromArray(_List_toArray(xs).sort(function(a, b) {
		return _Utils_cmp(f(a), f(b));
	}));
});

var _List_sortWith = F2(function(f, xs)
{
	return _List_fromArray(_List_toArray(xs).sort(function(a, b) {
		var ord = A2(f, a, b);
		return ord === $elm$core$Basics$EQ ? 0 : ord === $elm$core$Basics$LT ? -1 : 1;
	}));
});



var _JsArray_empty = [];

function _JsArray_singleton(value)
{
    return [value];
}

function _JsArray_length(array)
{
    return array.length;
}

var _JsArray_initialize = F3(function(size, offset, func)
{
    var result = new Array(size);

    for (var i = 0; i < size; i++)
    {
        result[i] = func(offset + i);
    }

    return result;
});

var _JsArray_initializeFromList = F2(function (max, ls)
{
    var result = new Array(max);

    for (var i = 0; i < max && ls.b; i++)
    {
        result[i] = ls.a;
        ls = ls.b;
    }

    result.length = i;
    return _Utils_Tuple2(result, ls);
});

var _JsArray_unsafeGet = F2(function(index, array)
{
    return array[index];
});

var _JsArray_unsafeSet = F3(function(index, value, array)
{
    var length = array.length;
    var result = new Array(length);

    for (var i = 0; i < length; i++)
    {
        result[i] = array[i];
    }

    result[index] = value;
    return result;
});

var _JsArray_push = F2(function(value, array)
{
    var length = array.length;
    var result = new Array(length + 1);

    for (var i = 0; i < length; i++)
    {
        result[i] = array[i];
    }

    result[length] = value;
    return result;
});

var _JsArray_foldl = F3(function(func, acc, array)
{
    var length = array.length;

    for (var i = 0; i < length; i++)
    {
        acc = A2(func, array[i], acc);
    }

    return acc;
});

var _JsArray_foldr = F3(function(func, acc, array)
{
    for (var i = array.length - 1; i >= 0; i--)
    {
        acc = A2(func, array[i], acc);
    }

    return acc;
});

var _JsArray_map = F2(function(func, array)
{
    var length = array.length;
    var result = new Array(length);

    for (var i = 0; i < length; i++)
    {
        result[i] = func(array[i]);
    }

    return result;
});

var _JsArray_indexedMap = F3(function(func, offset, array)
{
    var length = array.length;
    var result = new Array(length);

    for (var i = 0; i < length; i++)
    {
        result[i] = A2(func, offset + i, array[i]);
    }

    return result;
});

var _JsArray_slice = F3(function(from, to, array)
{
    return array.slice(from, to);
});

var _JsArray_appendN = F3(function(n, dest, source)
{
    var destLen = dest.length;
    var itemsToCopy = n - destLen;

    if (itemsToCopy > source.length)
    {
        itemsToCopy = source.length;
    }

    var size = destLen + itemsToCopy;
    var result = new Array(size);

    for (var i = 0; i < destLen; i++)
    {
        result[i] = dest[i];
    }

    for (var i = 0; i < itemsToCopy; i++)
    {
        result[i + destLen] = source[i];
    }

    return result;
});



// LOG

var _Debug_log_UNUSED = F2(function(tag, value)
{
	return value;
});

var _Debug_log = F2(function(tag, value)
{
	console.log(tag + ': ' + _Debug_toString(value));
	return value;
});


// TODOS

function _Debug_todo(moduleName, region)
{
	return function(message) {
		_Debug_crash(8, moduleName, region, message);
	};
}

function _Debug_todoCase(moduleName, region, value)
{
	return function(message) {
		_Debug_crash(9, moduleName, region, value, message);
	};
}


// TO STRING

function _Debug_toString_UNUSED(value)
{
	return '<internals>';
}

function _Debug_toString(value)
{
	return _Debug_toAnsiString(false, value);
}

function _Debug_toAnsiString(ansi, value)
{
	if (typeof value === 'function')
	{
		return _Debug_internalColor(ansi, '<function>');
	}

	if (typeof value === 'boolean')
	{
		return _Debug_ctorColor(ansi, value ? 'True' : 'False');
	}

	if (typeof value === 'number')
	{
		return _Debug_numberColor(ansi, value + '');
	}

	if (value instanceof String)
	{
		return _Debug_charColor(ansi, "'" + _Debug_addSlashes(value, true) + "'");
	}

	if (typeof value === 'string')
	{
		return _Debug_stringColor(ansi, '"' + _Debug_addSlashes(value, false) + '"');
	}

	if (typeof value === 'object' && '$' in value)
	{
		var tag = value.$;

		if (typeof tag === 'number')
		{
			return _Debug_internalColor(ansi, '<internals>');
		}

		if (tag[0] === '#')
		{
			var output = [];
			for (var k in value)
			{
				if (k === '$') continue;
				output.push(_Debug_toAnsiString(ansi, value[k]));
			}
			return '(' + output.join(',') + ')';
		}

		if (tag === 'Set_elm_builtin')
		{
			return _Debug_ctorColor(ansi, 'Set')
				+ _Debug_fadeColor(ansi, '.fromList') + ' '
				+ _Debug_toAnsiString(ansi, $elm$core$Set$toList(value));
		}

		if (tag === 'RBNode_elm_builtin' || tag === 'RBEmpty_elm_builtin')
		{
			return _Debug_ctorColor(ansi, 'Dict')
				+ _Debug_fadeColor(ansi, '.fromList') + ' '
				+ _Debug_toAnsiString(ansi, $elm$core$Dict$toList(value));
		}

		if (tag === 'Array_elm_builtin')
		{
			return _Debug_ctorColor(ansi, 'Array')
				+ _Debug_fadeColor(ansi, '.fromList') + ' '
				+ _Debug_toAnsiString(ansi, $elm$core$Array$toList(value));
		}

		if (tag === '::' || tag === '[]')
		{
			var output = '[';

			value.b && (output += _Debug_toAnsiString(ansi, value.a), value = value.b)

			for (; value.b; value = value.b) // WHILE_CONS
			{
				output += ',' + _Debug_toAnsiString(ansi, value.a);
			}
			return output + ']';
		}

		var output = '';
		for (var i in value)
		{
			if (i === '$') continue;
			var str = _Debug_toAnsiString(ansi, value[i]);
			var c0 = str[0];
			var parenless = c0 === '{' || c0 === '(' || c0 === '[' || c0 === '<' || c0 === '"' || str.indexOf(' ') < 0;
			output += ' ' + (parenless ? str : '(' + str + ')');
		}
		return _Debug_ctorColor(ansi, tag) + output;
	}

	if (typeof DataView === 'function' && value instanceof DataView)
	{
		return _Debug_stringColor(ansi, '<' + value.byteLength + ' bytes>');
	}

	if (typeof File !== 'undefined' && value instanceof File)
	{
		return _Debug_internalColor(ansi, '<' + value.name + '>');
	}

	if (typeof value === 'object')
	{
		var output = [];
		for (var key in value)
		{
			var field = key[0] === '_' ? key.slice(1) : key;
			output.push(_Debug_fadeColor(ansi, field) + ' = ' + _Debug_toAnsiString(ansi, value[key]));
		}
		if (output.length === 0)
		{
			return '{}';
		}
		return '{ ' + output.join(', ') + ' }';
	}

	return _Debug_internalColor(ansi, '<internals>');
}

function _Debug_addSlashes(str, isChar)
{
	var s = str
		.replace(/\\/g, '\\\\')
		.replace(/\n/g, '\\n')
		.replace(/\t/g, '\\t')
		.replace(/\r/g, '\\r')
		.replace(/\v/g, '\\v')
		.replace(/\0/g, '\\0');

	if (isChar)
	{
		return s.replace(/\'/g, '\\\'');
	}
	else
	{
		return s.replace(/\"/g, '\\"');
	}
}

function _Debug_ctorColor(ansi, string)
{
	return ansi ? '\x1b[96m' + string + '\x1b[0m' : string;
}

function _Debug_numberColor(ansi, string)
{
	return ansi ? '\x1b[95m' + string + '\x1b[0m' : string;
}

function _Debug_stringColor(ansi, string)
{
	return ansi ? '\x1b[93m' + string + '\x1b[0m' : string;
}

function _Debug_charColor(ansi, string)
{
	return ansi ? '\x1b[92m' + string + '\x1b[0m' : string;
}

function _Debug_fadeColor(ansi, string)
{
	return ansi ? '\x1b[37m' + string + '\x1b[0m' : string;
}

function _Debug_internalColor(ansi, string)
{
	return ansi ? '\x1b[36m' + string + '\x1b[0m' : string;
}

function _Debug_toHexDigit(n)
{
	return String.fromCharCode(n < 10 ? 48 + n : 55 + n);
}


// CRASH


function _Debug_crash_UNUSED(identifier)
{
	throw new Error('https://github.com/elm/core/blob/1.0.0/hints/' + identifier + '.md');
}


function _Debug_crash(identifier, fact1, fact2, fact3, fact4)
{
	switch(identifier)
	{
		case 0:
			throw new Error('What node should I take over? In JavaScript I need something like:\n\n    Elm.Main.init({\n        node: document.getElementById("elm-node")\n    })\n\nYou need to do this with any Browser.sandbox or Browser.element program.');

		case 1:
			throw new Error('Browser.application programs cannot handle URLs like this:\n\n    ' + document.location.href + '\n\nWhat is the root? The root of your file system? Try looking at this program with `elm reactor` or some other server.');

		case 2:
			var jsonErrorString = fact1;
			throw new Error('Problem with the flags given to your Elm program on initialization.\n\n' + jsonErrorString);

		case 3:
			var portName = fact1;
			throw new Error('There can only be one port named `' + portName + '`, but your program has multiple.');

		case 4:
			var portName = fact1;
			var problem = fact2;
			throw new Error('Trying to send an unexpected type of value through port `' + portName + '`:\n' + problem);

		case 5:
			throw new Error('Trying to use `(==)` on functions.\nThere is no way to know if functions are "the same" in the Elm sense.\nRead more about this at https://package.elm-lang.org/packages/elm/core/latest/Basics#== which describes why it is this way and what the better version will look like.');

		case 6:
			var moduleName = fact1;
			throw new Error('Your page is loading multiple Elm scripts with a module named ' + moduleName + '. Maybe a duplicate script is getting loaded accidentally? If not, rename one of them so I know which is which!');

		case 8:
			var moduleName = fact1;
			var region = fact2;
			var message = fact3;
			throw new Error('TODO in module `' + moduleName + '` ' + _Debug_regionToString(region) + '\n\n' + message);

		case 9:
			var moduleName = fact1;
			var region = fact2;
			var value = fact3;
			var message = fact4;
			throw new Error(
				'TODO in module `' + moduleName + '` from the `case` expression '
				+ _Debug_regionToString(region) + '\n\nIt received the following value:\n\n    '
				+ _Debug_toString(value).replace('\n', '\n    ')
				+ '\n\nBut the branch that handles it says:\n\n    ' + message.replace('\n', '\n    ')
			);

		case 10:
			throw new Error('Bug in https://github.com/elm/virtual-dom/issues');

		case 11:
			throw new Error('Cannot perform mod 0. Division by zero error.');
	}
}

function _Debug_regionToString(region)
{
	if (region.start.line === region.end.line)
	{
		return 'on line ' + region.start.line;
	}
	return 'on lines ' + region.start.line + ' through ' + region.end.line;
}



// EQUALITY

function _Utils_eq(x, y)
{
	for (
		var pair, stack = [], isEqual = _Utils_eqHelp(x, y, 0, stack);
		isEqual && (pair = stack.pop());
		isEqual = _Utils_eqHelp(pair.a, pair.b, 0, stack)
		)
	{}

	return isEqual;
}

function _Utils_eqHelp(x, y, depth, stack)
{
	if (x === y)
	{
		return true;
	}

	if (typeof x !== 'object' || x === null || y === null)
	{
		typeof x === 'function' && _Debug_crash(5);
		return false;
	}

	if (depth > 100)
	{
		stack.push(_Utils_Tuple2(x,y));
		return true;
	}

	/**/
	if (x.$ === 'Set_elm_builtin')
	{
		x = $elm$core$Set$toList(x);
		y = $elm$core$Set$toList(y);
	}
	if (x.$ === 'RBNode_elm_builtin' || x.$ === 'RBEmpty_elm_builtin')
	{
		x = $elm$core$Dict$toList(x);
		y = $elm$core$Dict$toList(y);
	}
	//*/

	/**_UNUSED/
	if (x.$ < 0)
	{
		x = $elm$core$Dict$toList(x);
		y = $elm$core$Dict$toList(y);
	}
	//*/

	for (var key in x)
	{
		if (!_Utils_eqHelp(x[key], y[key], depth + 1, stack))
		{
			return false;
		}
	}
	return true;
}

var _Utils_equal = F2(_Utils_eq);
var _Utils_notEqual = F2(function(a, b) { return !_Utils_eq(a,b); });



// COMPARISONS

// Code in Generate/JavaScript.hs, Basics.js, and List.js depends on
// the particular integer values assigned to LT, EQ, and GT.

function _Utils_cmp(x, y, ord)
{
	if (typeof x !== 'object')
	{
		return x === y ? /*EQ*/ 0 : x < y ? /*LT*/ -1 : /*GT*/ 1;
	}

	/**/
	if (x instanceof String)
	{
		var a = x.valueOf();
		var b = y.valueOf();
		return a === b ? 0 : a < b ? -1 : 1;
	}
	//*/

	/**_UNUSED/
	if (typeof x.$ === 'undefined')
	//*/
	/**/
	if (x.$[0] === '#')
	//*/
	{
		return (ord = _Utils_cmp(x.a, y.a))
			? ord
			: (ord = _Utils_cmp(x.b, y.b))
				? ord
				: _Utils_cmp(x.c, y.c);
	}

	// traverse conses until end of a list or a mismatch
	for (; x.b && y.b && !(ord = _Utils_cmp(x.a, y.a)); x = x.b, y = y.b) {} // WHILE_CONSES
	return ord || (x.b ? /*GT*/ 1 : y.b ? /*LT*/ -1 : /*EQ*/ 0);
}

var _Utils_lt = F2(function(a, b) { return _Utils_cmp(a, b) < 0; });
var _Utils_le = F2(function(a, b) { return _Utils_cmp(a, b) < 1; });
var _Utils_gt = F2(function(a, b) { return _Utils_cmp(a, b) > 0; });
var _Utils_ge = F2(function(a, b) { return _Utils_cmp(a, b) >= 0; });

var _Utils_compare = F2(function(x, y)
{
	var n = _Utils_cmp(x, y);
	return n < 0 ? $elm$core$Basics$LT : n ? $elm$core$Basics$GT : $elm$core$Basics$EQ;
});


// COMMON VALUES

var _Utils_Tuple0_UNUSED = 0;
var _Utils_Tuple0 = { $: '#0' };

function _Utils_Tuple2_UNUSED(a, b) { return { a: a, b: b }; }
function _Utils_Tuple2(a, b) { return { $: '#2', a: a, b: b }; }

function _Utils_Tuple3_UNUSED(a, b, c) { return { a: a, b: b, c: c }; }
function _Utils_Tuple3(a, b, c) { return { $: '#3', a: a, b: b, c: c }; }

function _Utils_chr_UNUSED(c) { return c; }
function _Utils_chr(c) { return new String(c); }


// RECORDS

function _Utils_update(oldRecord, updatedFields)
{
	var newRecord = {};

	for (var key in oldRecord)
	{
		newRecord[key] = oldRecord[key];
	}

	for (var key in updatedFields)
	{
		newRecord[key] = updatedFields[key];
	}

	return newRecord;
}


// APPEND

var _Utils_append = F2(_Utils_ap);

function _Utils_ap(xs, ys)
{
	// append Strings
	if (typeof xs === 'string')
	{
		return xs + ys;
	}

	// append Lists
	if (!xs.b)
	{
		return ys;
	}
	var root = _List_Cons(xs.a, ys);
	xs = xs.b
	for (var curr = root; xs.b; xs = xs.b) // WHILE_CONS
	{
		curr = curr.b = _List_Cons(xs.a, ys);
	}
	return root;
}



// MATH

var _Basics_add = F2(function(a, b) { return a + b; });
var _Basics_sub = F2(function(a, b) { return a - b; });
var _Basics_mul = F2(function(a, b) { return a * b; });
var _Basics_fdiv = F2(function(a, b) { return a / b; });
var _Basics_idiv = F2(function(a, b) { return (a / b) | 0; });
var _Basics_pow = F2(Math.pow);

var _Basics_remainderBy = F2(function(b, a) { return a % b; });

// https://www.microsoft.com/en-us/research/wp-content/uploads/2016/02/divmodnote-letter.pdf
var _Basics_modBy = F2(function(modulus, x)
{
	var answer = x % modulus;
	return modulus === 0
		? _Debug_crash(11)
		:
	((answer > 0 && modulus < 0) || (answer < 0 && modulus > 0))
		? answer + modulus
		: answer;
});


// TRIGONOMETRY

var _Basics_pi = Math.PI;
var _Basics_e = Math.E;
var _Basics_cos = Math.cos;
var _Basics_sin = Math.sin;
var _Basics_tan = Math.tan;
var _Basics_acos = Math.acos;
var _Basics_asin = Math.asin;
var _Basics_atan = Math.atan;
var _Basics_atan2 = F2(Math.atan2);


// MORE MATH

function _Basics_toFloat(x) { return x; }
function _Basics_truncate(n) { return n | 0; }
function _Basics_isInfinite(n) { return n === Infinity || n === -Infinity; }

var _Basics_ceiling = Math.ceil;
var _Basics_floor = Math.floor;
var _Basics_round = Math.round;
var _Basics_sqrt = Math.sqrt;
var _Basics_log = Math.log;
var _Basics_isNaN = isNaN;


// BOOLEANS

function _Basics_not(bool) { return !bool; }
var _Basics_and = F2(function(a, b) { return a && b; });
var _Basics_or  = F2(function(a, b) { return a || b; });
var _Basics_xor = F2(function(a, b) { return a !== b; });



var _String_cons = F2(function(chr, str)
{
	return chr + str;
});

function _String_uncons(string)
{
	var word = string.charCodeAt(0);
	return !isNaN(word)
		? $elm$core$Maybe$Just(
			0xD800 <= word && word <= 0xDBFF
				? _Utils_Tuple2(_Utils_chr(string[0] + string[1]), string.slice(2))
				: _Utils_Tuple2(_Utils_chr(string[0]), string.slice(1))
		)
		: $elm$core$Maybe$Nothing;
}

var _String_append = F2(function(a, b)
{
	return a + b;
});

function _String_length(str)
{
	return str.length;
}

var _String_map = F2(function(func, string)
{
	var len = string.length;
	var array = new Array(len);
	var i = 0;
	while (i < len)
	{
		var word = string.charCodeAt(i);
		if (0xD800 <= word && word <= 0xDBFF)
		{
			array[i] = func(_Utils_chr(string[i] + string[i+1]));
			i += 2;
			continue;
		}
		array[i] = func(_Utils_chr(string[i]));
		i++;
	}
	return array.join('');
});

var _String_filter = F2(function(isGood, str)
{
	var arr = [];
	var len = str.length;
	var i = 0;
	while (i < len)
	{
		var char = str[i];
		var word = str.charCodeAt(i);
		i++;
		if (0xD800 <= word && word <= 0xDBFF)
		{
			char += str[i];
			i++;
		}

		if (isGood(_Utils_chr(char)))
		{
			arr.push(char);
		}
	}
	return arr.join('');
});

function _String_reverse(str)
{
	var len = str.length;
	var arr = new Array(len);
	var i = 0;
	while (i < len)
	{
		var word = str.charCodeAt(i);
		if (0xD800 <= word && word <= 0xDBFF)
		{
			arr[len - i] = str[i + 1];
			i++;
			arr[len - i] = str[i - 1];
			i++;
		}
		else
		{
			arr[len - i] = str[i];
			i++;
		}
	}
	return arr.join('');
}

var _String_foldl = F3(function(func, state, string)
{
	var len = string.length;
	var i = 0;
	while (i < len)
	{
		var char = string[i];
		var word = string.charCodeAt(i);
		i++;
		if (0xD800 <= word && word <= 0xDBFF)
		{
			char += string[i];
			i++;
		}
		state = A2(func, _Utils_chr(char), state);
	}
	return state;
});

var _String_foldr = F3(function(func, state, string)
{
	var i = string.length;
	while (i--)
	{
		var char = string[i];
		var word = string.charCodeAt(i);
		if (0xDC00 <= word && word <= 0xDFFF)
		{
			i--;
			char = string[i] + char;
		}
		state = A2(func, _Utils_chr(char), state);
	}
	return state;
});

var _String_split = F2(function(sep, str)
{
	return str.split(sep);
});

var _String_join = F2(function(sep, strs)
{
	return strs.join(sep);
});

var _String_slice = F3(function(start, end, str) {
	return str.slice(start, end);
});

function _String_trim(str)
{
	return str.trim();
}

function _String_trimLeft(str)
{
	return str.replace(/^\s+/, '');
}

function _String_trimRight(str)
{
	return str.replace(/\s+$/, '');
}

function _String_words(str)
{
	return _List_fromArray(str.trim().split(/\s+/g));
}

function _String_lines(str)
{
	return _List_fromArray(str.split(/\r\n|\r|\n/g));
}

function _String_toUpper(str)
{
	return str.toUpperCase();
}

function _String_toLower(str)
{
	return str.toLowerCase();
}

var _String_any = F2(function(isGood, string)
{
	var i = string.length;
	while (i--)
	{
		var char = string[i];
		var word = string.charCodeAt(i);
		if (0xDC00 <= word && word <= 0xDFFF)
		{
			i--;
			char = string[i] + char;
		}
		if (isGood(_Utils_chr(char)))
		{
			return true;
		}
	}
	return false;
});

var _String_all = F2(function(isGood, string)
{
	var i = string.length;
	while (i--)
	{
		var char = string[i];
		var word = string.charCodeAt(i);
		if (0xDC00 <= word && word <= 0xDFFF)
		{
			i--;
			char = string[i] + char;
		}
		if (!isGood(_Utils_chr(char)))
		{
			return false;
		}
	}
	return true;
});

var _String_contains = F2(function(sub, str)
{
	return str.indexOf(sub) > -1;
});

var _String_startsWith = F2(function(sub, str)
{
	return str.indexOf(sub) === 0;
});

var _String_endsWith = F2(function(sub, str)
{
	return str.length >= sub.length &&
		str.lastIndexOf(sub) === str.length - sub.length;
});

var _String_indexes = F2(function(sub, str)
{
	var subLen = sub.length;

	if (subLen < 1)
	{
		return _List_Nil;
	}

	var i = 0;
	var is = [];

	while ((i = str.indexOf(sub, i)) > -1)
	{
		is.push(i);
		i = i + subLen;
	}

	return _List_fromArray(is);
});


// TO STRING

function _String_fromNumber(number)
{
	return number + '';
}


// INT CONVERSIONS

function _String_toInt(str)
{
	var total = 0;
	var code0 = str.charCodeAt(0);
	var start = code0 == 0x2B /* + */ || code0 == 0x2D /* - */ ? 1 : 0;

	for (var i = start; i < str.length; ++i)
	{
		var code = str.charCodeAt(i);
		if (code < 0x30 || 0x39 < code)
		{
			return $elm$core$Maybe$Nothing;
		}
		total = 10 * total + code - 0x30;
	}

	return i == start
		? $elm$core$Maybe$Nothing
		: $elm$core$Maybe$Just(code0 == 0x2D ? -total : total);
}


// FLOAT CONVERSIONS

function _String_toFloat(s)
{
	// check if it is a hex, octal, or binary number
	if (s.length === 0 || /[\sxbo]/.test(s))
	{
		return $elm$core$Maybe$Nothing;
	}
	var n = +s;
	// faster isNaN check
	return n === n ? $elm$core$Maybe$Just(n) : $elm$core$Maybe$Nothing;
}

function _String_fromList(chars)
{
	return _List_toArray(chars).join('');
}




function _Char_toCode(char)
{
	var code = char.charCodeAt(0);
	if (0xD800 <= code && code <= 0xDBFF)
	{
		return (code - 0xD800) * 0x400 + char.charCodeAt(1) - 0xDC00 + 0x10000
	}
	return code;
}

function _Char_fromCode(code)
{
	return _Utils_chr(
		(code < 0 || 0x10FFFF < code)
			? '\uFFFD'
			:
		(code <= 0xFFFF)
			? String.fromCharCode(code)
			:
		(code -= 0x10000,
			String.fromCharCode(Math.floor(code / 0x400) + 0xD800, code % 0x400 + 0xDC00)
		)
	);
}

function _Char_toUpper(char)
{
	return _Utils_chr(char.toUpperCase());
}

function _Char_toLower(char)
{
	return _Utils_chr(char.toLowerCase());
}

function _Char_toLocaleUpper(char)
{
	return _Utils_chr(char.toLocaleUpperCase());
}

function _Char_toLocaleLower(char)
{
	return _Utils_chr(char.toLocaleLowerCase());
}



/**/
function _Json_errorToString(error)
{
	return $elm$json$Json$Decode$errorToString(error);
}
//*/


// CORE DECODERS

function _Json_succeed(msg)
{
	return {
		$: 0,
		a: msg
	};
}

function _Json_fail(msg)
{
	return {
		$: 1,
		a: msg
	};
}

function _Json_decodePrim(decoder)
{
	return { $: 2, b: decoder };
}

var _Json_decodeInt = _Json_decodePrim(function(value) {
	return (typeof value !== 'number')
		? _Json_expecting('an INT', value)
		:
	(-2147483647 < value && value < 2147483647 && (value | 0) === value)
		? $elm$core$Result$Ok(value)
		:
	(isFinite(value) && !(value % 1))
		? $elm$core$Result$Ok(value)
		: _Json_expecting('an INT', value);
});

var _Json_decodeBool = _Json_decodePrim(function(value) {
	return (typeof value === 'boolean')
		? $elm$core$Result$Ok(value)
		: _Json_expecting('a BOOL', value);
});

var _Json_decodeFloat = _Json_decodePrim(function(value) {
	return (typeof value === 'number')
		? $elm$core$Result$Ok(value)
		: _Json_expecting('a FLOAT', value);
});

var _Json_decodeValue = _Json_decodePrim(function(value) {
	return $elm$core$Result$Ok(_Json_wrap(value));
});

var _Json_decodeString = _Json_decodePrim(function(value) {
	return (typeof value === 'string')
		? $elm$core$Result$Ok(value)
		: (value instanceof String)
			? $elm$core$Result$Ok(value + '')
			: _Json_expecting('a STRING', value);
});

function _Json_decodeList(decoder) { return { $: 3, b: decoder }; }
function _Json_decodeArray(decoder) { return { $: 4, b: decoder }; }

function _Json_decodeNull(value) { return { $: 5, c: value }; }

var _Json_decodeField = F2(function(field, decoder)
{
	return {
		$: 6,
		d: field,
		b: decoder
	};
});

var _Json_decodeIndex = F2(function(index, decoder)
{
	return {
		$: 7,
		e: index,
		b: decoder
	};
});

function _Json_decodeKeyValuePairs(decoder)
{
	return {
		$: 8,
		b: decoder
	};
}

function _Json_mapMany(f, decoders)
{
	return {
		$: 9,
		f: f,
		g: decoders
	};
}

var _Json_andThen = F2(function(callback, decoder)
{
	return {
		$: 10,
		b: decoder,
		h: callback
	};
});

function _Json_oneOf(decoders)
{
	return {
		$: 11,
		g: decoders
	};
}


// DECODING OBJECTS

var _Json_map1 = F2(function(f, d1)
{
	return _Json_mapMany(f, [d1]);
});

var _Json_map2 = F3(function(f, d1, d2)
{
	return _Json_mapMany(f, [d1, d2]);
});

var _Json_map3 = F4(function(f, d1, d2, d3)
{
	return _Json_mapMany(f, [d1, d2, d3]);
});

var _Json_map4 = F5(function(f, d1, d2, d3, d4)
{
	return _Json_mapMany(f, [d1, d2, d3, d4]);
});

var _Json_map5 = F6(function(f, d1, d2, d3, d4, d5)
{
	return _Json_mapMany(f, [d1, d2, d3, d4, d5]);
});

var _Json_map6 = F7(function(f, d1, d2, d3, d4, d5, d6)
{
	return _Json_mapMany(f, [d1, d2, d3, d4, d5, d6]);
});

var _Json_map7 = F8(function(f, d1, d2, d3, d4, d5, d6, d7)
{
	return _Json_mapMany(f, [d1, d2, d3, d4, d5, d6, d7]);
});

var _Json_map8 = F9(function(f, d1, d2, d3, d4, d5, d6, d7, d8)
{
	return _Json_mapMany(f, [d1, d2, d3, d4, d5, d6, d7, d8]);
});


// DECODE

var _Json_runOnString = F2(function(decoder, string)
{
	try
	{
		var value = JSON.parse(string);
		return _Json_runHelp(decoder, value);
	}
	catch (e)
	{
		return $elm$core$Result$Err(A2($elm$json$Json$Decode$Failure, 'This is not valid JSON! ' + e.message, _Json_wrap(string)));
	}
});

var _Json_run = F2(function(decoder, value)
{
	return _Json_runHelp(decoder, _Json_unwrap(value));
});

function _Json_runHelp(decoder, value)
{
	switch (decoder.$)
	{
		case 2:
			return decoder.b(value);

		case 5:
			return (value === null)
				? $elm$core$Result$Ok(decoder.c)
				: _Json_expecting('null', value);

		case 3:
			if (!_Json_isArray(value))
			{
				return _Json_expecting('a LIST', value);
			}
			return _Json_runArrayDecoder(decoder.b, value, _List_fromArray);

		case 4:
			if (!_Json_isArray(value))
			{
				return _Json_expecting('an ARRAY', value);
			}
			return _Json_runArrayDecoder(decoder.b, value, _Json_toElmArray);

		case 6:
			var field = decoder.d;
			if (typeof value !== 'object' || value === null || !(field in value))
			{
				return _Json_expecting('an OBJECT with a field named `' + field + '`', value);
			}
			var result = _Json_runHelp(decoder.b, value[field]);
			return ($elm$core$Result$isOk(result)) ? result : $elm$core$Result$Err(A2($elm$json$Json$Decode$Field, field, result.a));

		case 7:
			var index = decoder.e;
			if (!_Json_isArray(value))
			{
				return _Json_expecting('an ARRAY', value);
			}
			if (index >= value.length)
			{
				return _Json_expecting('a LONGER array. Need index ' + index + ' but only see ' + value.length + ' entries', value);
			}
			var result = _Json_runHelp(decoder.b, value[index]);
			return ($elm$core$Result$isOk(result)) ? result : $elm$core$Result$Err(A2($elm$json$Json$Decode$Index, index, result.a));

		case 8:
			if (typeof value !== 'object' || value === null || _Json_isArray(value))
			{
				return _Json_expecting('an OBJECT', value);
			}

			var keyValuePairs = _List_Nil;
			// TODO test perf of Object.keys and switch when support is good enough
			for (var key in value)
			{
				if (value.hasOwnProperty(key))
				{
					var result = _Json_runHelp(decoder.b, value[key]);
					if (!$elm$core$Result$isOk(result))
					{
						return $elm$core$Result$Err(A2($elm$json$Json$Decode$Field, key, result.a));
					}
					keyValuePairs = _List_Cons(_Utils_Tuple2(key, result.a), keyValuePairs);
				}
			}
			return $elm$core$Result$Ok($elm$core$List$reverse(keyValuePairs));

		case 9:
			var answer = decoder.f;
			var decoders = decoder.g;
			for (var i = 0; i < decoders.length; i++)
			{
				var result = _Json_runHelp(decoders[i], value);
				if (!$elm$core$Result$isOk(result))
				{
					return result;
				}
				answer = answer(result.a);
			}
			return $elm$core$Result$Ok(answer);

		case 10:
			var result = _Json_runHelp(decoder.b, value);
			return (!$elm$core$Result$isOk(result))
				? result
				: _Json_runHelp(decoder.h(result.a), value);

		case 11:
			var errors = _List_Nil;
			for (var temp = decoder.g; temp.b; temp = temp.b) // WHILE_CONS
			{
				var result = _Json_runHelp(temp.a, value);
				if ($elm$core$Result$isOk(result))
				{
					return result;
				}
				errors = _List_Cons(result.a, errors);
			}
			return $elm$core$Result$Err($elm$json$Json$Decode$OneOf($elm$core$List$reverse(errors)));

		case 1:
			return $elm$core$Result$Err(A2($elm$json$Json$Decode$Failure, decoder.a, _Json_wrap(value)));

		case 0:
			return $elm$core$Result$Ok(decoder.a);
	}
}

function _Json_runArrayDecoder(decoder, value, toElmValue)
{
	var len = value.length;
	var array = new Array(len);
	for (var i = 0; i < len; i++)
	{
		var result = _Json_runHelp(decoder, value[i]);
		if (!$elm$core$Result$isOk(result))
		{
			return $elm$core$Result$Err(A2($elm$json$Json$Decode$Index, i, result.a));
		}
		array[i] = result.a;
	}
	return $elm$core$Result$Ok(toElmValue(array));
}

function _Json_isArray(value)
{
	return Array.isArray(value) || (typeof FileList !== 'undefined' && value instanceof FileList);
}

function _Json_toElmArray(array)
{
	return A2($elm$core$Array$initialize, array.length, function(i) { return array[i]; });
}

function _Json_expecting(type, value)
{
	return $elm$core$Result$Err(A2($elm$json$Json$Decode$Failure, 'Expecting ' + type, _Json_wrap(value)));
}


// EQUALITY

function _Json_equality(x, y)
{
	if (x === y)
	{
		return true;
	}

	if (x.$ !== y.$)
	{
		return false;
	}

	switch (x.$)
	{
		case 0:
		case 1:
			return x.a === y.a;

		case 2:
			return x.b === y.b;

		case 5:
			return x.c === y.c;

		case 3:
		case 4:
		case 8:
			return _Json_equality(x.b, y.b);

		case 6:
			return x.d === y.d && _Json_equality(x.b, y.b);

		case 7:
			return x.e === y.e && _Json_equality(x.b, y.b);

		case 9:
			return x.f === y.f && _Json_listEquality(x.g, y.g);

		case 10:
			return x.h === y.h && _Json_equality(x.b, y.b);

		case 11:
			return _Json_listEquality(x.g, y.g);
	}
}

function _Json_listEquality(aDecoders, bDecoders)
{
	var len = aDecoders.length;
	if (len !== bDecoders.length)
	{
		return false;
	}
	for (var i = 0; i < len; i++)
	{
		if (!_Json_equality(aDecoders[i], bDecoders[i]))
		{
			return false;
		}
	}
	return true;
}


// ENCODE

var _Json_encode = F2(function(indentLevel, value)
{
	return JSON.stringify(_Json_unwrap(value), null, indentLevel) + '';
});

function _Json_wrap(value) { return { $: 0, a: value }; }
function _Json_unwrap(value) { return value.a; }

function _Json_wrap_UNUSED(value) { return value; }
function _Json_unwrap_UNUSED(value) { return value; }

function _Json_emptyArray() { return []; }
function _Json_emptyObject() { return {}; }

var _Json_addField = F3(function(key, value, object)
{
	object[key] = _Json_unwrap(value);
	return object;
});

function _Json_addEntry(func)
{
	return F2(function(entry, array)
	{
		array.push(_Json_unwrap(func(entry)));
		return array;
	});
}

var _Json_encodeNull = _Json_wrap(null);



// TASKS

function _Scheduler_succeed(value)
{
	return {
		$: 0,
		a: value
	};
}

function _Scheduler_fail(error)
{
	return {
		$: 1,
		a: error
	};
}

function _Scheduler_binding(callback)
{
	return {
		$: 2,
		b: callback,
		c: null
	};
}

var _Scheduler_andThen = F2(function(callback, task)
{
	return {
		$: 3,
		b: callback,
		d: task
	};
});

var _Scheduler_onError = F2(function(callback, task)
{
	return {
		$: 4,
		b: callback,
		d: task
	};
});

function _Scheduler_receive(callback)
{
	return {
		$: 5,
		b: callback
	};
}


// PROCESSES

var _Scheduler_guid = 0;

function _Scheduler_rawSpawn(task)
{
	var proc = {
		$: 0,
		e: _Scheduler_guid++,
		f: task,
		g: null,
		h: []
	};

	_Scheduler_enqueue(proc);

	return proc;
}

function _Scheduler_spawn(task)
{
	return _Scheduler_binding(function(callback) {
		callback(_Scheduler_succeed(_Scheduler_rawSpawn(task)));
	});
}

function _Scheduler_rawSend(proc, msg)
{
	proc.h.push(msg);
	_Scheduler_enqueue(proc);
}

var _Scheduler_send = F2(function(proc, msg)
{
	return _Scheduler_binding(function(callback) {
		_Scheduler_rawSend(proc, msg);
		callback(_Scheduler_succeed(_Utils_Tuple0));
	});
});

function _Scheduler_kill(proc)
{
	return _Scheduler_binding(function(callback) {
		var task = proc.f;
		if (task.$ === 2 && task.c)
		{
			task.c();
		}

		proc.f = null;

		callback(_Scheduler_succeed(_Utils_Tuple0));
	});
}


/* STEP PROCESSES

type alias Process =
  { $ : tag
  , id : unique_id
  , root : Task
  , stack : null | { $: SUCCEED | FAIL, a: callback, b: stack }
  , mailbox : [msg]
  }

*/


var _Scheduler_working = false;
var _Scheduler_queue = [];


function _Scheduler_enqueue(proc)
{
	_Scheduler_queue.push(proc);
	if (_Scheduler_working)
	{
		return;
	}
	_Scheduler_working = true;
	while (proc = _Scheduler_queue.shift())
	{
		_Scheduler_step(proc);
	}
	_Scheduler_working = false;
}


function _Scheduler_step(proc)
{
	while (proc.f)
	{
		var rootTag = proc.f.$;
		if (rootTag === 0 || rootTag === 1)
		{
			while (proc.g && proc.g.$ !== rootTag)
			{
				proc.g = proc.g.i;
			}
			if (!proc.g)
			{
				return;
			}
			proc.f = proc.g.b(proc.f.a);
			proc.g = proc.g.i;
		}
		else if (rootTag === 2)
		{
			proc.f.c = proc.f.b(function(newRoot) {
				proc.f = newRoot;
				_Scheduler_enqueue(proc);
			});
			return;
		}
		else if (rootTag === 5)
		{
			if (proc.h.length === 0)
			{
				return;
			}
			proc.f = proc.f.b(proc.h.shift());
		}
		else // if (rootTag === 3 || rootTag === 4)
		{
			proc.g = {
				$: rootTag === 3 ? 0 : 1,
				b: proc.f.b,
				i: proc.g
			};
			proc.f = proc.f.d;
		}
	}
}



function _Process_sleep(time)
{
	return _Scheduler_binding(function(callback) {
		var id = setTimeout(function() {
			callback(_Scheduler_succeed(_Utils_Tuple0));
		}, time);

		return function() { clearTimeout(id); };
	});
}




// PROGRAMS


var _Platform_worker = F4(function(impl, flagDecoder, debugMetadata, args)
{
	return _Platform_initialize(
		flagDecoder,
		args,
		impl.init,
		impl.update,
		impl.subscriptions,
		function() { return function() {} }
	);
});



// INITIALIZE A PROGRAM


function _Platform_initialize(flagDecoder, args, init, update, subscriptions, stepperBuilder)
{
	var result = A2(_Json_run, flagDecoder, _Json_wrap(args ? args['flags'] : undefined));
	$elm$core$Result$isOk(result) || _Debug_crash(2 /**/, _Json_errorToString(result.a) /**/);
	var managers = {};
	var initPair = init(result.a);
	var model = initPair.a;
	var stepper = stepperBuilder(sendToApp, model);
	var ports = _Platform_setupEffects(managers, sendToApp);

	function sendToApp(msg, viewMetadata)
	{
		var pair = A2(update, msg, model);
		stepper(model = pair.a, viewMetadata);
		_Platform_enqueueEffects(managers, pair.b, subscriptions(model));
	}

	_Platform_enqueueEffects(managers, initPair.b, subscriptions(model));

	return ports ? { ports: ports } : {};
}



// TRACK PRELOADS
//
// This is used by code in elm/browser and elm/http
// to register any HTTP requests that are triggered by init.
//


var _Platform_preload;


function _Platform_registerPreload(url)
{
	_Platform_preload.add(url);
}



// EFFECT MANAGERS


var _Platform_effectManagers = {};


function _Platform_setupEffects(managers, sendToApp)
{
	var ports;

	// setup all necessary effect managers
	for (var key in _Platform_effectManagers)
	{
		var manager = _Platform_effectManagers[key];

		if (manager.a)
		{
			ports = ports || {};
			ports[key] = manager.a(key, sendToApp);
		}

		managers[key] = _Platform_instantiateManager(manager, sendToApp);
	}

	return ports;
}


function _Platform_createManager(init, onEffects, onSelfMsg, cmdMap, subMap)
{
	return {
		b: init,
		c: onEffects,
		d: onSelfMsg,
		e: cmdMap,
		f: subMap
	};
}


function _Platform_instantiateManager(info, sendToApp)
{
	var router = {
		g: sendToApp,
		h: undefined
	};

	var onEffects = info.c;
	var onSelfMsg = info.d;
	var cmdMap = info.e;
	var subMap = info.f;

	function loop(state)
	{
		return A2(_Scheduler_andThen, loop, _Scheduler_receive(function(msg)
		{
			var value = msg.a;

			if (msg.$ === 0)
			{
				return A3(onSelfMsg, router, value, state);
			}

			return cmdMap && subMap
				? A4(onEffects, router, value.i, value.j, state)
				: A3(onEffects, router, cmdMap ? value.i : value.j, state);
		}));
	}

	return router.h = _Scheduler_rawSpawn(A2(_Scheduler_andThen, loop, info.b));
}



// ROUTING


var _Platform_sendToApp = F2(function(router, msg)
{
	return _Scheduler_binding(function(callback)
	{
		router.g(msg);
		callback(_Scheduler_succeed(_Utils_Tuple0));
	});
});


var _Platform_sendToSelf = F2(function(router, msg)
{
	return A2(_Scheduler_send, router.h, {
		$: 0,
		a: msg
	});
});



// BAGS


function _Platform_leaf(home)
{
	return function(value)
	{
		return {
			$: 1,
			k: home,
			l: value
		};
	};
}


function _Platform_batch(list)
{
	return {
		$: 2,
		m: list
	};
}


var _Platform_map = F2(function(tagger, bag)
{
	return {
		$: 3,
		n: tagger,
		o: bag
	}
});



// PIPE BAGS INTO EFFECT MANAGERS
//
// Effects must be queued!
//
// Say your init contains a synchronous command, like Time.now or Time.here
//
//   - This will produce a batch of effects (FX_1)
//   - The synchronous task triggers the subsequent `update` call
//   - This will produce a batch of effects (FX_2)
//
// If we just start dispatching FX_2, subscriptions from FX_2 can be processed
// before subscriptions from FX_1. No good! Earlier versions of this code had
// this problem, leading to these reports:
//
//   https://github.com/elm/core/issues/980
//   https://github.com/elm/core/pull/981
//   https://github.com/elm/compiler/issues/1776
//
// The queue is necessary to avoid ordering issues for synchronous commands.


// Why use true/false here? Why not just check the length of the queue?
// The goal is to detect "are we currently dispatching effects?" If we
// are, we need to bail and let the ongoing while loop handle things.
//
// Now say the queue has 1 element. When we dequeue the final element,
// the queue will be empty, but we are still actively dispatching effects.
// So you could get queue jumping in a really tricky category of cases.
//
var _Platform_effectsQueue = [];
var _Platform_effectsActive = false;


function _Platform_enqueueEffects(managers, cmdBag, subBag)
{
	_Platform_effectsQueue.push({ p: managers, q: cmdBag, r: subBag });

	if (_Platform_effectsActive) return;

	_Platform_effectsActive = true;
	for (var fx; fx = _Platform_effectsQueue.shift(); )
	{
		_Platform_dispatchEffects(fx.p, fx.q, fx.r);
	}
	_Platform_effectsActive = false;
}


function _Platform_dispatchEffects(managers, cmdBag, subBag)
{
	var effectsDict = {};
	_Platform_gatherEffects(true, cmdBag, effectsDict, null);
	_Platform_gatherEffects(false, subBag, effectsDict, null);

	for (var home in managers)
	{
		_Scheduler_rawSend(managers[home], {
			$: 'fx',
			a: effectsDict[home] || { i: _List_Nil, j: _List_Nil }
		});
	}
}


function _Platform_gatherEffects(isCmd, bag, effectsDict, taggers)
{
	switch (bag.$)
	{
		case 1:
			var home = bag.k;
			var effect = _Platform_toEffect(isCmd, home, taggers, bag.l);
			effectsDict[home] = _Platform_insert(isCmd, effect, effectsDict[home]);
			return;

		case 2:
			for (var list = bag.m; list.b; list = list.b) // WHILE_CONS
			{
				_Platform_gatherEffects(isCmd, list.a, effectsDict, taggers);
			}
			return;

		case 3:
			_Platform_gatherEffects(isCmd, bag.o, effectsDict, {
				s: bag.n,
				t: taggers
			});
			return;
	}
}


function _Platform_toEffect(isCmd, home, taggers, value)
{
	function applyTaggers(x)
	{
		for (var temp = taggers; temp; temp = temp.t)
		{
			x = temp.s(x);
		}
		return x;
	}

	var map = isCmd
		? _Platform_effectManagers[home].e
		: _Platform_effectManagers[home].f;

	return A2(map, applyTaggers, value)
}


function _Platform_insert(isCmd, newEffect, effects)
{
	effects = effects || { i: _List_Nil, j: _List_Nil };

	isCmd
		? (effects.i = _List_Cons(newEffect, effects.i))
		: (effects.j = _List_Cons(newEffect, effects.j));

	return effects;
}



// PORTS


function _Platform_checkPortName(name)
{
	if (_Platform_effectManagers[name])
	{
		_Debug_crash(3, name)
	}
}



// OUTGOING PORTS


function _Platform_outgoingPort(name, converter)
{
	_Platform_checkPortName(name);
	_Platform_effectManagers[name] = {
		e: _Platform_outgoingPortMap,
		u: converter,
		a: _Platform_setupOutgoingPort
	};
	return _Platform_leaf(name);
}


var _Platform_outgoingPortMap = F2(function(tagger, value) { return value; });


function _Platform_setupOutgoingPort(name)
{
	var subs = [];
	var converter = _Platform_effectManagers[name].u;

	// CREATE MANAGER

	var init = _Process_sleep(0);

	_Platform_effectManagers[name].b = init;
	_Platform_effectManagers[name].c = F3(function(router, cmdList, state)
	{
		for ( ; cmdList.b; cmdList = cmdList.b) // WHILE_CONS
		{
			// grab a separate reference to subs in case unsubscribe is called
			var currentSubs = subs;
			var value = _Json_unwrap(converter(cmdList.a));
			for (var i = 0; i < currentSubs.length; i++)
			{
				currentSubs[i](value);
			}
		}
		return init;
	});

	// PUBLIC API

	function subscribe(callback)
	{
		subs.push(callback);
	}

	function unsubscribe(callback)
	{
		// copy subs into a new array in case unsubscribe is called within a
		// subscribed callback
		subs = subs.slice();
		var index = subs.indexOf(callback);
		if (index >= 0)
		{
			subs.splice(index, 1);
		}
	}

	return {
		subscribe: subscribe,
		unsubscribe: unsubscribe
	};
}



// INCOMING PORTS


function _Platform_incomingPort(name, converter)
{
	_Platform_checkPortName(name);
	_Platform_effectManagers[name] = {
		f: _Platform_incomingPortMap,
		u: converter,
		a: _Platform_setupIncomingPort
	};
	return _Platform_leaf(name);
}


var _Platform_incomingPortMap = F2(function(tagger, finalTagger)
{
	return function(value)
	{
		return tagger(finalTagger(value));
	};
});


function _Platform_setupIncomingPort(name, sendToApp)
{
	var subs = _List_Nil;
	var converter = _Platform_effectManagers[name].u;

	// CREATE MANAGER

	var init = _Scheduler_succeed(null);

	_Platform_effectManagers[name].b = init;
	_Platform_effectManagers[name].c = F3(function(router, subList, state)
	{
		subs = subList;
		return init;
	});

	// PUBLIC API

	function send(incomingValue)
	{
		var result = A2(_Json_run, converter, _Json_wrap(incomingValue));

		$elm$core$Result$isOk(result) || _Debug_crash(4, name, result.a);

		var value = result.a;
		for (var temp = subs; temp.b; temp = temp.b) // WHILE_CONS
		{
			sendToApp(temp.a(value));
		}
	}

	return { send: send };
}



// EXPORT ELM MODULES
//
// Have DEBUG and PROD versions so that we can (1) give nicer errors in
// debug mode and (2) not pay for the bits needed for that in prod mode.
//


function _Platform_export_UNUSED(exports)
{
	scope['Elm']
		? _Platform_mergeExportsProd(scope['Elm'], exports)
		: scope['Elm'] = exports;
}


function _Platform_mergeExportsProd(obj, exports)
{
	for (var name in exports)
	{
		(name in obj)
			? (name == 'init')
				? _Debug_crash(6)
				: _Platform_mergeExportsProd(obj[name], exports[name])
			: (obj[name] = exports[name]);
	}
}


function _Platform_export(exports)
{
	scope['Elm']
		? _Platform_mergeExportsDebug('Elm', scope['Elm'], exports)
		: scope['Elm'] = exports;
}


function _Platform_mergeExportsDebug(moduleName, obj, exports)
{
	for (var name in exports)
	{
		(name in obj)
			? (name == 'init')
				? _Debug_crash(6, moduleName)
				: _Platform_mergeExportsDebug(moduleName + '.' + name, obj[name], exports[name])
			: (obj[name] = exports[name]);
	}
}
var $elm$core$Basics$EQ = {$: 'EQ'};
var $elm$core$Basics$LT = {$: 'LT'};
var $elm$core$List$cons = _List_cons;
var $elm$core$Elm$JsArray$foldr = _JsArray_foldr;
var $elm$core$Array$foldr = F3(
	function (func, baseCase, _v0) {
		var tree = _v0.c;
		var tail = _v0.d;
		var helper = F2(
			function (node, acc) {
				if (node.$ === 'SubTree') {
					var subTree = node.a;
					return A3($elm$core$Elm$JsArray$foldr, helper, acc, subTree);
				} else {
					var values = node.a;
					return A3($elm$core$Elm$JsArray$foldr, func, acc, values);
				}
			});
		return A3(
			$elm$core$Elm$JsArray$foldr,
			helper,
			A3($elm$core$Elm$JsArray$foldr, func, baseCase, tail),
			tree);
	});
var $elm$core$Array$toList = function (array) {
	return A3($elm$core$Array$foldr, $elm$core$List$cons, _List_Nil, array);
};
var $elm$core$Dict$foldr = F3(
	function (func, acc, t) {
		foldr:
		while (true) {
			if (t.$ === 'RBEmpty_elm_builtin') {
				return acc;
			} else {
				var key = t.b;
				var value = t.c;
				var left = t.d;
				var right = t.e;
				var $temp$func = func,
					$temp$acc = A3(
					func,
					key,
					value,
					A3($elm$core$Dict$foldr, func, acc, right)),
					$temp$t = left;
				func = $temp$func;
				acc = $temp$acc;
				t = $temp$t;
				continue foldr;
			}
		}
	});
var $elm$core$Dict$toList = function (dict) {
	return A3(
		$elm$core$Dict$foldr,
		F3(
			function (key, value, list) {
				return A2(
					$elm$core$List$cons,
					_Utils_Tuple2(key, value),
					list);
			}),
		_List_Nil,
		dict);
};
var $elm$core$Dict$keys = function (dict) {
	return A3(
		$elm$core$Dict$foldr,
		F3(
			function (key, value, keyList) {
				return A2($elm$core$List$cons, key, keyList);
			}),
		_List_Nil,
		dict);
};
var $elm$core$Set$toList = function (_v0) {
	var dict = _v0.a;
	return $elm$core$Dict$keys(dict);
};
var $elm$core$Basics$GT = {$: 'GT'};
var $elm$core$Basics$False = {$: 'False'};
var $elm$core$Basics$True = {$: 'True'};
var $elm$core$Basics$apR = F2(
	function (x, f) {
		return f(x);
	});
var $elm$core$Basics$add = _Basics_add;
var $elm$core$List$foldl = F3(
	function (func, acc, list) {
		foldl:
		while (true) {
			if (!list.b) {
				return acc;
			} else {
				var x = list.a;
				var xs = list.b;
				var $temp$func = func,
					$temp$acc = A2(func, x, acc),
					$temp$list = xs;
				func = $temp$func;
				acc = $temp$acc;
				list = $temp$list;
				continue foldl;
			}
		}
	});
var $elm$core$Basics$gt = _Utils_gt;
var $elm$core$List$reverse = function (list) {
	return A3($elm$core$List$foldl, $elm$core$List$cons, _List_Nil, list);
};
var $elm$core$List$foldrHelper = F4(
	function (fn, acc, ctr, ls) {
		if (!ls.b) {
			return acc;
		} else {
			var a = ls.a;
			var r1 = ls.b;
			if (!r1.b) {
				return A2(fn, a, acc);
			} else {
				var b = r1.a;
				var r2 = r1.b;
				if (!r2.b) {
					return A2(
						fn,
						a,
						A2(fn, b, acc));
				} else {
					var c = r2.a;
					var r3 = r2.b;
					if (!r3.b) {
						return A2(
							fn,
							a,
							A2(
								fn,
								b,
								A2(fn, c, acc)));
					} else {
						var d = r3.a;
						var r4 = r3.b;
						var res = (ctr > 500) ? A3(
							$elm$core$List$foldl,
							fn,
							acc,
							$elm$core$List$reverse(r4)) : A4($elm$core$List$foldrHelper, fn, acc, ctr + 1, r4);
						return A2(
							fn,
							a,
							A2(
								fn,
								b,
								A2(
									fn,
									c,
									A2(fn, d, res))));
					}
				}
			}
		}
	});
var $elm$core$List$foldr = F3(
	function (fn, acc, ls) {
		return A4($elm$core$List$foldrHelper, fn, acc, 0, ls);
	});
var $elm$core$List$append = F2(
	function (xs, ys) {
		if (!ys.b) {
			return xs;
		} else {
			return A3($elm$core$List$foldr, $elm$core$List$cons, ys, xs);
		}
	});
var $elm$core$List$concat = function (lists) {
	return A3($elm$core$List$foldr, $elm$core$List$append, _List_Nil, lists);
};
var $elm$core$List$map = F2(
	function (f, xs) {
		return A3(
			$elm$core$List$foldr,
			F2(
				function (x, acc) {
					return A2(
						$elm$core$List$cons,
						f(x),
						acc);
				}),
			_List_Nil,
			xs);
	});
var $elm$core$List$concatMap = F2(
	function (f, list) {
		return $elm$core$List$concat(
			A2($elm$core$List$map, f, list));
	});
var $author$project$CompilationInterface$SourceFiles$Generated_SourceFiles$BlobNode = function (a) {
	return {$: 'BlobNode', a: a};
};
var $author$project$CompilationInterface$SourceFiles$Generated_SourceFiles$TreeNode = function (a) {
	return {$: 'TreeNode', a: a};
};
var $author$project$CompilationInterface$SourceFiles$Generated_SourceFiles$file_tree_node_elm_core_modules_explicit_import = $author$project$CompilationInterface$SourceFiles$Generated_SourceFiles$TreeNode(
	_List_fromArray(
		[
			_Utils_Tuple2(
			'Array.elm',
			$author$project$CompilationInterface$SourceFiles$Generated_SourceFiles$BlobNode(
				{utf8: 'module Array\n    exposing\n        ( Array\n        , empty\n        , isEmpty\n        , length\n        , initialize\n        , repeat\n        , fromList\n        , get\n        , set\n        , push\n        , toList\n        , toIndexedList\n        , foldr\n        , foldl\n        , filter\n        , map\n        , indexedMap\n        , append\n        , slice\n        )\n\n{-| Fast immutable arrays. The elements in an array must have the same type.\n\n# Arrays\n@docs Array\n\n# Creation\n@docs empty, initialize, repeat, fromList\n\n# Query\n@docs isEmpty, length, get\n\n# Manipulate\n@docs set, push, append, slice\n\n# Lists\n@docs toList, toIndexedList\n\n# Transform\n@docs map, indexedMap, foldl, foldr, filter\n-}\n\n\nimport Basics exposing (..)\nimport Bitwise\nimport Elm.JsArray as JsArray exposing (JsArray)\nimport List exposing ((::))\nimport Maybe exposing (..)\nimport Tuple\n\n\n{-| The array in this module is implemented as a tree with a high branching\nfactor (number of elements at each level). In comparision, the `Dict` has\na branching factor of 2 (left or right).\n\nThe higher the branching factor, the more elements are stored at each level.\nThis makes writes slower (more to copy per level), but reads faster\n(fewer traversals). In practice, 32 is a good compromise.\n\nThe branching factor has to be a power of two (8, 16, 32, 64...). This is\nbecause we use the index to tell us which path to take when navigating the\ntree, and we do this by dividing it into several smaller numbers (see\n`shiftStep` documentation). By dividing the index into smaller numbers, we\nwill always get a range which is a power of two (2 bits gives 0-3, 3 gives\n0-7, 4 gives 0-15...).\n-}\nbranchFactor : Int\nbranchFactor =\n    32\n\n\n{-| A number is made up of several bits. For bitwise operations in javascript,\nnumbers are treated as 32-bits integers. The number 1 is represented by 31\nzeros, and a one. The important thing to take from this, is that a 32-bit\ninteger has enough information to represent several smaller numbers.\n\nFor a branching factor of 32, a 32-bit index has enough information to store 6\ndifferent numbers in the range of 0-31 (5 bits), and one number in the range of\n0-3 (2 bits). This means that the tree of an array can have, at most, a depth\nof 7.\n\nAn index essentially functions as a map. To figure out which branch to take at\nany given level of the tree, we need to shift (or move) the correct amount of\nbits so that those bits are at the front. We can then perform a bitwise and to\nread which of the 32 branches to take.\n\nThe `shiftStep` specifices how many bits are required to represent the branching\nfactor.\n-}\nshiftStep : Int\nshiftStep =\n    ceiling (logBase 2 (toFloat branchFactor))\n\n\n{-| A mask which, when used in a bitwise and, reads the first `shiftStep` bits\nin a number as a number of its own.\n-}\nbitMask : Int\nbitMask =\n    Bitwise.shiftRightZfBy (32 - shiftStep) 0xFFFFFFFF\n\n\n{-| Representation of fast immutable arrays. You can create arrays of integers\n(`Array Int`) or strings (`Array String`) or any other type of value you can\ndream up.\n-}\ntype Array a\n    = {-\n         * length : Int = The length of the array.\n         * startShift : Int = How many bits to shift the index to get the\n         slot for the first level of the tree.\n         * tree : Tree a = The actual tree.\n         * tail : JsArray a = The tail of the array. Inserted into tree when\n         number of elements is equal to the branching factor. This is an\n         optimization. It makes operations at the end (push, pop, read, write)\n         fast.\n      -}\n      Array_elm_builtin Int Int (Tree a) (JsArray a)\n\n\n{-| Each level in the tree is represented by a `JsArray` of `Node`s.\nA `Node` can either be a subtree (the next level of the tree) or, if\nwe\'re at the bottom, a `JsArray` of values (also known as a leaf).\n-}\ntype Node a\n    = SubTree (Tree a)\n    | Leaf (JsArray a)\n\n\ntype alias Tree a =\n    JsArray (Node a)\n\n\n{-| Return an empty array.\n\n    length empty == 0\n-}\nempty : Array a\nempty =\n    {-\n       `startShift` is only used when there is at least one `Node` in the\n       `tree`. The minimal value is therefore equal to the `shiftStep`.\n    -}\n    Array_elm_builtin 0 shiftStep JsArray.empty JsArray.empty\n\n\n{-| Determine if an array is empty.\n\n    isEmpty empty == True\n-}\nisEmpty : Array a -> Bool\nisEmpty (Array_elm_builtin len _ _ _) =\n    len == 0\n\n\n{-| Return the length of an array.\n\n    length (fromList [1,2,3]) == 3\n-}\nlength : Array a -> Int\nlength (Array_elm_builtin len _ _ _) =\n    len\n\n\n{-| Initialize an array. `initialize n f` creates an array of length `n` with\nthe element at index `i` initialized to the result of `(f i)`.\n\n    initialize 4 identity    == fromList [0,1,2,3]\n    initialize 4 (\\n -> n*n) == fromList [0,1,4,9]\n    initialize 4 (always 0)  == fromList [0,0,0,0]\n-}\ninitialize : Int -> (Int -> a) -> Array a\ninitialize len fn =\n    if len <= 0 then\n        empty\n    else\n        let\n            tailLen =\n                remainderBy branchFactor len\n\n            tail =\n                JsArray.initialize tailLen (len - tailLen) fn\n\n            initialFromIndex =\n                len - tailLen - branchFactor\n        in\n            initializeHelp fn initialFromIndex len [] tail\n\n\ninitializeHelp : (Int -> a) -> Int -> Int -> List (Node a) -> JsArray a -> Array a\ninitializeHelp fn fromIndex len nodeList tail =\n    if fromIndex < 0 then\n        builderToArray False\n            { tail = tail\n            , nodeList = nodeList\n            , nodeListSize = len // branchFactor\n            }\n    else\n        let\n            leaf =\n                Leaf <| JsArray.initialize branchFactor fromIndex fn\n        in\n            initializeHelp\n                fn\n                (fromIndex - branchFactor)\n                len\n                (leaf :: nodeList)\n                tail\n\n\n{-| Creates an array with a given length, filled with a default element.\n\n    repeat 5 0     == fromList [0,0,0,0,0]\n    repeat 3 \"cat\" == fromList [\"cat\",\"cat\",\"cat\"]\n\nNotice that `repeat 3 x` is the same as `initialize 3 (always x)`.\n-}\nrepeat : Int -> a -> Array a\nrepeat n e =\n    initialize n (\\_ -> e)\n\n\n{-| Create an array from a `List`.\n-}\nfromList : List a -> Array a\nfromList list =\n    case list of\n        [] ->\n            empty\n\n        _ ->\n            fromListHelp list [] 0\n\n\nfromListHelp : List a -> List (Node a) -> Int -> Array a\nfromListHelp list nodeList nodeListSize =\n    let\n        ( jsArray, remainingItems ) =\n            JsArray.initializeFromList branchFactor list\n    in\n        if JsArray.length jsArray < branchFactor then\n            builderToArray True\n                { tail = jsArray\n                , nodeList = nodeList\n                , nodeListSize = nodeListSize\n                }\n        else\n            fromListHelp\n                remainingItems\n                (Leaf jsArray :: nodeList)\n                (nodeListSize + 1)\n\n\n{-| Return `Just` the element at the index or `Nothing` if the index is out of\nrange.\n\n    get  0 (fromList [0,1,2]) == Just 0\n    get  2 (fromList [0,1,2]) == Just 2\n    get  5 (fromList [0,1,2]) == Nothing\n    get -1 (fromList [0,1,2]) == Nothing\n-}\nget : Int -> Array a -> Maybe a\nget index (Array_elm_builtin len startShift tree tail) =\n    if index < 0 || index >= len then\n        Nothing\n    else if index >= tailIndex len then\n        Just <| JsArray.unsafeGet (Bitwise.and bitMask index) tail\n    else\n        Just <| getHelp startShift index tree\n\n\ngetHelp : Int -> Int -> Tree a -> a\ngetHelp shift index tree =\n    let\n        pos =\n            Bitwise.and bitMask <| Bitwise.shiftRightZfBy shift index\n    in\n        case JsArray.unsafeGet pos tree of\n            SubTree subTree ->\n                getHelp (shift - shiftStep) index subTree\n\n            Leaf values ->\n                JsArray.unsafeGet (Bitwise.and bitMask index) values\n\n\n{-| Given an array length, return the index of the first element in the tail.\nCommonly used to check if a given index references something in the tail.\n-}\ntailIndex : Int -> Int\ntailIndex len =\n    len\n        |> Bitwise.shiftRightZfBy 5\n        |> Bitwise.shiftLeftBy 5\n\n\n{-| Set the element at a particular index. Returns an updated array.\nIf the index is out of range, the array is unaltered.\n\n    set 1 7 (fromList [1,2,3]) == fromList [1,7,3]\n-}\nset : Int -> a -> Array a -> Array a\nset index value ((Array_elm_builtin len startShift tree tail) as array) =\n    if index < 0 || index >= len then\n        array\n    else if index >= tailIndex len then\n        Array_elm_builtin len startShift tree <|\n            JsArray.unsafeSet (Bitwise.and bitMask index) value tail\n    else\n        Array_elm_builtin\n            len\n            startShift\n            (setHelp startShift index value tree)\n            tail\n\n\nsetHelp : Int -> Int -> a -> Tree a -> Tree a\nsetHelp shift index value tree =\n    let\n        pos =\n            Bitwise.and bitMask <| Bitwise.shiftRightZfBy shift index\n    in\n        case JsArray.unsafeGet pos tree of\n            SubTree subTree ->\n                let\n                    newSub =\n                        setHelp (shift - shiftStep) index value subTree\n                in\n                    JsArray.unsafeSet pos (SubTree newSub) tree\n\n            Leaf values ->\n                let\n                    newLeaf =\n                        JsArray.unsafeSet (Bitwise.and bitMask index) value values\n                in\n                    JsArray.unsafeSet pos (Leaf newLeaf) tree\n\n\n{-| Push an element onto the end of an array.\n\n    push 3 (fromList [1,2]) == fromList [1,2,3]\n-}\npush : a -> Array a -> Array a\npush a ((Array_elm_builtin _ _ _ tail) as array) =\n    unsafeReplaceTail (JsArray.push a tail) array\n\n\n{-| Replaces the tail of an array. If the length of the tail equals the\n`branchFactor`, it is inserted into the tree, and the tail cleared.\n\nWARNING: For performance reasons, this function does not check if the new tail\nhas a length equal to or beneath the `branchFactor`. Make sure this is the case\nbefore using this function.\n-}\nunsafeReplaceTail : JsArray a -> Array a -> Array a\nunsafeReplaceTail newTail (Array_elm_builtin len startShift tree tail) =\n    let\n        originalTailLen =\n            JsArray.length tail\n\n        newTailLen =\n            JsArray.length newTail\n\n        newArrayLen =\n            len + (newTailLen - originalTailLen)\n    in\n        if newTailLen == branchFactor then\n            let\n                overflow =\n                    Bitwise.shiftRightZfBy shiftStep newArrayLen > Bitwise.shiftLeftBy startShift 1\n            in\n                if overflow then\n                    let\n                        newShift =\n                            startShift + shiftStep\n\n                        newTree =\n                            JsArray.singleton (SubTree tree)\n                                |> insertTailInTree newShift len newTail\n                    in\n                        Array_elm_builtin\n                            newArrayLen\n                            newShift\n                            newTree\n                            JsArray.empty\n                else\n                    Array_elm_builtin\n                        newArrayLen\n                        startShift\n                        (insertTailInTree startShift len newTail tree)\n                        JsArray.empty\n        else\n            Array_elm_builtin\n                newArrayLen\n                startShift\n                tree\n                newTail\n\n\ninsertTailInTree : Int -> Int -> JsArray a -> Tree a -> Tree a\ninsertTailInTree shift index tail tree =\n    let\n        pos =\n            Bitwise.and bitMask <| Bitwise.shiftRightZfBy shift index\n    in\n        if pos >= JsArray.length tree then\n            if shift == 5 then\n                JsArray.push (Leaf tail) tree\n            else\n                let\n                    newSub =\n                        JsArray.empty\n                            |> insertTailInTree (shift - shiftStep) index tail\n                            |> SubTree\n                in\n                    JsArray.push newSub tree\n        else\n            let\n                value =\n                    JsArray.unsafeGet pos tree\n            in\n                case value of\n                    SubTree subTree ->\n                        let\n                            newSub =\n                                subTree\n                                    |> insertTailInTree (shift - shiftStep) index tail\n                                    |> SubTree\n                        in\n                            JsArray.unsafeSet pos newSub tree\n\n                    Leaf _ ->\n                        let\n                            newSub =\n                                JsArray.singleton value\n                                    |> insertTailInTree (shift - shiftStep) index tail\n                                    |> SubTree\n                        in\n                            JsArray.unsafeSet pos newSub tree\n\n\n{-| Create a list of elements from an array.\n\n    toList (fromList [3,5,8]) == [3,5,8]\n-}\ntoList : Array a -> List a\ntoList array =\n    foldr (::) [] array\n\n\n{-| Create an indexed list from an array. Each element of the array will be\npaired with its index.\n\n    toIndexedList (fromList [\"cat\",\"dog\"]) == [(0,\"cat\"), (1,\"dog\")]\n-}\ntoIndexedList : Array a -> List ( Int, a )\ntoIndexedList ((Array_elm_builtin len _ _ _) as array) =\n    let\n        helper entry ( index, list ) =\n            ( index - 1, (index,entry) :: list )\n    in\n        Tuple.second (foldr helper ( len - 1, [] ) array)\n\n\n{-| Reduce an array from the right. Read `foldr` as fold from the right.\n\n    foldr (+) 0 (repeat 3 5) == 15\n-}\nfoldr : (a -> b -> b) -> b -> Array a -> b\nfoldr func baseCase (Array_elm_builtin _ _ tree tail) =\n    let\n        helper node acc =\n            case node of\n                SubTree subTree ->\n                    JsArray.foldr helper acc subTree\n\n                Leaf values ->\n                    JsArray.foldr func acc values\n    in\n        JsArray.foldr helper (JsArray.foldr func baseCase tail) tree\n\n\n{-| Reduce an array from the left. Read `foldl` as fold from the left.\n\n    foldl (::) [] (fromList [1,2,3]) == [3,2,1]\n-}\nfoldl : (a -> b -> b) -> b -> Array a -> b\nfoldl func baseCase (Array_elm_builtin _ _ tree tail) =\n    let\n        helper node acc =\n            case node of\n                SubTree subTree ->\n                    JsArray.foldl helper acc subTree\n\n                Leaf values ->\n                    JsArray.foldl func acc values\n    in\n        JsArray.foldl func (JsArray.foldl helper baseCase tree) tail\n\n\n{-| Keep elements that pass the test.\n\n    filter isEven (fromList [1,2,3,4,5,6]) == (fromList [2,4,6])\n-}\nfilter : (a -> Bool) -> Array a -> Array a\nfilter isGood array =\n    fromList (foldr (\\x xs -> if isGood x then x :: xs else xs) [] array)\n\n\n{-| Apply a function on every element in an array.\n\n    map sqrt (fromList [1,4,9]) == fromList [1,2,3]\n-}\nmap : (a -> b) -> Array a -> Array b\nmap func (Array_elm_builtin len startShift tree tail) =\n    let\n        helper node =\n            case node of\n                SubTree subTree ->\n                    SubTree <| JsArray.map helper subTree\n\n                Leaf values ->\n                    Leaf <| JsArray.map func values\n    in\n        Array_elm_builtin\n            len\n            startShift\n            (JsArray.map helper tree)\n            (JsArray.map func tail)\n\n\n{-| Apply a function on every element with its index as first argument.\n\n    indexedMap (*) (fromList [5,5,5]) == fromList [0,5,10]\n-}\nindexedMap : (Int -> a -> b) -> Array a -> Array b\nindexedMap func (Array_elm_builtin len _ tree tail) =\n    let\n        helper node builder =\n            case node of\n                SubTree subTree ->\n                    JsArray.foldl helper builder subTree\n\n                Leaf leaf ->\n                    let\n                        offset =\n                            builder.nodeListSize * branchFactor\n\n                        mappedLeaf =\n                            Leaf <| JsArray.indexedMap func offset leaf\n                    in\n                        { tail = builder.tail\n                        , nodeList = mappedLeaf :: builder.nodeList\n                        , nodeListSize = builder.nodeListSize + 1\n                        }\n\n        initialBuilder =\n            { tail = JsArray.indexedMap func (tailIndex len) tail\n            , nodeList = []\n            , nodeListSize = 0\n            }\n    in\n        builderToArray True (JsArray.foldl helper initialBuilder tree)\n\n\n{-| Append two arrays to a new one.\n\n    append (repeat 2 42) (repeat 3 81) == fromList [42,42,81,81,81]\n-}\nappend : Array a -> Array a -> Array a\nappend ((Array_elm_builtin _ _ _ aTail) as a) (Array_elm_builtin bLen _ bTree bTail) =\n    -- The magic number 4 has been found with benchmarks\n    if bLen <= (branchFactor * 4) then\n        let\n            foldHelper node array =\n                case node of\n                    SubTree tree ->\n                        JsArray.foldl foldHelper array tree\n\n                    Leaf leaf ->\n                        appendHelpTree leaf array\n        in\n            JsArray.foldl foldHelper a bTree\n                |> appendHelpTree bTail\n    else\n        let\n            foldHelper node builder =\n                case node of\n                    SubTree tree ->\n                        JsArray.foldl foldHelper builder tree\n\n                    Leaf leaf ->\n                        appendHelpBuilder leaf builder\n        in\n            JsArray.foldl foldHelper (builderFromArray a) bTree\n                |> appendHelpBuilder bTail\n                |> builderToArray True\n\n\nappendHelpTree : JsArray a -> Array a -> Array a\nappendHelpTree toAppend ((Array_elm_builtin len _ tree tail) as array) =\n    let\n        appended =\n            JsArray.appendN branchFactor tail toAppend\n\n        itemsToAppend =\n            JsArray.length toAppend\n\n        notAppended =\n            branchFactor - (JsArray.length tail) - itemsToAppend\n\n        newArray =\n            unsafeReplaceTail appended array\n    in\n        if notAppended < 0 then\n            let\n                nextTail =\n                    JsArray.slice notAppended itemsToAppend toAppend\n            in\n                unsafeReplaceTail nextTail newArray\n        else\n            newArray\n\n\nappendHelpBuilder : JsArray a -> Builder a -> Builder a\nappendHelpBuilder tail builder =\n    let\n        appended =\n            JsArray.appendN branchFactor builder.tail tail\n\n        tailLen =\n            JsArray.length tail\n\n        notAppended =\n            branchFactor - (JsArray.length builder.tail) - tailLen\n    in\n        if notAppended < 0 then\n            { tail = JsArray.slice notAppended tailLen tail\n            , nodeList = Leaf appended :: builder.nodeList\n            , nodeListSize = builder.nodeListSize + 1\n            }\n        else if notAppended == 0 then\n            { tail = JsArray.empty\n            , nodeList = Leaf appended :: builder.nodeList\n            , nodeListSize = builder.nodeListSize + 1\n            }\n        else\n            { tail = appended\n            , nodeList = builder.nodeList\n            , nodeListSize = builder.nodeListSize\n            }\n\n\n{-| Get a sub-section of an array: `(slice start end array)`. The `start` is a\nzero-based index where we will start our slice. The `end` is a zero-based index\nthat indicates the end of the slice. The slice extracts up to but not including\n`end`.\n\n    slice  0  3 (fromList [0,1,2,3,4]) == fromList [0,1,2]\n    slice  1  4 (fromList [0,1,2,3,4]) == fromList [1,2,3]\n\nBoth the `start` and `end` indexes can be negative, indicating an offset from\nthe end of the array.\n\n    slice  1 -1 (fromList [0,1,2,3,4]) == fromList [1,2,3]\n    slice -2  5 (fromList [0,1,2,3,4]) == fromList [3,4]\n\nThis makes it pretty easy to `pop` the last element off of an array:\n`slice 0 -1 array`\n-}\nslice : Int -> Int -> Array a -> Array a\nslice from to array =\n    let\n        correctFrom =\n            translateIndex from array\n\n        correctTo =\n            translateIndex to array\n    in\n        if correctFrom > correctTo then\n            empty\n        else\n            array\n                |> sliceRight correctTo\n                |> sliceLeft correctFrom\n\n\n{-| Given a relative array index, convert it into an absolute one.\n\n    translateIndex -1 someArray == someArray.length - 1\n    translateIndex -10 someArray == someArray.length - 10\n    translateIndex 5 someArray == 5\n-}\ntranslateIndex : Int -> Array a -> Int\ntranslateIndex index (Array_elm_builtin len _ _ _) =\n    let\n        posIndex =\n            if index < 0 then\n                len + index\n            else\n                index\n    in\n        if posIndex < 0 then\n            0\n        else if posIndex > len then\n            len\n        else\n            posIndex\n\n\n{-| This function slices the tree from the right.\n\nFirst, two things are tested:\n1. If the array does not need slicing, return the original array.\n2. If the array can be sliced by only slicing the tail, slice the tail.\n\nOtherwise, we do the following:\n1. Find the new tail in the tree, promote it to the root tail position and\nslice it.\n2. Slice every sub tree.\n3. Promote subTrees until the tree has the correct height.\n-}\nsliceRight : Int -> Array a -> Array a\nsliceRight end ((Array_elm_builtin len startShift tree tail) as array) =\n    if end == len then\n        array\n    else if end >= tailIndex len then\n        Array_elm_builtin end startShift tree <|\n            JsArray.slice 0 (Bitwise.and bitMask end) tail\n    else\n        let\n            endIdx =\n                tailIndex end\n\n            depth =\n                (endIdx - 1)\n                    |> max 1\n                    |> toFloat\n                    |> logBase (toFloat branchFactor)\n                    |> floor\n\n            newShift =\n                max 5 <| depth * shiftStep\n        in\n            Array_elm_builtin\n                end\n                newShift\n                (tree\n                    |> sliceTree startShift endIdx\n                    |> hoistTree startShift newShift\n                )\n                (fetchNewTail startShift end endIdx tree)\n\n\n{-| Slice and return the `Leaf` node after what is to be the last node\nin the sliced tree.\n-}\nfetchNewTail : Int -> Int -> Int -> Tree a -> JsArray a\nfetchNewTail shift end treeEnd tree =\n    let\n        pos =\n            Bitwise.and bitMask <| Bitwise.shiftRightZfBy shift treeEnd\n    in\n        case JsArray.unsafeGet pos tree of\n            SubTree sub ->\n                fetchNewTail (shift - shiftStep) end treeEnd sub\n\n            Leaf values ->\n                JsArray.slice 0 (Bitwise.and bitMask end) values\n\n\n{-| Shorten the root `Node` of the tree so it is long enough to contain\nthe `Node` indicated by `endIdx`. Then recursively perform the same operation\nto the last node of each `SubTree`.\n-}\nsliceTree : Int -> Int -> Tree a -> Tree a\nsliceTree shift endIdx tree =\n    let\n        lastPos =\n            Bitwise.and bitMask <| Bitwise.shiftRightZfBy shift endIdx\n    in\n        case JsArray.unsafeGet lastPos tree of\n            SubTree sub ->\n                let\n                    newSub =\n                        sliceTree (shift - shiftStep) endIdx sub\n                in\n                    if JsArray.length newSub == 0 then\n                        -- The sub is empty, slice it away\n                        JsArray.slice 0 lastPos tree\n                    else\n                        tree\n                            |> JsArray.slice 0 (lastPos + 1)\n                            |> JsArray.unsafeSet lastPos (SubTree newSub)\n\n            -- This is supposed to be the new tail. Fetched by `fetchNewTail`.\n            -- Slice up to, but not including, this point.\n            Leaf _ ->\n                JsArray.slice 0 lastPos tree\n\n\n{-| The tree is supposed to be of a certain depth. Since slicing removes\nelements, it could be that the tree should have a smaller depth\nthan it had originally. This function shortens the height if it is necessary\nto do so.\n-}\nhoistTree : Int -> Int -> Tree a -> Tree a\nhoistTree oldShift newShift tree =\n    if oldShift <= newShift || JsArray.length tree == 0 then\n        tree\n    else\n        case JsArray.unsafeGet 0 tree of\n            SubTree sub ->\n                hoistTree (oldShift - shiftStep) newShift sub\n\n            Leaf _ ->\n                tree\n\n\n{-| This function slices the tree from the left. Such an operation will change\nthe index of every element after the slice. Which means that we will have to\nrebuild the array.\n\nFirst, two things are tested:\n1. If the array does not need slicing, return the original array.\n2. If the slice removes every element but those in the tail, slice the tail and\nset the tree to the empty array.\n\nOtherwise, we do the following:\n1. Add every leaf node in the tree to a list.\n2. Drop the nodes which are supposed to be sliced away.\n3. Slice the head node of the list, which represents the start of the new array.\n4. Create a builder with the tail set as the node from the previous step.\n5. Append the remaining nodes into this builder, and create the array.\n-}\nsliceLeft : Int -> Array a -> Array a\nsliceLeft from ((Array_elm_builtin len _ tree tail) as array) =\n    if from == 0 then\n        array\n    else if from >= tailIndex len then\n        Array_elm_builtin (len - from) shiftStep JsArray.empty <|\n            JsArray.slice (from - tailIndex len) (JsArray.length tail) tail\n    else\n        let\n            helper node acc =\n                case node of\n                    SubTree subTree ->\n                        JsArray.foldr helper acc subTree\n\n                    Leaf leaf ->\n                        leaf :: acc\n\n            leafNodes =\n                JsArray.foldr helper [ tail ] tree\n\n            skipNodes =\n                from // branchFactor\n\n            nodesToInsert =\n                List.drop skipNodes leafNodes\n        in\n            case nodesToInsert of\n                [] ->\n                    empty\n\n                head :: rest ->\n                    let\n                        firstSlice =\n                            from - (skipNodes * branchFactor)\n\n                        initialBuilder =\n                            { tail =\n                                JsArray.slice\n                                    firstSlice\n                                    (JsArray.length head)\n                                    head\n                            , nodeList = []\n                            , nodeListSize = 0\n                            }\n                    in\n                        List.foldl appendHelpBuilder initialBuilder rest\n                            |> builderToArray True\n\n\n{-| A builder contains all information necessary to build an array. Adding\ninformation to the builder is fast. A builder is therefore a suitable\nintermediary for constructing arrays.\n-}\ntype alias Builder a =\n    { tail : JsArray a\n    , nodeList : List (Node a)\n    , nodeListSize : Int\n    }\n\n\n{-| The empty builder.\n-}\nemptyBuilder : Builder a\nemptyBuilder =\n    { tail = JsArray.empty\n    , nodeList = []\n    , nodeListSize = 0\n    }\n\n\n{-| Converts an array to a builder.\n-}\nbuilderFromArray : Array a -> Builder a\nbuilderFromArray (Array_elm_builtin len _ tree tail) =\n    let\n        helper node acc =\n            case node of\n                SubTree subTree ->\n                    JsArray.foldl helper acc subTree\n\n                Leaf _ ->\n                    node :: acc\n    in\n        { tail = tail\n        , nodeList = JsArray.foldl helper [] tree\n        , nodeListSize = len // branchFactor\n        }\n\n\n{-| Construct an array with the information in a given builder.\n\nDue to the nature of `List` the list of nodes in a builder will often\nbe in reverse order (that is, the first leaf of the array is the last\nnode in the node list). This function therefore allows the caller to\nspecify if the node list should be reversed before building the array.\n-}\nbuilderToArray : Bool -> Builder a -> Array a\nbuilderToArray reverseNodeList builder =\n    if builder.nodeListSize == 0 then\n        Array_elm_builtin\n            (JsArray.length builder.tail)\n            shiftStep\n            JsArray.empty\n            builder.tail\n    else\n        let\n            treeLen =\n                builder.nodeListSize * branchFactor\n\n            depth =\n                (treeLen - 1)\n                    |> toFloat\n                    |> logBase (toFloat branchFactor)\n                    |> floor\n\n            correctNodeList =\n                if reverseNodeList then\n                    List.reverse builder.nodeList\n                else\n                    builder.nodeList\n\n            tree =\n                treeFromBuilder correctNodeList builder.nodeListSize\n        in\n            Array_elm_builtin\n                (JsArray.length builder.tail + treeLen)\n                (max 5 <| depth * shiftStep)\n                tree\n                builder.tail\n\n\n{-| Takes a list of leaves and an `Int` specifying how many leaves there are,\nand builds a tree structure to be used in an `Array`.\n-}\ntreeFromBuilder : List (Node a) -> Int -> Tree a\ntreeFromBuilder nodeList nodeListSize =\n    let\n        newNodeSize =\n            ((toFloat nodeListSize) / (toFloat branchFactor))\n                |> ceiling\n    in\n        if newNodeSize == 1 then\n            JsArray.initializeFromList branchFactor nodeList\n                |> Tuple.first\n        else\n            treeFromBuilder\n                (compressNodes nodeList [])\n                newNodeSize\n\n\n{-| Takes a list of nodes and return a list of `SubTree`s containing those\nnodes.\n-}\ncompressNodes : List (Node a) -> List (Node a) -> List (Node a)\ncompressNodes nodes acc =\n    let\n        ( node, remainingNodes ) =\n            JsArray.initializeFromList branchFactor nodes\n\n        newAcc =\n            (SubTree node) :: acc\n    in\n        case remainingNodes of\n            [] ->\n                List.reverse newAcc\n\n            _ ->\n                compressNodes remainingNodes newAcc\n'})),
			_Utils_Tuple2(
			'Bitwise.elm',
			$author$project$CompilationInterface$SourceFiles$Generated_SourceFiles$BlobNode(
				{utf8: 'module Bitwise exposing\n  ( and, or, xor, complement\n  , shiftLeftBy, shiftRightBy, shiftRightZfBy\n  )\n\n{-| Library for [bitwise operations](https://en.wikipedia.org/wiki/Bitwise_operation).\n\n# Basic Operations\n@docs and, or, xor, complement\n\n# Bit Shifts\n@docs shiftLeftBy, shiftRightBy, shiftRightZfBy\n-}\n\n\nimport Basics exposing (Int)\nimport Elm.Kernel.Bitwise\n\n\n\n{-| Bitwise AND\n-}\nand : Int -> Int -> Int\nand =\n  Elm.Kernel.Bitwise.and\n\n\n{-| Bitwise OR\n-}\nor : Int -> Int -> Int\nor =\n  Elm.Kernel.Bitwise.or\n\n\n{-| Bitwise XOR\n-}\nxor : Int -> Int -> Int\nxor =\n  Elm.Kernel.Bitwise.xor\n\n\n{-| Flip each bit individually, often called bitwise NOT\n-}\ncomplement : Int -> Int\ncomplement =\n  Elm.Kernel.Bitwise.complement\n\n\n{-| Shift bits to the left by a given offset, filling new bits with zeros.\nThis can be used to multiply numbers by powers of two.\n\n    shiftLeftBy 1 5 == 10\n    shiftLeftBy 5 1 == 32\n-}\nshiftLeftBy : Int -> Int -> Int\nshiftLeftBy =\n  Elm.Kernel.Bitwise.shiftLeftBy\n\n\n{-| Shift bits to the right by a given offset, filling new bits with\nwhatever is the topmost bit. This can be used to divide numbers by powers of two.\n\n    shiftRightBy 1  32 == 16\n    shiftRightBy 2  32 == 8\n    shiftRightBy 1 -32 == -16\n\nThis is called an [arithmetic right shift][ars], often written `>>`, and\nsometimes called a sign-propagating right shift because it fills empty spots\nwith copies of the highest bit.\n\n[ars]: https://en.wikipedia.org/wiki/Bitwise_operation#Arithmetic_shift\n-}\nshiftRightBy : Int -> Int -> Int\nshiftRightBy =\n  Elm.Kernel.Bitwise.shiftRightBy\n\n\n{-| Shift bits to the right by a given offset, filling new bits with zeros.\n\n    shiftRightZfBy 1  32 == 16\n    shiftRightZfBy 2  32 == 8\n    shiftRightZfBy 1 -32 == 2147483632\n\nThis is called an [logical right shift][lrs], often written `>>>`, and\nsometimes called a zero-fill right shift because it fills empty spots with\nzeros.\n\n[lrs]: https://en.wikipedia.org/wiki/Bitwise_operation#Logical_shift\n-}\nshiftRightZfBy : Int -> Int -> Int\nshiftRightZfBy =\n  Elm.Kernel.Bitwise.shiftRightZfBy\n\n'})),
			_Utils_Tuple2(
			'Dict.elm',
			$author$project$CompilationInterface$SourceFiles$Generated_SourceFiles$BlobNode(
				{utf8: 'module Dict exposing\n  ( Dict\n  , empty, singleton, insert, update, remove\n  , isEmpty, member, get, size\n  , keys, values, toList, fromList\n  , map, foldl, foldr, filter, partition\n  , union, intersect, diff, merge\n  )\n\n{-| A dictionary mapping unique keys to values. The keys can be any comparable\ntype. This includes `Int`, `Float`, `Time`, `Char`, `String`, and tuples or\nlists of comparable types.\n\nInsert, remove, and query operations all take *O(log n)* time.\n\n# Dictionaries\n@docs Dict\n\n# Build\n@docs empty, singleton, insert, update, remove\n\n# Query\n@docs isEmpty, member, get, size\n\n# Lists\n@docs keys, values, toList, fromList\n\n# Transform\n@docs map, foldl, foldr, filter, partition\n\n# Combine\n@docs union, intersect, diff, merge\n\n-}\n\n\nimport Basics exposing (..)\nimport Maybe exposing (..)\nimport List exposing (..)\n\n\n\n-- DICTIONARIES\n\n\n-- The color of a node. Leaves are considered Black.\ntype NColor\n    = Red\n    | Black\n\n\n{-| A dictionary of keys and values. So a `Dict String User` is a dictionary\nthat lets you look up a `String` (such as user names) and find the associated\n`User`.\n\n    import Dict exposing (Dict)\n\n    users : Dict String User\n    users =\n      Dict.fromList\n        [ (\"Alice\", User \"Alice\" 28 1.65)\n        , (\"Bob\"  , User \"Bob\"   19 1.82)\n        , (\"Chuck\", User \"Chuck\" 33 1.75)\n        ]\n\n    type alias User =\n      { name : String\n      , age : Int\n      , height : Float\n      }\n-}\ntype Dict k v\n    = RBNode_elm_builtin NColor k v (Dict k v) (Dict k v)\n    | RBEmpty_elm_builtin\n\n\n{-| Create an empty dictionary. -}\nempty : Dict k v\nempty =\n  RBEmpty_elm_builtin\n\n\n{-| Get the value associated with a key. If the key is not found, return\n`Nothing`. This is useful when you are not sure if a key will be in the\ndictionary.\n\n    animals = fromList [ (\"Tom\", Cat), (\"Jerry\", Mouse) ]\n\n    get \"Tom\"   animals == Just Cat\n    get \"Jerry\" animals == Just Mouse\n    get \"Spike\" animals == Nothing\n\n-}\nget : comparable -> Dict comparable v -> Maybe v\nget targetKey dict =\n  case dict of\n    RBEmpty_elm_builtin ->\n      Nothing\n\n    RBNode_elm_builtin _ key value left right ->\n      case compare targetKey key of\n        LT ->\n          get targetKey left\n\n        EQ ->\n          Just value\n\n        GT ->\n          get targetKey right\n\n\n{-| Determine if a key is in a dictionary. -}\nmember : comparable -> Dict comparable v -> Bool\nmember key dict =\n  case get key dict of\n    Just _ ->\n      True\n\n    Nothing ->\n      False\n\n\n{-| Determine the number of key-value pairs in the dictionary. -}\nsize : Dict k v -> Int\nsize dict =\n  sizeHelp 0 dict\n\n\nsizeHelp : Int -> Dict k v -> Int\nsizeHelp n dict =\n  case dict of\n    RBEmpty_elm_builtin ->\n      n\n\n    RBNode_elm_builtin _ _ _ left right ->\n      sizeHelp (sizeHelp (n+1) right) left\n\n\n{-| Determine if a dictionary is empty.\n\n    isEmpty empty == True\n-}\nisEmpty : Dict k v -> Bool\nisEmpty dict =\n  case dict of\n    RBEmpty_elm_builtin ->\n      True\n\n    RBNode_elm_builtin _ _ _ _ _ ->\n      False\n\n\n{-| Insert a key-value pair into a dictionary. Replaces value when there is\na collision. -}\ninsert : comparable -> v -> Dict comparable v -> Dict comparable v\ninsert key value dict =\n  -- Root node is always Black\n  case insertHelp key value dict of\n    RBNode_elm_builtin Red k v l r ->\n      RBNode_elm_builtin Black k v l r\n\n    x ->\n      x\n\n\ninsertHelp : comparable -> v -> Dict comparable v -> Dict comparable v\ninsertHelp key value dict =\n  case dict of\n    RBEmpty_elm_builtin ->\n      -- New nodes are always red. If it violates the rules, it will be fixed\n      -- when balancing.\n      RBNode_elm_builtin Red key value RBEmpty_elm_builtin RBEmpty_elm_builtin\n\n    RBNode_elm_builtin nColor nKey nValue nLeft nRight ->\n      case compare key nKey of\n        LT ->\n          balance nColor nKey nValue (insertHelp key value nLeft) nRight\n\n        EQ ->\n          RBNode_elm_builtin nColor nKey value nLeft nRight\n\n        GT ->\n          balance nColor nKey nValue nLeft (insertHelp key value nRight)\n\n\nbalance : NColor -> k -> v -> Dict k v -> Dict k v -> Dict k v\nbalance color key value left right =\n  case right of\n    RBNode_elm_builtin Red rK rV rLeft rRight ->\n      case left of\n        RBNode_elm_builtin Red lK lV lLeft lRight ->\n          RBNode_elm_builtin\n            Red\n            key\n            value\n            (RBNode_elm_builtin Black lK lV lLeft lRight)\n            (RBNode_elm_builtin Black rK rV rLeft rRight)\n\n        _ ->\n          RBNode_elm_builtin color rK rV (RBNode_elm_builtin Red key value left rLeft) rRight\n\n    _ ->\n      case left of\n        RBNode_elm_builtin Red lK lV (RBNode_elm_builtin Red llK llV llLeft llRight) lRight ->\n          RBNode_elm_builtin\n            Red\n            lK\n            lV\n            (RBNode_elm_builtin Black llK llV llLeft llRight)\n            (RBNode_elm_builtin Black key value lRight right)\n\n        _ ->\n          RBNode_elm_builtin color key value left right\n\n\n{-| Remove a key-value pair from a dictionary. If the key is not found,\nno changes are made. -}\nremove : comparable -> Dict comparable v -> Dict comparable v\nremove key dict =\n  -- Root node is always Black\n  case removeHelp key dict of\n    RBNode_elm_builtin Red k v l r ->\n      RBNode_elm_builtin Black k v l r\n\n    x ->\n      x\n\n\n{-| The easiest thing to remove from the tree, is a red node. However, when searching for the\nnode to remove, we have no way of knowing if it will be red or not. This remove implementation\nmakes sure that the bottom node is red by moving red colors down the tree through rotation\nand color flips. Any violations this will cause, can easily be fixed by balancing on the way\nup again.\n-}\nremoveHelp : comparable -> Dict comparable v -> Dict comparable v\nremoveHelp targetKey dict =\n  case dict of\n    RBEmpty_elm_builtin ->\n      RBEmpty_elm_builtin\n\n    RBNode_elm_builtin color key value left right ->\n      if targetKey < key then\n        case left of\n          RBNode_elm_builtin Black _ _ lLeft _ ->\n            case lLeft of\n              RBNode_elm_builtin Red _ _ _ _ ->\n                RBNode_elm_builtin color key value (removeHelp targetKey left) right\n\n              _ ->\n                case moveRedLeft dict of\n                  RBNode_elm_builtin nColor nKey nValue nLeft nRight ->\n                    balance nColor nKey nValue (removeHelp targetKey nLeft) nRight\n\n                  RBEmpty_elm_builtin ->\n                    RBEmpty_elm_builtin\n\n          _ ->\n            RBNode_elm_builtin color key value (removeHelp targetKey left) right\n      else\n        removeHelpEQGT targetKey (removeHelpPrepEQGT targetKey dict color key value left right)\n\n\nremoveHelpPrepEQGT : comparable -> Dict comparable v -> NColor -> comparable -> v -> Dict comparable v -> Dict comparable v -> Dict comparable v\nremoveHelpPrepEQGT targetKey dict color key value left right =\n  case left of\n    RBNode_elm_builtin Red lK lV lLeft lRight ->\n      RBNode_elm_builtin\n        color\n        lK\n        lV\n        lLeft\n        (RBNode_elm_builtin Red key value lRight right)\n\n    _ ->\n      case right of\n        RBNode_elm_builtin Black _ _ (RBNode_elm_builtin Black _ _ _ _) _ ->\n          moveRedRight dict\n\n        RBNode_elm_builtin Black _ _ RBEmpty_elm_builtin _ ->\n          moveRedRight dict\n\n        _ ->\n          dict\n\n\n{-| When we find the node we are looking for, we can remove by replacing the key-value\npair with the key-value pair of the left-most node on the right side (the closest pair).\n-}\nremoveHelpEQGT : comparable -> Dict comparable v -> Dict comparable v\nremoveHelpEQGT targetKey dict =\n  case dict of\n    RBNode_elm_builtin color key value left right ->\n      if targetKey == key then\n        case getMin right of\n          RBNode_elm_builtin _ minKey minValue _ _ ->\n            balance color minKey minValue left (removeMin right)\n\n          RBEmpty_elm_builtin ->\n            RBEmpty_elm_builtin\n      else\n        balance color key value left (removeHelp targetKey right)\n\n    RBEmpty_elm_builtin ->\n      RBEmpty_elm_builtin\n\n\ngetMin : Dict k v -> Dict k v\ngetMin dict =\n  case dict of\n    RBNode_elm_builtin _ _ _ ((RBNode_elm_builtin _ _ _ _ _) as left) _ ->\n      getMin left\n\n    _ ->\n      dict\n\n\nremoveMin : Dict k v -> Dict k v\nremoveMin dict =\n  case dict of\n    RBNode_elm_builtin color key value ((RBNode_elm_builtin lColor _ _ lLeft _) as left) right ->\n      case lColor of\n        Black ->\n          case lLeft of\n            RBNode_elm_builtin Red _ _ _ _ ->\n              RBNode_elm_builtin color key value (removeMin left) right\n\n            _ ->\n              case moveRedLeft dict of\n                RBNode_elm_builtin nColor nKey nValue nLeft nRight ->\n                  balance nColor nKey nValue (removeMin nLeft) nRight\n\n                RBEmpty_elm_builtin ->\n                  RBEmpty_elm_builtin\n\n        _ ->\n          RBNode_elm_builtin color key value (removeMin left) right\n\n    _ ->\n      RBEmpty_elm_builtin\n\n\nmoveRedLeft : Dict k v -> Dict k v\nmoveRedLeft dict =\n  case dict of\n    RBNode_elm_builtin clr k v (RBNode_elm_builtin lClr lK lV lLeft lRight) (RBNode_elm_builtin rClr rK rV ((RBNode_elm_builtin Red rlK rlV rlL rlR) as rLeft) rRight) ->\n      RBNode_elm_builtin\n        Red\n        rlK\n        rlV\n        (RBNode_elm_builtin Black k v (RBNode_elm_builtin Red lK lV lLeft lRight) rlL)\n        (RBNode_elm_builtin Black rK rV rlR rRight)\n\n    RBNode_elm_builtin clr k v (RBNode_elm_builtin lClr lK lV lLeft lRight) (RBNode_elm_builtin rClr rK rV rLeft rRight) ->\n      case clr of\n        Black ->\n          RBNode_elm_builtin\n            Black\n            k\n            v\n            (RBNode_elm_builtin Red lK lV lLeft lRight)\n            (RBNode_elm_builtin Red rK rV rLeft rRight)\n\n        Red ->\n          RBNode_elm_builtin\n            Black\n            k\n            v\n            (RBNode_elm_builtin Red lK lV lLeft lRight)\n            (RBNode_elm_builtin Red rK rV rLeft rRight)\n\n    _ ->\n      dict\n\n\nmoveRedRight : Dict k v -> Dict k v\nmoveRedRight dict =\n  case dict of\n    RBNode_elm_builtin clr k v (RBNode_elm_builtin lClr lK lV (RBNode_elm_builtin Red llK llV llLeft llRight) lRight) (RBNode_elm_builtin rClr rK rV rLeft rRight) ->\n      RBNode_elm_builtin\n        Red\n        lK\n        lV\n        (RBNode_elm_builtin Black llK llV llLeft llRight)\n        (RBNode_elm_builtin Black k v lRight (RBNode_elm_builtin Red rK rV rLeft rRight))\n\n    RBNode_elm_builtin clr k v (RBNode_elm_builtin lClr lK lV lLeft lRight) (RBNode_elm_builtin rClr rK rV rLeft rRight) ->\n      case clr of\n        Black ->\n          RBNode_elm_builtin\n            Black\n            k\n            v\n            (RBNode_elm_builtin Red lK lV lLeft lRight)\n            (RBNode_elm_builtin Red rK rV rLeft rRight)\n\n        Red ->\n          RBNode_elm_builtin\n            Black\n            k\n            v\n            (RBNode_elm_builtin Red lK lV lLeft lRight)\n            (RBNode_elm_builtin Red rK rV rLeft rRight)\n\n    _ ->\n      dict\n\n\n{-| Update the value of a dictionary for a specific key with a given function. -}\nupdate : comparable -> (Maybe v -> Maybe v) -> Dict comparable v -> Dict comparable v\nupdate targetKey alter dictionary =\n  case alter (get targetKey dictionary) of\n    Just value ->\n      insert targetKey value dictionary\n\n    Nothing ->\n      remove targetKey dictionary\n\n\n{-| Create a dictionary with one key-value pair. -}\nsingleton : comparable -> v -> Dict comparable v\nsingleton key value =\n  -- Root node is always Black\n  RBNode_elm_builtin Black key value RBEmpty_elm_builtin RBEmpty_elm_builtin\n\n\n-- COMBINE\n\n\n{-| Combine two dictionaries. If there is a collision, preference is given\nto the first dictionary.\n-}\nunion : Dict comparable v -> Dict comparable v -> Dict comparable v\nunion t1 t2 =\n  foldl insert t2 t1\n\n\n{-| Keep a key-value pair when its key appears in the second dictionary.\nPreference is given to values in the first dictionary.\n-}\nintersect : Dict comparable v -> Dict comparable v -> Dict comparable v\nintersect t1 t2 =\n  filter (\\k _ -> member k t2) t1\n\n\n{-| Keep a key-value pair when its key does not appear in the second dictionary.\n-}\ndiff : Dict comparable a -> Dict comparable b -> Dict comparable a\ndiff t1 t2 =\n  foldl (\\k v t -> remove k t) t1 t2\n\n\n{-| The most general way of combining two dictionaries. You provide three\naccumulators for when a given key appears:\n\n  1. Only in the left dictionary.\n  2. In both dictionaries.\n  3. Only in the right dictionary.\n\nYou then traverse all the keys from lowest to highest, building up whatever\nyou want.\n-}\nmerge\n  :  (comparable -> a -> result -> result)\n  -> (comparable -> a -> b -> result -> result)\n  -> (comparable -> b -> result -> result)\n  -> Dict comparable a\n  -> Dict comparable b\n  -> result\n  -> result\nmerge leftStep bothStep rightStep leftDict rightDict initialResult =\n  let\n    stepState rKey rValue (list, result) =\n      case list of\n        [] ->\n          (list, rightStep rKey rValue result)\n\n        (lKey, lValue) :: rest ->\n          if lKey < rKey then\n            stepState rKey rValue (rest, leftStep lKey lValue result)\n\n          else if lKey > rKey then\n            (list, rightStep rKey rValue result)\n\n          else\n            (rest, bothStep lKey lValue rValue result)\n\n    (leftovers, intermediateResult) =\n      foldl stepState (toList leftDict, initialResult) rightDict\n  in\n    List.foldl (\\(k,v) result -> leftStep k v result) intermediateResult leftovers\n\n\n\n-- TRANSFORM\n\n\n{-| Apply a function to all values in a dictionary.\n-}\nmap : (k -> a -> b) -> Dict k a -> Dict k b\nmap func dict =\n  case dict of\n    RBEmpty_elm_builtin ->\n      RBEmpty_elm_builtin\n\n    RBNode_elm_builtin color key value left right ->\n      RBNode_elm_builtin color key (func key value) (map func left) (map func right)\n\n\n{-| Fold over the key-value pairs in a dictionary from lowest key to highest key.\n\n    import Dict exposing (Dict)\n\n    getAges : Dict String User -> List String\n    getAges users =\n      Dict.foldl addAge [] users\n\n    addAge : String -> User -> List String -> List String\n    addAge _ user ages =\n      user.age :: ages\n\n    -- getAges users == [33,19,28]\n-}\nfoldl : (k -> v -> b -> b) -> b -> Dict k v -> b\nfoldl func acc dict =\n  case dict of\n    RBEmpty_elm_builtin ->\n      acc\n\n    RBNode_elm_builtin _ key value left right ->\n      foldl func (func key value (foldl func acc left)) right\n\n\n{-| Fold over the key-value pairs in a dictionary from highest key to lowest key.\n\n    import Dict exposing (Dict)\n\n    getAges : Dict String User -> List String\n    getAges users =\n      Dict.foldr addAge [] users\n\n    addAge : String -> User -> List String -> List String\n    addAge _ user ages =\n      user.age :: ages\n\n    -- getAges users == [28,19,33]\n-}\nfoldr : (k -> v -> b -> b) -> b -> Dict k v -> b\nfoldr func acc t =\n  case t of\n    RBEmpty_elm_builtin ->\n      acc\n\n    RBNode_elm_builtin _ key value left right ->\n      foldr func (func key value (foldr func acc right)) left\n\n\n{-| Keep only the key-value pairs that pass the given test. -}\nfilter : (comparable -> v -> Bool) -> Dict comparable v -> Dict comparable v\nfilter isGood dict =\n  foldl (\\k v d -> if isGood k v then insert k v d else d) empty dict\n\n\n{-| Partition a dictionary according to some test. The first dictionary\ncontains all key-value pairs which passed the test, and the second contains\nthe pairs that did not.\n-}\npartition : (comparable -> v -> Bool) -> Dict comparable v -> (Dict comparable v, Dict comparable v)\npartition isGood dict =\n  let\n    add key value (t1, t2) =\n      if isGood key value then\n        (insert key value t1, t2)\n\n      else\n        (t1, insert key value t2)\n  in\n    foldl add (empty, empty) dict\n\n\n-- LISTS\n\n\n{-| Get all of the keys in a dictionary, sorted from lowest to highest.\n\n    keys (fromList [(0,\"Alice\"),(1,\"Bob\")]) == [0,1]\n-}\nkeys : Dict k v -> List k\nkeys dict =\n  foldr (\\key value keyList -> key :: keyList) [] dict\n\n\n{-| Get all of the values in a dictionary, in the order of their keys.\n\n    values (fromList [(0,\"Alice\"),(1,\"Bob\")]) == [\"Alice\", \"Bob\"]\n-}\nvalues : Dict k v -> List v\nvalues dict =\n  foldr (\\key value valueList -> value :: valueList) [] dict\n\n\n{-| Convert a dictionary into an association list of key-value pairs, sorted by keys. -}\ntoList : Dict k v -> List (k,v)\ntoList dict =\n  foldr (\\key value list -> (key,value) :: list) [] dict\n\n\n{-| Convert an association list into a dictionary. -}\nfromList : List (comparable,v) -> Dict comparable v\nfromList assocs =\n  List.foldl (\\(key,value) dict -> insert key value dict) empty assocs\n'})),
			_Utils_Tuple2(
			'Set.elm',
			$author$project$CompilationInterface$SourceFiles$Generated_SourceFiles$BlobNode(
				{utf8: 'module Set exposing\n  ( Set\n  , empty, singleton, insert, remove\n  , isEmpty, member, size\n  , union, intersect, diff\n  , toList, fromList\n  , map, foldl, foldr, filter, partition\n  )\n\n{-| A set of unique values. The values can be any comparable type. This\nincludes `Int`, `Float`, `Time`, `Char`, `String`, and tuples or lists\nof comparable types.\n\nInsert, remove, and query operations all take *O(log n)* time.\n\n# Sets\n@docs Set\n\n# Build\n@docs empty, singleton, insert, remove\n\n# Query\n@docs isEmpty, member, size\n\n# Combine\n@docs union, intersect, diff\n\n# Lists\n@docs toList, fromList\n\n# Transform\n@docs map, foldl, foldr, filter, partition\n\n-}\n\nimport Basics exposing (Bool, Int)\nimport Dict\nimport List exposing ((::))\nimport Maybe exposing (Maybe(..))\n\n\n{-| Represents a set of unique values. So `(Set Int)` is a set of integers and\n`(Set String)` is a set of strings.\n-}\ntype Set t =\n  Set_elm_builtin (Dict.Dict t ())\n\n\n{-| Create an empty set.\n-}\nempty : Set a\nempty =\n  Set_elm_builtin Dict.empty\n\n\n{-| Create a set with one value.\n-}\nsingleton : comparable -> Set comparable\nsingleton key =\n  Set_elm_builtin (Dict.singleton key ())\n\n\n{-| Insert a value into a set.\n-}\ninsert : comparable -> Set comparable -> Set comparable\ninsert key (Set_elm_builtin dict) =\n  Set_elm_builtin (Dict.insert key () dict)\n\n\n{-| Remove a value from a set. If the value is not found, no changes are made.\n-}\nremove : comparable -> Set comparable -> Set comparable\nremove key (Set_elm_builtin dict) =\n  Set_elm_builtin (Dict.remove key dict)\n\n\n{-| Determine if a set is empty.\n-}\nisEmpty : Set a -> Bool\nisEmpty (Set_elm_builtin dict) =\n  Dict.isEmpty dict\n\n\n{-| Determine if a value is in a set.\n-}\nmember : comparable -> Set comparable -> Bool\nmember key (Set_elm_builtin dict) =\n  Dict.member key dict\n\n\n{-| Determine the number of elements in a set.\n-}\nsize : Set a -> Int\nsize (Set_elm_builtin dict) =\n  Dict.size dict\n\n\n{-| Get the union of two sets. Keep all values.\n-}\nunion : Set comparable -> Set comparable -> Set comparable\nunion (Set_elm_builtin dict1) (Set_elm_builtin dict2) =\n  Set_elm_builtin (Dict.union dict1 dict2)\n\n\n{-| Get the intersection of two sets. Keeps values that appear in both sets.\n-}\nintersect : Set comparable -> Set comparable -> Set comparable\nintersect (Set_elm_builtin dict1) (Set_elm_builtin dict2) =\n  Set_elm_builtin (Dict.intersect dict1 dict2)\n\n\n{-| Get the difference between the first set and the second. Keeps values\nthat do not appear in the second set.\n-}\ndiff : Set comparable -> Set comparable -> Set comparable\ndiff (Set_elm_builtin dict1) (Set_elm_builtin dict2) =\n  Set_elm_builtin (Dict.diff dict1 dict2)\n\n\n{-| Convert a set into a list, sorted from lowest to highest.\n-}\ntoList : Set a -> List a\ntoList (Set_elm_builtin dict) =\n  Dict.keys dict\n\n\n{-| Convert a list into a set, removing any duplicates.\n-}\nfromList : List comparable -> Set comparable\nfromList list =\n  List.foldl insert empty list\n\n\n{-| Fold over the values in a set, in order from lowest to highest.\n-}\nfoldl : (a -> b -> b) -> b -> Set a -> b\nfoldl func initialState (Set_elm_builtin dict) =\n  Dict.foldl (\\key _ state -> func key state) initialState dict\n\n\n{-| Fold over the values in a set, in order from highest to lowest.\n-}\nfoldr : (a -> b -> b) -> b -> Set a -> b\nfoldr func initialState (Set_elm_builtin dict) =\n  Dict.foldr (\\key _ state -> func key state) initialState dict\n\n\n{-| Map a function onto a set, creating a new set with no duplicates.\n-}\nmap : (comparable -> comparable2) -> Set comparable -> Set comparable2\nmap func set =\n  fromList (foldl (\\x xs -> func x :: xs) [] set)\n\n\n{-| Only keep elements that pass the given test.\n\n    import Set exposing (Set)\n\n    numbers : Set Int\n    numbers =\n      Set.fromList [-2,-1,0,1,2]\n\n    positives : Set Int\n    positives =\n      Set.filter (\\x -> x > 0) numbers\n\n    -- positives == Set.fromList [1,2]\n-}\nfilter : (comparable -> Bool) -> Set comparable -> Set comparable\nfilter isGood (Set_elm_builtin dict) =\n  Set_elm_builtin (Dict.filter (\\key _ -> isGood key) dict)\n\n\n{-| Create two new sets. The first contains all the elements that passed the\ngiven test, and the second contains all the elements that did not.\n-}\npartition : (comparable -> Bool) -> Set comparable -> (Set comparable, Set comparable)\npartition isGood (Set_elm_builtin dict) =\n  let\n    (dict1, dict2) =\n      Dict.partition (\\key _ -> isGood key) dict\n  in\n    (Set_elm_builtin dict1, Set_elm_builtin dict2)\n'})),
			_Utils_Tuple2(
			'Task.elm',
			$author$project$CompilationInterface$SourceFiles$Generated_SourceFiles$BlobNode(
				{utf8: 'effect module Task where { command = MyCmd } exposing\n  ( Task\n  , succeed, fail\n  , map, map2, map3, map4, map5\n  , sequence\n  , andThen\n  , onError, mapError\n  , perform, attempt\n  )\n\n{-| Tasks make it easy to describe asynchronous operations that may fail, like\nHTTP requests or writing to a database.\n\n# Tasks\n@docs Task, perform, attempt\n\n# Chains\n@docs andThen, succeed, fail, sequence\n\n# Maps\n@docs map, map2, map3, map4, map5\n\n# Errors\n@docs onError, mapError\n\n-}\n\nimport Basics exposing (Never, (|>), (<<))\nimport Elm.Kernel.Scheduler\nimport List exposing ((::))\nimport Maybe exposing (Maybe(..))\nimport Platform\nimport Platform.Cmd exposing (Cmd)\nimport Result exposing (Result(..))\n\n\n\n{-| Here are some common tasks:\n\n- [`now : Task x Posix`][now]\n- [`focus : String -> Task Error ()`][focus]\n- [`sleep : Float -> Task x ()`][sleep]\n\n[now]: /packages/elm/time/latest/Time#now\n[focus]: /packages/elm/browser/latest/Browser-Dom#focus\n[sleep]: /packages/elm/core/latest/Process#sleep\n\nIn each case we have a `Task` that will resolve successfully with an `a` value\nor unsuccessfully with an `x` value. So `Browser.Dom.focus` we may fail with an\n`Error` if the given ID does not exist. Whereas `Time.now` never fails so\nI cannot be more specific than `x`. No such value will ever exist! Instead it\nalways succeeds with the current POSIX time.\n\nMore generally a task is a _description_ of what you need to do. Like a todo\nlist. Or like a grocery list. Or like GitHub issues. So saying \"the task is\nto tell me the current POSIX time\" does not complete the task! You need\n[`perform`](#perform) tasks or [`attempt`](#attempt) tasks.\n-}\ntype alias Task x a =\n  Platform.Task x a\n\n\n\n-- BASICS\n\n\n{-| A task that succeeds immediately when run. It is usually used with\n[`andThen`](#andThen). You can use it like `map` if you want:\n\n    import Time -- elm install elm/time\n\n    timeInMillis : Task x Int\n    timeInMillis =\n      Time.now\n        |> andThen (\\t -> succeed (Time.posixToMillis t))\n\n-}\nsucceed : a -> Task x a\nsucceed =\n  Elm.Kernel.Scheduler.succeed\n\n\n{-| A task that fails immediately when run. Like with `succeed`, this can be\nused with `andThen` to check on the outcome of another task.\n\n    type Error = NotFound\n\n    notFound : Task Error a\n    notFound =\n      fail NotFound\n-}\nfail : x -> Task x a\nfail =\n  Elm.Kernel.Scheduler.fail\n\n\n\n-- MAPPING\n\n\n{-| Transform a task. Maybe you want to use [`elm/time`][time] to figure\nout what time it will be in one hour:\n\n    import Task exposing (Task)\n    import Time -- elm install elm/time\n\n    timeInOneHour : Task x Time.Posix\n    timeInOneHour =\n      Task.map addAnHour Time.now\n\n    addAnHour : Time.Posix -> Time.Posix\n    addAnHour time =\n      Time.millisToPosix (Time.posixToMillis time + 60 * 60 * 1000)\n\n[time]: /packages/elm/time/latest/\n-}\nmap : (a -> b) -> Task x a -> Task x b\nmap func taskA =\n  taskA\n    |> andThen (\\a -> succeed (func a))\n\n\n{-| Put the results of two tasks together. For example, if we wanted to know\nthe current month, we could use [`elm/time`][time] to ask:\n\n    import Task exposing (Task)\n    import Time -- elm install elm/time\n\n    getMonth : Task x Int\n    getMonth =\n      Task.map2 Time.toMonth Time.here Time.now\n\n**Note:** Say we were doing HTTP requests instead. `map2` does each task in\norder, so it would try the first request and only continue after it succeeds.\nIf it fails, the whole thing fails!\n\n[time]: /packages/elm/time/latest/\n-}\nmap2 : (a -> b -> result) -> Task x a -> Task x b -> Task x result\nmap2 func taskA taskB =\n  taskA\n    |> andThen (\\a -> taskB\n    |> andThen (\\b -> succeed (func a b)))\n\n\n{-|-}\nmap3 : (a -> b -> c -> result) -> Task x a -> Task x b -> Task x c -> Task x result\nmap3 func taskA taskB taskC =\n  taskA\n    |> andThen (\\a -> taskB\n    |> andThen (\\b -> taskC\n    |> andThen (\\c -> succeed (func a b c))))\n\n\n{-|-}\nmap4 : (a -> b -> c -> d -> result) -> Task x a -> Task x b -> Task x c -> Task x d -> Task x result\nmap4 func taskA taskB taskC taskD =\n  taskA\n    |> andThen (\\a -> taskB\n    |> andThen (\\b -> taskC\n    |> andThen (\\c -> taskD\n    |> andThen (\\d -> succeed (func a b c d)))))\n\n\n{-|-}\nmap5 : (a -> b -> c -> d -> e -> result) -> Task x a -> Task x b -> Task x c -> Task x d -> Task x e -> Task x result\nmap5 func taskA taskB taskC taskD taskE =\n  taskA\n    |> andThen (\\a -> taskB\n    |> andThen (\\b -> taskC\n    |> andThen (\\c -> taskD\n    |> andThen (\\d -> taskE\n    |> andThen (\\e -> succeed (func a b c d e))))))\n\n\n{-| Start with a list of tasks, and turn them into a single task that returns a\nlist. The tasks will be run in order one-by-one and if any task fails the whole\nsequence fails.\n\n    sequence [ succeed 1, succeed 2 ] == succeed [ 1, 2 ]\n\n-}\nsequence : List (Task x a) -> Task x (List a)\nsequence tasks =\n  List.foldr (map2 (::)) (succeed []) tasks\n\n\n\n-- CHAINING\n\n\n{-| Chain together a task and a callback. The first task will run, and if it is\nsuccessful, you give the result to the callback resulting in another task. This\ntask then gets run. We could use this to make a task that resolves an hour from\nnow:\n\n    import Time -- elm install elm/time\n    import Process\n\n    timeInOneHour : Task x Time.Posix\n    timeInOneHour =\n      Process.sleep (60 * 60 * 1000)\n        |> andThen (\\_ -> Time.now)\n\nFirst the process sleeps for an hour **and then** it tells us what time it is.\n-}\nandThen : (a -> Task x b) -> Task x a -> Task x b\nandThen =\n  Elm.Kernel.Scheduler.andThen\n\n\n\n-- ERRORS\n\n\n{-| Recover from a failure in a task. If the given task fails, we use the\ncallback to recover.\n\n    fail \"file not found\"\n      |> onError (\\msg -> succeed 42)\n      -- succeed 42\n\n    succeed 9\n      |> onError (\\msg -> succeed 42)\n      -- succeed 9\n-}\nonError : (x -> Task y a) -> Task x a -> Task y a\nonError =\n  Elm.Kernel.Scheduler.onError\n\n\n{-| Transform the error value. This can be useful if you need a bunch of error\ntypes to match up.\n\n    type Error\n      = Http Http.Error\n      | WebGL WebGL.Error\n\n    getResources : Task Error Resource\n    getResources =\n      sequence\n        [ mapError Http serverTask\n        , mapError WebGL textureTask\n        ]\n-}\nmapError : (x -> y) -> Task x a -> Task y a\nmapError convert task =\n  task\n    |> onError (fail << convert)\n\n\n\n-- COMMANDS\n\n\ntype MyCmd msg =\n  Perform (Task Never msg)\n\n\n{-| Like I was saying in the [`Task`](#Task) documentation, just having a\n`Task` does not mean it is done. We must command Elm to `perform` the task:\n\n    import Time  -- elm install elm/time\n    import Task\n\n    type Msg\n      = Click\n      | Search String\n      | NewTime Time.Posix\n\n    getNewTime : Cmd Msg\n    getNewTime =\n      Task.perform NewTime Time.now\n\nIf you have worked through [`guide.elm-lang.org`][guide] (highly recommended!)\nyou will recognize `Cmd` from the section on The Elm Architecture. So we have\nchanged a task like \"make delicious lasagna\" into a command like \"Hey Elm, make\ndelicious lasagna and give it to my `update` function as a `Msg` value.\"\n\n[guide]: https://guide.elm-lang.org/\n-}\nperform : (a -> msg) -> Task Never a -> Cmd msg\nperform toMessage task =\n  command (Perform (map toMessage task))\n\n\n{-| This is very similar to [`perform`](#perform) except it can handle failures!\nSo we could _attempt_ to focus on a certain DOM node like this:\n\n    import Browser.Dom  -- elm install elm/browser\n    import Task\n\n    type Msg\n      = Click\n      | Search String\n      | Focus (Result Browser.DomError ())\n\n    focus : Cmd Msg\n    focus =\n      Task.attempt Focus (Browser.Dom.focus \"my-app-search-box\")\n\nSo the task is \"focus on this DOM node\" and we are turning it into the command\n\"Hey Elm, attempt to focus on this DOM node and give me a `Msg` about whether\nyou succeeded or failed.\"\n\n**Note:** Definitely work through [`guide.elm-lang.org`][guide] to get a\nfeeling for how commands fit into The Elm Architecture.\n\n[guide]: https://guide.elm-lang.org/\n-}\nattempt : (Result x a -> msg) -> Task x a -> Cmd msg\nattempt resultToMessage task =\n  command (Perform (\n    task\n      |> andThen (succeed << resultToMessage << Ok)\n      |> onError (succeed << resultToMessage << Err)\n  ))\n\n\ncmdMap : (a -> b) -> MyCmd a -> MyCmd b\ncmdMap tagger (Perform task) =\n  Perform (map tagger task)\n\n\n\n-- MANAGER\n\n\ninit : Task Never ()\ninit =\n  succeed ()\n\n\nonEffects : Platform.Router msg Never -> List (MyCmd msg) -> () -> Task Never ()\nonEffects router commands state =\n  map\n    (\\_ -> ())\n    (sequence (List.map (spawnCmd router) commands))\n\n\nonSelfMsg : Platform.Router msg Never -> Never -> () -> Task Never ()\nonSelfMsg _ _ _ =\n  succeed ()\n\n\nspawnCmd : Platform.Router msg Never -> MyCmd msg -> Task x ()\nspawnCmd router (Perform task) =\n  Elm.Kernel.Scheduler.spawn (\n    task\n      |> andThen (Platform.sendToApp router)\n  )\n'}))
		]));
var $author$project$CompilationInterface$SourceFiles$BlobNode = function (a) {
	return {$: 'BlobNode', a: a};
};
var $author$project$CompilationInterface$SourceFiles$TreeNode = function (a) {
	return {$: 'TreeNode', a: a};
};
var $elm$core$Tuple$mapSecond = F2(
	function (func, _v0) {
		var x = _v0.a;
		var y = _v0.b;
		return _Utils_Tuple2(
			x,
			func(y));
	});
var $author$project$CompilationInterface$SourceFiles$mapBlobs = F2(
	function (mapBlob, node) {
		if (node.$ === 'TreeNode') {
			var tree = node.a;
			return $author$project$CompilationInterface$SourceFiles$TreeNode(
				A2(
					$elm$core$List$map,
					$elm$core$Tuple$mapSecond(
						$author$project$CompilationInterface$SourceFiles$mapBlobs(mapBlob)),
					tree));
		} else {
			var blob = node.a;
			return $author$project$CompilationInterface$SourceFiles$BlobNode(
				mapBlob(blob));
		}
	});
var $author$project$CompilationInterface$SourceFiles$mapFileTreeNodeFromGenerated = function (node) {
	if (node.$ === 'BlobNode') {
		var blob = node.a;
		return $author$project$CompilationInterface$SourceFiles$BlobNode(blob);
	} else {
		var tree = node.a;
		return $author$project$CompilationInterface$SourceFiles$TreeNode(
			A2(
				$elm$core$List$map,
				$elm$core$Tuple$mapSecond($author$project$CompilationInterface$SourceFiles$mapFileTreeNodeFromGenerated),
				tree));
	}
};
var $author$project$CompilationInterface$SourceFiles$file_tree____elm_core_modules_explicit_import = A2(
	$author$project$CompilationInterface$SourceFiles$mapBlobs,
	function (blobValue) {
		return {utf8: blobValue.utf8};
	},
	$author$project$CompilationInterface$SourceFiles$mapFileTreeNodeFromGenerated($author$project$CompilationInterface$SourceFiles$Generated_SourceFiles$file_tree_node_elm_core_modules_explicit_import));
var $author$project$CompilationInterface$SourceFiles$Generated_SourceFiles$file_tree_node_elm_core_modules_implicit_import = $author$project$CompilationInterface$SourceFiles$Generated_SourceFiles$TreeNode(
	_List_fromArray(
		[
			_Utils_Tuple2(
			'Basics.elm',
			$author$project$CompilationInterface$SourceFiles$Generated_SourceFiles$BlobNode(
				{utf8: 'module Basics exposing\n  ( Int, Float\n  , (+), (-), (*), (/), (//), (^)\n  , toFloat, round, floor, ceiling, truncate\n  , (==), (/=)\n  , (<), (>), (<=), (>=), max, min, compare, Order(..)\n  , Bool(..), not, (&&), (||), xor\n  , (++)\n  , modBy, remainderBy, negate, abs, clamp, sqrt, logBase, e\n  , pi, cos, sin, tan, acos, asin, atan, atan2\n  , degrees, radians, turns\n  , toPolar, fromPolar\n  , isNaN, isInfinite\n  , identity, always, (<|), (|>), (<<), (>>), Never, never\n  )\n\n{-| Tons of useful functions that get imported by default.\n\n# Math\n@docs Int, Float, (+), (-), (*), (/), (//), (^)\n\n# Int to Float / Float to Int\n@docs toFloat, round, floor, ceiling, truncate\n\n# Equality\n@docs (==), (/=)\n\n# Comparison\n\nThese functions only work on `comparable` types. This includes numbers,\ncharacters, strings, lists of comparable things, and tuples of comparable\nthings.\n\n@docs (<), (>), (<=), (>=), max, min, compare, Order\n\n# Booleans\n@docs Bool, not, (&&), (||), xor\n\n# Append Strings and Lists\n@docs (++)\n\n# Fancier Math\n@docs modBy, remainderBy, negate, abs, clamp, sqrt, logBase, e\n\n# Angles\n@docs degrees, radians, turns\n\n# Trigonometry\n@docs pi, cos, sin, tan, acos, asin, atan, atan2\n\n# Polar Coordinates\n@docs toPolar, fromPolar\n\n# Floating Point Checks\n@docs isNaN, isInfinite\n\n# Function Helpers\n@docs identity, always, (<|), (|>), (<<), (>>), Never, never\n\n-}\n\n\nimport Elm.Kernel.Basics\nimport Elm.Kernel.Utils\n\n\n\n-- INFIX OPERATORS\n\n\ninfix right 0 (<|) = apL\ninfix left  0 (|>) = apR\ninfix right 2 (||) = or\ninfix right 3 (&&) = and\ninfix non   4 (==) = eq\ninfix non   4 (/=) = neq\ninfix non   4 (<)  = lt\ninfix non   4 (>)  = gt\ninfix non   4 (<=) = le\ninfix non   4 (>=) = ge\ninfix right 5 (++) = append\ninfix left  6 (+)  = add\ninfix left  6 (-)  = sub\ninfix left  7 (*)  = mul\ninfix left  7 (/)  = fdiv\ninfix left  7 (//) = idiv\ninfix right 8 (^)  = pow\ninfix left  9 (<<) = composeL\ninfix right 9 (>>) = composeR\n\n\n\n-- MATHEMATICS\n\n\n{-| An `Int` is a whole number. Valid syntax for integers includes:\n\n    0\n    42\n    9000\n    0xFF   -- 255 in hexadecimal\n    0x000A --  10 in hexadecimal\n\n**Note:** `Int` math is well-defined in the range `-2^31` to `2^31 - 1`. Outside\nof that range, the behavior is determined by the compilation target. When\ngenerating JavaScript, the safe range expands to `-(2^53 - 1)` to `2^53 - 1` for some\noperations, but if we generate WebAssembly some day, we would do the traditional\n[integer overflow][io]. This quirk is necessary to get good performance on\nquirky compilation targets.\n\n**Historical Note:** The name `Int` comes from the term [integer][]. It appears\nthat the `int` abbreviation was introduced in [ALGOL 68][68], shortening it\nfrom `integer` in [ALGOL 60][60]. Today, almost all programming languages use\nthis abbreviation.\n\n[io]: https://en.wikipedia.org/wiki/Integer_overflow\n[integer]: https://en.wikipedia.org/wiki/Integer\n[60]: https://en.wikipedia.org/wiki/ALGOL_60\n[68]: https://en.wikipedia.org/wiki/ALGOL_68\n-}\ntype Int = Int -- NOTE: The compiler provides the real implementation.\n\n\n{-| A `Float` is a [floating-point number][fp]. Valid syntax for floats includes:\n\n    0\n    42\n    3.14\n    0.1234\n    6.022e23   -- == (6.022 * 10^23)\n    6.022e+23  -- == (6.022 * 10^23)\n    1.602e−19  -- == (1.602 * 10^-19)\n    1e3        -- == (1 * 10^3) == 1000\n\n**Historical Note:** The particular details of floats (e.g. `NaN`) are\nspecified by [IEEE 754][ieee] which is literally hard-coded into almost all\nCPUs in the world. That means if you think `NaN` is weird, you must\nsuccessfully overtake Intel and AMD with a chip that is not backwards\ncompatible with any widely-used assembly language.\n\n[fp]: https://en.wikipedia.org/wiki/Floating-point_arithmetic\n[ieee]: https://en.wikipedia.org/wiki/IEEE_754\n-}\ntype Float = Float -- NOTE: The compiler provides the real implementation.\n\n\n{-| Add two numbers. The `number` type variable means this operation can be\nspecialized to `Int -> Int -> Int` or to `Float -> Float -> Float`. So you\ncan do things like this:\n\n    3002 + 4004 == 7006  -- all ints\n    3.14 + 3.14 == 6.28  -- all floats\n\nYou _cannot_ add an `Int` and a `Float` directly though. Use functions like\n[toFloat](#toFloat) or [round](#round) to convert both values to the same type.\nSo if you needed to add a list length to a `Float` for some reason, you\ncould say one of these:\n\n    3.14 + toFloat (List.length [1,2,3]) == 6.14\n    round 3.14 + List.length [1,2,3]     == 6\n\n**Note:** Languages like Java and JavaScript automatically convert `Int` values\nto `Float` values when you mix and match. This can make it difficult to be sure\nexactly what type of number you are dealing with. When you try to _infer_ these\nconversions (as Scala does) it can be even more confusing. Elm has opted for a\ndesign that makes all conversions explicit.\n-}\nadd : number -> number -> number\nadd =\n  Elm.Kernel.Basics.add\n\n\n{-| Subtract numbers like `4 - 3 == 1`.\n\nSee [`(+)`](#+) for docs on the `number` type variable.\n-}\nsub : number -> number -> number\nsub =\n  Elm.Kernel.Basics.sub\n\n\n{-| Multiply numbers like `2 * 3 == 6`.\n\nSee [`(+)`](#+) for docs on the `number` type variable.\n-}\nmul : number -> number -> number\nmul =\n  Elm.Kernel.Basics.mul\n\n\n{-| Floating-point division:\n\n    10 / 4 == 2.5\n    11 / 4 == 2.75\n    12 / 4 == 3\n    13 / 4 == 3.25\n    14 / 4 == 3.5\n\n    -1 / 4 == -0.25\n    -5 / 4 == -1.25\n\n-}\nfdiv : Float -> Float -> Float\nfdiv =\n  Elm.Kernel.Basics.fdiv\n\n\n{-| Integer division:\n\n    10 // 4 == 2\n    11 // 4 == 2\n    12 // 4 == 3\n    13 // 4 == 3\n    14 // 4 == 3\n\n    -1 // 4 == 0\n    -5 // 4 == -1\n\nNotice that the remainder is discarded, so `3 // 4` is giving output\nsimilar to `truncate (3 / 4)`.\n\nIt may sometimes be useful to pair this with the [`remainderBy`](#remainderBy)\nfunction.\n-}\nidiv : Int -> Int -> Int\nidiv =\n  Elm.Kernel.Basics.idiv\n\n\n{-| Exponentiation\n\n    3^2 == 9\n    3^3 == 27\n-}\npow : number -> number -> number\npow =\n  Elm.Kernel.Basics.pow\n\n\n\n-- INT TO FLOAT / FLOAT TO INT\n\n\n{-| Convert an integer into a float. Useful when mixing `Int` and `Float`\nvalues like this:\n\n    halfOf : Int -> Float\n    halfOf number =\n      toFloat number / 2\n\n-}\ntoFloat : Int -> Float\ntoFloat =\n  Elm.Kernel.Basics.toFloat\n\n\n{-| Round a number to the nearest integer.\n\n    round 1.0 == 1\n    round 1.2 == 1\n    round 1.5 == 2\n    round 1.8 == 2\n\n    round -1.2 == -1\n    round -1.5 == -1\n    round -1.8 == -2\n-}\nround : Float -> Int\nround =\n  Elm.Kernel.Basics.round\n\n\n{-| Floor function, rounding down.\n\n    floor 1.0 == 1\n    floor 1.2 == 1\n    floor 1.5 == 1\n    floor 1.8 == 1\n\n    floor -1.2 == -2\n    floor -1.5 == -2\n    floor -1.8 == -2\n-}\nfloor : Float -> Int\nfloor =\n  Elm.Kernel.Basics.floor\n\n\n{-| Ceiling function, rounding up.\n\n    ceiling 1.0 == 1\n    ceiling 1.2 == 2\n    ceiling 1.5 == 2\n    ceiling 1.8 == 2\n\n    ceiling -1.2 == -1\n    ceiling -1.5 == -1\n    ceiling -1.8 == -1\n-}\nceiling : Float -> Int\nceiling =\n  Elm.Kernel.Basics.ceiling\n\n\n{-| Truncate a number, rounding towards zero.\n\n    truncate 1.0 == 1\n    truncate 1.2 == 1\n    truncate 1.5 == 1\n    truncate 1.8 == 1\n\n    truncate -1.2 == -1\n    truncate -1.5 == -1\n    truncate -1.8 == -1\n-}\ntruncate : Float -> Int\ntruncate =\n  Elm.Kernel.Basics.truncate\n\n\n\n-- EQUALITY\n\n\n{-| Check if values are &ldquo;the same&rdquo;.\n\n**Note:** Elm uses structural equality on tuples, records, and user-defined\nunion types. This means the values `(3, 4)` and `(3, 4)` are definitely equal.\nThis is not true in languages like JavaScript that use reference equality on\nobjects.\n\n**Note:** Do not use `(==)` with functions, JSON values from `elm/json`, or\nregular expressions from `elm/regex`. It does not work. It will crash if\npossible. With JSON values, decode to Elm values before doing any equality\nchecks!\n\nWhy is it like this? Equality in the Elm sense can be difficult or impossible\nto compute. Proving that functions are the same is [undecidable][], and JSON\nvalues can come in through ports and have functions, cycles, and new JS data\ntypes that interact weirdly with our equality implementation. In a future\nrelease, the compiler will detect when `(==)` is used with problematic types\nand provide a helpful error message at compile time. This will require some\npretty serious infrastructure work, so the stopgap is to crash as quickly as\npossible.\n\n[undecidable]: https://en.wikipedia.org/wiki/Undecidable_problem\n-}\neq : a -> a -> Bool\neq =\n  Elm.Kernel.Utils.equal\n\n\n{-| Check if values are not &ldquo;the same&rdquo;.\n\nSo `(a /= b)` is the same as `(not (a == b))`.\n-}\nneq : a -> a -> Bool\nneq =\n  Elm.Kernel.Utils.notEqual\n\n\n\n-- COMPARISONS\n\n\n{-|-}\nlt : comparable -> comparable -> Bool\nlt =\n  Elm.Kernel.Utils.lt\n\n\n{-|-}\ngt : comparable -> comparable -> Bool\ngt =\n  Elm.Kernel.Utils.gt\n\n\n{-|-}\nle : comparable -> comparable -> Bool\nle =\n  Elm.Kernel.Utils.le\n\n\n{-|-}\nge : comparable -> comparable -> Bool\nge =\n  Elm.Kernel.Utils.ge\n\n\n{-| Find the smaller of two comparables.\n\n    min 42 12345678 == 42\n    min \"abc\" \"xyz\" == \"abc\"\n-}\nmin : comparable -> comparable -> comparable\nmin x y =\n  if lt x y then x else y\n\n\n{-| Find the larger of two comparables.\n\n    max 42 12345678 == 12345678\n    max \"abc\" \"xyz\" == \"xyz\"\n-}\nmax : comparable -> comparable -> comparable\nmax x y =\n  if gt x y then x else y\n\n\n{-| Compare any two comparable values. Comparable values include `String`,\n`Char`, `Int`, `Float`, or a list or tuple containing comparable values. These\nare also the only values that work as `Dict` keys or `Set` members.\n\n    compare 3 4 == LT\n    compare 4 4 == EQ\n    compare 5 4 == GT\n-}\ncompare : comparable -> comparable -> Order\ncompare =\n  Elm.Kernel.Utils.compare\n\n\n{-| Represents the relative ordering of two things.\nThe relations are less than, equal to, and greater than.\n-}\ntype Order = LT | EQ | GT\n\n\n\n-- BOOLEANS\n\n\n{-| A “Boolean” value. It can either be `True` or `False`.\n\n**Note:** Programmers coming from JavaScript, Java, etc. tend to reach for\nboolean values way too often in Elm. Using a [union type][ut] is often clearer\nand more reliable. You can learn more about this from Jeremy [here][jf] or\nfrom Richard [here][rt].\n\n[ut]: https://guide.elm-lang.org/types/union_types.html\n[jf]: https://youtu.be/6TDKHGtAxeg?t=1m25s\n[rt]: https://youtu.be/IcgmSRJHu_8?t=1m14s\n-}\ntype Bool = True | False\n\n\n{-| Negate a boolean value.\n\n    not True == False\n    not False == True\n-}\nnot : Bool -> Bool\nnot =\n  Elm.Kernel.Basics.not\n\n\n{-| The logical AND operator. `True` if both inputs are `True`.\n\n    True  && True  == True\n    True  && False == False\n    False && True  == False\n    False && False == False\n\n**Note:** When used in the infix position, like `(left && right)`, the operator\nshort-circuits. This means if `left` is `False` we do not bother evaluating `right`\nand just return `False` overall.\n-}\nand : Bool -> Bool -> Bool\nand =\n  Elm.Kernel.Basics.and\n\n\n{-| The logical OR operator. `True` if one or both inputs are `True`.\n\n    True  || True  == True\n    True  || False == True\n    False || True  == True\n    False || False == False\n\n**Note:** When used in the infix position, like `(left || right)`, the operator\nshort-circuits. This means if `left` is `True` we do not bother evaluating `right`\nand just return `True` overall.\n-}\nor : Bool -> Bool -> Bool\nor =\n  Elm.Kernel.Basics.or\n\n\n{-| The exclusive-or operator. `True` if exactly one input is `True`.\n\n    xor True  True  == False\n    xor True  False == True\n    xor False True  == True\n    xor False False == False\n-}\nxor : Bool -> Bool -> Bool\nxor =\n  Elm.Kernel.Basics.xor\n\n\n\n-- APPEND\n\n\n{-| Put two appendable things together. This includes strings and lists.\n\n    \"hello\" ++ \"world\" == \"helloworld\"\n    [1,1,2] ++ [3,5,8] == [1,1,2,3,5,8]\n-}\nappend : appendable -> appendable -> appendable\nappend =\n  Elm.Kernel.Utils.append\n\n\n\n-- FANCIER MATH\n\n\n{-| Perform [modular arithmetic](https://en.wikipedia.org/wiki/Modular_arithmetic).\nA common trick is to use (n mod 2) to detect even and odd numbers:\n\n    modBy 2 0 == 0\n    modBy 2 1 == 1\n    modBy 2 2 == 0\n    modBy 2 3 == 1\n\nOur `modBy` function works in the typical mathematical way when you run into\nnegative numbers:\n\n    List.map (modBy 4) [ -5, -4, -3, -2, -1,  0,  1,  2,  3,  4,  5 ]\n    --                 [  3,  0,  1,  2,  3,  0,  1,  2,  3,  0,  1 ]\n\nUse [`remainderBy`](#remainderBy) for a different treatment of negative numbers,\nor read Daan Leijen’s [Division and Modulus for Computer Scientists][dm] for more\ninformation.\n\n[dm]: https://www.microsoft.com/en-us/research/wp-content/uploads/2016/02/divmodnote-letter.pdf\n-}\nmodBy : Int -> Int -> Int\nmodBy =\n  Elm.Kernel.Basics.modBy\n\n\n{-| Get the remainder after division. Here are bunch of examples of dividing by four:\n\n    List.map (remainderBy 4) [ -5, -4, -3, -2, -1,  0,  1,  2,  3,  4,  5 ]\n    --                       [ -1,  0, -3, -2, -1,  0,  1,  2,  3,  0,  1 ]\n\nUse [`modBy`](#modBy) for a different treatment of negative numbers,\nor read Daan Leijen’s [Division and Modulus for Computer Scientists][dm] for more\ninformation.\n\n[dm]: https://www.microsoft.com/en-us/research/wp-content/uploads/2016/02/divmodnote-letter.pdf\n-}\nremainderBy : Int -> Int -> Int\nremainderBy =\n  Elm.Kernel.Basics.remainderBy\n\n\n{-| Negate a number.\n\n    negate 42 == -42\n    negate -42 == 42\n    negate 0 == 0\n-}\nnegate : number -> number\nnegate n =\n  -n\n\n\n{-| Get the [absolute value][abs] of a number.\n\n    abs 16   == 16\n    abs -4   == 4\n    abs -8.5 == 8.5\n    abs 3.14 == 3.14\n\n[abs]: https://en.wikipedia.org/wiki/Absolute_value\n-}\nabs : number -> number\nabs n =\n  if lt n 0 then -n else n\n\n\n{-| Clamps a number within a given range. With the expression\n`clamp 100 200 x` the results are as follows:\n\n    100     if x < 100\n     x      if 100 <= x < 200\n    200     if 200 <= x\n-}\nclamp : number -> number -> number -> number\nclamp low high number =\n  if lt number low then\n    low\n  else if gt number high then\n    high\n  else\n    number\n\n\n{-| Take the square root of a number.\n\n    sqrt  4 == 2\n    sqrt  9 == 3\n    sqrt 16 == 4\n    sqrt 25 == 5\n-}\nsqrt : Float -> Float\nsqrt =\n  Elm.Kernel.Basics.sqrt\n\n\n{-| Calculate the logarithm of a number with a given base.\n\n    logBase 10 100 == 2\n    logBase 2 256 == 8\n-}\nlogBase : Float -> Float -> Float\nlogBase base number =\n  fdiv\n    (Elm.Kernel.Basics.log number)\n    (Elm.Kernel.Basics.log base)\n\n\n{-| An approximation of e.\n-}\ne : Float\ne =\n  Elm.Kernel.Basics.e\n\n\n\n-- ANGLES\n\n\n{-| Convert radians to standard Elm angles (radians).\n\n    radians pi == 3.141592653589793\n-}\nradians : Float -> Float\nradians angleInRadians =\n  angleInRadians\n\n\n{-| Convert degrees to standard Elm angles (radians).\n\n    degrees 180 == 3.141592653589793\n-}\ndegrees : Float -> Float\ndegrees angleInDegrees =\n  fdiv (mul angleInDegrees pi) 180\n\n\n{-| Convert turns to standard Elm angles (radians). One turn is equal to 360°.\n\n    turns (1/2) == 3.141592653589793\n-}\nturns : Float -> Float\nturns angleInTurns =\n  mul (mul 2 pi) angleInTurns\n\n\n\n-- TRIGONOMETRY\n\n\n{-| An approximation of pi.\n-}\npi : Float\npi =\n  Elm.Kernel.Basics.pi\n\n\n{-| Figure out the cosine given an angle in radians.\n\n    cos (degrees 60)     == 0.5000000000000001\n    cos (turns (1/6))    == 0.5000000000000001\n    cos (radians (pi/3)) == 0.5000000000000001\n    cos (pi/3)           == 0.5000000000000001\n\n-}\ncos : Float -> Float\ncos =\n  Elm.Kernel.Basics.cos\n\n\n{-| Figure out the sine given an angle in radians.\n\n    sin (degrees 30)     == 0.49999999999999994\n    sin (turns (1/12))   == 0.49999999999999994\n    sin (radians (pi/6)) == 0.49999999999999994\n    sin (pi/6)           == 0.49999999999999994\n\n-}\nsin : Float -> Float\nsin =\n  Elm.Kernel.Basics.sin\n\n\n{-| Figure out the tangent given an angle in radians.\n\n    tan (degrees 45)     == 0.9999999999999999\n    tan (turns (1/8))    == 0.9999999999999999\n    tan (radians (pi/4)) == 0.9999999999999999\n    tan (pi/4)           == 0.9999999999999999\n-}\ntan : Float -> Float\ntan =\n  Elm.Kernel.Basics.tan\n\n\n{-| Figure out the arccosine for `adjacent / hypotenuse` in radians:\n\n    acos (1/2) == 1.0471975511965979 -- 60° or pi/3 radians\n\n-}\nacos : Float -> Float\nacos =\n  Elm.Kernel.Basics.acos\n\n\n{-| Figure out the arcsine for `opposite / hypotenuse` in radians:\n\n    asin (1/2) == 0.5235987755982989 -- 30° or pi/6 radians\n\n-}\nasin : Float -> Float\nasin =\n  Elm.Kernel.Basics.asin\n\n\n{-| This helps you find the angle (in radians) to an `(x,y)` coordinate, but\nin a way that is rarely useful in programming. **You probably want\n[`atan2`](#atan2) instead!**\n\nThis version takes `y/x` as its argument, so there is no way to know whether\nthe negative signs comes from the `y` or `x` value. So as we go counter-clockwise\naround the origin from point `(1,1)` to `(1,-1)` to `(-1,-1)` to `(-1,1)` we do\nnot get angles that go in the full circle:\n\n    atan (  1 /  1 ) ==  0.7853981633974483 --  45° or   pi/4 radians\n    atan (  1 / -1 ) == -0.7853981633974483 -- 315° or 7*pi/4 radians\n    atan ( -1 / -1 ) ==  0.7853981633974483 --  45° or   pi/4 radians\n    atan ( -1 /  1 ) == -0.7853981633974483 -- 315° or 7*pi/4 radians\n\nNotice that everything is between `pi/2` and `-pi/2`. That is pretty useless\nfor figuring out angles in any sort of visualization, so again, check out\n[`atan2`](#atan2) instead!\n-}\natan : Float -> Float\natan =\n  Elm.Kernel.Basics.atan\n\n\n{-| This helps you find the angle (in radians) to an `(x,y)` coordinate.\nSo rather than saying `atan (y/x)` you say `atan2 y x` and you can get a full\nrange of angles:\n\n    atan2  1  1 ==  0.7853981633974483 --  45° or   pi/4 radians\n    atan2  1 -1 ==  2.356194490192345  -- 135° or 3*pi/4 radians\n    atan2 -1 -1 == -2.356194490192345  -- 225° or 5*pi/4 radians\n    atan2 -1  1 == -0.7853981633974483 -- 315° or 7*pi/4 radians\n\n-}\natan2 : Float -> Float -> Float\natan2 =\n  Elm.Kernel.Basics.atan2\n\n\n\n-- POLAR COORDINATES\n\n\n{-| Convert polar coordinates (r,&theta;) to Cartesian coordinates (x,y).\n\n    fromPolar (sqrt 2, degrees 45) == (1, 1)\n-}\nfromPolar : (Float,Float) -> (Float,Float)\nfromPolar (radius, theta) =\n  ( mul radius (cos theta)\n  , mul radius (sin theta)\n  )\n\n\n{-| Convert Cartesian coordinates (x,y) to polar coordinates (r,&theta;).\n\n    toPolar (3, 4) == ( 5, 0.9272952180016122)\n    toPolar (5,12) == (13, 1.1760052070951352)\n-}\ntoPolar : (Float,Float) -> (Float,Float)\ntoPolar ( x, y ) =\n  ( sqrt (add (mul x x) (mul y y))\n  , atan2 y x\n  )\n\n\n\n-- CRAZY FLOATS\n\n\n{-| Determine whether a float is an undefined or unrepresentable number.\nNaN stands for *not a number* and it is [a standardized part of floating point\nnumbers](https://en.wikipedia.org/wiki/NaN).\n\n    isNaN (0/0)     == True\n    isNaN (sqrt -1) == True\n    isNaN (1/0)     == False  -- infinity is a number\n    isNaN 1         == False\n-}\nisNaN : Float -> Bool\nisNaN =\n  Elm.Kernel.Basics.isNaN\n\n\n{-| Determine whether a float is positive or negative infinity.\n\n    isInfinite (0/0)     == False\n    isInfinite (sqrt -1) == False\n    isInfinite (1/0)     == True\n    isInfinite 1         == False\n\nNotice that NaN is not infinite! For float `n` to be finite implies that\n`not (isInfinite n || isNaN n)` evaluates to `True`.\n-}\nisInfinite : Float -> Bool\nisInfinite =\n  Elm.Kernel.Basics.isInfinite\n\n\n\n-- FUNCTION HELPERS\n\n\n{-| Function composition, passing results along in the suggested direction. For\nexample, the following code checks if the square root of a number is odd:\n\n    not << isEven << sqrt\n\nYou can think of this operator as equivalent to the following:\n\n    (g << f)  ==  (\\x -> g (f x))\n\nSo our example expands out to something like this:\n\n    \\n -> not (isEven (sqrt n))\n-}\ncomposeL : (b -> c) -> (a -> b) -> (a -> c)\ncomposeL g f x =\n  g (f x)\n\n\n{-| Function composition, passing results along in the suggested direction. For\nexample, the following code checks if the square root of a number is odd:\n\n    sqrt >> isEven >> not\n\n-}\ncomposeR : (a -> b) -> (b -> c) -> (a -> c)\ncomposeR f g x =\n  g (f x)\n\n\n{-| Saying `x |> f` is exactly the same as `f x`.\n\nIt is called the “pipe” operator because it lets you write “pipelined” code.\nFor example, say we have a `sanitize` function for turning user input into\nintegers:\n\n    -- BEFORE\n    sanitize : String -> Maybe Int\n    sanitize input =\n      String.toInt (String.trim input)\n\nWe can rewrite it like this:\n\n    -- AFTER\n    sanitize : String -> Maybe Int\n    sanitize input =\n      input\n        |> String.trim\n        |> String.toInt\n\nTotally equivalent! I recommend trying to rewrite code that uses `x |> f`\ninto code like `f x` until there are no pipes left. That can help you build\nyour intuition.\n\n**Note:** This can be overused! I think folks find it quite neat, but when you\nhave three or four steps, the code often gets clearer if you break out a\ntop-level helper function. Now the transformation has a name. The arguments are\nnamed. It has a type annotation. It is much more self-documenting that way!\nTesting the logic gets easier too. Nice side benefit!\n-}\napR : a -> (a -> b) -> b\napR x f =\n  f x\n\n\n{-| Saying `f <| x` is exactly the same as `f x`.\n\nIt can help you avoid parentheses, which can be nice sometimes. Maybe you want\nto apply a function to a `case` expression? That sort of thing.\n-}\napL : (a -> b) -> a -> b\napL f x =\n  f x\n\n\n{-| Given a value, returns exactly the same value. This is called\n[the identity function](https://en.wikipedia.org/wiki/Identity_function).\n-}\nidentity : a -> a\nidentity x =\n  x\n\n\n{-| Create a function that *always* returns the same value. Useful with\nfunctions like `map`:\n\n    List.map (always 0) [1,2,3,4,5] == [0,0,0,0,0]\n\n    -- List.map (\\_ -> 0) [1,2,3,4,5] == [0,0,0,0,0]\n    -- always = (\\x _ -> x)\n-}\nalways : a -> b -> a\nalways a _ =\n  a\n\n\n{-| A value that can never happen! For context:\n\n  - The boolean type `Bool` has two values: `True` and `False`\n  - The unit type `()` has one value: `()`\n  - The never type `Never` has no values!\n\nYou may see it in the wild in `Html Never` which means this HTML will never\nproduce any messages. You would need to write an event handler like\n`onClick ??? : Attribute Never` but how can we fill in the question marks?!\nSo there cannot be any event handlers on that HTML.\n\nYou may also see this used with tasks that never fail, like `Task Never ()`.\n\nThe `Never` type is useful for restricting *arguments* to a function. Maybe my\nAPI can only accept HTML without event handlers, so I require `Html Never` and\nusers can give `Html msg` and everything will go fine. Generally speaking, you\ndo not want `Never` in your return types though.\n-}\ntype Never = JustOneMore Never\n\n\n{-| A function that can never be called. Seems extremely pointless, but it\n*can* come in handy. Imagine you have some HTML that should never produce any\nmessages. And say you want to use it in some other HTML that *does* produce\nmessages. You could say:\n\n    import Html exposing (..)\n\n    embedHtml : Html Never -> Html msg\n    embedHtml staticStuff =\n      div []\n        [ text \"hello\"\n        , Html.map never staticStuff\n        ]\n\nSo the `never` function is basically telling the type system, make sure no one\never calls me!\n-}\nnever : Never -> a\nnever (JustOneMore nvr) =\n  never nvr\n'})),
			_Utils_Tuple2(
			'Char.elm',
			$author$project$CompilationInterface$SourceFiles$Generated_SourceFiles$BlobNode(
				{utf8: 'module Char exposing\n  ( Char\n  , isUpper, isLower, isAlpha, isAlphaNum\n  , isDigit, isOctDigit, isHexDigit\n  , toUpper, toLower, toLocaleUpper, toLocaleLower\n  , toCode, fromCode\n  )\n\n{-| Functions for working with characters. Character literals are enclosed in\n`\'a\'` pair of single quotes.\n\n# Characters\n@docs Char\n\n# ASCII Letters\n@docs isUpper, isLower, isAlpha, isAlphaNum\n\n# Digits\n@docs isDigit, isOctDigit, isHexDigit\n\n# Conversion\n@docs toUpper, toLower, toLocaleUpper, toLocaleLower\n\n# Unicode Code Points\n@docs toCode, fromCode\n-}\n\nimport Basics exposing (Bool, Int, (&&), (||), (>=), (<=))\nimport Elm.Kernel.Char\n\n\n\n-- CHAR\n\n\n{-| A `Char` is a single [unicode][u] character:\n\n    \'a\'\n    \'0\'\n    \'Z\'\n    \'?\'\n    \'\"\'\n    \'Σ\'\n    \'🙈\'\n\n    \'\\t\'\n    \'\\\"\'\n    \'\\\'\'\n    \'\\u{1F648}\' -- \'🙈\'\n\n**Note 1:** You _cannot_ use single quotes around multiple characters like in\nJavaScript. This is how we distinguish [`String`](String#String) and `Char`\nvalues in syntax.\n\n**Note 2:** You can use the unicode escapes from `\\u{0000}` to `\\u{10FFFF}` to\nrepresent characters by their code point. You can also include the unicode\ncharacters directly. Using the escapes can be better if you need one of the\nmany whitespace characters with different widths.\n\n[u]: https://en.wikipedia.org/wiki/Unicode\n-}\ntype Char = Char -- NOTE: The compiler provides the real implementation.\n\n\n\n-- CLASSIFICATION\n\n\n{-| Detect upper case ASCII characters.\n\n    isUpper \'A\' == True\n    isUpper \'B\' == True\n    ...\n    isUpper \'Z\' == True\n\n    isUpper \'0\' == False\n    isUpper \'a\' == False\n    isUpper \'-\' == False\n    isUpper \'Σ\' == False\n-}\nisUpper : Char -> Bool\nisUpper char =\n  let\n    code =\n      toCode char\n  in\n    code <= 0x5A && 0x41 <= code\n\n\n{-| Detect lower case ASCII characters.\n\n    isLower \'a\' == True\n    isLower \'b\' == True\n    ...\n    isLower \'z\' == True\n\n    isLower \'0\' == False\n    isLower \'A\' == False\n    isLower \'-\' == False\n    isLower \'π\' == False\n-}\nisLower : Char -> Bool\nisLower char =\n  let\n    code =\n      toCode char\n  in\n    0x61 <= code && code <= 0x7A\n\n\n{-| Detect upper case and lower case ASCII characters.\n\n    isAlpha \'a\' == True\n    isAlpha \'b\' == True\n    isAlpha \'E\' == True\n    isAlpha \'Y\' == True\n\n    isAlpha \'0\' == False\n    isAlpha \'-\' == False\n    isAlpha \'π\' == False\n-}\nisAlpha : Char -> Bool\nisAlpha char =\n  isLower char || isUpper char\n\n\n{-| Detect upper case and lower case ASCII characters.\n\n    isAlphaNum \'a\' == True\n    isAlphaNum \'b\' == True\n    isAlphaNum \'E\' == True\n    isAlphaNum \'Y\' == True\n    isAlphaNum \'0\' == True\n    isAlphaNum \'7\' == True\n\n    isAlphaNum \'-\' == False\n    isAlphaNum \'π\' == False\n-}\nisAlphaNum : Char -> Bool\nisAlphaNum char =\n  isLower char || isUpper char || isDigit char\n\n\n{-| Detect digits `0123456789`\n\n    isDigit \'0\' == True\n    isDigit \'1\' == True\n    ...\n    isDigit \'9\' == True\n\n    isDigit \'a\' == False\n    isDigit \'b\' == False\n    isDigit \'A\' == False\n-}\nisDigit : Char -> Bool\nisDigit char =\n  let\n    code =\n      toCode char\n  in\n    code <= 0x39 && 0x30 <= code\n\n\n{-| Detect octal digits `01234567`\n\n    isOctDigit \'0\' == True\n    isOctDigit \'1\' == True\n    ...\n    isOctDigit \'7\' == True\n\n    isOctDigit \'8\' == False\n    isOctDigit \'a\' == False\n    isOctDigit \'A\' == False\n-}\nisOctDigit : Char -> Bool\nisOctDigit char =\n  let\n    code =\n      toCode char\n  in\n    code <= 0x37 && 0x30 <= code\n\n\n{-| Detect hexadecimal digits `0123456789abcdefABCDEF`\n-}\nisHexDigit : Char -> Bool\nisHexDigit char =\n  let\n    code =\n      toCode char\n  in\n    (0x30 <= code && code <= 0x39)\n    || (0x41 <= code && code <= 0x46)\n    || (0x61 <= code && code <= 0x66)\n\n\n\n-- CONVERSIONS\n\n\n{-| Convert to upper case. -}\ntoUpper : Char -> Char\ntoUpper =\n  Elm.Kernel.Char.toUpper\n\n\n{-| Convert to lower case. -}\ntoLower : Char -> Char\ntoLower =\n  Elm.Kernel.Char.toLower\n\n\n{-| Convert to upper case, according to any locale-specific case mappings. -}\ntoLocaleUpper : Char -> Char\ntoLocaleUpper =\n  Elm.Kernel.Char.toLocaleUpper\n\n\n{-| Convert to lower case, according to any locale-specific case mappings. -}\ntoLocaleLower : Char -> Char\ntoLocaleLower =\n  Elm.Kernel.Char.toLocaleLower\n\n\n{-| Convert to the corresponding Unicode [code point][cp].\n\n[cp]: https://en.wikipedia.org/wiki/Code_point\n\n    toCode \'A\' == 65\n    toCode \'B\' == 66\n    toCode \'木\' == 0x6728\n    toCode \'𝌆\' == 0x1D306\n    toCode \'😃\' == 0x1F603\n-}\ntoCode : Char -> Int\ntoCode =\n  Elm.Kernel.Char.toCode\n\n\n{-| Convert a Unicode [code point][cp] to a character.\n\n    fromCode 65      == \'A\'\n    fromCode 66      == \'B\'\n    fromCode 0x6728  == \'木\'\n    fromCode 0x1D306 == \'𝌆\'\n    fromCode 0x1F603 == \'😃\'\n    fromCode -1      == \'�\'\n\nThe full range of unicode is from `0` to `0x10FFFF`. With numbers outside that\nrange, you get [the replacement character][fffd].\n\n[cp]: https://en.wikipedia.org/wiki/Code_point\n[fffd]: https://en.wikipedia.org/wiki/Specials_(Unicode_block)#Replacement_character\n-}\nfromCode : Int -> Char\nfromCode =\n  Elm.Kernel.Char.fromCode\n'})),
			_Utils_Tuple2(
			'List.elm',
			$author$project$CompilationInterface$SourceFiles$Generated_SourceFiles$BlobNode(
				{utf8: 'module List exposing\n  ( singleton, repeat, range, (::)\n  , map, indexedMap, foldl, foldr, filter, filterMap\n  , length, reverse, member, all, any, maximum, minimum, sum, product\n  , append, concat, concatMap, intersperse, map2, map3, map4, map5\n  , sort, sortBy, sortWith\n  , isEmpty, head, tail, take, drop, partition, unzip\n  )\n\n{-| You can create a `List` in Elm with the `[1,2,3]` syntax, so lists are\nused all over the place. This module has a bunch of functions to help you work\nwith them!\n\n# Create\n@docs singleton, repeat, range, (::)\n\n# Transform\n@docs map, indexedMap, foldl, foldr, filter, filterMap\n\n# Utilities\n@docs length, reverse, member, all, any, maximum, minimum, sum, product\n\n# Combine\n@docs append, concat, concatMap, intersperse, map2, map3, map4, map5\n\n# Sort\n@docs sort, sortBy, sortWith\n\n# Deconstruct\n@docs isEmpty, head, tail, take, drop, partition, unzip\n\n-}\n\nimport Basics exposing (..)\nimport Elm.Kernel.List\nimport Maybe exposing ( Maybe(..) )\n\n\n\n\ninfix right 5 (::) = cons\n\n\n\n-- CREATE\n\n\n\n{-| Create a list with only one element:\n\n    singleton 1234 == [1234]\n    singleton \"hi\" == [\"hi\"]\n-}\nsingleton : a -> List a\nsingleton value =\n  [value]\n\n\n{-| Create a list with *n* copies of a value:\n\n    repeat 3 (0,0) == [(0,0),(0,0),(0,0)]\n-}\nrepeat : Int -> a -> List a\nrepeat n value =\n  repeatHelp [] n value\n\n\nrepeatHelp : List a -> Int -> a -> List a\nrepeatHelp result n value =\n  if n <= 0 then\n    result\n\n  else\n    repeatHelp (cons value result) (n-1) value\n\n\n{-| Create a list of numbers, every element increasing by one.\nYou give the lowest and highest number that should be in the list.\n\n    range 3 6 == [3, 4, 5, 6]\n    range 3 3 == [3]\n    range 6 3 == []\n-}\nrange : Int -> Int -> List Int\nrange lo hi =\n  rangeHelp lo hi []\n\n\nrangeHelp : Int -> Int -> List Int -> List Int\nrangeHelp lo hi list =\n  if lo <= hi then\n    rangeHelp lo (hi - 1) (cons hi list)\n\n  else\n    list\n\n\n{-| Add an element to the front of a list.\n\n    1 :: [2,3] == [1,2,3]\n    1 :: [] == [1]\n\nThis operator is pronounced *cons* for historical reasons, but you can think\nof it like pushing an entry onto a stack.\n-}\ncons : a -> List a -> List a\ncons =\n  Elm.Kernel.List.cons\n\n\n\n-- TRANSFORM\n\n\n{-| Apply a function to every element of a list.\n\n    map sqrt [1,4,9] == [1,2,3]\n\n    map not [True,False,True] == [False,True,False]\n\nSo `map func [ a, b, c ]` is the same as `[ func a, func b, func c ]`\n-}\nmap : (a -> b) -> List a -> List b\nmap f xs =\n  foldr (\\x acc -> cons (f x) acc) [] xs\n\n\n{-| Same as `map` but the function is also applied to the index of each\nelement (starting at zero).\n\n    indexedMap Tuple.pair [\"Tom\",\"Sue\",\"Bob\"] == [ (0,\"Tom\"), (1,\"Sue\"), (2,\"Bob\") ]\n-}\nindexedMap : (Int -> a -> b) -> List a -> List b\nindexedMap f xs =\n  map2 f (range 0 (length xs - 1)) xs\n\n\n{-| Reduce a list from the left.\n\n    foldl (+)  0  [1,2,3] == 6\n    foldl (::) [] [1,2,3] == [3,2,1]\n\nSo `foldl step state [1,2,3]` is like saying:\n\n    state\n      |> step 1\n      |> step 2\n      |> step 3\n-}\nfoldl : (a -> b -> b) -> b -> List a -> b\nfoldl func acc list =\n  case list of\n    [] ->\n      acc\n\n    x :: xs ->\n      foldl func (func x acc) xs\n\n\n{-| Reduce a list from the right.\n\n    foldr (+)  0  [1,2,3] == 6\n    foldr (::) [] [1,2,3] == [1,2,3]\n\nSo `foldr step state [1,2,3]` is like saying:\n\n    state\n      |> step 3\n      |> step 2\n      |> step 1\n-}\nfoldr : (a -> b -> b) -> b -> List a -> b\nfoldr fn acc ls =\n    foldrHelper fn acc 0 ls\n\n\nfoldrHelper : (a -> b -> b) -> b -> Int -> List a -> b\nfoldrHelper fn acc ctr ls =\n    case ls of\n        [] ->\n            acc\n\n        a :: r1 ->\n            case r1 of\n                [] ->\n                    fn a acc\n\n                b :: r2 ->\n                    case r2 of\n                        [] ->\n                            fn a (fn b acc)\n\n                        c :: r3 ->\n                            case r3 of\n                                [] ->\n                                    fn a (fn b (fn c acc))\n\n                                d :: r4 ->\n                                    let\n                                        res =\n                                            if ctr > 500 then\n                                                foldl fn acc (reverse r4)\n                                            else\n                                                foldrHelper fn acc (ctr + 1) r4\n                                    in\n                                        fn a (fn b (fn c (fn d res)))\n\n\n{-| Keep elements that satisfy the test.\n\n    filter isEven [1,2,3,4,5,6] == [2,4,6]\n-}\nfilter : (a -> Bool) -> List a -> List a\nfilter isGood list =\n  foldr (\\x xs -> if isGood x then cons x xs else xs) [] list\n\n\n{-| Filter out certain values. For example, maybe you have a bunch of strings\nfrom an untrusted source and you want to turn them into numbers:\n\n    numbers : List Int\n    numbers =\n      filterMap String.toInt [\"3\", \"hi\", \"12\", \"4th\", \"May\"]\n\n    -- numbers == [3, 12]\n\n-}\nfilterMap : (a -> Maybe b) -> List a -> List b\nfilterMap f xs =\n  foldr (maybeCons f) [] xs\n\n\nmaybeCons : (a -> Maybe b) -> a -> List b -> List b\nmaybeCons f mx xs =\n  case f mx of\n    Just x ->\n      cons x xs\n\n    Nothing ->\n      xs\n\n\n-- UTILITIES\n\n\n{-| Determine the length of a list.\n\n    length [1,2,3] == 3\n-}\nlength : List a -> Int\nlength xs =\n  foldl (\\_ i -> i + 1) 0 xs\n\n\n{-| Reverse a list.\n\n    reverse [1,2,3,4] == [4,3,2,1]\n-}\nreverse : List a -> List a\nreverse list =\n  foldl cons [] list\n\n\n{-| Figure out whether a list contains a value.\n\n    member 9 [1,2,3,4] == False\n    member 4 [1,2,3,4] == True\n-}\nmember : a -> List a -> Bool\nmember x xs =\n  any (\\a -> a == x) xs\n\n\n{-| Determine if all elements satisfy some test.\n\n    all isEven [2,4] == True\n    all isEven [2,3] == False\n    all isEven [] == True\n-}\nall : (a -> Bool) -> List a -> Bool\nall isOkay list =\n  not (any (not << isOkay) list)\n\n\n{-| Determine if any elements satisfy some test.\n\n    any isEven [2,3] == True\n    any isEven [1,3] == False\n    any isEven [] == False\n-}\nany : (a -> Bool) -> List a -> Bool\nany isOkay list =\n  case list of\n    [] ->\n      False\n\n    x :: xs ->\n      -- note: (isOkay x || any isOkay xs) would not get TCO\n      if isOkay x then\n        True\n\n      else\n        any isOkay xs\n\n\n{-| Find the maximum element in a non-empty list.\n\n    maximum [1,4,2] == Just 4\n    maximum []      == Nothing\n-}\nmaximum : List comparable -> Maybe comparable\nmaximum list =\n  case list of\n    x :: xs ->\n      Just (foldl max x xs)\n\n    _ ->\n      Nothing\n\n\n{-| Find the minimum element in a non-empty list.\n\n    minimum [3,2,1] == Just 1\n    minimum []      == Nothing\n-}\nminimum : List comparable -> Maybe comparable\nminimum list =\n  case list of\n    x :: xs ->\n      Just (foldl min x xs)\n\n    _ ->\n      Nothing\n\n\n{-| Get the sum of the list elements.\n\n    sum [1,2,3] == 6\n    sum [1,1,1] == 3\n    sum []      == 0\n\n-}\nsum : List number -> number\nsum numbers =\n  foldl (+) 0 numbers\n\n\n{-| Get the product of the list elements.\n\n    product [2,2,2] == 8\n    product [3,3,3] == 27\n    product []      == 1\n\n-}\nproduct : List number -> number\nproduct numbers =\n  foldl (*) 1 numbers\n\n\n\n-- COMBINE\n\n\n{-| Put two lists together.\n\n    append [1,1,2] [3,5,8] == [1,1,2,3,5,8]\n    append [\'a\',\'b\'] [\'c\'] == [\'a\',\'b\',\'c\']\n\nYou can also use [the `(++)` operator](Basics#++) to append lists.\n-}\nappend : List a -> List a -> List a\nappend xs ys =\n  case ys of\n    [] ->\n      xs\n\n    _ ->\n      foldr cons ys xs\n\n\n{-| Concatenate a bunch of lists into a single list:\n\n    concat [[1,2],[3],[4,5]] == [1,2,3,4,5]\n-}\nconcat : List (List a) -> List a\nconcat lists =\n  foldr append [] lists\n\n\n{-| Map a given function onto a list and flatten the resulting lists.\n\n    concatMap f xs == concat (map f xs)\n-}\nconcatMap : (a -> List b) -> List a -> List b\nconcatMap f list =\n  concat (map f list)\n\n\n{-| Places the given value between all members of the given list.\n\n    intersperse \"on\" [\"turtles\",\"turtles\",\"turtles\"] == [\"turtles\",\"on\",\"turtles\",\"on\",\"turtles\"]\n-}\nintersperse : a -> List a -> List a\nintersperse sep xs =\n  case xs of\n    [] ->\n      []\n\n    hd :: tl ->\n      let\n        step x rest =\n          cons sep (cons x rest)\n\n        spersed =\n          foldr step [] tl\n      in\n        cons hd spersed\n\n\n{-| Combine two lists, combining them with the given function.\nIf one list is longer, the extra elements are dropped.\n\n    totals : List Int -> List Int -> List Int\n    totals xs ys =\n      List.map2 (+) xs ys\n\n    -- totals [1,2,3] [4,5,6] == [5,7,9]\n\n    pairs : List a -> List b -> List (a,b)\n    pairs xs ys =\n      List.map2 Tuple.pair xs ys\n\n    -- pairs [\"alice\",\"bob\",\"chuck\"] [2,5,7,8]\n    --   == [(\"alice\",2),(\"bob\",5),(\"chuck\",7)]\n\n-}\nmap2 : (a -> b -> result) -> List a -> List b -> List result\nmap2 =\n  Elm.Kernel.List.map2\n\n\n{-|-}\nmap3 : (a -> b -> c -> result) -> List a -> List b -> List c -> List result\nmap3 =\n  Elm.Kernel.List.map3\n\n\n{-|-}\nmap4 : (a -> b -> c -> d -> result) -> List a -> List b -> List c -> List d -> List result\nmap4 =\n  Elm.Kernel.List.map4\n\n\n{-|-}\nmap5 : (a -> b -> c -> d -> e -> result) -> List a -> List b -> List c -> List d -> List e -> List result\nmap5 =\n  Elm.Kernel.List.map5\n\n\n\n-- SORT\n\n\n{-| Sort values from lowest to highest\n\n    sort [3,1,5] == [1,3,5]\n-}\nsort : List comparable -> List comparable\nsort xs =\n  sortBy identity xs\n\n\n{-| Sort values by a derived property.\n\n    alice = { name=\"Alice\", height=1.62 }\n    bob   = { name=\"Bob\"  , height=1.85 }\n    chuck = { name=\"Chuck\", height=1.76 }\n\n    sortBy .name   [chuck,alice,bob] == [alice,bob,chuck]\n    sortBy .height [chuck,alice,bob] == [alice,chuck,bob]\n\n    sortBy String.length [\"mouse\",\"cat\"] == [\"cat\",\"mouse\"]\n-}\nsortBy : (a -> comparable) -> List a -> List a\nsortBy =\n  Elm.Kernel.List.sortBy\n\n\n{-| Sort values with a custom comparison function.\n\n    sortWith flippedComparison [1,2,3,4,5] == [5,4,3,2,1]\n\n    flippedComparison a b =\n        case compare a b of\n          LT -> GT\n          EQ -> EQ\n          GT -> LT\n\nThis is also the most general sort function, allowing you\nto define any other: `sort == sortWith compare`\n-}\nsortWith : (a -> a -> Order) -> List a -> List a\nsortWith =\n  Elm.Kernel.List.sortWith\n\n\n\n-- DECONSTRUCT\n\n\n{-| Determine if a list is empty.\n\n    isEmpty [] == True\n\n**Note:** It is usually preferable to use a `case` to test this so you do not\nforget to handle the `(x :: xs)` case as well!\n-}\nisEmpty : List a -> Bool\nisEmpty xs =\n  case xs of\n    [] ->\n      True\n\n    _ ->\n      False\n\n\n{-| Extract the first element of a list.\n\n    head [1,2,3] == Just 1\n    head [] == Nothing\n\n**Note:** It is usually preferable to use a `case` to deconstruct a `List`\nbecause it gives you `(x :: xs)` and you can work with both subparts.\n-}\nhead : List a -> Maybe a\nhead list =\n  case list of\n    x :: xs ->\n      Just x\n\n    [] ->\n      Nothing\n\n\n{-| Extract the rest of the list.\n\n    tail [1,2,3] == Just [2,3]\n    tail [] == Nothing\n\n**Note:** It is usually preferable to use a `case` to deconstruct a `List`\nbecause it gives you `(x :: xs)` and you can work with both subparts.\n-}\ntail : List a -> Maybe (List a)\ntail list =\n  case list of\n    x :: xs ->\n      Just xs\n\n    [] ->\n      Nothing\n\n\n{-| Take the first *n* members of a list.\n\n    take 2 [1,2,3,4] == [1,2]\n-}\ntake : Int -> List a -> List a\ntake n list =\n  takeFast 0 n list\n\n\ntakeFast : Int -> Int -> List a -> List a\ntakeFast ctr n list =\n  if n <= 0 then\n    []\n  else\n    case ( n, list ) of\n      ( _, [] ) ->\n        list\n\n      ( 1, x :: _ ) ->\n        [ x ]\n\n      ( 2, x :: y :: _ ) ->\n        [ x, y ]\n\n      ( 3, x :: y :: z :: _ ) ->\n        [ x, y, z ]\n\n      ( _, x :: y :: z :: w :: tl ) ->\n        if ctr > 1000 then\n          cons x (cons y (cons z (cons w (takeTailRec (n - 4) tl))))\n        else\n          cons x (cons y (cons z (cons w (takeFast (ctr + 1) (n - 4) tl))))\n\n      _ ->\n        list\n\ntakeTailRec : Int -> List a -> List a\ntakeTailRec n list =\n  reverse (takeReverse n list [])\n\n\ntakeReverse : Int -> List a -> List a -> List a\ntakeReverse n list kept =\n  if n <= 0 then\n    kept\n  else\n    case list of\n      [] ->\n        kept\n\n      x :: xs ->\n        takeReverse (n - 1) xs (cons x kept)\n\n\n{-| Drop the first *n* members of a list.\n\n    drop 2 [1,2,3,4] == [3,4]\n-}\ndrop : Int -> List a -> List a\ndrop n list =\n  if n <= 0 then\n    list\n\n  else\n    case list of\n      [] ->\n        list\n\n      x :: xs ->\n        drop (n-1) xs\n\n\n{-| Partition a list based on some test. The first list contains all values\nthat satisfy the test, and the second list contains all the value that do not.\n\n    partition (\\x -> x < 3) [0,1,2,3,4,5] == ([0,1,2], [3,4,5])\n    partition isEven        [0,1,2,3,4,5] == ([0,2,4], [1,3,5])\n-}\npartition : (a -> Bool) -> List a -> (List a, List a)\npartition pred list =\n  let\n    step x (trues, falses) =\n      if pred x then\n        (cons x trues, falses)\n\n      else\n        (trues, cons x falses)\n  in\n    foldr step ([],[]) list\n\n\n{-| Decompose a list of tuples into a tuple of lists.\n\n    unzip [(0, True), (17, False), (1337, True)] == ([0,17,1337], [True,False,True])\n-}\nunzip : List (a,b) -> (List a, List b)\nunzip pairs =\n  let\n    step (x,y) (xs,ys) =\n      (cons x xs, cons y ys)\n  in\n    foldr step ([], []) pairs\n'})),
			_Utils_Tuple2(
			'Maybe.elm',
			$author$project$CompilationInterface$SourceFiles$Generated_SourceFiles$BlobNode(
				{utf8: 'module Maybe exposing\n  ( Maybe(..)\n  , andThen\n  , map, map2, map3, map4, map5\n  , withDefault\n  )\n\n{-| This library fills a bunch of important niches in Elm. A `Maybe` can help\nyou with optional arguments, error handling, and records with optional fields.\n\n# Definition\n@docs Maybe\n\n# Common Helpers\n@docs withDefault, map, map2, map3, map4, map5\n\n# Chaining Maybes\n@docs andThen\n-}\n\n\nimport Basics exposing (Bool(..))\n\n\n\n{-| Represent values that may or may not exist. It can be useful if you have a\nrecord field that is only filled in sometimes. Or if a function takes a value\nsometimes, but does not absolutely need it.\n\n    -- A person, but maybe we do not know their age.\n    type alias Person =\n        { name : String\n        , age : Maybe Int\n        }\n\n    tom = { name = \"Tom\", age = Just 42 }\n    sue = { name = \"Sue\", age = Nothing }\n-}\ntype Maybe a\n    = Just a\n    | Nothing\n\n\n{-| Provide a default value, turning an optional value into a normal\nvalue.  This comes in handy when paired with functions like\n[`Dict.get`](Dict#get) which gives back a `Maybe`.\n\n    withDefault 100 (Just 42)   -- 42\n    withDefault 100 Nothing     -- 100\n\n    withDefault \"unknown\" (Dict.get \"Tom\" Dict.empty)   -- \"unknown\"\n\n**Note:** This can be overused! Many cases are better handled by a `case`\nexpression. And if you end up using `withDefault` a lot, it can be a good sign\nthat a [custom type][ct] will clean your code up quite a bit!\n\n[ct]: https://guide.elm-lang.org/types/custom_types.html\n-}\nwithDefault : a -> Maybe a -> a\nwithDefault default maybe =\n    case maybe of\n      Just value -> value\n      Nothing -> default\n\n\n{-| Transform a `Maybe` value with a given function:\n\n    map sqrt (Just 9) == Just 3\n    map sqrt Nothing  == Nothing\n\n    map sqrt (String.toFloat \"9\") == Just 3\n    map sqrt (String.toFloat \"x\") == Nothing\n\n-}\nmap : (a -> b) -> Maybe a -> Maybe b\nmap f maybe =\n  case maybe of\n    Just value ->\n      Just (f value)\n\n    Nothing ->\n      Nothing\n\n\n{-| Apply a function if all the arguments are `Just` a value.\n\n    map2 (+) (Just 3) (Just 4) == Just 7\n    map2 (+) (Just 3) Nothing == Nothing\n    map2 (+) Nothing (Just 4) == Nothing\n\n    map2 (+) (String.toInt \"1\") (String.toInt \"123\") == Just 124\n    map2 (+) (String.toInt \"x\") (String.toInt \"123\") == Nothing\n    map2 (+) (String.toInt \"1\") (String.toInt \"1.3\") == Nothing\n-}\nmap2 : (a -> b -> value) -> Maybe a -> Maybe b -> Maybe value\nmap2 func ma mb =\n  case ma of\n    Nothing ->\n      Nothing\n\n    Just a ->\n      case mb of\n        Nothing ->\n          Nothing\n\n        Just b ->\n          Just (func a b)\n\n\n{-|-}\nmap3 : (a -> b -> c -> value) -> Maybe a -> Maybe b -> Maybe c -> Maybe value\nmap3 func ma mb mc =\n  case ma of\n    Nothing ->\n      Nothing\n\n    Just a ->\n      case mb of\n        Nothing ->\n          Nothing\n\n        Just b ->\n          case mc of\n            Nothing ->\n              Nothing\n\n            Just c ->\n              Just (func a b c)\n\n\n{-|-}\nmap4 : (a -> b -> c -> d -> value) -> Maybe a -> Maybe b -> Maybe c -> Maybe d -> Maybe value\nmap4 func ma mb mc md =\n  case ma of\n    Nothing ->\n      Nothing\n\n    Just a ->\n      case mb of\n        Nothing ->\n          Nothing\n\n        Just b ->\n          case mc of\n            Nothing ->\n              Nothing\n\n            Just c ->\n              case md of\n                Nothing ->\n                  Nothing\n\n                Just d ->\n                  Just (func a b c d)\n\n\n{-|-}\nmap5 : (a -> b -> c -> d -> e -> value) -> Maybe a -> Maybe b -> Maybe c -> Maybe d -> Maybe e -> Maybe value\nmap5 func ma mb mc md me =\n  case ma of\n    Nothing ->\n      Nothing\n\n    Just a ->\n      case mb of\n        Nothing ->\n          Nothing\n\n        Just b ->\n          case mc of\n            Nothing ->\n              Nothing\n\n            Just c ->\n              case md of\n                Nothing ->\n                  Nothing\n\n                Just d ->\n                  case me of\n                    Nothing ->\n                      Nothing\n\n                    Just e ->\n                      Just (func a b c d e)\n\n\n{-| Chain together many computations that may fail. It is helpful to see its\ndefinition:\n\n    andThen : (a -> Maybe b) -> Maybe a -> Maybe b\n    andThen callback maybe =\n        case maybe of\n            Just value ->\n                callback value\n\n            Nothing ->\n                Nothing\n\nThis means we only continue with the callback if things are going well. For\nexample, say you need to parse some user input as a month:\n\n    parseMonth : String -> Maybe Int\n    parseMonth userInput =\n        String.toInt userInput\n          |> andThen toValidMonth\n\n    toValidMonth : Int -> Maybe Int\n    toValidMonth month =\n        if 1 <= month && month <= 12 then\n            Just month\n        else\n            Nothing\n\nIn the `parseMonth` function, if `String.toInt` produces `Nothing` (because\nthe `userInput` was not an integer) this entire chain of operations will\nshort-circuit and result in `Nothing`. If `toValidMonth` results in `Nothing`,\nagain the chain of computations will result in `Nothing`.\n-}\nandThen : (a -> Maybe b) -> Maybe a -> Maybe b\nandThen callback maybeValue =\n    case maybeValue of\n        Just value ->\n            callback value\n\n        Nothing ->\n            Nothing\n\n\n\n-- FOR INTERNAL USE ONLY\n--\n-- Use `case` expressions for this in Elm code!\n\n\nisJust : Maybe a -> Bool\nisJust maybe =\n  case maybe of\n    Just _ ->\n      True\n\n    Nothing ->\n      False\n\n\ndestruct : b -> (a -> b) -> Maybe a -> b\ndestruct default func maybe =\n  case maybe of\n    Just a ->\n      func a\n\n    Nothing ->\n      default\n'})),
			_Utils_Tuple2(
			'Result.elm',
			$author$project$CompilationInterface$SourceFiles$Generated_SourceFiles$BlobNode(
				{utf8: 'module Result exposing\n  ( Result(..)\n  , withDefault\n  , map, map2, map3, map4, map5\n  , andThen\n  , toMaybe, fromMaybe, mapError\n  )\n\n{-| A `Result` is the result of a computation that may fail. This is a great\nway to manage errors in Elm.\n\n# Type and Constructors\n@docs Result\n\n# Mapping\n@docs map, map2, map3, map4, map5\n\n# Chaining\n@docs andThen\n\n# Handling Errors\n@docs withDefault, toMaybe, fromMaybe, mapError\n-}\n\nimport Basics exposing ( Bool(..) )\nimport Maybe exposing ( Maybe(..) )\n\n\n{-| A `Result` is either `Ok` meaning the computation succeeded, or it is an\n`Err` meaning that there was some failure.\n-}\ntype Result error value\n    = Ok value\n    | Err error\n\n\n{-| If the result is `Ok` return the value, but if the result is an `Err` then\nreturn a given default value. The following examples try to parse integers.\n\n    Result.withDefault 0 (Ok 123)   == 123\n    Result.withDefault 0 (Err \"no\") == 0\n-}\nwithDefault : a -> Result x a -> a\nwithDefault def result =\n  case result of\n    Ok a ->\n        a\n\n    Err _ ->\n        def\n\n\n{-| Apply a function to a result. If the result is `Ok`, it will be converted.\nIf the result is an `Err`, the same error value will propagate through.\n\n    map sqrt (Ok 4.0)          == Ok 2.0\n    map sqrt (Err \"bad input\") == Err \"bad input\"\n-}\nmap : (a -> value) -> Result x a -> Result x value\nmap func ra =\n  case ra of\n    Ok a ->\n      Ok (func a)\n\n    Err e ->\n      Err e\n\n\n{-| Apply a function if both results are `Ok`. If not, the first `Err` will\npropagate through.\n\n    map2 max (Ok 42)   (Ok 13)   == Ok 42\n    map2 max (Err \"x\") (Ok 13)   == Err \"x\"\n    map2 max (Ok 42)   (Err \"y\") == Err \"y\"\n    map2 max (Err \"x\") (Err \"y\") == Err \"x\"\n\nThis can be useful if you have two computations that may fail, and you want\nto put them together quickly.\n-}\nmap2 : (a -> b -> value) -> Result x a -> Result x b -> Result x value\nmap2 func ra rb =\n  case ra of\n    Err x ->\n      Err x\n\n    Ok a ->\n      case rb of\n        Err x ->\n          Err x\n\n        Ok b ->\n          Ok (func a b)\n\n\n{-|-}\nmap3 : (a -> b -> c -> value) -> Result x a -> Result x b -> Result x c -> Result x value\nmap3 func ra rb rc =\n  case ra of\n    Err x ->\n      Err x\n\n    Ok a ->\n      case rb of\n        Err x ->\n          Err x\n\n        Ok b ->\n          case rc of\n            Err x ->\n              Err x\n\n            Ok c ->\n              Ok (func a b c)\n\n\n{-|-}\nmap4 : (a -> b -> c -> d -> value) -> Result x a -> Result x b -> Result x c -> Result x d -> Result x value\nmap4 func ra rb rc rd =\n  case ra of\n    Err x ->\n      Err x\n\n    Ok a ->\n      case rb of\n        Err x ->\n          Err x\n\n        Ok b ->\n          case rc of\n            Err x ->\n              Err x\n\n            Ok c ->\n              case rd of\n                Err x ->\n                  Err x\n\n                Ok d ->\n                  Ok (func a b c d)\n\n\n{-|-}\nmap5 : (a -> b -> c -> d -> e -> value) -> Result x a -> Result x b -> Result x c -> Result x d -> Result x e -> Result x value\nmap5 func ra rb rc rd re =\n  case ra of\n    Err x ->\n      Err x\n\n    Ok a ->\n      case rb of\n        Err x ->\n          Err x\n\n        Ok b ->\n          case rc of\n            Err x ->\n              Err x\n\n            Ok c ->\n              case rd of\n                Err x ->\n                  Err x\n\n                Ok d ->\n                  case re of\n                    Err x ->\n                      Err x\n\n                    Ok e ->\n                      Ok (func a b c d e)\n\n\n{-| Chain together a sequence of computations that may fail. It is helpful\nto see its definition:\n\n    andThen : (a -> Result e b) -> Result e a -> Result e b\n    andThen callback result =\n        case result of\n          Ok value -> callback value\n          Err msg -> Err msg\n\nThis means we only continue with the callback if things are going well. For\nexample, say you need to use (`toInt : String -> Result String Int`) to parse\na month and make sure it is between 1 and 12:\n\n    toValidMonth : Int -> Result String Int\n    toValidMonth month =\n        if month >= 1 && month <= 12\n            then Ok month\n            else Err \"months must be between 1 and 12\"\n\n    toMonth : String -> Result String Int\n    toMonth rawString =\n        toInt rawString\n          |> andThen toValidMonth\n\n    -- toMonth \"4\" == Ok 4\n    -- toMonth \"9\" == Ok 9\n    -- toMonth \"a\" == Err \"cannot parse to an Int\"\n    -- toMonth \"0\" == Err \"months must be between 1 and 12\"\n\nThis allows us to come out of a chain of operations with quite a specific error\nmessage. It is often best to create a custom type that explicitly represents\nthe exact ways your computation may fail. This way it is easy to handle in your\ncode.\n-}\nandThen : (a -> Result x b) -> Result x a -> Result x b\nandThen callback result =\n    case result of\n      Ok value ->\n        callback value\n\n      Err msg ->\n        Err msg\n\n\n{-| Transform an `Err` value. For example, say the errors we get have too much\ninformation:\n\n    parseInt : String -> Result ParseError Int\n\n    type alias ParseError =\n        { message : String\n        , code : Int\n        , position : (Int,Int)\n        }\n\n    mapError .message (parseInt \"123\") == Ok 123\n    mapError .message (parseInt \"abc\") == Err \"char \'a\' is not a number\"\n-}\nmapError : (x -> y) -> Result x a -> Result y a\nmapError f result =\n    case result of\n      Ok v ->\n        Ok v\n\n      Err e ->\n        Err (f e)\n\n\n{-| Convert to a simpler `Maybe` if the actual error message is not needed or\nyou need to interact with some code that primarily uses maybes.\n\n    parseInt : String -> Result ParseError Int\n\n    maybeParseInt : String -> Maybe Int\n    maybeParseInt string =\n        toMaybe (parseInt string)\n-}\ntoMaybe : Result x a -> Maybe a\ntoMaybe result =\n    case result of\n      Ok  v -> Just v\n      Err _ -> Nothing\n\n\n{-| Convert from a simple `Maybe` to interact with some code that primarily\nuses `Results`.\n\n    parseInt : String -> Maybe Int\n\n    resultParseInt : String -> Result String Int\n    resultParseInt string =\n        fromMaybe (\"error parsing string: \" ++ toString string) (parseInt string)\n-}\nfromMaybe : x -> Maybe a -> Result x a\nfromMaybe err maybe =\n    case maybe of\n      Just v  -> Ok v\n      Nothing -> Err err\n\n\n\n-- FOR INTERNAL USE ONLY\n--\n-- Use `case` expressions for this in Elm code!\n\n\nisOk : Result x a -> Bool\nisOk result =\n  case result of\n    Ok _ ->\n      True\n\n    Err _ ->\n      False\n'})),
			_Utils_Tuple2(
			'String.elm',
			$author$project$CompilationInterface$SourceFiles$Generated_SourceFiles$BlobNode(
				{utf8: 'module String exposing\n  ( String\n  , isEmpty, length, reverse, repeat, replace\n  , append, concat, split, join, words, lines\n  , slice, left, right, dropLeft, dropRight\n  , contains, startsWith, endsWith, indexes, indices\n  , toInt, fromInt\n  , toFloat, fromFloat\n  , fromChar, cons, uncons\n  , toList, fromList\n  , toUpper, toLower, pad, padLeft, padRight, trim, trimLeft, trimRight\n  , map, filter, foldl, foldr, any, all\n  )\n\n{-| A built-in representation for efficient string manipulation. String literals\nare enclosed in `\"double quotes\"`. Strings are *not* lists of characters.\n\n# Strings\n@docs String, isEmpty, length, reverse, repeat, replace\n\n# Building and Splitting\n@docs append, concat, split, join, words, lines\n\n# Get Substrings\n@docs slice, left, right, dropLeft, dropRight\n\n# Check for Substrings\n@docs contains, startsWith, endsWith, indexes, indices\n\n# Int Conversions\n@docs toInt, fromInt\n\n# Float Conversions\n@docs toFloat, fromFloat\n\n# Char Conversions\n@docs fromChar, cons, uncons\n\n# List Conversions\n@docs toList, fromList\n\n# Formatting\nCosmetic operations such as padding with extra characters or trimming whitespace.\n\n@docs toUpper, toLower, pad, padLeft, padRight, trim, trimLeft, trimRight\n\n# Higher-Order Functions\n@docs map, filter, foldl, foldr, any, all\n-}\n\nimport Basics exposing (..)\nimport Bitwise\nimport Char exposing (Char)\nimport Elm.Kernel.List\nimport Elm.Kernel.String\nimport List exposing ((::))\nimport Maybe exposing (Maybe)\nimport Result exposing (Result)\n\n\n\n-- STRINGS\n\n\n{-| A `String` is a chunk of text:\n\n    \"Hello!\"\n    \"How are you?\"\n    \"🙈🙉🙊\"\n\n    -- strings with escape characters\n    \"this\\n\\t\\\"that\\\"\"\n    \"\\u{1F648}\\u{1F649}\\u{1F64A}\" -- \"🙈🙉🙊\"\n\n    -- multiline strings\n    \"\"\"Triple double quotes let you\n    create \"multiline strings\" which\n    can have unescaped quotes and newlines.\n    \"\"\"\n\nA `String` can represent any sequence of [unicode characters][u]. You can use\nthe unicode escapes from `\\u{0000}` to `\\u{10FFFF}` to represent characters\nby their code point. You can also include the unicode characters directly.\nUsing the escapes can be better if you need one of the many whitespace\ncharacters with different widths.\n\n[u]: https://en.wikipedia.org/wiki/Unicode\n\n**Note:** JavaScript lets you use double quotes and single quotes interchangably.\nThis is not true in Elm. You must use double quotes for a `String`, and you must\nuse single quotes for a [`Char`](Char#Char).\n-}\ntype String = String -- NOTE: The compiler provides the real implementation.\n\n\n{-| Determine if a string is empty.\n\n    isEmpty \"\" == True\n    isEmpty \"the world\" == False\n-}\nisEmpty : String -> Bool\nisEmpty string =\n  string == \"\"\n\n\n{-| Get the length of a string.\n\n    length \"innumerable\" == 11\n    length \"\" == 0\n\n-}\nlength : String -> Int\nlength =\n  Elm.Kernel.String.length\n\n\n{-| Reverse a string.\n\n    reverse \"stressed\" == \"desserts\"\n-}\nreverse : String -> String\nreverse =\n  Elm.Kernel.String.reverse\n\n\n{-| Repeat a string *n* times.\n\n    repeat 3 \"ha\" == \"hahaha\"\n-}\nrepeat : Int -> String -> String\nrepeat n chunk =\n  repeatHelp n chunk \"\"\n\n\nrepeatHelp : Int -> String -> String -> String\nrepeatHelp n chunk result =\n  if n <= 0 then\n    result\n  else\n    repeatHelp (Bitwise.shiftRightBy 1 n) (chunk ++ chunk) <|\n      if Bitwise.and n 1 == 0 then result else result ++ chunk\n\n\n{-| Replace all occurrences of some substring.\n\n    replace \".\" \"-\" \"Json.Decode.succeed\" == \"Json-Decode-succeed\"\n    replace \",\" \"/\" \"a,b,c,d,e\"           == \"a/b/c/d/e\"\n\n**Note:** If you need more advanced replacements, check out the\n[`elm/parser`][parser] or [`elm/regex`][regex] package.\n\n[parser]: /packages/elm/parser/latest\n[regex]: /packages/elm/regex/latest\n-}\nreplace : String -> String -> String -> String\nreplace before after string =\n  join after (split before string)\n\n\n\n-- BUILDING AND SPLITTING\n\n\n{-| Append two strings. You can also use [the `(++)` operator](Basics#++)\nto do this.\n\n    append \"butter\" \"fly\" == \"butterfly\"\n-}\nappend : String -> String -> String\nappend =\n  Elm.Kernel.String.append\n\n\n{-| Concatenate many strings into one.\n\n    concat [\"never\",\"the\",\"less\"] == \"nevertheless\"\n-}\nconcat : List String -> String\nconcat strings =\n  join \"\" strings\n\n\n{-| Split a string using a given separator.\n\n    split \",\" \"cat,dog,cow\"        == [\"cat\",\"dog\",\"cow\"]\n    split \"/\" \"home/evan/Desktop/\" == [\"home\",\"evan\",\"Desktop\", \"\"]\n\n-}\nsplit : String -> String -> List String\nsplit sep string =\n  Elm.Kernel.List.fromArray (Elm.Kernel.String.split sep string)\n\n\n{-| Put many strings together with a given separator.\n\n    join \"a\" [\"H\",\"w\",\"ii\",\"n\"]        == \"Hawaiian\"\n    join \" \" [\"cat\",\"dog\",\"cow\"]       == \"cat dog cow\"\n    join \"/\" [\"home\",\"evan\",\"Desktop\"] == \"home/evan/Desktop\"\n-}\njoin : String -> List String -> String\njoin sep chunks =\n  Elm.Kernel.String.join sep (Elm.Kernel.List.toArray chunks)\n\n\n{-| Break a string into words, splitting on chunks of whitespace.\n\n    words \"How are \\t you? \\n Good?\" == [\"How\",\"are\",\"you?\",\"Good?\"]\n-}\nwords : String -> List String\nwords =\n  Elm.Kernel.String.words\n\n\n{-| Break a string into lines, splitting on newlines.\n\n    lines \"How are you?\\nGood?\" == [\"How are you?\", \"Good?\"]\n-}\nlines : String -> List String\nlines =\n  Elm.Kernel.String.lines\n\n\n\n-- SUBSTRINGS\n\n\n{-| Take a substring given a start and end index. Negative indexes\nare taken starting from the *end* of the list.\n\n    slice  7  9 \"snakes on a plane!\" == \"on\"\n    slice  0  6 \"snakes on a plane!\" == \"snakes\"\n    slice  0 -7 \"snakes on a plane!\" == \"snakes on a\"\n    slice -6 -1 \"snakes on a plane!\" == \"plane\"\n-}\nslice : Int -> Int -> String -> String\nslice =\n  Elm.Kernel.String.slice\n\n\n{-| Take *n* characters from the left side of a string.\n\n    left 2 \"Mulder\" == \"Mu\"\n-}\nleft : Int -> String -> String\nleft n string =\n  if n < 1 then\n    \"\"\n  else\n    slice 0 n string\n\n\n{-| Take *n* characters from the right side of a string.\n\n    right 2 \"Scully\" == \"ly\"\n-}\nright : Int -> String -> String\nright n string =\n  if n < 1 then\n    \"\"\n  else\n    slice -n (length string) string\n\n\n{-| Drop *n* characters from the left side of a string.\n\n    dropLeft 2 \"The Lone Gunmen\" == \"e Lone Gunmen\"\n-}\ndropLeft : Int -> String -> String\ndropLeft n string =\n  if n < 1 then\n    string\n  else\n    slice n (length string) string\n\n\n{-| Drop *n* characters from the right side of a string.\n\n    dropRight 2 \"Cigarette Smoking Man\" == \"Cigarette Smoking M\"\n-}\ndropRight : Int -> String -> String\ndropRight n string =\n  if n < 1 then\n    string\n  else\n    slice 0 -n string\n\n\n\n-- DETECT SUBSTRINGS\n\n\n{-| See if the second string contains the first one.\n\n    contains \"the\" \"theory\" == True\n    contains \"hat\" \"theory\" == False\n    contains \"THE\" \"theory\" == False\n\n-}\ncontains : String -> String -> Bool\ncontains =\n  Elm.Kernel.String.contains\n\n\n{-| See if the second string starts with the first one.\n\n    startsWith \"the\" \"theory\" == True\n    startsWith \"ory\" \"theory\" == False\n-}\nstartsWith : String -> String -> Bool\nstartsWith =\n  Elm.Kernel.String.startsWith\n\n\n{-| See if the second string ends with the first one.\n\n    endsWith \"the\" \"theory\" == False\n    endsWith \"ory\" \"theory\" == True\n-}\nendsWith : String -> String -> Bool\nendsWith =\n  Elm.Kernel.String.endsWith\n\n\n{-| Get all of the indexes for a substring in another string.\n\n    indexes \"i\" \"Mississippi\"   == [1,4,7,10]\n    indexes \"ss\" \"Mississippi\"  == [2,5]\n    indexes \"needle\" \"haystack\" == []\n-}\nindexes : String -> String -> List Int\nindexes =\n  Elm.Kernel.String.indexes\n\n\n{-| Alias for `indexes`. -}\nindices : String -> String -> List Int\nindices =\n  Elm.Kernel.String.indexes\n\n\n\n-- FORMATTING\n\n\n{-| Convert a string to all upper case. Useful for case-insensitive comparisons\nand VIRTUAL YELLING.\n\n    toUpper \"skinner\" == \"SKINNER\"\n-}\ntoUpper : String -> String\ntoUpper =\n  Elm.Kernel.String.toUpper\n\n\n{-| Convert a string to all lower case. Useful for case-insensitive comparisons.\n\n    toLower \"X-FILES\" == \"x-files\"\n-}\ntoLower : String -> String\ntoLower =\n  Elm.Kernel.String.toLower\n\n\n{-| Pad a string on both sides until it has a given length.\n\n    pad 5 \' \' \"1\"   == \"  1  \"\n    pad 5 \' \' \"11\"  == \"  11 \"\n    pad 5 \' \' \"121\" == \" 121 \"\n-}\npad : Int -> Char -> String -> String\npad n char string =\n  let\n    half =\n      Basics.toFloat (n - length string) / 2\n  in\n    repeat (ceiling half) (fromChar char) ++ string ++ repeat (floor half) (fromChar char)\n\n\n{-| Pad a string on the left until it has a given length.\n\n    padLeft 5 \'.\' \"1\"   == \"....1\"\n    padLeft 5 \'.\' \"11\"  == \"...11\"\n    padLeft 5 \'.\' \"121\" == \"..121\"\n-}\npadLeft : Int -> Char -> String -> String\npadLeft n char string =\n  repeat (n - length string) (fromChar char) ++ string\n\n\n{-| Pad a string on the right until it has a given length.\n\n    padRight 5 \'.\' \"1\"   == \"1....\"\n    padRight 5 \'.\' \"11\"  == \"11...\"\n    padRight 5 \'.\' \"121\" == \"121..\"\n-}\npadRight : Int -> Char -> String -> String\npadRight n char string =\n  string ++ repeat (n - length string) (fromChar char)\n\n\n{-| Get rid of whitespace on both sides of a string.\n\n    trim \"  hats  \\n\" == \"hats\"\n-}\ntrim : String -> String\ntrim =\n  Elm.Kernel.String.trim\n\n\n{-| Get rid of whitespace on the left of a string.\n\n    trimLeft \"  hats  \\n\" == \"hats  \\n\"\n-}\ntrimLeft : String -> String\ntrimLeft =\n  Elm.Kernel.String.trimLeft\n\n\n{-| Get rid of whitespace on the right of a string.\n\n    trimRight \"  hats  \\n\" == \"  hats\"\n-}\ntrimRight : String -> String\ntrimRight =\n  Elm.Kernel.String.trimRight\n\n\n\n-- INT CONVERSIONS\n\n\n{-| Try to convert a string into an int, failing on improperly formatted strings.\n\n    String.toInt \"123\" == Just 123\n    String.toInt \"-42\" == Just -42\n    String.toInt \"3.1\" == Nothing\n    String.toInt \"31a\" == Nothing\n\nIf you are extracting a number from some raw user input, you will typically\nwant to use [`Maybe.withDefault`](Maybe#withDefault) to handle bad data:\n\n    Maybe.withDefault 0 (String.toInt \"42\") == 42\n    Maybe.withDefault 0 (String.toInt \"ab\") == 0\n-}\ntoInt : String -> Maybe Int\ntoInt =\n  Elm.Kernel.String.toInt\n\n\n{-| Convert an `Int` to a `String`.\n\n    String.fromInt 123 == \"123\"\n    String.fromInt -42 == \"-42\"\n\nCheck out [`Debug.toString`](Debug#toString) to convert *any* value to a string\nfor debugging purposes.\n-}\nfromInt : Int -> String\nfromInt =\n  Elm.Kernel.String.fromNumber\n\n\n\n-- FLOAT CONVERSIONS\n\n\n{-| Try to convert a string into a float, failing on improperly formatted strings.\n\n    String.toFloat \"123\" == Just 123.0\n    String.toFloat \"-42\" == Just -42.0\n    String.toFloat \"3.1\" == Just 3.1\n    String.toFloat \"31a\" == Nothing\n\nIf you are extracting a number from some raw user input, you will typically\nwant to use [`Maybe.withDefault`](Maybe#withDefault) to handle bad data:\n\n    Maybe.withDefault 0 (String.toFloat \"42.5\") == 42.5\n    Maybe.withDefault 0 (String.toFloat \"cats\") == 0\n-}\ntoFloat : String -> Maybe Float\ntoFloat =\n  Elm.Kernel.String.toFloat\n\n\n{-| Convert a `Float` to a `String`.\n\n    String.fromFloat 123 == \"123\"\n    String.fromFloat -42 == \"-42\"\n    String.fromFloat 3.9 == \"3.9\"\n\nCheck out [`Debug.toString`](Debug#toString) to convert *any* value to a string\nfor debugging purposes.\n-}\nfromFloat : Float -> String\nfromFloat =\n  Elm.Kernel.String.fromNumber\n\n\n\n-- LIST CONVERSIONS\n\n\n{-| Convert a string to a list of characters.\n\n    toList \"abc\" == [\'a\',\'b\',\'c\']\n    toList \"🙈🙉🙊\" == [\'🙈\',\'🙉\',\'🙊\']\n-}\ntoList : String -> List Char\ntoList string =\n  foldr (::) [] string\n\n\n{-| Convert a list of characters into a String. Can be useful if you\nwant to create a string primarily by consing, perhaps for decoding\nsomething.\n\n    fromList [\'a\',\'b\',\'c\'] == \"abc\"\n    fromList [\'🙈\',\'🙉\',\'🙊\'] == \"🙈🙉🙊\"\n-}\nfromList : List Char -> String\nfromList =\n  Elm.Kernel.String.fromList\n\n\n\n-- CHAR CONVERSIONS\n\n\n{-| Create a string from a given character.\n\n    fromChar \'a\' == \"a\"\n-}\nfromChar : Char -> String\nfromChar char =\n  cons char \"\"\n\n\n{-| Add a character to the beginning of a string.\n\n    cons \'T\' \"he truth is out there\" == \"The truth is out there\"\n-}\ncons : Char -> String -> String\ncons =\n  Elm.Kernel.String.cons\n\n\n{-| Split a non-empty string into its head and tail. This lets you\npattern match on strings exactly as you would with lists.\n\n    uncons \"abc\" == Just (\'a\',\"bc\")\n    uncons \"\"    == Nothing\n-}\nuncons : String -> Maybe (Char, String)\nuncons =\n  Elm.Kernel.String.uncons\n\n\n\n-- HIGHER-ORDER FUNCTIONS\n\n\n{-| Transform every character in a string\n\n    map (\\c -> if c == \'/\' then \'.\' else c) \"a/b/c\" == \"a.b.c\"\n-}\nmap : (Char -> Char) -> String -> String\nmap =\n  Elm.Kernel.String.map\n\n\n{-| Keep only the characters that pass the test.\n\n    filter isDigit \"R2-D2\" == \"22\"\n-}\nfilter : (Char -> Bool) -> String -> String\nfilter =\n  Elm.Kernel.String.filter\n\n\n{-| Reduce a string from the left.\n\n    foldl cons \"\" \"time\" == \"emit\"\n-}\nfoldl : (Char -> b -> b) -> b -> String -> b\nfoldl =\n  Elm.Kernel.String.foldl\n\n\n{-| Reduce a string from the right.\n\n    foldr cons \"\" \"time\" == \"time\"\n-}\nfoldr : (Char -> b -> b) -> b -> String -> b\nfoldr =\n  Elm.Kernel.String.foldr\n\n\n{-| Determine whether *any* characters pass the test.\n\n    any isDigit \"90210\" == True\n    any isDigit \"R2-D2\" == True\n    any isDigit \"heart\" == False\n-}\nany : (Char -> Bool) -> String -> Bool\nany =\n  Elm.Kernel.String.any\n\n\n{-| Determine whether *all* characters pass the test.\n\n    all isDigit \"90210\" == True\n    all isDigit \"R2-D2\" == False\n    all isDigit \"heart\" == False\n-}\nall : (Char -> Bool) -> String -> Bool\nall =\n  Elm.Kernel.String.all\n'})),
			_Utils_Tuple2(
			'Tuple.elm',
			$author$project$CompilationInterface$SourceFiles$Generated_SourceFiles$BlobNode(
				{utf8: 'module Tuple exposing\n  ( pair\n  , first, second\n  , mapFirst, mapSecond, mapBoth\n  )\n\n{-| Elm has built-in syntax for tuples, so you can define 2D points like this:\n\n    origin : (Float, Float)\n    origin =\n      (0, 0)\n\n    position : (Float, Float)\n    position =\n      (3, 4)\n\nThis module is a bunch of helpers for working with 2-tuples.\n\n**Note 1:** For more complex data, it is best to switch to records. So instead\nof representing a 3D point as `(3,4,5)` and not having any helper functions,\nrepresent it as `{ x = 3, y = 4, z = 5 }` and use all the built-in record\nsyntax!\n\n**Note 2:** If your record contains a bunch of `Bool` and `Maybe` values,\nyou may want to upgrade to union types. Check out [Joël’s post][ut] for more\ninfo on this. (Picking appropriate data structures is super important in Elm!)\n\n[ut]: https://robots.thoughtbot.com/modeling-with-union-types\n\n# Create\n@docs pair\n\n# Access\n@docs first, second\n\n# Map\n@docs mapFirst, mapSecond, mapBoth\n\n-}\n\n\n\n-- CREATE\n\n\n{-| Create a 2-tuple.\n\n    -- pair 3 4 == (3, 4)\n\n    zip : List a -> List b -> List (a, b)\n    zip xs ys =\n      List.map2 Tuple.pair xs ys\n-}\npair : a -> b -> (a, b)\npair a b =\n  (a, b)\n\n\n\n-- ACCESS\n\n\n{-| Extract the first value from a tuple.\n\n    first (3, 4) == 3\n    first (\"john\", \"doe\") == \"john\"\n-}\nfirst : (a, b) -> a\nfirst (x,_) =\n  x\n\n\n{-| Extract the second value from a tuple.\n\n    second (3, 4) == 4\n    second (\"john\", \"doe\") == \"doe\"\n-}\nsecond : (a, b) -> b\nsecond (_,y) =\n  y\n\n\n\n-- MAP\n\n\n{-| Transform the first value in a tuple.\n\n    import String\n\n    mapFirst String.reverse (\"stressed\", 16) == (\"desserts\", 16)\n    mapFirst String.length  (\"stressed\", 16) == (8, 16)\n-}\nmapFirst : (a -> x) -> (a, b) -> (x, b)\nmapFirst func (x,y) =\n  (func x, y)\n\n\n{-| Transform the second value in a tuple.\n\n    mapSecond sqrt   (\"stressed\", 16) == (\"stressed\", 4)\n    mapSecond negate (\"stressed\", 16) == (\"stressed\", -16)\n-}\nmapSecond : (b -> y) -> (a, b) -> (a, y)\nmapSecond func (x,y) =\n  (x, func y)\n\n\n{-| Transform both parts of a tuple.\n\n    import String\n\n    mapBoth String.reverse sqrt  (\"stressed\", 16) == (\"desserts\", 4)\n    mapBoth String.length negate (\"stressed\", 16) == (8, -16)\n-}\nmapBoth : (a -> x) -> (b -> y) -> (a, b) -> (x, y)\nmapBoth funcA funcB (x,y) =\n  ( funcA x, funcB y )\n'}))
		]));
var $author$project$CompilationInterface$SourceFiles$file_tree____elm_core_modules_implicit_import = A2(
	$author$project$CompilationInterface$SourceFiles$mapBlobs,
	function (blobValue) {
		return {utf8: blobValue.utf8};
	},
	$author$project$CompilationInterface$SourceFiles$mapFileTreeNodeFromGenerated($author$project$CompilationInterface$SourceFiles$Generated_SourceFiles$file_tree_node_elm_core_modules_implicit_import));
var $author$project$CompilationInterface$SourceFiles$Generated_SourceFiles$file_tree_node_elm_kernel_modules_browser_src = $author$project$CompilationInterface$SourceFiles$Generated_SourceFiles$TreeNode(
	_List_fromArray(
		[
			_Utils_Tuple2(
			'Browser',
			$author$project$CompilationInterface$SourceFiles$Generated_SourceFiles$TreeNode(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'AnimationManager.elm',
						$author$project$CompilationInterface$SourceFiles$Generated_SourceFiles$BlobNode(
							{utf8: 'effect module Browser.AnimationManager where { subscription = MySub } exposing\n    ( onAnimationFrame\n    , onAnimationFrameDelta\n    )\n\nimport Elm.Kernel.Browser\nimport Process\nimport Task exposing (Task)\nimport Time\n\n\n\n-- PUBLIC STUFF\n\n\nonAnimationFrame : (Time.Posix -> msg) -> Sub msg\nonAnimationFrame tagger =\n    subscription (Time tagger)\n\n\nonAnimationFrameDelta : (Float -> msg) -> Sub msg\nonAnimationFrameDelta tagger =\n    subscription (Delta tagger)\n\n\n\n-- SUBSCRIPTIONS\n\n\ntype MySub msg\n    = Time (Time.Posix -> msg)\n    | Delta (Float -> msg)\n\n\nsubMap : (a -> b) -> MySub a -> MySub b\nsubMap func sub =\n    case sub of\n        Time tagger ->\n            Time (func << tagger)\n\n        Delta tagger ->\n            Delta (func << tagger)\n\n\n\n-- EFFECT MANAGER\n\n\ntype alias State msg =\n    { subs : List (MySub msg)\n    , request : Maybe Process.Id\n    , oldTime : Int\n    }\n\n\n\n-- NOTE: used in onEffects\n--\n\n\ninit : Task Never (State msg)\ninit =\n    Task.succeed (State [] Nothing 0)\n\n\nonEffects : Platform.Router msg Int -> List (MySub msg) -> State msg -> Task Never (State msg)\nonEffects router subs { request, oldTime } =\n    case ( request, subs ) of\n        ( Nothing, [] ) ->\n            init\n\n        ( Just pid, [] ) ->\n            Process.kill pid\n                |> Task.andThen (\\_ -> init)\n\n        ( Nothing, _ ) ->\n            Process.spawn (Task.andThen (Platform.sendToSelf router) rAF)\n                |> Task.andThen\n                    (\\pid ->\n                        now\n                            |> Task.andThen (\\time -> Task.succeed (State subs (Just pid) time))\n                    )\n\n        ( Just _, _ ) ->\n            Task.succeed (State subs request oldTime)\n\n\nonSelfMsg : Platform.Router msg Int -> Int -> State msg -> Task Never (State msg)\nonSelfMsg router newTime { subs, oldTime } =\n    let\n        send sub =\n            case sub of\n                Time tagger ->\n                    Platform.sendToApp router (tagger (Time.millisToPosix newTime))\n\n                Delta tagger ->\n                    Platform.sendToApp router (tagger (toFloat (newTime - oldTime)))\n    in\n    Process.spawn (Task.andThen (Platform.sendToSelf router) rAF)\n        |> Task.andThen\n            (\\pid ->\n                Task.sequence (List.map send subs)\n                    |> Task.andThen (\\_ -> Task.succeed (State subs (Just pid) newTime))\n            )\n\n\nrAF : Task x Int\nrAF =\n    Elm.Kernel.Browser.rAF ()\n\n\nnow : Task x Int\nnow =\n    Elm.Kernel.Browser.now ()\n'})),
						_Utils_Tuple2(
						'Dom.elm',
						$author$project$CompilationInterface$SourceFiles$Generated_SourceFiles$BlobNode(
							{utf8: 'module Browser.Dom exposing\n    ( focus, blur, Error(..)\n    , getViewport, Viewport, getViewportOf\n    , setViewport, setViewportOf\n    , getElement, Element\n    )\n\n{-| This module allows you to manipulate the DOM in various ways. It covers:\n\n  - Focus and blur input elements.\n  - Get the `width` and `height` of elements.\n  - Get the `x` and `y` coordinates of elements.\n  - Figure out the scroll position.\n  - Change the scroll position!\n\nWe use different terminology than JavaScript though...\n\n\n# Terminology\n\nHave you ever thought about how &ldquo;scrolling&rdquo; is a metaphor about\nscrolls? Like hanging scrolls of caligraphy made during the Han Dynasty\nin China?\n\nThis metaphor falls apart almost immediately though. For example, many scrolls\nread horizontally! Like a [Sefer Torah][torah] or [Chinese Handscrolls][hand].\nThe two sides move independently, sometimes kept in place with stones. What is\na scroll bar in this world? And [hanging scrolls][hang] (which _are_ displayed\nvertically) do not &ldquo;scroll&rdquo; at all! They hang!\n\nSo in JavaScript, we start with a badly stretched metaphor and add a bunch of\nDOM details like padding, borders, and margins. How do those relate to scrolls?\nFor example, JavaScript has `clientWidth`. Client like a feudal state that pays\ntribute to the emperor? And `offsetHeight`. Can an offset even have height? And\nwhat has that got to do with scrolls?\n\nSo instead of inheriting this metaphorical hodge-podge, we use terminology from\n3D graphics. You have a **scene** containing all your elements and a **viewport**\ninto the scene. I think it ends up being a lot clearer, but you can evaluate\nfor yourself when you see the diagrams later!\n\n**Note:** For more scroll facts, I recommend [A Day on the Grand Canal with\nthe Emperor of China or: Surface Is Illusion But So Is Depth][doc] where David\nHockney explores the history of _perspective_ in art. Really interesting!\n\n[torah]: https://en.wikipedia.org/wiki/Sefer_Torah\n[hand]: https://www.metmuseum.org/toah/hd/chhs/hd_chhs.htm\n[hang]: https://en.wikipedia.org/wiki/Hanging_scroll\n[doc]: https://www.imdb.com/title/tt0164525/\n\n\n# Focus\n\n@docs focus, blur, Error\n\n\n# Get Viewport\n\n@docs getViewport, Viewport, getViewportOf\n\n\n# Set Viewport\n\n@docs setViewport, setViewportOf\n\n\n# Position\n\n@docs getElement, Element\n\n-}\n\nimport Elm.Kernel.Browser\nimport Task exposing (Task)\n\n\n\n-- FOCUS\n\n\n{-| Find a DOM node by `id` and focus on it. So if you wanted to focus a node\nlike `<input type=\"text\" id=\"search-box\">` you could say:\n\n    import Browser.Dom as Dom\n    import Task\n\n    type Msg\n        = NoOp\n\n    focusSearchBox : Cmd Msg\n    focusSearchBox =\n        Task.attempt (\\_ -> NoOp) (Dom.focus \"search-box\")\n\nNotice that this code ignores the possibility that `search-box` is not used\nas an `id` by any node, failing silently in that case. It would be better to\nlog the failure with whatever error reporting system you use.\n\n-}\nfocus : String -> Task Error ()\nfocus =\n    Elm.Kernel.Browser.call \"focus\"\n\n\n{-| Find a DOM node by `id` and make it lose focus. So if you wanted a node\nlike `<input type=\"text\" id=\"search-box\">` to lose focus you could say:\n\n    import Browser.Dom as Dom\n    import Task\n\n    type Msg\n        = NoOp\n\n    unfocusSearchBox : Cmd Msg\n    unfocusSearchBox =\n        Task.attempt (\\_ -> NoOp) (Dom.blur \"search-box\")\n\nNotice that this code ignores the possibility that `search-box` is not used\nas an `id` by any node, failing silently in that case. It would be better to\nlog the failure with whatever error reporting system you use.\n\n-}\nblur : String -> Task Error ()\nblur =\n    Elm.Kernel.Browser.call \"blur\"\n\n\n\n-- ERROR\n\n\n{-| Many functions in this module look up DOM nodes up by their `id`. If you\nask for an `id` that is not in the DOM, you will get this error.\n-}\ntype Error\n    = NotFound String\n\n\n\n-- VIEWPORT\n\n\n{-| Get information on the current viewport of the browser.\n\n![getViewport](https://elm.github.io/browser/v1/getViewport.svg)\n\nIf you want to move the viewport around (i.e. change the scroll position) you\ncan use [`setViewport`](#setViewport) which change the `x` and `y` of the\nviewport.\n\n-}\ngetViewport : Task x Viewport\ngetViewport =\n    Elm.Kernel.Browser.withWindow Elm.Kernel.Browser.getViewport\n\n\n{-| All the information about the current viewport.\n\n![getViewport](https://elm.github.io/browser/v1/getViewport.svg)\n\n-}\ntype alias Viewport =\n    { scene :\n        { width : Float\n        , height : Float\n        }\n    , viewport :\n        { x : Float\n        , y : Float\n        , width : Float\n        , height : Float\n        }\n    }\n\n\n{-| Just like `getViewport`, but for any scrollable DOM node. Say we have an\napplication with a chat box in the bottow right corner like this:\n\n![chat](https://elm.github.io/browser/v1/chat.svg)\n\nThere are probably a whole bunch of messages that are not being shown. You\ncould scroll up to see them all. Well, we can think of that chat box is a\nviewport into a scene!\n\n![getViewportOf](https://elm.github.io/browser/v1/getViewportOf.svg)\n\nThis can be useful with [`setViewportOf`](#setViewportOf) to make sure new\nmessages always appear on the bottom.\n\nThe viewport size _does not_ include the border or margins.\n\n**Note:** This data is collected from specific fields in JavaScript, so it\nmay be helpful to know that:\n\n  - `scene.width` = [`scrollWidth`][sw]\n  - `scene.height` = [`scrollHeight`][sh]\n  - `viewport.x` = [`scrollLeft`][sl]\n  - `viewport.y` = [`scrollTop`][st]\n  - `viewport.width` = [`clientWidth`][cw]\n  - `viewport.height` = [`clientHeight`][ch]\n\nNeither [`offsetWidth`][ow] nor [`offsetHeight`][oh] are available. The theory\nis that (1) the information can always be obtained by using `getElement` on a\nnode without margins, (2) no cases came to mind where you actually care in the\nfirst place, and (3) it is available through ports if it is really needed.\nIf you have a case that really needs it though, please share your specific\nscenario in an issue! Nicely presented case studies are the raw ingredients for\nAPI improvements!\n\n[sw]: https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollWidth\n[sh]: https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollHeight\n[st]: https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollTop\n[sl]: https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollLeft\n[cw]: https://developer.mozilla.org/en-US/docs/Web/API/Element/clientWidth\n[ch]: https://developer.mozilla.org/en-US/docs/Web/API/Element/clientHeight\n[ow]: https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetWidth\n[oh]: https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetHeight\n\n-}\ngetViewportOf : String -> Task Error Viewport\ngetViewportOf =\n    Elm.Kernel.Browser.getViewportOf\n\n\n\n-- SET VIEWPORT\n\n\n{-| Change the `x` and `y` offset of the browser viewport immediately. For\nexample, you could make a command to jump to the top of the page:\n\n    import Browser.Dom as Dom\n    import Task\n\n    type Msg\n        = NoOp\n\n    resetViewport : Cmd Msg\n    resetViewport =\n        Task.perform (\\_ -> NoOp) (Dom.setViewport 0 0)\n\nThis sets the viewport offset to zero.\n\nThis could be useful with `Browser.application` where you may want to reset\nthe viewport when the URL changes. Maybe you go to a &ldquo;new page&rdquo;\nand want people to start at the top!\n\n-}\nsetViewport : Float -> Float -> Task x ()\nsetViewport =\n    Elm.Kernel.Browser.setViewport\n\n\n{-| Change the `x` and `y` offset of a DOM node&rsquo;s viewport by ID. This\nis common in text messaging and chat rooms, where once the messages fill the\nscreen, you want to always be at the very bottom of the message chain. This\nway the latest message is always on screen! You could do this:\n\n    import Browser.Dom as Dom\n    import Task\n\n    type Msg\n        = NoOp\n\n    jumpToBottom : String -> Cmd Msg\n    jumpToBottom id =\n        Dom.getViewportOf id\n            |> Task.andThen (\\info -> Dom.setViewportOf id 0 info.scene.height)\n            |> Task.attempt (\\_ -> NoOp)\n\nSo you could call `jumpToBottom \"chat-box\"` whenever you add a new message.\n\n**Note 1:** What happens if the viewport is placed out of bounds? Where there\nis no `scene` to show? To avoid this question, the `x` and `y` offsets are\nclamped such that the viewport is always fully within the `scene`. So when\n`jumpToBottom` sets the `y` offset of the viewport to the `height` of the\n`scene` (i.e. too far!) it relies on this clamping behavior to put the viewport\nback in bounds.\n\n**Note 2:** The example ignores when the element ID is not found, but it would\nbe great to log that information. It means there may be a bug or a dead link\nsomewhere!\n\n-}\nsetViewportOf : String -> Float -> Float -> Task Error ()\nsetViewportOf =\n    Elm.Kernel.Browser.setViewportOf\n\n\n\n{--SLIDE VIEWPORT\n\n\n{-| Change the `x` and `y` offset of the viewport with an animation. In JS,\nthis corresponds to setting [`scroll-behavior`][sb] to `smooth`.\n\nThis can definitely be overused, so try to use it specifically when you want\nthe user to be spatially situated in a scene. For example, a &ldquo;back to\ntop&rdquo; button might use it:\n\n    import Browser.Dom as Dom\n    import Task\n\n    type Msg = NoOp\n\n    backToTop : Cmd Msg\n    backToTop =\n      Task.perform (\\_ -> NoOp) (Dom.slideViewport 0 0)\n\nBe careful when paring this with `Browser.application`. When the URL changes\nand a whole new scene is going to be rendered, using `setViewport` is probably\nbest. If you are moving within a scene, you may benefit from a mix of\n`setViewport` and `slideViewport`. Sliding to the top is nice, but sliding\naround everywhere is probably annoying.\n\n[sb]: https://developer.mozilla.org/en-US/docs/Web/CSS/scroll-behavior\n-}\nslideViewport : Float -> Float -> Task x ()\nslideViewport =\n  Debug.todo \"slideViewport\"\n\n\nslideViewportOf : String -> Float -> Float -> Task Error ()\nslideViewportOf =\n  Debug.todo \"slideViewportOf\"\n\n--}\n-- ELEMENT\n\n\n{-| Get position information about specific elements. Say we put\n`id \"jesting-aside\"` on the seventh paragraph of the text. When we call\n`getElement \"jesting-aside\"` we would get the following information:\n\n![getElement](https://elm.github.io/browser/v1/getElement.svg)\n\nThis can be useful for:\n\n  - **Scrolling** &mdash; Pair this information with `setViewport` to scroll\n    specific elements into view. This gives you a lot of control over where exactly\n    the element would be after the viewport moved.\n\n  - **Drag and Drop** &mdash; As of this writing, `touchmove` events do not tell\n    you which element you are currently above. To figure out if you have dragged\n    something over the target, you could see if the `pageX` and `pageY` of the\n    touch are inside the `x`, `y`, `width`, and `height` of the target element.\n\n**Note:** This corresponds to JavaScript&rsquo;s [`getBoundingClientRect`][gbcr],\nso **the element&rsquo;s margins are included in its `width` and `height`**.\nWith scrolling, maybe you want to include the margins. With drag-and-drop, you\nprobably do not, so some folks set the margins to zero and put the target\nelement in a `<div>` that adds the spacing. Just something to be aware of!\n\n[gbcr]: https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect\n\n-}\ngetElement : String -> Task Error Element\ngetElement =\n    Elm.Kernel.Browser.getElement\n\n\n{-| A bunch of information about the position and size of an element relative\nto the overall scene.\n\n![getElement](https://elm.github.io/browser/v1/getElement.svg)\n\n-}\ntype alias Element =\n    { scene :\n        { width : Float\n        , height : Float\n        }\n    , viewport :\n        { x : Float\n        , y : Float\n        , width : Float\n        , height : Float\n        }\n    , element :\n        { x : Float\n        , y : Float\n        , width : Float\n        , height : Float\n        }\n    }\n'})),
						_Utils_Tuple2(
						'Events.elm',
						$author$project$CompilationInterface$SourceFiles$Generated_SourceFiles$BlobNode(
							{utf8: 'effect module Browser.Events where { subscription = MySub } exposing\n  ( onAnimationFrame, onAnimationFrameDelta\n  , onKeyPress, onKeyDown, onKeyUp\n  , onClick, onMouseMove, onMouseDown, onMouseUp\n  , onResize, onVisibilityChange, Visibility(..)\n  )\n\n{-| In JavaScript, information about the root of an HTML document is held in\nthe `document` and `window` objects. This module lets you create event\nlisteners on those objects for the following topics: [animation](#animation),\n[keyboard](#keyboard), [mouse](#mouse), and [window](#window).\n\nIf there is something else you need, use [ports] to do it in JavaScript!\n\n[ports]: https://guide.elm-lang.org/interop/ports.html\n\n\n# Animation\n\n@docs onAnimationFrame, onAnimationFrameDelta\n\n\n# Keyboard\n\n@docs onKeyPress, onKeyDown, onKeyUp\n\n\n# Mouse\n\n@docs onClick, onMouseMove, onMouseDown, onMouseUp\n\n\n# Window\n\n@docs onResize, onVisibilityChange, Visibility\n\n-}\n\nimport Browser.AnimationManager as AM\nimport Dict\nimport Elm.Kernel.Browser\nimport Json.Decode as Decode\nimport Process\nimport Task exposing (Task)\nimport Time\n\n\n\n-- ANIMATION\n\n\n{-| An animation frame triggers about 60 times per second. Get the POSIX time\non each frame. (See [`elm/time`](/packages/elm/time/latest) for more info on\nPOSIX times.)\n\n**Note:** Browsers have their own render loop, repainting things as fast as\npossible. If you want smooth animations in your application, it is helpful to\nsync up with the browsers natural refresh rate. This hooks into JavaScript\'s\n`requestAnimationFrame` function.\n\n-}\nonAnimationFrame : (Time.Posix -> msg) -> Sub msg\nonAnimationFrame =\n  AM.onAnimationFrame\n\n\n{-| Just like `onAnimationFrame`, except message is the time in milliseconds\nsince the previous frame. So you should get a sequence of values all around\n`1000 / 60` which is nice for stepping animations by a time delta.\n-}\nonAnimationFrameDelta : (Float -> msg) -> Sub msg\nonAnimationFrameDelta =\n  AM.onAnimationFrameDelta\n\n\n\n-- KEYBOARD\n\n\n{-| Subscribe to key presses that normally produce characters. So you should\nnot rely on this for arrow keys.\n\n**Note:** Check out [this advice][note] to learn more about decoding key codes.\nIt is more complicated than it should be.\n\n[note]: https://github.com/elm/browser/blob/1.0.2/notes/keyboard.md\n\n-}\nonKeyPress : Decode.Decoder msg -> Sub msg\nonKeyPress =\n  on Document \"keypress\"\n\n\n{-| Subscribe to get codes whenever a key goes down. This can be useful for\ncreating games. Maybe you want to know if people are pressing `w`, `a`, `s`,\nor `d` at any given time.\n\n**Note:** Check out [this advice][note] to learn more about decoding key codes.\nIt is more complicated than it should be.\n\n[note]: https://github.com/elm/browser/blob/1.0.2/notes/keyboard.md\n\n-}\nonKeyDown : Decode.Decoder msg -> Sub msg\nonKeyDown =\n  on Document \"keydown\"\n\n\n{-| Subscribe to get codes whenever a key goes up. Often used in combination\nwith [`onVisibilityChange`](#onVisibilityChange) to be sure keys do not appear\nto down and never come back up.\n-}\nonKeyUp : Decode.Decoder msg -> Sub msg\nonKeyUp =\n  on Document \"keyup\"\n\n\n\n-- MOUSE\n\n\n{-| Subscribe to mouse clicks anywhere on screen. Maybe you need to create a\ncustom drop down. You could listen for clicks when it is open, letting you know\nif someone clicked out of it:\n\n    import Browser.Events as Events\n    import Json.Decode as D\n\n    type Msg\n       = ClickOut\n\n    subscriptions : Model -> Sub Msg\n    subscriptions model =\n      case model.dropDown of\n        Closed _ ->\n          Sub.none\n\n        Open _ ->\n          Events.onClick (D.succeed ClickOut)\n\n-}\nonClick : Decode.Decoder msg -> Sub msg\nonClick =\n  on Document \"click\"\n\n\n{-| Subscribe to mouse moves anywhere on screen.\n\nYou could use this to implement resizable panels like in Elm\'s online code\neditor. Check out the example imprementation [here][drag].\n\n[drag]: https://github.com/elm/browser/blob/1.0.2/examples/src/Drag.elm\n\n**Note:** Unsubscribe if you do not need these events! Running code on every\nsingle mouse movement can be very costly, and it is recommended to only\nsubscribe when absolutely necessary.\n\n-}\nonMouseMove : Decode.Decoder msg -> Sub msg\nonMouseMove =\n  on Document \"mousemove\"\n\n\n{-| Subscribe to get mouse information whenever the mouse button goes down.\n-}\nonMouseDown : Decode.Decoder msg -> Sub msg\nonMouseDown =\n  on Document \"mousedown\"\n\n\n{-| Subscribe to get mouse information whenever the mouse button goes up.\nOften used in combination with [`onVisibilityChange`](#onVisibilityChange)\nto be sure keys do not appear to down and never come back up.\n-}\nonMouseUp : Decode.Decoder msg -> Sub msg\nonMouseUp =\n  on Document \"mouseup\"\n\n\n\n-- WINDOW\n\n\n{-| Subscribe to any changes in window size.\n\nFor example, you could track the current width by saying:\n\n    import Browser.Events as E\n\n    type Msg\n      = GotNewWidth Int\n\n    subscriptions : model -> Cmd Msg\n    subscriptions _ =\n      E.onResize (\\w h -> GotNewWidth w)\n\n**Note:** This is equivalent to getting events from [`window.onresize`][resize].\n\n[resize]: https://developer.mozilla.org/en-US/docs/Web/API/GlobalEventHandlers/onresize\n\n-}\nonResize : (Int -> Int -> msg) -> Sub msg\nonResize func =\n  on Window \"resize\" <|\n    Decode.field \"target\" <|\n      Decode.map2 func\n        (Decode.field \"innerWidth\" Decode.int)\n        (Decode.field \"innerHeight\" Decode.int)\n\n\n{-| Subscribe to any visibility changes, like if the user switches to a\ndifferent tab or window. When the user looks away, you may want to:\n\n- Pause a timer.\n- Pause an animation.\n- Pause video or audio.\n- Pause an image carousel.\n- Stop polling a server for new information.\n- Stop waiting for an [`onKeyUp`](#onKeyUp) event.\n\n-}\nonVisibilityChange : (Visibility -> msg) -> Sub msg\nonVisibilityChange func =\n  let\n    info = Elm.Kernel.Browser.visibilityInfo ()\n  in\n  on Document info.change <|\n    Decode.map (withHidden func) <|\n      Decode.field \"target\" <|\n        Decode.field info.hidden Decode.bool\n\n\nwithHidden : (Visibility -> msg) -> Bool -> msg\nwithHidden func isHidden =\n  func (if isHidden then Hidden else Visible)\n\n\n{-| Value describing whether the page is hidden or visible.\n-}\ntype Visibility\n  = Visible\n  | Hidden\n\n\n\n-- SUBSCRIPTIONS\n\n\ntype Node\n  = Document\n  | Window\n\n\non : Node -> String -> Decode.Decoder msg -> Sub msg\non node name decoder =\n  subscription (MySub node name decoder)\n\n\ntype MySub msg\n  = MySub Node String (Decode.Decoder msg)\n\n\nsubMap : (a -> b) -> MySub a -> MySub b\nsubMap func (MySub node name decoder) =\n  MySub node name (Decode.map func decoder)\n\n\n\n-- EFFECT MANAGER\n\n\ntype alias State msg =\n  { subs : List ( String, MySub msg )\n  , pids : Dict.Dict String Process.Id\n  }\n\n\ninit : Task Never (State msg)\ninit =\n  Task.succeed (State [] Dict.empty)\n\n\ntype alias Event =\n  { key : String\n  , event : Decode.Value\n  }\n\n\nonSelfMsg : Platform.Router msg Event -> Event -> State msg -> Task Never (State msg)\nonSelfMsg router { key, event } state =\n  let\n    toMessage ( subKey, MySub node name decoder ) =\n      if subKey == key then\n        Elm.Kernel.Browser.decodeEvent decoder event\n      else\n        Nothing\n\n    messages = List.filterMap toMessage state.subs\n  in\n  Task.sequence (List.map (Platform.sendToApp router) messages)\n    |> Task.andThen (\\_ -> Task.succeed state)\n\n\nonEffects : Platform.Router msg Event -> List (MySub msg) -> State msg -> Task Never (State msg)\nonEffects router subs state =\n  let\n    newSubs = List.map addKey subs\n\n    stepLeft _ pid (deads, lives, news) =\n      (pid :: deads, lives, news)\n\n    stepBoth key pid _ (deads, lives, news) =\n      (deads, Dict.insert key pid lives, news)\n\n    stepRight key sub (deads, lives, news) =\n      (deads, lives, spawn router key sub :: news)\n\n    (deadPids, livePids, makeNewPids) =\n      Dict.merge stepLeft stepBoth stepRight state.pids (Dict.fromList newSubs) ([], Dict.empty, [])\n  in\n  Task.sequence (List.map Process.kill deadPids)\n    |> Task.andThen (\\_ -> Task.sequence makeNewPids)\n    |> Task.andThen (\\pids -> Task.succeed (State newSubs (Dict.union livePids (Dict.fromList pids))))\n\n\n\n-- TO KEY\n\n\naddKey : MySub msg -> ( String, MySub msg )\naddKey ((MySub node name _) as sub) =\n  (nodeToKey node ++ name, sub)\n\n\nnodeToKey : Node -> String\nnodeToKey node =\n  case node of\n    Document -> \"d_\"\n    Window   -> \"w_\"\n\n\n\n-- SPAWN\n\n\nspawn : Platform.Router msg Event -> String -> MySub msg -> Task Never ( String, Process.Id )\nspawn router key (MySub node name _) =\n  let\n    actualNode =\n      case node of\n        Document -> Elm.Kernel.Browser.doc\n        Window -> Elm.Kernel.Browser.window\n  in\n  Task.map (\\value -> ( key, value )) <|\n    Elm.Kernel.Browser.on actualNode name <|\n      \\event -> Platform.sendToSelf router (Event key event)\n'})),
						_Utils_Tuple2(
						'Navigation.elm',
						$author$project$CompilationInterface$SourceFiles$Generated_SourceFiles$BlobNode(
							{utf8: 'module Browser.Navigation exposing\n    ( Key, pushUrl, replaceUrl, back, forward\n    , load, reload, reloadAndSkipCache\n    )\n\n{-| This module helps you manage the browser’s URL yourself. This is the\ncrucial trick when using [`Browser.application`](Browser#application).\n\nThe most important function is [`pushUrl`](#pushUrl) which changes the\naddress bar _without_ starting a page load.\n\n\n## What is a page load?\n\n1.  Request a new HTML document. The page goes blank.\n2.  As the HTML loads, request any `<script>` or `<link>` resources.\n3.  A `<script>` may mutate the document, so these tags block rendering.\n4.  When _all_ of the assets are loaded, actually render the page.\n\nThat means the page will go blank for at least two round-trips to the servers!\nYou may have 90% of the data you need and be blocked on a font that is taking\na long time. Still blank!\n\n\n## How does `pushUrl` help?\n\nThe `pushUrl` function changes the URL, but lets you keep the current HTML.\nThis means the page _never_ goes blank. Instead of making two round-trips to\nthe server, you load whatever assets you want from within Elm. Maybe you do\nnot need any round-trips! Meanwhile, you retain full control over the UI, so\nyou can show a loading bar, show information as it loads, etc. Whatever you\nwant!\n\n\n# Navigate within Page\n\n@docs Key, pushUrl, replaceUrl, back, forward\n\n\n# Navigate to other Pages\n\n@docs load, reload, reloadAndSkipCache\n\n-}\n\nimport Elm.Kernel.Browser\nimport Task exposing (Task)\n\n\n\n-- WITHIN PAGE\n\n\n{-| A navigation `Key` is needed to create navigation commands that change the\nURL. That includes [`pushUrl`](#pushUrl), [`replaceUrl`](#replaceUrl),\n[`back`](#back), and [`forward`](#forward).\n\nYou only get access to a `Key` when you create your program with\n[`Browser.application`](Browser#application), guaranteeing that your program is\nequipped to detect these URL changes. If `Key` values were available in other\nkinds of programs, unsuspecting programmers would be sure to run into some\n[annoying bugs][bugs] and learn a bunch of techniques the hard way!\n\n[bugs]: https://github.com/elm/browser/blob/1.0.2/notes/navigation-in-elements.md\n\n-}\ntype Key\n    = Key\n\n\n{-| Change the URL, but do not trigger a page load.\n\nThis will add a new entry to the browser history.\n\nCheck out the [`elm/url`][url] package for help building URLs. The\n[`Url.Builder.absolute`][abs] and [`Url.Builder.relative`][rel] functions can\nbe particularly handy!\n\n[url]: /packages/elm/url/latest\n[abs]: /packages/elm/url/latest/Url-Builder#absolute\n[rel]: /packages/elm/url/latest/Url-Builder#relative\n\n**Note:** If the user has gone `back` a few pages, there will be &ldquo;future\npages&rdquo; that the user can go `forward` to. Adding a new URL in that\nscenario will clear out any future pages. It is like going back in time and\nmaking a different choice.\n\n-}\npushUrl : Key -> String -> Cmd msg\npushUrl =\n    Elm.Kernel.Browser.pushUrl\n\n\n{-| Change the URL, but do not trigger a page load.\n\nThis _will not_ add a new entry to the browser history.\n\nThis can be useful if you have search box and you want the `?search=hats` in\nthe URL to match without adding a history entry for every single key stroke.\nImagine how annoying it would be to click `back` thirty times and still be on\nthe same page!\n\n**Note:** Browsers may rate-limit this function by throwing an exception. The\ndiscussion [here](https://bugs.webkit.org/show_bug.cgi?id=156115) suggests\nthat the limit is 100 calls per 30 second interval in Safari in 2016. It also\nsuggests techniques for people changing the URL based on scroll position.\n\n-}\nreplaceUrl : Key -> String -> Cmd msg\nreplaceUrl =\n    Elm.Kernel.Browser.replaceUrl\n\n\n{-| Go back some number of pages. So `back 1` goes back one page, and `back 2`\ngoes back two pages.\n\n**Note:** You only manage the browser history that _you_ created. Think of this\nlibrary as letting you have access to a small part of the overall history. So\nif you go back farther than the history you own, you will just go back to some\nother website!\n\n-}\nback : Key -> Int -> Cmd msg\nback key n =\n    Elm.Kernel.Browser.go key -n\n\n\n{-| Go forward some number of pages. So `forward 1` goes forward one page, and\n`forward 2` goes forward two pages. If there are no more pages in the future,\nthis will do nothing.\n\n**Note:** You only manage the browser history that _you_ created. Think of this\nlibrary as letting you have access to a small part of the overall history. So\nif you go forward farther than the history you own, the user will end up on\nwhatever website they visited next!\n\n-}\nforward : Key -> Int -> Cmd msg\nforward =\n    Elm.Kernel.Browser.go\n\n\n\n-- EXTERNAL PAGES\n\n\n{-| Leave the current page and load the given URL. **This always results in a\npage load**, even if the provided URL is the same as the current one.\n\n    gotoElmWebsite : Cmd msg\n    gotoElmWebsite =\n        load \"https://elm-lang.org\"\n\nCheck out the [`elm/url`][url] package for help building URLs. The\n[`Url.absolute`][abs] and [`Url.relative`][rel] functions can be particularly\nhandy!\n\n[url]: /packages/elm/url/latest\n[abs]: /packages/elm/url/latest/Url#absolute\n[rel]: /packages/elm/url/latest/Url#relative\n\n-}\nload : String -> Cmd msg\nload =\n    Elm.Kernel.Browser.load\n\n\n{-| Reload the current page. **This always results in a page load!**\nThis may grab resources from the browser cache, so use\n[`reloadAndSkipCache`](#reloadAndSkipCache)\nif you want to be sure that you are not loading any cached resources.\n-}\nreload : Cmd msg\nreload =\n    Elm.Kernel.Browser.reload False\n\n\n{-| Reload the current page without using the browser cache. **This always\nresults in a page load!** It is more common to want [`reload`](#reload).\n-}\nreloadAndSkipCache : Cmd msg\nreloadAndSkipCache =\n    Elm.Kernel.Browser.reload True\n'}))
					]))),
			_Utils_Tuple2(
			'Browser.elm',
			$author$project$CompilationInterface$SourceFiles$Generated_SourceFiles$BlobNode(
				{utf8: 'module Browser exposing\n    ( sandbox\n    , element\n    , document, Document\n    , application, UrlRequest(..)\n    )\n\n{-| This module helps you set up an Elm `Program` with functions like\n[`sandbox`](#sandbox) and [`document`](#document).\n\n\n# Sandboxes\n\n@docs sandbox\n\n\n# Elements\n\n@docs element\n\n\n# Documents\n\n@docs document, Document\n\n\n# Applications\n\n@docs application, UrlRequest\n\n-}\n\nimport Browser.Navigation as Navigation\nimport Debugger.Main\nimport Dict\nimport Elm.Kernel.Browser\nimport Html exposing (Html)\nimport Url\n\n\n\n-- SANDBOX\n\n\n{-| Create a “sandboxed” program that cannot communicate with the outside\nworld.\n\nThis is great for learning the basics of [The Elm Architecture][tea]. You can\nsee sandboxes in action in the following examples:\n\n  - [Buttons](https://guide.elm-lang.org/architecture/buttons.html)\n  - [Text Fields](https://guide.elm-lang.org/architecture/text_fields.html)\n  - [Forms](https://guide.elm-lang.org/architecture/forms.html)\n\nThose are nice, but **I very highly recommend reading [this guide][guide]\nstraight through** to really learn how Elm works. Understanding the\nfundamentals actually pays off in this language!\n\n[tea]: https://guide.elm-lang.org/architecture/\n[guide]: https://guide.elm-lang.org/\n\n-}\nsandbox :\n    { init : model\n    , view : model -> Html msg\n    , update : msg -> model -> model\n    }\n    -> Program () model msg\nsandbox impl =\n    Elm.Kernel.Browser.element\n        { init = \\() -> ( impl.init, Cmd.none )\n        , view = impl.view\n        , update = \\msg model -> ( impl.update msg model, Cmd.none )\n        , subscriptions = \\_ -> Sub.none\n        }\n\n\n\n-- ELEMENT\n\n\n{-| Create an HTML element managed by Elm. The resulting elements are easy to\nembed in larger JavaScript projects, and lots of companies that use Elm\nstarted with this approach! Try it out on something small. If it works, great,\ndo more! If not, revert, no big deal.\n\nUnlike a [`sandbox`](#sandbox), an `element` can talk to the outside world in\na couple ways:\n\n  - `Cmd` &mdash; you can “command” the Elm runtime to do stuff, like HTTP.\n  - `Sub` &mdash; you can “subscribe” to event sources, like clock ticks.\n  - `flags` &mdash; JavaScript can pass in data when starting the Elm program\n  - `ports` &mdash; set up a client-server relationship with JavaScript\n\nAs you read [the guide][guide] you will run into a bunch of examples of `element`\nin [this section][fx]. You can learn more about flags and ports in [the interop\nsection][interop].\n\n[guide]: https://guide.elm-lang.org/\n[fx]: https://guide.elm-lang.org/effects/\n[interop]: https://guide.elm-lang.org/interop/\n\n-}\nelement :\n    { init : flags -> ( model, Cmd msg )\n    , view : model -> Html msg\n    , update : msg -> model -> ( model, Cmd msg )\n    , subscriptions : model -> Sub msg\n    }\n    -> Program flags model msg\nelement =\n    Elm.Kernel.Browser.element\n\n\n\n-- DOCUMENT\n\n\n{-| Create an HTML document managed by Elm. This expands upon what `element`\ncan do in that `view` now gives you control over the `<title>` and `<body>`.\n-}\ndocument :\n    { init : flags -> ( model, Cmd msg )\n    , view : model -> Document msg\n    , update : msg -> model -> ( model, Cmd msg )\n    , subscriptions : model -> Sub msg\n    }\n    -> Program flags model msg\ndocument =\n    Elm.Kernel.Browser.document\n\n\n{-| This data specifies the `<title>` and all of the nodes that should go in\nthe `<body>`. This means you can update the title as your application changes.\nMaybe your \"single-page app\" navigates to a \"different page\", maybe a calendar\napp shows an accurate date in the title, etc.\n\n> **Note about CSS:** This looks similar to an `<html>` document, but this is\n> not the place to manage CSS assets. If you want to work with CSS, there are\n> a couple ways:\n>\n> 1.  Packages like [`rtfeldman/elm-css`][elm-css] give all of the features\n>     of CSS without any CSS files. You can add all the styles you need in your\n>     `view` function, and there is no need to worry about class names matching.\n>\n> 2.  Compile your Elm code to JavaScript with `elm make --output=elm.js` and\n>     then make your own HTML file that loads `elm.js` and the CSS file you want.\n>     With this approach, it does not matter where the CSS comes from. Write it\n>     by hand. Generate it. Whatever you want to do.\n>\n> 3.  If you need to change `<link>` tags dynamically, you can send messages\n>     out a port to do it in JavaScript.\n>\n> The bigger point here is that loading assets involves touching the `<head>`\n> as an implementation detail of browsers, but that does not mean it should be\n> the responsibility of the `view` function in Elm. So we do it differently!\n\n[elm-css]: /packages/rtfeldman/elm-css/latest/\n\n-}\ntype alias Document msg =\n    { title : String\n    , body : List (Html msg)\n    }\n\n\n\n-- APPLICATION\n\n\n{-| Create an application that manages [`Url`][url] changes.\n\n**When the application starts**, `init` gets the initial `Url`. You can show\ndifferent things depending on the `Url`!\n\n**When someone clicks a link**, like `<a href=\"/home\">Home</a>`, it always goes\nthrough `onUrlRequest`. The resulting message goes to your `update` function,\ngiving you a chance to save scroll position or persist data before changing\nthe URL yourself with [`pushUrl`][bnp] or [`load`][bnl]. More info on this in\nthe [`UrlRequest`](#UrlRequest) docs!\n\n**When the URL changes**, the new `Url` goes through `onUrlChange`. The\nresulting message goes to `update` where you can decide what to show next.\n\nApplications always use the [`Browser.Navigation`][bn] module for precise\ncontrol over `Url` changes.\n\n**More Info:** Here are some example usages of `application` programs:\n\n  - [RealWorld example app](https://github.com/rtfeldman/elm-spa-example)\n  - [Elm’s package website](https://github.com/elm/package.elm-lang.org)\n\nThese are quite advanced Elm programs, so be sure to go through [the guide][g]\nfirst to get a solid conceptual foundation before diving in! If you start\nreading a calculus book from page 314, it might seem confusing. Same here!\n\n**Note:** Can an [`element`](#element) manage the URL too? Read [this]!\n\n[g]: https://guide.elm-lang.org/\n[bn]: Browser-Navigation\n[bnp]: Browser-Navigation#pushUrl\n[bnl]: Browser-Navigation#load\n[url]: /packages/elm/url/latest/Url#Url\n[this]: https://github.com/elm/browser/blob/1.0.2/notes/navigation-in-elements.md\n\n-}\napplication :\n    { init : flags -> Url.Url -> Navigation.Key -> ( model, Cmd msg )\n    , view : model -> Document msg\n    , update : msg -> model -> ( model, Cmd msg )\n    , subscriptions : model -> Sub msg\n    , onUrlRequest : UrlRequest -> msg\n    , onUrlChange : Url.Url -> msg\n    }\n    -> Program flags model msg\napplication =\n    Elm.Kernel.Browser.application\n\n\n{-| All links in an [`application`](#application) create a `UrlRequest`. So\nwhen you click `<a href=\"/home\">Home</a>`, it does not just navigate! It\nnotifies `onUrlRequest` that the user wants to change the `Url`.\n\n\n### `Internal` vs `External`\n\nImagine we are browsing `https://example.com`. An `Internal` link would be\nlike:\n\n  - `settings#privacy`\n  - `/home`\n  - `https://example.com/home`\n  - `//example.com/home`\n\nAll of these links exist under the `https://example.com` domain. An `External`\nlink would be like:\n\n  - `https://elm-lang.org/examples`\n  - `https://other.example.com/home`\n  - `http://example.com/home`\n\nAnything that changes the domain. Notice that changing the protocol from\n`https` to `http` is considered a different domain! (And vice versa!)\n\n\n### Purpose\n\nHaving a `UrlRequest` requires a case in your `update` like this:\n\n    import Browser exposing (..)\n    import Browser.Navigation as Nav\n    import Url\n\n    type Msg\n        = ClickedLink UrlRequest\n\n    update : Msg -> Model -> ( Model, Cmd msg )\n    update msg model =\n        case msg of\n            ClickedLink urlRequest ->\n                case urlRequest of\n                    Internal url ->\n                        ( model\n                        , Nav.pushUrl model.key (Url.toString url)\n                        )\n\n                    External url ->\n                        ( model\n                        , Nav.load url\n                        )\n\nThis is useful because it gives you a chance to customize the behavior in each\ncase. Maybe on some `Internal` links you save the scroll position with\n[`Browser.Dom.getViewport`](Browser-Dom#getViewport) so you can restore it\nlater. Maybe on `External` links you persist parts of the `Model` on your\nservers before leaving. Whatever you need to do!\n\n**Note:** Knowing the scroll position is not enough to restore it! What if the\nbrowser dimensions change? The scroll position will not correlate with\n&ldquo;what was on screen&rdquo; anymore. So it may be better to remember\n&ldquo;what was on screen&rdquo; and recreate the position based on that. For\nexample, in a Wikipedia article, remember the header that they were looking at\nmost recently. [`Browser.Dom.getElement`](Browser-Dom#getElement) is designed\nfor figuring that out!\n\n-}\ntype UrlRequest\n    = Internal Url.Url\n    | External String\n'}))
		]));
var $author$project$CompilationInterface$SourceFiles$file_tree____elm_kernel_modules_browser_src = A2(
	$author$project$CompilationInterface$SourceFiles$mapBlobs,
	function (blobValue) {
		return {utf8: blobValue.utf8};
	},
	$author$project$CompilationInterface$SourceFiles$mapFileTreeNodeFromGenerated($author$project$CompilationInterface$SourceFiles$Generated_SourceFiles$file_tree_node_elm_kernel_modules_browser_src));
var $author$project$CompilationInterface$SourceFiles$Generated_SourceFiles$file_tree_node_elm_kernel_modules_html_src = $author$project$CompilationInterface$SourceFiles$Generated_SourceFiles$TreeNode(
	_List_fromArray(
		[
			_Utils_Tuple2(
			'Html',
			$author$project$CompilationInterface$SourceFiles$Generated_SourceFiles$TreeNode(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'Attributes.elm',
						$author$project$CompilationInterface$SourceFiles$Generated_SourceFiles$BlobNode(
							{utf8: 'module Html.Attributes exposing\n  ( style, property, attribute, map\n  , class, classList, id, title, hidden\n  , type_, value, checked, placeholder, selected\n  , accept, acceptCharset, action, autocomplete, autofocus\n  , disabled, enctype, list, maxlength, minlength, method, multiple\n  , name, novalidate, pattern, readonly, required, size, for, form\n  , max, min, step\n  , cols, rows, wrap\n  , href, target, download, hreflang, media, ping, rel\n  , ismap, usemap, shape, coords\n  , src, height, width, alt\n  , autoplay, controls, loop, preload, poster, default, kind, srclang\n  , sandbox, srcdoc\n  , reversed, start\n  , align, colspan, rowspan, headers, scope\n  , accesskey, contenteditable, contextmenu, dir, draggable, dropzone\n  , itemprop, lang, spellcheck, tabindex\n  , cite, datetime, pubdate, manifest\n  )\n\n{-| Helper functions for HTML attributes. They are organized roughly by\ncategory. Each attribute is labeled with the HTML tags it can be used with, so\njust search the page for `video` if you want video stuff.\n\n# Primitives\n@docs style, property, attribute, map\n\n# Super Common Attributes\n@docs class, classList, id, title, hidden\n\n# Inputs\n@docs type_, value, checked, placeholder, selected\n\n## Input Helpers\n@docs accept, acceptCharset, action, autocomplete, autofocus,\n    disabled, enctype, list, maxlength, minlength, method, multiple,\n    name, novalidate, pattern, readonly, required, size, for, form\n\n## Input Ranges\n@docs max, min, step\n\n## Input Text Areas\n@docs cols, rows, wrap\n\n\n# Links and Areas\n@docs href, target, download, hreflang, media, ping, rel\n\n## Maps\n@docs ismap, usemap, shape, coords\n\n\n# Embedded Content\n@docs src, height, width, alt\n\n## Audio and Video\n@docs autoplay, controls, loop, preload, poster, default, kind, srclang\n\n## iframes\n@docs sandbox, srcdoc\n\n# Ordered Lists\n@docs reversed, start\n\n# Tables\n@docs align, colspan, rowspan, headers, scope\n\n# Less Common Global Attributes\nAttributes that can be attached to any HTML tag but are less commonly used.\n@docs accesskey, contenteditable, contextmenu, dir, draggable, dropzone,\n      itemprop, lang, spellcheck, tabindex\n\n# Miscellaneous\n@docs cite, datetime, pubdate, manifest\n\n-}\n\n\nimport Elm.Kernel.VirtualDom\nimport Html exposing (Attribute)\nimport Json.Encode as Json\nimport VirtualDom\n\n\n-- This library does not include low, high, or optimum because the idea of a\n-- `meter` is just too crazy.\n\n\n\n-- PRIMITIVES\n\n\n{-| Specify a style.\n\n    greeting : Node msg\n    greeting =\n      div\n        [ style \"background-color\" \"red\"\n        , style \"height\" \"90px\"\n        , style \"width\" \"100%\"\n        ]\n        [ text \"Hello!\"\n        ]\n\nThere is no `Html.Styles` module because best practices for working with HTML\nsuggest that this should primarily be specified in CSS files. So the general\nrecommendation is to use this function lightly.\n-}\nstyle : String -> String -> Attribute msg\nstyle =\n  VirtualDom.style\n\n\n{-| This function makes it easier to build a space-separated class attribute.\nEach class can easily be added and removed depending on the boolean value it\nis paired with. For example, maybe we want a way to view notices:\n\n    viewNotice : Notice -> Html msg\n    viewNotice notice =\n      div\n        [ classList\n            [ (\"notice\", True)\n            , (\"notice-important\", notice.isImportant)\n            , (\"notice-seen\", notice.isSeen)\n            ]\n        ]\n        [ text notice.content ]\n\n**Note:** You can have as many `class` and `classList` attributes as you want.\nThey all get applied, so if you say `[ class \"notice\", class \"notice-seen\" ]`\nyou will get both classes!\n-}\nclassList : List (String, Bool) -> Attribute msg\nclassList classes =\n  class <| String.join \" \" <| List.map Tuple.first <|\n    List.filter Tuple.second classes\n\n\n\n-- CUSTOM ATTRIBUTES\n\n\n{-| Create *properties*, like saying `domNode.className = \'greeting\'` in\nJavaScript.\n\n    import Json.Encode as Encode\n\n    class : String -> Attribute msg\n    class name =\n      property \"className\" (Encode.string name)\n\nRead more about the difference between properties and attributes [here][].\n\n[here]: https://github.com/elm/html/blob/master/properties-vs-attributes.md\n-}\nproperty : String -> Json.Value -> Attribute msg\nproperty =\n  VirtualDom.property\n\n\nstringProperty : String -> String -> Attribute msg\nstringProperty key string =\n  Elm.Kernel.VirtualDom.property key (Json.string string)\n\n\nboolProperty : String -> Bool -> Attribute msg\nboolProperty key bool =\n  Elm.Kernel.VirtualDom.property key (Json.bool bool)\n\n\n{-| Create *attributes*, like saying `domNode.setAttribute(\'class\', \'greeting\')`\nin JavaScript.\n\n    class : String -> Attribute msg\n    class name =\n      attribute \"class\" name\n\nRead more about the difference between properties and attributes [here][].\n\n[here]: https://github.com/elm/html/blob/master/properties-vs-attributes.md\n-}\nattribute : String -> String -> Attribute msg\nattribute =\n  VirtualDom.attribute\n\n\n{-| Transform the messages produced by an `Attribute`.\n-}\nmap : (a -> msg) -> Attribute a -> Attribute msg\nmap =\n  VirtualDom.mapAttribute\n\n\n\n-- GLOBAL ATTRIBUTES\n\n\n{-| Often used with CSS to style elements with common properties.\n\n**Note:** You can have as many `class` and `classList` attributes as you want.\nThey all get applied, so if you say `[ class \"notice\", class \"notice-seen\" ]`\nyou will get both classes!\n-}\nclass : String -> Attribute msg\nclass =\n  stringProperty \"className\"\n\n\n{-| Indicates the relevance of an element. -}\nhidden : Bool -> Attribute msg\nhidden =\n  boolProperty \"hidden\"\n\n\n{-| Often used with CSS to style a specific element. The value of this\nattribute must be unique.\n-}\nid : String -> Attribute msg\nid =\n  stringProperty \"id\"\n\n\n{-| Text to be displayed in a tooltip when hovering over the element. -}\ntitle : String -> Attribute msg\ntitle =\n  stringProperty \"title\"\n\n\n\n-- LESS COMMON GLOBAL ATTRIBUTES\n\n\n{-| Defines a keyboard shortcut to activate or add focus to the element. -}\naccesskey : Char -> Attribute msg\naccesskey char =\n  stringProperty \"accessKey\" (String.fromChar char)\n\n\n{-| Indicates whether the element\'s content is editable. -}\ncontenteditable : Bool -> Attribute msg\ncontenteditable =\n  boolProperty \"contentEditable\"\n\n\n{-| Defines the ID of a `menu` element which will serve as the element\'s\ncontext menu.\n-}\ncontextmenu : String -> Attribute msg\ncontextmenu =\n  Elm.Kernel.VirtualDom.attribute \"contextmenu\"\n\n\n{-| Defines the text direction. Allowed values are ltr (Left-To-Right) or rtl\n(Right-To-Left).\n-}\ndir : String -> Attribute msg\ndir =\n  stringProperty \"dir\"\n\n\n{-| Defines whether the element can be dragged. -}\ndraggable : String -> Attribute msg\ndraggable =\n  Elm.Kernel.VirtualDom.attribute \"draggable\"\n\n\n{-| Indicates that the element accept the dropping of content on it. -}\ndropzone : String -> Attribute msg\ndropzone =\n  stringProperty \"dropzone\"\n\n\n{-|-}\nitemprop : String -> Attribute msg\nitemprop =\n  Elm.Kernel.VirtualDom.attribute \"itemprop\"\n\n\n{-| Defines the language used in the element. -}\nlang : String -> Attribute msg\nlang =\n  stringProperty \"lang\"\n\n\n{-| Indicates whether spell checking is allowed for the element. -}\nspellcheck : Bool -> Attribute msg\nspellcheck =\n  boolProperty \"spellcheck\"\n\n\n{-| Overrides the browser\'s default tab order and follows the one specified\ninstead.\n-}\ntabindex : Int -> Attribute msg\ntabindex n =\n  Elm.Kernel.VirtualDom.attribute \"tabIndex\" (String.fromInt n)\n\n\n\n-- EMBEDDED CONTENT\n\n\n{-| The URL of the embeddable content. For `audio`, `embed`, `iframe`, `img`,\n`input`, `script`, `source`, `track`, and `video`.\n-}\nsrc : String -> Attribute msg\nsrc url =\n  stringProperty \"src\" (Elm.Kernel.VirtualDom.noJavaScriptOrHtmlUri url)\n\n\n{-| Declare the height of a `canvas`, `embed`, `iframe`, `img`, `input`,\n`object`, or `video`.\n-}\nheight : Int -> Attribute msg\nheight n =\n  Elm.Kernel.VirtualDom.attribute \"height\" (String.fromInt n)\n\n\n{-| Declare the width of a `canvas`, `embed`, `iframe`, `img`, `input`,\n`object`, or `video`.\n-}\nwidth : Int -> Attribute msg\nwidth n =\n  Elm.Kernel.VirtualDom.attribute \"width\" (String.fromInt n)\n\n\n{-| Alternative text in case an image can\'t be displayed. Works with `img`,\n`area`, and `input`.\n-}\nalt : String -> Attribute msg\nalt =\n  stringProperty \"alt\"\n\n\n\n-- AUDIO and VIDEO\n\n\n{-| The `audio` or `video` should play as soon as possible. -}\nautoplay : Bool -> Attribute msg\nautoplay =\n  boolProperty \"autoplay\"\n\n\n{-| Indicates whether the browser should show playback controls for the `audio`\nor `video`.\n-}\ncontrols : Bool -> Attribute msg\ncontrols =\n  boolProperty \"controls\"\n\n\n{-| Indicates whether the `audio` or `video` should start playing from the\nstart when it\'s finished.\n-}\nloop : Bool -> Attribute msg\nloop =\n  boolProperty \"loop\"\n\n\n{-| Control how much of an `audio` or `video` resource should be preloaded. -}\npreload : String -> Attribute msg\npreload =\n  stringProperty \"preload\"\n\n\n{-| A URL indicating a poster frame to show until the user plays or seeks the\n`video`.\n-}\nposter : String -> Attribute msg\nposter =\n  stringProperty \"poster\"\n\n\n{-| Indicates that the `track` should be enabled unless the user\'s preferences\nindicate something different.\n-}\ndefault : Bool -> Attribute msg\ndefault =\n  boolProperty \"default\"\n\n\n{-| Specifies the kind of text `track`. -}\nkind : String -> Attribute msg\nkind =\n  stringProperty \"kind\"\n\n\n{-- TODO: maybe reintroduce once there\'s a better way to disambiguate imports\n{-| Specifies a user-readable title of the text `track`. -}\nlabel : String -> Attribute msg\nlabel =\n  stringProperty \"label\"\n--}\n\n{-| A two letter language code indicating the language of the `track` text data.\n-}\nsrclang : String -> Attribute msg\nsrclang =\n  stringProperty \"srclang\"\n\n\n\n-- IFRAMES\n\n\n{-| A space separated list of security restrictions you\'d like to lift for an\n`iframe`.\n-}\nsandbox : String -> Attribute msg\nsandbox =\n  stringProperty \"sandbox\"\n\n\n{-| An HTML document that will be displayed as the body of an `iframe`. It will\noverride the content of the `src` attribute if it has been specified.\n-}\nsrcdoc : String -> Attribute msg\nsrcdoc =\n  stringProperty \"srcdoc\"\n\n\n\n-- INPUT\n\n\n{-| Defines the type of a `button`, `checkbox`, `input`, `embed`, `menu`,\n`object`, `script`, `source`, or `style`.\n-}\ntype_ : String -> Attribute msg\ntype_ =\n  stringProperty \"type\"\n\n\n{-| Defines a default value which will be displayed in a `button`, `option`,\n`input`, `li`, `meter`, `progress`, or `param`.\n-}\nvalue : String -> Attribute msg\nvalue =\n  stringProperty \"value\"\n\n\n{-| Indicates whether an `input` of type checkbox is checked. -}\nchecked : Bool -> Attribute msg\nchecked =\n  boolProperty \"checked\"\n\n\n{-| Provides a hint to the user of what can be entered into an `input` or\n`textarea`.\n-}\nplaceholder : String -> Attribute msg\nplaceholder =\n  stringProperty \"placeholder\"\n\n\n{-| Defines which `option` will be selected on page load. -}\nselected : Bool -> Attribute msg\nselected =\n  boolProperty \"selected\"\n\n\n\n-- INPUT HELPERS\n\n\n{-| List of types the server accepts, typically a file type.\nFor `form` and `input`.\n-}\naccept : String -> Attribute msg\naccept =\n  stringProperty \"accept\"\n\n\n{-| List of supported charsets in a `form`.\n-}\nacceptCharset : String -> Attribute msg\nacceptCharset =\n  stringProperty \"acceptCharset\"\n\n\n{-| The URI of a program that processes the information submitted via a `form`.\n-}\naction : String -> Attribute msg\naction uri =\n  stringProperty \"action\" (Elm.Kernel.VirtualDom.noJavaScriptUri uri)\n\n\n{-| Indicates whether a `form` or an `input` can have their values automatically\ncompleted by the browser.\n-}\nautocomplete : Bool -> Attribute msg\nautocomplete bool =\n  stringProperty \"autocomplete\" (if bool then \"on\" else \"off\")\n\n\n{-| The element should be automatically focused after the page loaded.\nFor `button`, `input`, `select`, and `textarea`.\n-}\nautofocus : Bool -> Attribute msg\nautofocus =\n  boolProperty \"autofocus\"\n\n\n{-| Indicates whether the user can interact with a `button`, `fieldset`,\n`input`, `optgroup`, `option`, `select` or `textarea`.\n-}\ndisabled : Bool -> Attribute msg\ndisabled =\n  boolProperty \"disabled\"\n\n\n{-| How `form` data should be encoded when submitted with the POST method.\nOptions include: application/x-www-form-urlencoded, multipart/form-data, and\ntext/plain.\n-}\nenctype : String -> Attribute msg\nenctype =\n  stringProperty \"enctype\"\n\n\n{-| Associates an `input` with a `datalist` tag. The datalist gives some\npre-defined options to suggest to the user as they interact with an input.\nThe value of the list attribute must match the id of a `datalist` node.\nFor `input`.\n-}\nlist : String -> Attribute msg\nlist =\n  Elm.Kernel.VirtualDom.attribute \"list\"\n\n\n{-| Defines the minimum number of characters allowed in an `input` or\n`textarea`.\n-}\nminlength : Int -> Attribute msg\nminlength n =\n  Elm.Kernel.VirtualDom.attribute \"minLength\" (String.fromInt n)\n\n\n{-| Defines the maximum number of characters allowed in an `input` or\n`textarea`.\n-}\nmaxlength : Int -> Attribute msg\nmaxlength n =\n  Elm.Kernel.VirtualDom.attribute \"maxlength\" (String.fromInt n)\n\n\n{-| Defines which HTTP method to use when submitting a `form`. Can be GET\n(default) or POST.\n-}\nmethod : String -> Attribute msg\nmethod =\n  stringProperty \"method\"\n\n\n{-| Indicates whether multiple values can be entered in an `input` of type\nemail or file. Can also indicate that you can `select` many options.\n-}\nmultiple : Bool -> Attribute msg\nmultiple =\n  boolProperty \"multiple\"\n\n\n{-| Name of the element. For example used by the server to identify the fields\nin form submits. For `button`, `form`, `fieldset`, `iframe`, `input`,\n`object`, `output`, `select`, `textarea`, `map`, `meta`, and `param`.\n-}\nname : String -> Attribute msg\nname =\n  stringProperty \"name\"\n\n\n{-| This attribute indicates that a `form` shouldn\'t be validated when\nsubmitted.\n-}\nnovalidate : Bool -> Attribute msg\nnovalidate =\n  boolProperty \"noValidate\"\n\n\n{-| Defines a regular expression which an `input`\'s value will be validated\nagainst.\n-}\npattern : String -> Attribute msg\npattern =\n  stringProperty \"pattern\"\n\n\n{-| Indicates whether an `input` or `textarea` can be edited. -}\nreadonly : Bool -> Attribute msg\nreadonly =\n  boolProperty \"readOnly\"\n\n\n{-| Indicates whether this element is required to fill out or not.\nFor `input`, `select`, and `textarea`.\n-}\nrequired : Bool -> Attribute msg\nrequired =\n  boolProperty \"required\"\n\n\n{-| For `input` specifies the width of an input in characters.\n\nFor `select` specifies the number of visible options in a drop-down list.\n-}\nsize : Int -> Attribute msg\nsize n =\n  Elm.Kernel.VirtualDom.attribute \"size\" (String.fromInt n)\n\n\n{-| The element ID described by this `label` or the element IDs that are used\nfor an `output`.\n-}\nfor : String -> Attribute msg\nfor =\n  stringProperty \"htmlFor\"\n\n\n{-| Indicates the element ID of the `form` that owns this particular `button`,\n`fieldset`, `input`, `label`, `meter`, `object`, `output`, `progress`,\n`select`, or `textarea`.\n-}\nform : String -> Attribute msg\nform =\n  Elm.Kernel.VirtualDom.attribute \"form\"\n\n\n\n-- RANGES\n\n\n{-| Indicates the maximum value allowed. When using an input of type number or\ndate, the max value must be a number or date. For `input`, `meter`, and `progress`.\n-}\nmax : String -> Attribute msg\nmax =\n  stringProperty \"max\"\n\n\n{-| Indicates the minimum value allowed. When using an input of type number or\ndate, the min value must be a number or date. For `input` and `meter`.\n-}\nmin : String -> Attribute msg\nmin =\n  stringProperty \"min\"\n\n\n{-| Add a step size to an `input`. Use `step \"any\"` to allow any floating-point\nnumber to be used in the input.\n-}\nstep : String -> Attribute msg\nstep n =\n  stringProperty \"step\" n\n\n\n--------------------------\n\n\n{-| Defines the number of columns in a `textarea`. -}\ncols : Int -> Attribute msg\ncols n =\n  Elm.Kernel.VirtualDom.attribute \"cols\" (String.fromInt n)\n\n\n{-| Defines the number of rows in a `textarea`. -}\nrows : Int -> Attribute msg\nrows n =\n  Elm.Kernel.VirtualDom.attribute \"rows\" (String.fromInt n)\n\n\n{-| Indicates whether the text should be wrapped in a `textarea`. Possible\nvalues are \"hard\" and \"soft\".\n-}\nwrap : String -> Attribute msg\nwrap =\n  stringProperty \"wrap\"\n\n\n\n-- MAPS\n\n\n{-| When an `img` is a descendant of an `a` tag, the `ismap` attribute\nindicates that the click location should be added to the parent `a`\'s href as\na query string.\n-}\nismap : Bool -> Attribute msg\nismap =\n  boolProperty \"isMap\"\n\n\n{-| Specify the hash name reference of a `map` that should be used for an `img`\nor `object`. A hash name reference is a hash symbol followed by the element\'s name or id.\nE.g. `\"#planet-map\"`.\n-}\nusemap : String -> Attribute msg\nusemap =\n  stringProperty \"useMap\"\n\n\n{-| Declare the shape of the clickable area in an `a` or `area`. Valid values\ninclude: default, rect, circle, poly. This attribute can be paired with\n`coords` to create more particular shapes.\n-}\nshape : String -> Attribute msg\nshape =\n  stringProperty \"shape\"\n\n\n{-| A set of values specifying the coordinates of the hot-spot region in an\n`area`. Needs to be paired with a `shape` attribute to be meaningful.\n-}\ncoords : String -> Attribute msg\ncoords =\n  stringProperty \"coords\"\n\n\n\n-- REAL STUFF\n\n\n{-| Specifies the horizontal alignment of a `caption`, `col`, `colgroup`,\n`hr`, `iframe`, `img`, `table`, `tbody`,  `td`,  `tfoot`, `th`, `thead`, or\n`tr`.\n-}\nalign : String -> Attribute msg\nalign =\n  stringProperty \"align\"\n\n\n{-| Contains a URI which points to the source of the quote or change in a\n`blockquote`, `del`, `ins`, or `q`.\n-}\ncite : String -> Attribute msg\ncite =\n  stringProperty \"cite\"\n\n\n\n\n-- LINKS AND AREAS\n\n\n{-| The URL of a linked resource, such as `a`, `area`, `base`, or `link`. -}\nhref : String -> Attribute msg\nhref url =\n  stringProperty \"href\" (Elm.Kernel.VirtualDom.noJavaScriptUri url)\n\n\n{-| Specify where the results of clicking an `a`, `area`, `base`, or `form`\nshould appear. Possible special values include:\n\n  * _blank &mdash; a new window or tab\n  * _self &mdash; the same frame (this is default)\n  * _parent &mdash; the parent frame\n  * _top &mdash; the full body of the window\n\nYou can also give the name of any `frame` you have created.\n-}\ntarget : String -> Attribute msg\ntarget =\n  stringProperty \"target\"\n\n\n{-| Indicates that clicking an `a` and `area` will download the resource\ndirectly. The `String` argument determins the name of the downloaded file.\nSay the file you are serving is named `hats.json`.\n\n    download \"\"               -- hats.json\n    download \"my-hats.json\"   -- my-hats.json\n    download \"snakes.json\"    -- snakes.json\n\nThe empty `String` says to just name it whatever it was called on the server.\n-}\ndownload : String -> Attribute msg\ndownload fileName =\n  stringProperty \"download\" fileName\n\n\n{-| Indicates that clicking an `a` and `area` will download the resource\ndirectly, and that the downloaded resource with have the given filename.\nSo `downloadAs \"hats.json\"` means the person gets a file named `hats.json`.\n-}\ndownloadAs : String -> Attribute msg\ndownloadAs =\n  stringProperty \"download\"\n\n\n{-| Two-letter language code of the linked resource of an `a`, `area`, or `link`.\n-}\nhreflang : String -> Attribute msg\nhreflang =\n  stringProperty \"hreflang\"\n\n\n{-| Specifies a hint of the target media of a `a`, `area`, `link`, `source`,\nor `style`.\n-}\nmedia : String -> Attribute msg\nmedia =\n  Elm.Kernel.VirtualDom.attribute \"media\"\n\n\n{-| Specify a URL to send a short POST request to when the user clicks on an\n`a` or `area`. Useful for monitoring and tracking.\n-}\nping : String -> Attribute msg\nping =\n  stringProperty \"ping\"\n\n\n{-| Specifies the relationship of the target object to the link object.\nFor `a`, `area`, `link`.\n-}\nrel : String -> Attribute msg\nrel =\n  Elm.Kernel.VirtualDom.attribute \"rel\"\n\n\n\n-- CRAZY STUFF\n\n\n{-| Indicates the date and time associated with the element.\nFor `del`, `ins`, `time`.\n-}\ndatetime : String -> Attribute msg\ndatetime =\n  Elm.Kernel.VirtualDom.attribute \"datetime\"\n\n\n{-| Indicates whether this date and time is the date of the nearest `article`\nancestor element. For `time`.\n-}\npubdate : String -> Attribute msg\npubdate =\n  Elm.Kernel.VirtualDom.attribute \"pubdate\"\n\n\n\n-- ORDERED LISTS\n\n\n{-| Indicates whether an ordered list `ol` should be displayed in a descending\norder instead of a ascending.\n-}\nreversed : Bool -> Attribute msg\nreversed =\n  boolProperty \"reversed\"\n\n\n{-| Defines the first number of an ordered list if you want it to be something\nbesides 1.\n-}\nstart : Int -> Attribute msg\nstart n =\n  stringProperty \"start\" (String.fromInt n)\n\n\n\n-- TABLES\n\n\n{-| The colspan attribute defines the number of columns a cell should span.\nFor `td` and `th`.\n-}\ncolspan : Int -> Attribute msg\ncolspan n =\n  Elm.Kernel.VirtualDom.attribute \"colspan\" (String.fromInt n)\n\n\n{-| A space separated list of element IDs indicating which `th` elements are\nheaders for this cell. For `td` and `th`.\n-}\nheaders : String -> Attribute msg\nheaders =\n  stringProperty \"headers\"\n\n\n{-| Defines the number of rows a table cell should span over.\nFor `td` and `th`.\n-}\nrowspan : Int -> Attribute msg\nrowspan n =\n  Elm.Kernel.VirtualDom.attribute \"rowspan\" (String.fromInt n)\n\n\n{-| Specifies the scope of a header cell `th`. Possible values are: col, row,\ncolgroup, rowgroup.\n-}\nscope : String -> Attribute msg\nscope =\n  stringProperty \"scope\"\n\n\n{-| Specifies the URL of the cache manifest for an `html` tag. -}\nmanifest : String -> Attribute msg\nmanifest =\n  Elm.Kernel.VirtualDom.attribute \"manifest\"\n\n\n{-- TODO: maybe reintroduce once there\'s a better way to disambiguate imports\n{-| The number of columns a `col` or `colgroup` should span. -}\nspan : Int -> Attribute msg\nspan n =\n    stringProperty \"span\" (String.fromInt n)\n--}\n'})),
						_Utils_Tuple2(
						'Events.elm',
						$author$project$CompilationInterface$SourceFiles$Generated_SourceFiles$BlobNode(
							{utf8: 'module Html.Events exposing\n  ( onClick, onDoubleClick\n  , onMouseDown, onMouseUp\n  , onMouseEnter, onMouseLeave\n  , onMouseOver, onMouseOut\n  , onInput, onCheck, onSubmit\n  , onBlur, onFocus\n  , on, stopPropagationOn, preventDefaultOn, custom\n  , targetValue, targetChecked, keyCode\n  )\n\n{-|\nIt is often helpful to create an [Custom Type][] so you can have many different kinds\nof events as seen in the [TodoMVC][] example.\n\n[Custom Type]: https://guide.elm-lang.org/types/custom_types.html\n[TodoMVC]: https://github.com/evancz/elm-todomvc/blob/master/Todo.elm\n\n# Mouse\n@docs onClick, onDoubleClick,\n      onMouseDown, onMouseUp,\n      onMouseEnter, onMouseLeave,\n      onMouseOver, onMouseOut\n\n# Forms\n@docs onInput, onCheck, onSubmit\n\n# Focus\n@docs onBlur, onFocus\n\n# Custom\n@docs on, stopPropagationOn, preventDefaultOn, custom\n\n## Custom Decoders\n@docs targetValue, targetChecked, keyCode\n-}\n\nimport Html exposing (Attribute)\nimport Json.Decode as Json\nimport VirtualDom\n\n\n\n-- MOUSE EVENTS\n\n\n{-|-}\nonClick : msg -> Attribute msg\nonClick msg =\n  on \"click\" (Json.succeed msg)\n\n\n{-|-}\nonDoubleClick : msg -> Attribute msg\nonDoubleClick msg =\n  on \"dblclick\" (Json.succeed msg)\n\n\n{-|-}\nonMouseDown : msg -> Attribute msg\nonMouseDown msg =\n  on \"mousedown\" (Json.succeed msg)\n\n\n{-|-}\nonMouseUp : msg -> Attribute msg\nonMouseUp msg =\n  on \"mouseup\" (Json.succeed msg)\n\n\n{-|-}\nonMouseEnter : msg -> Attribute msg\nonMouseEnter msg =\n  on \"mouseenter\" (Json.succeed msg)\n\n\n{-|-}\nonMouseLeave : msg -> Attribute msg\nonMouseLeave msg =\n  on \"mouseleave\" (Json.succeed msg)\n\n\n{-|-}\nonMouseOver : msg -> Attribute msg\nonMouseOver msg =\n  on \"mouseover\" (Json.succeed msg)\n\n\n{-|-}\nonMouseOut : msg -> Attribute msg\nonMouseOut msg =\n  on \"mouseout\" (Json.succeed msg)\n\n\n\n-- FORM EVENTS\n\n\n{-| Detect [input](https://developer.mozilla.org/en-US/docs/Web/Events/input)\nevents for things like text fields or text areas.\n\nFor more details on how `onInput` works, check out [`targetValue`](#targetValue).\n\n**Note 1:** It grabs the **string** value at `event.target.value`, so it will\nnot work if you need some other information. For example, if you want to track\ninputs on a range slider, make a custom handler with [`on`](#on).\n\n**Note 2:** It uses `stopPropagationOn` internally to always stop propagation\nof the event. This is important for complicated reasons explained [here][1] and\n[here][2].\n\n[1]: /packages/elm/virtual-dom/latest/VirtualDom#Handler\n[2]: https://github.com/elm/virtual-dom/issues/125\n-}\nonInput : (String -> msg) -> Attribute msg\nonInput tagger =\n  stopPropagationOn \"input\" (Json.map alwaysStop (Json.map tagger targetValue))\n\n\nalwaysStop : a -> (a, Bool)\nalwaysStop x =\n  (x, True)\n\n\n{-| Detect [change](https://developer.mozilla.org/en-US/docs/Web/Events/change)\nevents on checkboxes. It will grab the boolean value from `event.target.checked`\non any input event.\n\nCheck out [`targetChecked`](#targetChecked) for more details on how this works.\n-}\nonCheck : (Bool -> msg) -> Attribute msg\nonCheck tagger =\n  on \"change\" (Json.map tagger targetChecked)\n\n\n{-| Detect a [submit](https://developer.mozilla.org/en-US/docs/Web/Events/submit)\nevent with [`preventDefault`](https://developer.mozilla.org/en-US/docs/Web/API/Event/preventDefault)\nin order to prevent the form from changing the page’s location. If you need\ndifferent behavior, create a custom event handler.\n-}\nonSubmit : msg -> Attribute msg\nonSubmit msg =\n  preventDefaultOn \"submit\" (Json.map alwaysPreventDefault (Json.succeed msg))\n\n\nalwaysPreventDefault : msg -> ( msg, Bool )\nalwaysPreventDefault msg =\n  ( msg, True )\n\n\n\n-- FOCUS EVENTS\n\n\n{-|-}\nonBlur : msg -> Attribute msg\nonBlur msg =\n  on \"blur\" (Json.succeed msg)\n\n\n{-|-}\nonFocus : msg -> Attribute msg\nonFocus msg =\n  on \"focus\" (Json.succeed msg)\n\n\n\n-- CUSTOM EVENTS\n\n\n{-| Create a custom event listener. Normally this will not be necessary, but\nyou have the power! Here is how `onClick` is defined for example:\n\n    import Json.Decode as Decode\n\n    onClick : msg -> Attribute msg\n    onClick message =\n      on \"click\" (Decode.succeed message)\n\nThe first argument is the event name in the same format as with JavaScript\'s\n[`addEventListener`][aEL] function.\n\nThe second argument is a JSON decoder. Read more about these [here][decoder].\nWhen an event occurs, the decoder tries to turn the event object into an Elm\nvalue. If successful, the value is routed to your `update` function. In the\ncase of `onClick` we always just succeed with the given `message`.\n\nIf this is confusing, work through the [Elm Architecture Tutorial][tutorial].\nIt really helps!\n\n[aEL]: https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n[decoder]: /packages/elm/json/latest/Json-Decode\n[tutorial]: https://github.com/evancz/elm-architecture-tutorial/\n\n**Note:** This creates a [passive][] event listener, enabling optimizations for\ntouch, scroll, and wheel events in some browsers.\n\n[passive]: https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n-}\non : String -> Json.Decoder msg -> Attribute msg\non event decoder =\n  VirtualDom.on event (VirtualDom.Normal decoder)\n\n\n{-| Create an event listener that may [`stopPropagation`][stop]. Your decoder\nmust produce a message and a `Bool` that decides if `stopPropagation` should\nbe called.\n\n[stop]: https://developer.mozilla.org/en-US/docs/Web/API/Event/stopPropagation\n\n**Note:** This creates a [passive][] event listener, enabling optimizations for\ntouch, scroll, and wheel events in some browsers.\n\n[passive]: https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n-}\nstopPropagationOn : String -> Json.Decoder (msg, Bool) -> Attribute msg\nstopPropagationOn event decoder =\n  VirtualDom.on event (VirtualDom.MayStopPropagation decoder)\n\n\n{-| Create an event listener that may [`preventDefault`][prevent]. Your decoder\nmust produce a message and a `Bool` that decides if `preventDefault` should\nbe called.\n\nFor example, the `onSubmit` function in this library *always* prevents the\ndefault behavior:\n\n[prevent]: https://developer.mozilla.org/en-US/docs/Web/API/Event/preventDefault\n\n    onSubmit : msg -> Attribute msg\n    onSubmit msg =\n      preventDefaultOn \"submit\" (Json.map alwaysPreventDefault (Json.succeed msg))\n\n    alwaysPreventDefault : msg -> ( msg, Bool )\n    alwaysPreventDefault msg =\n      ( msg, True )\n-}\npreventDefaultOn : String -> Json.Decoder (msg, Bool) -> Attribute msg\npreventDefaultOn event decoder =\n  VirtualDom.on event (VirtualDom.MayPreventDefault decoder)\n\n\n{-| Create an event listener that may [`stopPropagation`][stop] or\n[`preventDefault`][prevent].\n\n[stop]: https://developer.mozilla.org/en-US/docs/Web/API/Event/stopPropagation\n[prevent]: https://developer.mozilla.org/en-US/docs/Web/API/Event/preventDefault\n[handler]: https://package.elm-lang.org/packages/elm/virtual-dom/latest/VirtualDom#Handler\n\n**Note:** Check out the lower-level event API in `elm/virtual-dom` for more\ninformation on exactly how events work, especially the [`Handler`][handler]\ndocs.\n-}\ncustom : String -> Json.Decoder { message : msg, stopPropagation : Bool, preventDefault : Bool } -> Attribute msg\ncustom event decoder =\n  VirtualDom.on event (VirtualDom.Custom decoder)\n\n\n\n-- COMMON DECODERS\n\n\n{-| A `Json.Decoder` for grabbing `event.target.value`. We use this to define\n`onInput` as follows:\n\n    import Json.Decode as Json\n\n    onInput : (String -> msg) -> Attribute msg\n    onInput tagger =\n      stopPropagationOn \"input\" <|\n        Json.map alwaysStop (Json.map tagger targetValue)\n\n    alwaysStop : a -> (a, Bool)\n    alwaysStop x =\n      (x, True)\n\nYou probably will never need this, but hopefully it gives some insights into\nhow to make custom event handlers.\n-}\ntargetValue : Json.Decoder String\ntargetValue =\n  Json.at [\"target\", \"value\"] Json.string\n\n\n{-| A `Json.Decoder` for grabbing `event.target.checked`. We use this to define\n`onCheck` as follows:\n\n    import Json.Decode as Json\n\n    onCheck : (Bool -> msg) -> Attribute msg\n    onCheck tagger =\n      on \"input\" (Json.map tagger targetChecked)\n-}\ntargetChecked : Json.Decoder Bool\ntargetChecked =\n  Json.at [\"target\", \"checked\"] Json.bool\n\n\n{-| A `Json.Decoder` for grabbing `event.keyCode`. This helps you define\nkeyboard listeners like this:\n\n    import Json.Decode as Json\n\n    onKeyUp : (Int -> msg) -> Attribute msg\n    onKeyUp tagger =\n      on \"keyup\" (Json.map tagger keyCode)\n\n**Note:** It looks like the spec is moving away from `event.keyCode` and\ntowards `event.key`. Once this is supported in more browsers, we may add\nhelpers here for `onKeyUp`, `onKeyDown`, `onKeyPress`, etc.\n-}\nkeyCode : Json.Decoder Int\nkeyCode =\n  Json.field \"keyCode\" Json.int\n'})),
						_Utils_Tuple2(
						'Keyed.elm',
						$author$project$CompilationInterface$SourceFiles$Generated_SourceFiles$BlobNode(
							{utf8: 'module Html.Keyed exposing\n  ( node\n  , ol\n  , ul\n  )\n{-| A keyed node helps optimize cases where children are getting added, moved,\nremoved, etc. Common examples include:\n\n  - The user can delete items from a list.\n  - The user can create new items in a list.\n  - You can sort a list based on name or date or whatever.\n\nWhen you use a keyed node, every child is paired with a string identifier. This\nmakes it possible for the underlying diffing algorithm to reuse nodes more\nefficiently.\n\n# Keyed Nodes\n@docs node\n\n# Commonly Keyed Nodes\n@docs ol, ul\n-}\n\n\nimport Html exposing (Attribute, Html)\nimport VirtualDom\n\n\n{-| Works just like `Html.node`, but you add a unique identifier to each child\nnode. You want this when you have a list of nodes that is changing: adding\nnodes, removing nodes, etc. In these cases, the unique identifiers help make\nthe DOM modifications more efficient.\n-}\nnode : String -> List (Attribute msg) -> List ( String, Html msg ) -> Html msg\nnode =\n  VirtualDom.keyedNode\n\n\n{-|-}\nol : List (Attribute msg) -> List ( String, Html msg ) -> Html msg\nol =\n  node \"ol\"\n\n\n{-|-}\nul : List (Attribute msg) -> List ( String, Html msg ) -> Html msg\nul =\n  node \"ul\"\n'})),
						_Utils_Tuple2(
						'Lazy.elm',
						$author$project$CompilationInterface$SourceFiles$Generated_SourceFiles$BlobNode(
							{utf8: 'module Html.Lazy exposing\n  ( lazy, lazy2, lazy3, lazy4, lazy5, lazy6, lazy7, lazy8\n  )\n\n{-| Since all Elm functions are pure we have a guarantee that the same input\nwill always result in the same output. This module gives us tools to be lazy\nabout building `Html` that utilize this fact.\n\nRather than immediately applying functions to their arguments, the `lazy`\nfunctions just bundle the function and arguments up for later. When diffing\nthe old and new virtual DOM, it checks to see if all the arguments are equal\nby reference. If so, it skips calling the function!\n\nThis is a really cheap test and often makes things a lot faster, but definitely\nbenchmark to be sure!\n\n@docs lazy, lazy2, lazy3, lazy4, lazy5, lazy6, lazy7, lazy8\n\n-}\n\nimport Html exposing (Html)\nimport VirtualDom\n\n\n{-| A performance optimization that delays the building of virtual DOM nodes.\n\nCalling `(view model)` will definitely build some virtual DOM, perhaps a lot of\nit. Calling `(lazy view model)` delays the call until later. During diffing, we\ncan check to see if `model` is referentially equal to the previous value used,\nand if so, we just stop. No need to build up the tree structure and diff it,\nwe know if the input to `view` is the same, the output must be the same!\n-}\nlazy : (a -> Html msg) -> a -> Html msg\nlazy =\n  VirtualDom.lazy\n\n\n{-| Same as `lazy` but checks on two arguments.\n-}\nlazy2 : (a -> b -> Html msg) -> a -> b -> Html msg\nlazy2 =\n  VirtualDom.lazy2\n\n\n{-| Same as `lazy` but checks on three arguments.\n-}\nlazy3 : (a -> b -> c -> Html msg) -> a -> b -> c -> Html msg\nlazy3 =\n  VirtualDom.lazy3\n\n\n{-| Same as `lazy` but checks on four arguments.\n-}\nlazy4 : (a -> b -> c -> d -> Html msg) -> a -> b -> c -> d -> Html msg\nlazy4 =\n  VirtualDom.lazy4\n\n\n{-| Same as `lazy` but checks on five arguments.\n-}\nlazy5 : (a -> b -> c -> d -> e -> Html msg) -> a -> b -> c -> d -> e -> Html msg\nlazy5 =\n  VirtualDom.lazy5\n\n\n{-| Same as `lazy` but checks on six arguments.\n-}\nlazy6 : (a -> b -> c -> d -> e -> f -> Html msg) -> a -> b -> c -> d -> e -> f -> Html msg\nlazy6 =\n  VirtualDom.lazy6\n\n\n{-| Same as `lazy` but checks on seven arguments.\n-}\nlazy7 : (a -> b -> c -> d -> e -> f -> g -> Html msg) -> a -> b -> c -> d -> e -> f -> g -> Html msg\nlazy7 =\n  VirtualDom.lazy7\n\n\n{-| Same as `lazy` but checks on eight arguments.\n-}\nlazy8 : (a -> b -> c -> d -> e -> f -> g -> h -> Html msg) -> a -> b -> c -> d -> e -> f -> g -> h -> Html msg\nlazy8 =\n  VirtualDom.lazy8\n'}))
					]))),
			_Utils_Tuple2(
			'Html.elm',
			$author$project$CompilationInterface$SourceFiles$Generated_SourceFiles$BlobNode(
				{utf8: 'module Html exposing\n  ( Html, Attribute\n  , text, node, map\n  , h1, h2, h3, h4, h5, h6\n  , div, p, hr, pre, blockquote\n  , span, a, code, em, strong, i, b, u, sub, sup, br\n  , ol, ul, li, dl, dt, dd\n  , img, iframe, canvas, math\n  , form, input, textarea, button, select, option\n  , section, nav, article, aside, header, footer, address, main_\n  , figure, figcaption\n  , table, caption, colgroup, col, tbody, thead, tfoot, tr, td, th\n  , fieldset, legend, label, datalist, optgroup, output, progress, meter\n  , audio, video, source, track\n  , embed, object, param\n  , ins, del\n  , small, cite, dfn, abbr, time, var, samp, kbd, s, q\n  , mark, ruby, rt, rp, bdi, bdo, wbr\n  , details, summary, menuitem, menu\n  )\n\n{-| This file is organized roughly in order of popularity. The tags which you\'d\nexpect to use frequently will be closer to the top.\n\n# Primitives\n@docs Html, Attribute, text, node, map\n\n# Tags\n\n## Headers\n@docs h1, h2, h3, h4, h5, h6\n\n## Grouping Content\n@docs div, p, hr, pre, blockquote\n\n## Text\n@docs span, a, code, em, strong, i, b, u, sub, sup, br\n\n## Lists\n@docs ol, ul, li, dl, dt, dd\n\n## Embedded Content\n@docs img, iframe, canvas, math\n\n## Inputs\n@docs form, input, textarea, button, select, option\n\n## Sections\n@docs section, nav, article, aside, header, footer, address, main_\n\n## Figures\n@docs figure, figcaption\n\n## Tables\n@docs table, caption, colgroup, col, tbody, thead, tfoot, tr, td, th\n\n\n## Less Common Elements\n\n### Less Common Inputs\n@docs fieldset, legend, label, datalist, optgroup, output, progress, meter\n\n### Audio and Video\n@docs audio, video, source, track\n\n### Embedded Objects\n@docs embed, object, param\n\n### Text Edits\n@docs ins, del\n\n### Semantic Text\n@docs small, cite, dfn, abbr, time, var, samp, kbd, s, q\n\n### Less Common Text Tags\n@docs mark, ruby, rt, rp, bdi, bdo, wbr\n\n## Interactive Elements\n@docs details, summary, menuitem, menu\n\n-}\n\n\nimport Elm.Kernel.VirtualDom\nimport VirtualDom\n\n\n\n-- CORE TYPES\n\n\n{-| The core building block used to build up HTML. Here we create an `Html`\nvalue with no attributes and one child:\n\n    hello : Html msg\n    hello =\n      div [] [ text \"Hello!\" ]\n-}\ntype alias Html msg = VirtualDom.Node msg\n\n\n{-| Set attributes on your `Html`. Learn more in the\n[`Html.Attributes`](Html-Attributes) module.\n-}\ntype alias Attribute msg = VirtualDom.Attribute msg\n\n\n\n-- PRIMITIVES\n\n\n{-| General way to create HTML nodes. It is used to define all of the helper\nfunctions in this library.\n\n    div : List (Attribute msg) -> List (Html msg) -> Html msg\n    div attributes children =\n        node \"div\" attributes children\n\nYou can use this to create custom nodes if you need to create something that\nis not covered by the helper functions in this library.\n-}\nnode : String -> List (Attribute msg) -> List (Html msg) -> Html msg\nnode =\n  VirtualDom.node\n\n\n{-| Just put plain text in the DOM. It will escape the string so that it appears\nexactly as you specify.\n\n    text \"Hello World!\"\n-}\ntext : String -> Html msg\ntext =\n  VirtualDom.text\n\n\n\n-- NESTING VIEWS\n\n\n{-| Transform the messages produced by some `Html`. In the following example,\nwe have `viewButton` that produces `()` messages, and we transform those values\ninto `Msg` values in `view`.\n\n    type Msg = Left | Right\n\n    view : model -> Html Msg\n    view model =\n      div []\n        [ map (\\_ -> Left) (viewButton \"Left\")\n        , map (\\_ -> Right) (viewButton \"Right\")\n        ]\n\n    viewButton : String -> Html ()\n    viewButton name =\n      button [ onClick () ] [ text name ]\n\nIf you are growing your project as recommended in [the official\nguide](https://guide.elm-lang.org/), this should not come in handy in most\nprojects. Usually it is easier to just pass things in as arguments.\n\n**Note:** Some folks have tried to use this to make “components” in their\nprojects, but they run into the fact that components are objects. Both are\nlocal mutable state with methods. Elm is not an object-oriented language, so\nyou run into all sorts of friction if you try to use it like one. I definitely\nrecommend against going down that path! Instead, make the simplest function\npossible and repeat.\n-}\nmap : (a -> msg) -> Html a -> Html msg\nmap =\n  VirtualDom.map\n\n\n\n-- SECTIONS\n\n\n{-| Defines a section in a document.\n-}\nsection : List (Attribute msg) -> List (Html msg) -> Html msg\nsection =\n  Elm.Kernel.VirtualDom.node \"section\"\n\n\n{-| Defines a section that contains only navigation links.\n-}\nnav : List (Attribute msg) -> List (Html msg) -> Html msg\nnav =\n  Elm.Kernel.VirtualDom.node \"nav\"\n\n\n{-| Defines self-contained content that could exist independently of the rest\nof the content.\n-}\narticle : List (Attribute msg) -> List (Html msg) -> Html msg\narticle =\n  Elm.Kernel.VirtualDom.node \"article\"\n\n\n{-| Defines some content loosely related to the page content. If it is removed,\nthe remaining content still makes sense.\n-}\naside : List (Attribute msg) -> List (Html msg) -> Html msg\naside =\n  Elm.Kernel.VirtualDom.node \"aside\"\n\n\n{-|-}\nh1 : List (Attribute msg) -> List (Html msg) -> Html msg\nh1 =\n  Elm.Kernel.VirtualDom.node \"h1\"\n\n\n{-|-}\nh2 : List (Attribute msg) -> List (Html msg) -> Html msg\nh2 =\n  Elm.Kernel.VirtualDom.node \"h2\"\n\n\n{-|-}\nh3 : List (Attribute msg) -> List (Html msg) -> Html msg\nh3 =\n  Elm.Kernel.VirtualDom.node \"h3\"\n\n\n{-|-}\nh4 : List (Attribute msg) -> List (Html msg) -> Html msg\nh4 =\n  Elm.Kernel.VirtualDom.node \"h4\"\n\n\n{-|-}\nh5 : List (Attribute msg) -> List (Html msg) -> Html msg\nh5 =\n  Elm.Kernel.VirtualDom.node \"h5\"\n\n\n{-|-}\nh6 : List (Attribute msg) -> List (Html msg) -> Html msg\nh6 =\n  Elm.Kernel.VirtualDom.node \"h6\"\n\n\n{-| Defines the header of a page or section. It often contains a logo, the\ntitle of the web site, and a navigational table of content.\n-}\nheader : List (Attribute msg) -> List (Html msg) -> Html msg\nheader =\n  Elm.Kernel.VirtualDom.node \"header\"\n\n\n{-| Defines the footer for a page or section. It often contains a copyright\nnotice, some links to legal information, or addresses to give feedback.\n-}\nfooter : List (Attribute msg) -> List (Html msg) -> Html msg\nfooter =\n  Elm.Kernel.VirtualDom.node \"footer\"\n\n\n{-| Defines a section containing contact information. -}\naddress : List (Attribute msg) -> List (Html msg) -> Html msg\naddress =\n  Elm.Kernel.VirtualDom.node \"address\"\n\n\n{-| Defines the main or important content in the document. There is only one\n`main` element in the document.\n-}\nmain_ : List (Attribute msg) -> List (Html msg) -> Html msg\nmain_ =\n  Elm.Kernel.VirtualDom.node \"main\"\n\n\n-- GROUPING CONTENT\n\n{-| Defines a portion that should be displayed as a paragraph. -}\np : List (Attribute msg) -> List (Html msg) -> Html msg\np =\n  Elm.Kernel.VirtualDom.node \"p\"\n\n\n{-| Represents a thematic break between paragraphs of a section or article or\nany longer content.\n-}\nhr : List (Attribute msg) -> List (Html msg) -> Html msg\nhr =\n  Elm.Kernel.VirtualDom.node \"hr\"\n\n\n{-| Indicates that its content is preformatted and that this format must be\npreserved.\n-}\npre : List (Attribute msg) -> List (Html msg) -> Html msg\npre =\n  Elm.Kernel.VirtualDom.node \"pre\"\n\n\n{-| Represents a content that is quoted from another source. -}\nblockquote : List (Attribute msg) -> List (Html msg) -> Html msg\nblockquote =\n  Elm.Kernel.VirtualDom.node \"blockquote\"\n\n\n{-| Defines an ordered list of items. -}\nol : List (Attribute msg) -> List (Html msg) -> Html msg\nol =\n  Elm.Kernel.VirtualDom.node \"ol\"\n\n\n{-| Defines an unordered list of items. -}\nul : List (Attribute msg) -> List (Html msg) -> Html msg\nul =\n  Elm.Kernel.VirtualDom.node \"ul\"\n\n\n{-| Defines a item of an enumeration list. -}\nli : List (Attribute msg) -> List (Html msg) -> Html msg\nli =\n  Elm.Kernel.VirtualDom.node \"li\"\n\n\n{-| Defines a definition list, that is, a list of terms and their associated\ndefinitions.\n-}\ndl : List (Attribute msg) -> List (Html msg) -> Html msg\ndl =\n  Elm.Kernel.VirtualDom.node \"dl\"\n\n\n{-| Represents a term defined by the next `dd`. -}\ndt : List (Attribute msg) -> List (Html msg) -> Html msg\ndt =\n  Elm.Kernel.VirtualDom.node \"dt\"\n\n\n{-| Represents the definition of the terms immediately listed before it. -}\ndd : List (Attribute msg) -> List (Html msg) -> Html msg\ndd =\n  Elm.Kernel.VirtualDom.node \"dd\"\n\n\n{-| Represents a figure illustrated as part of the document. -}\nfigure : List (Attribute msg) -> List (Html msg) -> Html msg\nfigure =\n  Elm.Kernel.VirtualDom.node \"figure\"\n\n\n{-| Represents the legend of a figure. -}\nfigcaption : List (Attribute msg) -> List (Html msg) -> Html msg\nfigcaption =\n  Elm.Kernel.VirtualDom.node \"figcaption\"\n\n\n{-| Represents a generic container with no special meaning. -}\ndiv : List (Attribute msg) -> List (Html msg) -> Html msg\ndiv =\n  Elm.Kernel.VirtualDom.node \"div\"\n\n\n-- TEXT LEVEL SEMANTIC\n\n{-| Represents a hyperlink, linking to another resource. -}\na : List (Attribute msg) -> List (Html msg) -> Html msg\na =\n  Elm.Kernel.VirtualDom.node \"a\"\n\n\n{-| Represents emphasized text, like a stress accent. -}\nem : List (Attribute msg) -> List (Html msg) -> Html msg\nem =\n  Elm.Kernel.VirtualDom.node \"em\"\n\n\n{-| Represents especially important text. -}\nstrong : List (Attribute msg) -> List (Html msg) -> Html msg\nstrong =\n  Elm.Kernel.VirtualDom.node \"strong\"\n\n\n{-| Represents a side comment, that is, text like a disclaimer or a\ncopyright, which is not essential to the comprehension of the document.\n-}\nsmall : List (Attribute msg) -> List (Html msg) -> Html msg\nsmall =\n  Elm.Kernel.VirtualDom.node \"small\"\n\n\n{-| Represents content that is no longer accurate or relevant. -}\ns : List (Attribute msg) -> List (Html msg) -> Html msg\ns =\n  Elm.Kernel.VirtualDom.node \"s\"\n\n\n{-| Represents the title of a work. -}\ncite : List (Attribute msg) -> List (Html msg) -> Html msg\ncite =\n  Elm.Kernel.VirtualDom.node \"cite\"\n\n\n{-| Represents an inline quotation. -}\nq : List (Attribute msg) -> List (Html msg) -> Html msg\nq =\n  Elm.Kernel.VirtualDom.node \"q\"\n\n\n{-| Represents a term whose definition is contained in its nearest ancestor\ncontent.\n-}\ndfn : List (Attribute msg) -> List (Html msg) -> Html msg\ndfn =\n  Elm.Kernel.VirtualDom.node \"dfn\"\n\n\n{-| Represents an abbreviation or an acronym; the expansion of the\nabbreviation can be represented in the title attribute.\n-}\nabbr : List (Attribute msg) -> List (Html msg) -> Html msg\nabbr =\n  Elm.Kernel.VirtualDom.node \"abbr\"\n\n\n{-| Represents a date and time value; the machine-readable equivalent can be\nrepresented in the datetime attribute.\n-}\ntime : List (Attribute msg) -> List (Html msg) -> Html msg\ntime =\n  Elm.Kernel.VirtualDom.node \"time\"\n\n\n{-| Represents computer code. -}\ncode : List (Attribute msg) -> List (Html msg) -> Html msg\ncode =\n  Elm.Kernel.VirtualDom.node \"code\"\n\n\n{-| Represents a variable. Specific cases where it should be used include an\nactual mathematical expression or programming context, an identifier\nrepresenting a constant, a symbol identifying a physical quantity, a function\nparameter, or a mere placeholder in prose.\n-}\nvar : List (Attribute msg) -> List (Html msg) -> Html msg\nvar =\n  Elm.Kernel.VirtualDom.node \"var\"\n\n\n{-| Represents the output of a program or a computer. -}\nsamp : List (Attribute msg) -> List (Html msg) -> Html msg\nsamp =\n  Elm.Kernel.VirtualDom.node \"samp\"\n\n\n{-| Represents user input, often from the keyboard, but not necessarily; it\nmay represent other input, like transcribed voice commands.\n-}\nkbd : List (Attribute msg) -> List (Html msg) -> Html msg\nkbd =\n  Elm.Kernel.VirtualDom.node \"kbd\"\n\n\n{-| Represent a subscript. -}\nsub : List (Attribute msg) -> List (Html msg) -> Html msg\nsub =\n  Elm.Kernel.VirtualDom.node \"sub\"\n\n\n{-| Represent a superscript. -}\nsup : List (Attribute msg) -> List (Html msg) -> Html msg\nsup =\n  Elm.Kernel.VirtualDom.node \"sup\"\n\n\n{-| Represents some text in an alternate voice or mood, or at least of\ndifferent quality, such as a taxonomic designation, a technical term, an\nidiomatic phrase, a thought, or a ship name.\n-}\ni : List (Attribute msg) -> List (Html msg) -> Html msg\ni =\n  Elm.Kernel.VirtualDom.node \"i\"\n\n\n{-| Represents a text which to which attention is drawn for utilitarian\npurposes. It doesn\'t convey extra importance and doesn\'t imply an alternate\nvoice.\n-}\nb : List (Attribute msg) -> List (Html msg) -> Html msg\nb =\n  Elm.Kernel.VirtualDom.node \"b\"\n\n\n{-| Represents a non-textual annotation for which the conventional\npresentation is underlining, such labeling the text as being misspelt or\nlabeling a proper name in Chinese text.\n-}\nu : List (Attribute msg) -> List (Html msg) -> Html msg\nu =\n  Elm.Kernel.VirtualDom.node \"u\"\n\n\n{-| Represents text highlighted for reference purposes, that is for its\nrelevance in another context.\n-}\nmark : List (Attribute msg) -> List (Html msg) -> Html msg\nmark =\n  Elm.Kernel.VirtualDom.node \"mark\"\n\n\n{-| Represents content to be marked with ruby annotations, short runs of text\npresented alongside the text. This is often used in conjunction with East Asian\nlanguage where the annotations act as a guide for pronunciation, like the\nJapanese furigana.\n-}\nruby : List (Attribute msg) -> List (Html msg) -> Html msg\nruby =\n  Elm.Kernel.VirtualDom.node \"ruby\"\n\n\n{-| Represents the text of a ruby annotation. -}\nrt : List (Attribute msg) -> List (Html msg) -> Html msg\nrt =\n  Elm.Kernel.VirtualDom.node \"rt\"\n\n\n{-| Represents parenthesis around a ruby annotation, used to display the\nannotation in an alternate way by browsers not supporting the standard display\nfor annotations.\n-}\nrp : List (Attribute msg) -> List (Html msg) -> Html msg\nrp =\n  Elm.Kernel.VirtualDom.node \"rp\"\n\n\n{-| Represents text that must be isolated from its surrounding for\nbidirectional text formatting. It allows embedding a span of text with a\ndifferent, or unknown, directionality.\n-}\nbdi : List (Attribute msg) -> List (Html msg) -> Html msg\nbdi =\n  Elm.Kernel.VirtualDom.node \"bdi\"\n\n\n{-| Represents the directionality of its children, in order to explicitly\noverride the Unicode bidirectional algorithm.\n-}\nbdo : List (Attribute msg) -> List (Html msg) -> Html msg\nbdo =\n  Elm.Kernel.VirtualDom.node \"bdo\"\n\n\n{-| Represents text with no specific meaning. This has to be used when no other\ntext-semantic element conveys an adequate meaning, which, in this case, is\noften brought by global attributes like `class`, `lang`, or `dir`.\n-}\nspan : List (Attribute msg) -> List (Html msg) -> Html msg\nspan =\n  Elm.Kernel.VirtualDom.node \"span\"\n\n\n{-| Represents a line break. -}\nbr : List (Attribute msg) -> List (Html msg) -> Html msg\nbr =\n  Elm.Kernel.VirtualDom.node \"br\"\n\n\n{-| Represents a line break opportunity, that is a suggested point for\nwrapping text in order to improve readability of text split on several lines.\n-}\nwbr : List (Attribute msg) -> List (Html msg) -> Html msg\nwbr =\n  Elm.Kernel.VirtualDom.node \"wbr\"\n\n\n-- EDITS\n\n{-| Defines an addition to the document. -}\nins : List (Attribute msg) -> List (Html msg) -> Html msg\nins =\n  Elm.Kernel.VirtualDom.node \"ins\"\n\n\n{-| Defines a removal from the document. -}\ndel : List (Attribute msg) -> List (Html msg) -> Html msg\ndel =\n  Elm.Kernel.VirtualDom.node \"del\"\n\n\n-- EMBEDDED CONTENT\n\n{-| Represents an image. -}\nimg : List (Attribute msg) -> List (Html msg) -> Html msg\nimg =\n  Elm.Kernel.VirtualDom.node \"img\"\n\n\n{-| Embedded an HTML document. -}\niframe : List (Attribute msg) -> List (Html msg) -> Html msg\niframe =\n  Elm.Kernel.VirtualDom.node \"iframe\"\n\n\n{-| Represents a integration point for an external, often non-HTML,\napplication or interactive content.\n-}\nembed : List (Attribute msg) -> List (Html msg) -> Html msg\nembed =\n  Elm.Kernel.VirtualDom.node \"embed\"\n\n\n{-| Represents an external resource, which is treated as an image, an HTML\nsub-document, or an external resource to be processed by a plug-in.\n-}\nobject : List (Attribute msg) -> List (Html msg) -> Html msg\nobject =\n  Elm.Kernel.VirtualDom.node \"object\"\n\n\n{-| Defines parameters for use by plug-ins invoked by `object` elements. -}\nparam : List (Attribute msg) -> List (Html msg) -> Html msg\nparam =\n  Elm.Kernel.VirtualDom.node \"param\"\n\n\n{-| Represents a video, the associated audio and captions, and controls. -}\nvideo : List (Attribute msg) -> List (Html msg) -> Html msg\nvideo =\n  Elm.Kernel.VirtualDom.node \"video\"\n\n\n{-| Represents a sound or audio stream. -}\naudio : List (Attribute msg) -> List (Html msg) -> Html msg\naudio =\n  Elm.Kernel.VirtualDom.node \"audio\"\n\n\n{-| Allows authors to specify alternative media resources for media elements\nlike `video` or `audio`.\n-}\nsource : List (Attribute msg) -> List (Html msg) -> Html msg\nsource =\n  Elm.Kernel.VirtualDom.node \"source\"\n\n\n{-| Allows authors to specify timed text track for media elements like `video`\nor `audio`.\n-}\ntrack : List (Attribute msg) -> List (Html msg) -> Html msg\ntrack =\n  Elm.Kernel.VirtualDom.node \"track\"\n\n\n{-| Represents a bitmap area for graphics rendering. -}\ncanvas : List (Attribute msg) -> List (Html msg) -> Html msg\ncanvas =\n  Elm.Kernel.VirtualDom.node \"canvas\"\n\n\n{-| Defines a mathematical formula. -}\nmath : List (Attribute msg) -> List (Html msg) -> Html msg\nmath =\n  Elm.Kernel.VirtualDom.node \"math\"\n\n\n-- TABULAR DATA\n\n{-| Represents data with more than one dimension. -}\ntable : List (Attribute msg) -> List (Html msg) -> Html msg\ntable =\n  Elm.Kernel.VirtualDom.node \"table\"\n\n\n{-| Represents the title of a table. -}\ncaption : List (Attribute msg) -> List (Html msg) -> Html msg\ncaption =\n  Elm.Kernel.VirtualDom.node \"caption\"\n\n\n{-| Represents a set of one or more columns of a table. -}\ncolgroup : List (Attribute msg) -> List (Html msg) -> Html msg\ncolgroup =\n  Elm.Kernel.VirtualDom.node \"colgroup\"\n\n\n{-| Represents a column of a table. -}\ncol : List (Attribute msg) -> List (Html msg) -> Html msg\ncol =\n  Elm.Kernel.VirtualDom.node \"col\"\n\n\n{-| Represents the block of rows that describes the concrete data of a table.\n-}\ntbody : List (Attribute msg) -> List (Html msg) -> Html msg\ntbody =\n  Elm.Kernel.VirtualDom.node \"tbody\"\n\n\n{-| Represents the block of rows that describes the column labels of a table.\n-}\nthead : List (Attribute msg) -> List (Html msg) -> Html msg\nthead =\n  Elm.Kernel.VirtualDom.node \"thead\"\n\n\n{-| Represents the block of rows that describes the column summaries of a table.\n-}\ntfoot : List (Attribute msg) -> List (Html msg) -> Html msg\ntfoot =\n  Elm.Kernel.VirtualDom.node \"tfoot\"\n\n\n{-| Represents a row of cells in a table. -}\ntr : List (Attribute msg) -> List (Html msg) -> Html msg\ntr =\n  Elm.Kernel.VirtualDom.node \"tr\"\n\n\n{-| Represents a data cell in a table. -}\ntd : List (Attribute msg) -> List (Html msg) -> Html msg\ntd =\n  Elm.Kernel.VirtualDom.node \"td\"\n\n\n{-| Represents a header cell in a table. -}\nth : List (Attribute msg) -> List (Html msg) -> Html msg\nth =\n  Elm.Kernel.VirtualDom.node \"th\"\n\n\n-- FORMS\n\n{-| Represents a form, consisting of controls, that can be submitted to a\nserver for processing.\n-}\nform : List (Attribute msg) -> List (Html msg) -> Html msg\nform =\n  Elm.Kernel.VirtualDom.node \"form\"\n\n\n{-| Represents a set of controls. -}\nfieldset : List (Attribute msg) -> List (Html msg) -> Html msg\nfieldset =\n  Elm.Kernel.VirtualDom.node \"fieldset\"\n\n\n{-| Represents the caption for a `fieldset`. -}\nlegend : List (Attribute msg) -> List (Html msg) -> Html msg\nlegend =\n  Elm.Kernel.VirtualDom.node \"legend\"\n\n\n{-| Represents the caption of a form control. -}\nlabel : List (Attribute msg) -> List (Html msg) -> Html msg\nlabel =\n  Elm.Kernel.VirtualDom.node \"label\"\n\n\n{-| Represents a typed data field allowing the user to edit the data. -}\ninput : List (Attribute msg) -> List (Html msg) -> Html msg\ninput =\n  Elm.Kernel.VirtualDom.node \"input\"\n\n\n{-| Represents a button. -}\nbutton : List (Attribute msg) -> List (Html msg) -> Html msg\nbutton =\n  Elm.Kernel.VirtualDom.node \"button\"\n\n\n{-| Represents a control allowing selection among a set of options. -}\nselect : List (Attribute msg) -> List (Html msg) -> Html msg\nselect =\n  Elm.Kernel.VirtualDom.node \"select\"\n\n\n{-| Represents a set of predefined options for other controls. -}\ndatalist : List (Attribute msg) -> List (Html msg) -> Html msg\ndatalist =\n  Elm.Kernel.VirtualDom.node \"datalist\"\n\n\n{-| Represents a set of options, logically grouped. -}\noptgroup : List (Attribute msg) -> List (Html msg) -> Html msg\noptgroup =\n  Elm.Kernel.VirtualDom.node \"optgroup\"\n\n\n{-| Represents an option in a `select` element or a suggestion of a `datalist`\nelement.\n-}\noption : List (Attribute msg) -> List (Html msg) -> Html msg\noption =\n  Elm.Kernel.VirtualDom.node \"option\"\n\n\n{-| Represents a multiline text edit control. -}\ntextarea : List (Attribute msg) -> List (Html msg) -> Html msg\ntextarea =\n  Elm.Kernel.VirtualDom.node \"textarea\"\n\n\n{-| Represents the result of a calculation. -}\noutput : List (Attribute msg) -> List (Html msg) -> Html msg\noutput =\n  Elm.Kernel.VirtualDom.node \"output\"\n\n\n{-| Represents the completion progress of a task. -}\nprogress : List (Attribute msg) -> List (Html msg) -> Html msg\nprogress =\n  Elm.Kernel.VirtualDom.node \"progress\"\n\n\n{-| Represents a scalar measurement (or a fractional value), within a known\nrange.\n-}\nmeter : List (Attribute msg) -> List (Html msg) -> Html msg\nmeter =\n  Elm.Kernel.VirtualDom.node \"meter\"\n\n\n-- INTERACTIVE ELEMENTS\n\n{-| Represents a widget from which the user can obtain additional information\nor controls.\n-}\ndetails : List (Attribute msg) -> List (Html msg) -> Html msg\ndetails =\n  Elm.Kernel.VirtualDom.node \"details\"\n\n\n{-| Represents a summary, caption, or legend for a given `details`. -}\nsummary : List (Attribute msg) -> List (Html msg) -> Html msg\nsummary =\n  Elm.Kernel.VirtualDom.node \"summary\"\n\n\n{-| Represents a command that the user can invoke. -}\nmenuitem : List (Attribute msg) -> List (Html msg) -> Html msg\nmenuitem =\n  Elm.Kernel.VirtualDom.node \"menuitem\"\n\n\n{-| Represents a list of commands. -}\nmenu : List (Attribute msg) -> List (Html msg) -> Html msg\nmenu =\n  Elm.Kernel.VirtualDom.node \"menu\"\n\n'}))
		]));
var $author$project$CompilationInterface$SourceFiles$file_tree____elm_kernel_modules_html_src = A2(
	$author$project$CompilationInterface$SourceFiles$mapBlobs,
	function (blobValue) {
		return {utf8: blobValue.utf8};
	},
	$author$project$CompilationInterface$SourceFiles$mapFileTreeNodeFromGenerated($author$project$CompilationInterface$SourceFiles$Generated_SourceFiles$file_tree_node_elm_kernel_modules_html_src));
var $author$project$CompilationInterface$SourceFiles$Generated_SourceFiles$file_tree_node_elm_kernel_modules_http_src = $author$project$CompilationInterface$SourceFiles$Generated_SourceFiles$TreeNode(
	_List_fromArray(
		[
			_Utils_Tuple2(
			'Http.elm',
			$author$project$CompilationInterface$SourceFiles$Generated_SourceFiles$BlobNode(
				{utf8: 'effect module Http where { command = MyCmd, subscription = MySub } exposing\n  ( get, post, request\n  , Header, header\n  , Body, emptyBody, stringBody, jsonBody, fileBody, bytesBody\n  , multipartBody, Part, stringPart, filePart, bytesPart\n  , Expect, expectString, expectJson, expectBytes, expectWhatever, Error(..)\n  , track, Progress(..), fractionSent, fractionReceived\n  , cancel\n  , riskyRequest\n  , expectStringResponse, expectBytesResponse, Response(..), Metadata\n  , task, Resolver, stringResolver, bytesResolver, riskyTask\n  )\n\n{-| Send HTTP requests.\n\n# Requests\n@docs get, post, request\n\n# Header\n@docs Header, header\n\n# Body\n@docs Body, emptyBody, stringBody, jsonBody, fileBody, bytesBody\n\n# Body Parts\n@docs multipartBody, Part, stringPart, filePart, bytesPart\n\n# Expect\n@docs Expect, expectString, expectJson, expectBytes, expectWhatever, Error\n\n# Progress\n@docs track, Progress, fractionSent, fractionReceived\n\n# Cancel\n@docs cancel\n\n# Risky Requests\n@docs riskyRequest\n\n# Elaborate Expectations\n@docs expectStringResponse, expectBytesResponse, Response, Metadata\n\n# Tasks\n@docs task, Resolver, stringResolver, bytesResolver, riskyTask\n-}\n\n\nimport Bytes exposing (Bytes)\nimport Bytes.Decode as Bytes\nimport Dict exposing (Dict)\nimport Elm.Kernel.Http\nimport File exposing (File)\nimport Json.Decode as Decode\nimport Json.Encode as Encode\nimport Process\nimport Task exposing (Task)\n\n\n\n-- REQUESTS\n\n\n{-| Create a `GET` request.\n\n    import Http\n\n    type Msg\n      = GotText (Result Http.Error String)\n\n    getPublicOpinion : Cmd Msg\n    getPublicOpinion =\n      Http.get\n        { url = \"https://elm-lang.org/assets/public-opinion.txt\"\n        , expect = Http.expectString GotText\n        }\n\nYou can use functions like [`expectString`](#expectString) and\n[`expectJson`](#expectJson) to interpret the response in different ways. In\nthis example, we are expecting the response body to be a `String` containing\nthe full text of _Public Opinion_ by Walter Lippmann.\n\n**Note:** Use [`elm/url`](/packages/elm/url/latest) to build reliable URLs.\n-}\nget\n  : { url : String\n    , expect : Expect msg\n    }\n  -> Cmd msg\nget r =\n  request\n    { method = \"GET\"\n    , headers = []\n    , url = r.url\n    , body = emptyBody\n    , expect = r.expect\n    , timeout = Nothing\n    , tracker = Nothing\n    }\n\n\n{-| Create a `POST` request. So imagine we want to send a POST request for\nsome JSON data. It might look like this:\n\n    import Http\n    import Json.Decode exposing (list, string)\n\n    type Msg\n      = GotBooks (Result Http.Error (List String))\n\n    postBooks : Cmd Msg\n    postBooks =\n      Http.post\n        { url = \"https://example.com/books\"\n        , body = Http.emptyBody\n        , expect = Http.expectJson GotBooks (list string)\n        }\n\nNotice that we are using [`expectJson`](#expectJson) to interpret the response\nas JSON. You can learn more about how JSON decoders work [here][] in the guide.\n\nWe did not put anything in the body of our request, but you can use functions\nlike [`stringBody`](#stringBody) and [`jsonBody`](#jsonBody) if you need to\nsend information to the server.\n\n[here]: https://guide.elm-lang.org/interop/json.html\n-}\npost\n  : { url : String\n    , body : Body\n    , expect : Expect msg\n    }\n  -> Cmd msg\npost r =\n  request\n    { method = \"POST\"\n    , headers = []\n    , url = r.url\n    , body = r.body\n    , expect = r.expect\n    , timeout = Nothing\n    , tracker = Nothing\n    }\n\n\n{-| Create a custom request. For example, a PUT for files might look like this:\n\n    import File\n    import Http\n\n    type Msg = Uploaded (Result Http.Error ())\n\n    upload : File.File -> Cmd Msg\n    upload file =\n      Http.request\n        { method = \"PUT\"\n        , headers = []\n        , url = \"https://example.com/publish\"\n        , body = Http.fileBody file\n        , expect = Http.expectWhatever Uploaded\n        , timeout = Nothing\n        , tracker = Nothing\n        }\n\nIt lets you set custom `headers` as needed. The `timeout` is the number of\nmilliseconds you are willing to wait before giving up. The `tracker` lets you\n[`cancel`](#cancel) and [`track`](#track) requests.\n-}\nrequest\n  : { method : String\n    , headers : List Header\n    , url : String\n    , body : Body\n    , expect : Expect msg\n    , timeout : Maybe Float\n    , tracker : Maybe String\n    }\n  -> Cmd msg\nrequest r =\n  command <| Request <|\n    { method = r.method\n    , headers = r.headers\n    , url = r.url\n    , body = r.body\n    , expect = r.expect\n    , timeout = r.timeout\n    , tracker = r.tracker\n    , allowCookiesFromOtherDomains = False\n    }\n\n\n\n-- HEADERS\n\n\n{-| An HTTP header for configuring requests. See a bunch of common headers\n[here](https://en.wikipedia.org/wiki/List_of_HTTP_header_fields).\n-}\ntype Header = Header String String\n\n\n{-| Create a `Header`.\n\n    header \"If-Modified-Since\" \"Sat 29 Oct 1994 19:43:31 GMT\"\n    header \"Max-Forwards\" \"10\"\n    header \"X-Requested-With\" \"XMLHttpRequest\"\n-}\nheader : String -> String -> Header\nheader =\n  Header\n\n\n\n-- BODY\n\n\n{-| Represents the body of a `Request`.\n-}\ntype Body = Body\n\n\n{-| Create an empty body for your `Request`. This is useful for GET requests\nand POST requests where you are not sending any data.\n-}\nemptyBody : Body\nemptyBody =\n  Elm.Kernel.Http.emptyBody\n\n\n{-| Put some JSON value in the body of your `Request`.\n\nMaybe you want to search for 10 books relevant to a certain topic:\n\n    import Http\n    import Json.Encode as E\n\n    searchForBooks : String -> Cmd Msg\n    searchForBooks topic =\n      Http.post\n        { url = \"https://api.example.com/books\"\n        , body =\n            Http.jsonBody <|\n              E.object\n                [ ( \"topic\", E.string topic )\n                , ( \"limit\", E.int 10 )\n                ]\n        , expect =\n            Http.expectJson GotBooks booksDecoder\n        }\n\n**Note:** This will automatically add the `Content-Type: application/json` header.\n-}\njsonBody : Encode.Value -> Body\njsonBody value =\n  Elm.Kernel.Http.pair \"application/json\" (Encode.encode 0 value)\n\n\n{-| Put some string in the body of your `Request`. Defining `jsonBody` looks\nlike this:\n\n    import Json.Encode as Encode\n\n    jsonBody : Encode.Value -> Body\n    jsonBody value =\n      stringBody \"application/json\" (Encode.encode 0 value)\n\nThe first argument is a [MIME type](https://en.wikipedia.org/wiki/Media_type)\nof the body. Some servers are strict about this!\n-}\nstringBody : String -> String -> Body\nstringBody =\n  Elm.Kernel.Http.pair\n\n\n{-| Put some `Bytes` in the body of your `Request`. This allows you to use\n[`elm/bytes`](/packages/elm/bytes/latest) to have full control over the binary\nrepresentation of the data you are sending. For example, you could create an\n`archive.zip` file and send it along like this:\n\n    import Bytes exposing (Bytes)\n\n    zipBody : Bytes -> Body\n    zipBody bytes =\n      bytesBody \"application/zip\" bytes\n\nThe first argument is a [MIME type](https://en.wikipedia.org/wiki/Media_type)\nof the body. In other scenarios you may want to use MIME types like `image/png`\nor `image/jpeg` instead.\n\n**Note:** Use [`track`](#track) to track upload progress.\n-}\nbytesBody : String -> Bytes -> Body\nbytesBody =\n  Elm.Kernel.Http.pair\n\n\n{-| Use a file as the body of your `Request`. When someone uploads an image\ninto the browser with [`elm/file`](/packages/elm/file/latest) you can forward\nit to a server.\n\nThis will automatically set the `Content-Type` to the MIME type of the file.\n\n**Note:** Use [`track`](#track) to track upload progress.\n-}\nfileBody : File -> Body\nfileBody =\n  Elm.Kernel.Http.pair \"\"\n\n\n\n-- PARTS\n\n\n{-| When someone clicks submit on the `<form>`, browsers send a special HTTP\nrequest with all the form data. Something like this:\n\n```\nPOST /test.html HTTP/1.1\nHost: example.org\nContent-Type: multipart/form-data;boundary=\"7MA4YWxkTrZu0gW\"\n\n--7MA4YWxkTrZu0gW\nContent-Disposition: form-data; name=\"title\"\n\nTrip to London\n--7MA4YWxkTrZu0gW\nContent-Disposition: form-data; name=\"album[]\"; filename=\"parliment.jpg\"\n\n...RAW...IMAGE...BITS...\n--7MA4YWxkTrZu0gW--\n```\n\nThis was the only way to send files for a long time, so many servers expect\ndata in this format. **The `multipartBody` function lets you create these\nrequests.** For example, to upload a photo album all at once, you could create\na body like this:\n\n    multipartBody\n      [ stringPart \"title\" \"Trip to London\"\n      , filePart \"album[]\" file1\n      , filePart \"album[]\" file2\n      , filePart \"album[]\" file3\n      ]\n\nAll of the body parts need to have a name. Names can be repeated. Adding the\n`[]` on repeated names is a convention from PHP. It seems weird, but I see it\nenough to mention it. You do not have to do it that way, especially if your\nserver uses some other convention!\n\nThe `Content-Type: multipart/form-data` header is automatically set when\ncreating a body this way.\n\n**Note:** Use [`track`](#track) to track upload progress.\n-}\nmultipartBody : List Part -> Body\nmultipartBody parts =\n  Elm.Kernel.Http.pair \"\" (Elm.Kernel.Http.toFormData parts)\n\n\n{-| One part of a `multipartBody`.\n-}\ntype Part = Part\n\n\n{-| A part that contains `String` data.\n\n    multipartBody\n      [ stringPart \"title\" \"Tom\"\n      , filePart \"photo\" tomPng\n      ]\n-}\nstringPart : String -> String -> Part\nstringPart =\n  Elm.Kernel.Http.pair\n\n\n{-| A part that contains a file. You can use\n[`elm/file`](/packages/elm/file/latest) to get files loaded into the\nbrowser. From there, you can send it along to a server like this:\n\n    multipartBody\n      [ stringPart \"product\" \"Ikea Bekant\"\n      , stringPart \"description\" \"Great desk for home office.\"\n      , filePart \"image[]\" file1\n      , filePart \"image[]\" file2\n      , filePart \"image[]\" file3\n      ]\n-}\nfilePart : String -> File -> Part\nfilePart =\n  Elm.Kernel.Http.pair\n\n\n{-| A part that contains bytes, allowing you to use\n[`elm/bytes`](/packages/elm/bytes/latest) to encode data exactly in the format\nyou need.\n\n    multipartBody\n      [ stringPart \"title\" \"Tom\"\n      , bytesPart \"photo\" \"image/png\" bytes\n      ]\n\n**Note:** You must provide a MIME type so that the receiver has clues about\nhow to interpret the bytes.\n-}\nbytesPart : String -> String -> Bytes -> Part\nbytesPart key mime bytes =\n  Elm.Kernel.Http.pair key (Elm.Kernel.Http.bytesToBlob mime bytes)\n\n\n\n-- EXPECT\n\n\n{-| Logic for interpreting a response body.\n-}\ntype Expect msg = Expect\n\n\n{-| Expect the response body to be a `String`. Like when getting the full text\nof a book:\n\n    import Http\n\n    type Msg\n      = GotText (Result Http.Error String)\n\n    getPublicOpinion : Cmd Msg\n    getPublicOpinion =\n      Http.get\n        { url = \"https://elm-lang.org/assets/public-opinion.txt\"\n        , expect = Http.expectString GotText\n        }\n\nThe response body is always some sequence of bytes, but in this case, we\nexpect it to be UTF-8 encoded text that can be turned into a `String`.\n-}\nexpectString : (Result Error String -> msg) -> Expect msg\nexpectString toMsg =\n  expectStringResponse toMsg (resolve Ok)\n\n\n{-| Expect the response body to be JSON. Like if you want to get a random cat\nGIF you might say:\n\n    import Http\n    import Json.Decode exposing (Decoder, field, string)\n\n    type Msg\n      = GotGif (Result Http.Error String)\n\n    getRandomCatGif : Cmd Msg\n    getRandomCatGif =\n      Http.get\n        { url = \"https://api.giphy.com/v1/gifs/random?api_key=dc6zaTOxFJmzC&tag=cat\"\n        , expect = Http.expectJson GotGif gifDecoder\n        }\n\n    gifDecoder : Decoder String\n    gifDecoder =\n      field \"data\" (field \"image_url\" string)\n\nThe official guide goes through this particular example [here][]. That page\nalso introduces [`elm/json`][json] to help you get started turning JSON into\nElm values in other situations.\n\n[here]: https://guide.elm-lang.org/interop/json.html\n[json]: /packages/elm/json/latest/\n\nIf the JSON decoder fails, you get a `BadBody` error that tries to explain\nwhat went wrong.\n-}\nexpectJson : (Result Error a -> msg) -> Decode.Decoder a -> Expect msg\nexpectJson toMsg decoder =\n  expectStringResponse toMsg <| resolve <|\n    \\string ->\n      Result.mapError Decode.errorToString (Decode.decodeString decoder string)\n\n\n{-| Expect the response body to be binary data. For example, maybe you are\ntalking to an endpoint that gives back ProtoBuf data:\n\n    import Bytes.Decode as Bytes\n    import Http\n\n    type Msg\n      = GotData (Result Http.Error Data)\n\n    getData : Cmd Msg\n    getData =\n      Http.get\n        { url = \"/data\"\n        , expect = Http.expectBytes GotData dataDecoder\n        }\n\n    -- dataDecoder : Bytes.Decoder Data\n\nYou would use [`elm/bytes`](/packages/elm/bytes/latest/) to decode the binary\ndata according to a proto definition file like `example.proto`.\n\nIf the decoder fails, you get a `BadBody` error that just indicates that\n_something_ went wrong. It probably makes sense to debug by peeking at the\nbytes you are getting in the browser developer tools or something.\n-}\nexpectBytes : (Result Error a -> msg) -> Bytes.Decoder a -> Expect msg\nexpectBytes toMsg decoder =\n  expectBytesResponse toMsg <| resolve <|\n    \\bytes ->\n      Result.fromMaybe \"unexpected bytes\" (Bytes.decode decoder bytes)\n\n\n{-| Expect the response body to be whatever. It does not matter. Ignore it!\nFor example, you might want this when uploading files:\n\n    import Http\n\n    type Msg\n      = Uploaded (Result Http.Error ())\n\n    upload : File -> Cmd Msg\n    upload file =\n      Http.post\n        { url = \"/upload\"\n        , body = Http.fileBody file\n        , expect = Http.expectWhatever Uploaded\n        }\n\nThe server may be giving back a response body, but we do not care about it.\n-}\nexpectWhatever : (Result Error () -> msg) -> Expect msg\nexpectWhatever toMsg =\n  expectBytesResponse toMsg (resolve (\\_ -> Ok ()))\n\n\nresolve : (body -> Result String a) -> Response body -> Result Error a\nresolve toResult response =\n  case response of\n    BadUrl_ url -> Err (BadUrl url)\n    Timeout_ -> Err Timeout\n    NetworkError_ -> Err NetworkError\n    BadStatus_ metadata _ -> Err (BadStatus metadata.statusCode)\n    GoodStatus_ _ body -> Result.mapError BadBody (toResult body)\n\n\n{-| A `Request` can fail in a couple ways:\n\n- `BadUrl` means you did not provide a valid URL.\n- `Timeout` means it took too long to get a response.\n- `NetworkError` means the user turned off their wifi, went in a cave, etc.\n- `BadStatus` means you got a response back, but the status code indicates failure.\n- `BadBody` means you got a response back with a nice status code, but the body\nof the response was something unexpected. The `String` in this case is a\ndebugging message that explains what went wrong with your JSON decoder or\nwhatever.\n\n**Note:** You can use [`expectStringResponse`](#expectStringResponse) and\n[`expectBytesResponse`](#expectBytesResponse) to get more flexibility on this.\n-}\ntype Error\n  = BadUrl String\n  | Timeout\n  | NetworkError\n  | BadStatus Int\n  | BadBody String\n\n\n\n-- ELABORATE EXPECTATIONS\n\n\n{-| Expect a [`Response`](#Response) with a `String` body. So you could define\nyour own [`expectJson`](#expectJson) like this:\n\n    import Http\n    import Json.Decode as D\n\n    expectJson : (Result Http.Error a -> msg) -> D.Decoder a -> Expect msg\n    expectJson toMsg decoder =\n      expectStringResponse toMsg <|\n        \\response ->\n          case response of\n            Http.BadUrl_ url ->\n              Err (Http.BadUrl url)\n\n            Http.Timeout_ ->\n              Err Http.Timeout\n\n            Http.NetworkError_ ->\n              Err Http.NetworkError\n\n            Http.BadStatus_ metadata body ->\n              Err (Http.BadStatus metadata.statusCode)\n\n            Http.GoodStatus_ metadata body ->\n              case D.decodeString decoder body of\n                Ok value ->\n                  Ok value\n\n                Err err ->\n                  Err (Http.BadBody (D.errorToString err))\n\nThis function is great for fancier error handling and getting response headers.\nFor example, maybe when your sever gives a 404 status code (not found) it also\nprovides a helpful JSON message in the response body. This function lets you\nadd logic to the `BadStatus_` branch so you can parse that JSON and give users\na more helpful message! Or make your own custom error type for your particular\napplication!\n-}\nexpectStringResponse : (Result x a -> msg) -> (Response String -> Result x a) -> Expect msg\nexpectStringResponse toMsg toResult =\n  Elm.Kernel.Http.expect \"\" identity (toResult >> toMsg)\n\n\n{-| Expect a [`Response`](#Response) with a `Bytes` body.\n\nIt works just like [`expectStringResponse`](#expectStringResponse), giving you\nmore access to headers and more leeway in defining your own errors.\n-}\nexpectBytesResponse : (Result x a -> msg) -> (Response Bytes -> Result x a) -> Expect msg\nexpectBytesResponse toMsg toResult =\n  Elm.Kernel.Http.expect \"arraybuffer\" Elm.Kernel.Http.toDataView (toResult >> toMsg)\n\n\n{-| A `Response` can come back a couple different ways:\n\n- `BadUrl_` &mdash; you did not provide a valid URL.\n- `Timeout_` &mdash; it took too long to get a response.\n- `NetworkError_` &mdash; the user turned off their wifi, went in a cave, etc.\n- `BadStatus_` &mdash; a response arrived, but the status code indicates failure.\n- `GoodStatus_` &mdash; a response arrived with a nice status code!\n\nThe type of the `body` depends on whether you use\n[`expectStringResponse`](#expectStringResponse)\nor [`expectBytesResponse`](#expectBytesResponse).\n-}\ntype Response body\n  = BadUrl_ String\n  | Timeout_\n  | NetworkError_\n  | BadStatus_ Metadata body\n  | GoodStatus_ Metadata body\n\n\n{-| Extra information about the response:\n\n- `url` of the server that actually responded (so you can detect redirects)\n- `statusCode` like `200` or `404`\n- `statusText` describing what the `statusCode` means a little\n- `headers` like `Content-Length` and `Expires`\n\n**Note:** It is possible for a response to have the same header multiple times.\nIn that case, all the values end up in a single entry in the `headers`\ndictionary. The values are separated by commas, following the rules outlined\n[here](https://stackoverflow.com/questions/4371328/are-duplicate-http-response-headers-acceptable).\n-}\ntype alias Metadata =\n  { url : String\n  , statusCode : Int\n  , statusText : String\n  , headers : Dict String String\n  }\n\n\n\n-- CANCEL\n\n\n{-| Try to cancel an ongoing request based on a `tracker`.\n-}\ncancel : String -> Cmd msg\ncancel tracker =\n  command (Cancel tracker)\n\n\n\n-- PROGRESS\n\n\n{-| Track the progress of a request. Create a [`request`](#request) where\n`tracker = Just \"form.pdf\"` and you can track it with a subscription like\n`track \"form.pdf\" GotProgress`.\n-}\ntrack : String -> (Progress -> msg) -> Sub msg\ntrack tracker toMsg =\n  subscription (MySub tracker toMsg)\n\n\n{-| There are two phases to HTTP requests. First you **send** a bunch of data,\nthen you **receive** a bunch of data. For example, say you use `fileBody` to\nupload a file of 262144 bytes. From there, progress will go like this:\n\n```\nSending   { sent =      0, size = 262144 }  -- 0.0\nSending   { sent =  65536, size = 262144 }  -- 0.25\nSending   { sent = 131072, size = 262144 }  -- 0.5\nSending   { sent = 196608, size = 262144 }  -- 0.75\nSending   { sent = 262144, size = 262144 }  -- 1.0\nReceiving { received =  0, size = Just 16 } -- 0.0\nReceiving { received = 16, size = Just 16 } -- 1.0\n```\n\nWith file uploads, the **send** phase is expensive. That is what we saw in our\nexample. But with file downloads, the **receive** phase is expensive.\n\nUse [`fractionSent`](#fractionSent) and [`fractionReceived`](#fractionReceived)\nto turn this progress information into specific fractions!\n\n**Note:** The `size` of the response is based on the [`Content-Length`][cl]\nheader, and in rare and annoying cases, a server may not include that header.\nThat is why the `size` is a `Maybe Int` in `Receiving`.\n\n[cl]: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Length\n-}\ntype Progress\n  = Sending { sent : Int, size : Int }\n  | Receiving { received : Int, size : Maybe Int }\n\n\n{-| Turn `Sending` progress into a useful fraction.\n\n    fractionSent { sent =   0, size = 1024 } == 0.0\n    fractionSent { sent = 256, size = 1024 } == 0.25\n    fractionSent { sent = 512, size = 1024 } == 0.5\n\n    -- fractionSent { sent = 0, size = 0 } == 1.0\n\nThe result is always between `0.0` and `1.0`, ensuring that any progress bar\nanimations never go out of bounds.\n\nAnd notice that `size` can be zero. That means you are sending a request with\nan empty body. Very common! When `size` is zero, the result is always `1.0`.\n\n**Note:** If you create your own function to compute this fraction, watch out\nfor divide-by-zero errors!\n-}\nfractionSent : { sent : Int, size : Int } -> Float\nfractionSent p =\n  if p.size == 0 then\n    1\n  else\n    clamp 0 1 (toFloat p.sent / toFloat p.size)\n\n\n{-| Turn `Receiving` progress into a useful fraction for progress bars.\n\n    fractionReceived { received =   0, size = Just 1024 } == 0.0\n    fractionReceived { received = 256, size = Just 1024 } == 0.25\n    fractionReceived { received = 512, size = Just 1024 } == 0.5\n\n    -- fractionReceived { received =   0, size = Nothing } == 0.0\n    -- fractionReceived { received = 256, size = Nothing } == 0.0\n    -- fractionReceived { received = 512, size = Nothing } == 0.0\n\nThe `size` here is based on the [`Content-Length`][cl] header which may be\nmissing in some cases. A server may be misconfigured or it may be streaming\ndata and not actually know the final size. Whatever the case, this function\nwill always give `0.0` when the final size is unknown.\n\nFurthermore, the `Content-Length` header may be incorrect! The implementation\nclamps the fraction between `0.0` and `1.0`, so you will just get `1.0` if\nyou ever receive more bytes than promised.\n\n**Note:** If you are streaming something, you can write a custom version of\nthis function that just tracks bytes received. Maybe you show that 22kb or 83kb\nhave been downloaded, without a specific fraction. If you do this, be wary of\ndivide-by-zero errors because `size` can always be zero!\n\n[cl]: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Length\n-}\nfractionReceived : { received : Int, size : Maybe Int } -> Float\nfractionReceived p =\n  case p.size of\n    Nothing ->\n      0\n\n    Just n ->\n      if n == 0 then\n        1\n      else\n        clamp 0 1 (toFloat p.received / toFloat n)\n\n\n\n-- CUSTOM REQUESTS\n\n\n{-| Create a request with a risky security policy. Things like:\n\n- Allow responses from other domains to set cookies.\n- Include cookies in requests to other domains.\n\nThis is called [`withCredentials`][wc] in JavaScript, and it allows a couple\nother risky things as well. It can be useful if `www.example.com` needs to\ntalk to `uploads.example.com`, but it should be used very carefully!\n\nFor example, every HTTP request includes a `Origin` header revealing the domain,\nso any request to `facebook.com` reveals the website that sent it. From there,\ncookies can be used to correlate browsing habits with specific users. “Oh, it\nlooks like they visited `example.com`. Maybe they want ads about examples!”\nThis is why you can get shoe ads for months without saying anything about it\non any social networks. **This risk exists even for people who do not have an\naccount.** Servers can set a new cookie to uniquely identify the browser and\nbuild a profile around that. Same kind of tricks for logged out users.\n\n**Context:** A significantly worse version of this can happen when trying to\nadd integrations with Google, Facebook, Pinterest, Twitter, etc. “Add our share\nbutton. It is super easy. Just add this `<script>` tag!” But the goal here is\nto get _arbitrary_ access to the executing context. Now they can track clicks,\nread page content, use time zones to approximate location, etc. As of this\nwriting, suggesting that developers just embed `<script>` tags is the default\nfor Google Analytics, Facebook Like Buttons, Twitter Follow Buttons, Pinterest\nSave Buttons, and Instagram Embeds.\n\n[ah]: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Authorization\n[wc]: https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/withCredentials\n-}\nriskyRequest\n  : { method : String\n    , headers : List Header\n    , url : String\n    , body : Body\n    , expect : Expect msg\n    , timeout : Maybe Float\n    , tracker : Maybe String\n    }\n  -> Cmd msg\nriskyRequest r =\n  command <| Request <|\n    { method = r.method\n    , headers = r.headers\n    , url = r.url\n    , body = r.body\n    , expect = r.expect\n    , timeout = r.timeout\n    , tracker = r.tracker\n    , allowCookiesFromOtherDomains = True\n    }\n\n\n\n-- TASKS\n\n\n{-| Just like [`request`](#request), but it creates a `Task`. This makes it\npossible to pair your HTTP request with `Time.now` if you need timestamps for\nsome reason. **This should be quite rare.**\n-}\ntask\n  : { method : String\n    , headers : List Header\n    , url : String\n    , body : Body\n    , resolver : Resolver x a\n    , timeout : Maybe Float\n    }\n  -> Task x a\ntask r =\n  Elm.Kernel.Http.toTask () resultToTask\n    { method = r.method\n    , headers = r.headers\n    , url = r.url\n    , body = r.body\n    , expect = r.resolver\n    , timeout = r.timeout\n    , tracker = Nothing\n    , allowCookiesFromOtherDomains = False\n    }\n\n\n{-| Describes how to resolve an HTTP task. You can create a resolver with\n[`stringResolver`](#stringResolver) and [`bytesResolver`](#bytesResolver).\n-}\ntype Resolver x a = Resolver\n\n\n{-| Turn a response with a `String` body into a result.\nSimilar to [`expectStringResponse`](#expectStringResponse).\n-}\nstringResolver : (Response String -> Result x a) -> Resolver x a\nstringResolver =\n  Elm.Kernel.Http.expect \"\" identity\n\n\n{-| Turn a response with a `Bytes` body into a result.\nSimilar to [`expectBytesResponse`](#expectBytesResponse).\n-}\nbytesResolver : (Response Bytes -> Result x a) -> Resolver x a\nbytesResolver =\n  Elm.Kernel.Http.expect \"arraybuffer\" Elm.Kernel.Http.toDataView\n\n\n{-| Just like [`riskyRequest`](#riskyRequest), but it creates a `Task`. **Use\nwith caution!** This has all the same security concerns as `riskyRequest`.\n-}\nriskyTask\n  : { method : String\n    , headers : List Header\n    , url : String\n    , body : Body\n    , resolver : Resolver x a\n    , timeout : Maybe Float\n    }\n  -> Task x a\nriskyTask r =\n  Elm.Kernel.Http.toTask () resultToTask\n    { method = r.method\n    , headers = r.headers\n    , url = r.url\n    , body = r.body\n    , expect = r.resolver\n    , timeout = r.timeout\n    , tracker = Nothing\n    , allowCookiesFromOtherDomains = True\n    }\n\n\nresultToTask : Result x a -> Task x a\nresultToTask result =\n  case result of\n    Ok a -> Task.succeed a\n    Err x -> Task.fail x\n\n\n\n-- COMMANDS and SUBSCRIPTIONS\n\n\ntype MyCmd msg\n  = Cancel String\n  | Request\n      { method : String\n      , headers : List Header\n      , url : String\n      , body : Body\n      , expect : Expect msg\n      , timeout : Maybe Float\n      , tracker : Maybe String\n      , allowCookiesFromOtherDomains : Bool\n      }\n\n\ncmdMap : (a -> b) -> MyCmd a -> MyCmd b\ncmdMap func cmd =\n  case cmd of\n    Cancel tracker ->\n      Cancel tracker\n\n    Request r ->\n      Request\n        { method = r.method\n        , headers = r.headers\n        , url = r.url\n        , body = r.body\n        , expect = Elm.Kernel.Http.mapExpect func r.expect\n        , timeout = r.timeout\n        , tracker = r.tracker\n        , allowCookiesFromOtherDomains = r.allowCookiesFromOtherDomains\n        }\n\n\ntype MySub msg =\n  MySub String (Progress -> msg)\n\n\nsubMap : (a -> b) -> MySub a -> MySub b\nsubMap func (MySub tracker toMsg) =\n  MySub tracker (toMsg >> func)\n\n\n\n-- EFFECT MANAGER\n\n\ntype alias State msg =\n  { reqs : Dict String Process.Id\n  , subs : List (MySub msg)\n  }\n\n\ninit : Task Never (State msg)\ninit =\n  Task.succeed (State Dict.empty [])\n\n\ntype alias MyRouter msg =\n  Platform.Router msg SelfMsg\n\n\n\n-- APP MESSAGES\n\n\nonEffects : MyRouter msg -> List (MyCmd msg) -> List (MySub msg) -> State msg -> Task Never (State msg)\nonEffects router cmds subs state =\n  updateReqs router cmds state.reqs\n    |> Task.andThen (\\reqs -> Task.succeed (State reqs subs))\n\n\nupdateReqs : MyRouter msg -> List (MyCmd msg) -> Dict String Process.Id -> Task x (Dict String Process.Id)\nupdateReqs router cmds reqs =\n  case cmds of\n    [] ->\n      Task.succeed reqs\n\n    cmd :: otherCmds ->\n      case cmd of\n        Cancel tracker ->\n          case Dict.get tracker reqs of\n            Nothing ->\n              updateReqs router otherCmds reqs\n\n            Just pid ->\n              Process.kill pid\n                |> Task.andThen (\\_ -> updateReqs router otherCmds (Dict.remove tracker reqs))\n\n        Request req ->\n          Process.spawn (Elm.Kernel.Http.toTask router (Platform.sendToApp router) req)\n            |> Task.andThen (\\pid ->\n                  case req.tracker of\n                    Nothing ->\n                      updateReqs router otherCmds reqs\n\n                    Just tracker ->\n                      updateReqs router otherCmds (Dict.insert tracker pid reqs)\n              )\n\n\n\n-- SELF MESSAGES\n\n\ntype alias SelfMsg =\n  (String, Progress)\n\n\nonSelfMsg : MyRouter msg -> SelfMsg -> State msg -> Task Never (State msg)\nonSelfMsg router (tracker, progress) state =\n  Task.sequence (List.filterMap (maybeSend router tracker progress) state.subs)\n    |> Task.andThen (\\_ -> Task.succeed state)\n\n\nmaybeSend : MyRouter msg -> String -> Progress -> MySub msg -> Maybe (Task x ())\nmaybeSend router desiredTracker progress (MySub actualTracker toMsg) =\n  if desiredTracker == actualTracker then\n    Just (Platform.sendToApp router (toMsg progress))\n  else\n    Nothing\n'}))
		]));
var $author$project$CompilationInterface$SourceFiles$file_tree____elm_kernel_modules_http_src = A2(
	$author$project$CompilationInterface$SourceFiles$mapBlobs,
	function (blobValue) {
		return {utf8: blobValue.utf8};
	},
	$author$project$CompilationInterface$SourceFiles$mapFileTreeNodeFromGenerated($author$project$CompilationInterface$SourceFiles$Generated_SourceFiles$file_tree_node_elm_kernel_modules_http_src));
var $author$project$CompilationInterface$SourceFiles$Generated_SourceFiles$file_tree_node_elm_kernel_modules_json_src = $author$project$CompilationInterface$SourceFiles$Generated_SourceFiles$TreeNode(
	_List_fromArray(
		[
			_Utils_Tuple2(
			'Json',
			$author$project$CompilationInterface$SourceFiles$Generated_SourceFiles$TreeNode(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'Decode.elm',
						$author$project$CompilationInterface$SourceFiles$Generated_SourceFiles$BlobNode(
							{utf8: 'module Json.Decode exposing\n  ( Decoder, string, bool, int, float\n  , nullable, list, array, dict, keyValuePairs, oneOrMore\n  , field, at, index\n  , maybe, oneOf\n  , decodeString, decodeValue, Value, Error(..), errorToString\n  , map, map2, map3, map4, map5, map6, map7, map8\n  , lazy, value, null, succeed, fail, andThen\n  )\n\n{-| Turn JSON values into Elm values. Definitely check out this [intro to\nJSON decoders][guide] to get a feel for how this library works!\n\n[guide]: https://guide.elm-lang.org/effects/json.html\n\n# Primitives\n@docs Decoder, string, bool, int, float\n\n# Data Structures\n@docs nullable, list, array, dict, keyValuePairs, oneOrMore\n\n# Object Primitives\n@docs field, at, index\n\n# Inconsistent Structure\n@docs maybe, oneOf\n\n# Run Decoders\n@docs decodeString, decodeValue, Value, Error, errorToString\n\n# Mapping\n\n**Note:** If you run out of map functions, take a look at [elm-json-decode-pipeline][pipe]\nwhich makes it easier to handle large objects, but produces lower quality type\nerrors.\n\n[pipe]: /packages/NoRedInk/elm-json-decode-pipeline/latest\n\n@docs map, map2, map3, map4, map5, map6, map7, map8\n\n# Fancy Decoding\n@docs lazy, value, null, succeed, fail, andThen\n-}\n\n\nimport Array exposing (Array)\nimport Dict exposing (Dict)\nimport Json.Encode\nimport Elm.Kernel.Json\n\n\n\n-- PRIMITIVES\n\n\n{-| A value that knows how to decode JSON values.\n\nThere is a whole section in `guide.elm-lang.org` about decoders, so [check it\nout](https://guide.elm-lang.org/interop/json.html) for a more comprehensive\nintroduction!\n-}\ntype Decoder a = Decoder\n\n\n{-| Decode a JSON string into an Elm `String`.\n\n    decodeString string \"true\"              == Err ...\n    decodeString string \"42\"                == Err ...\n    decodeString string \"3.14\"              == Err ...\n    decodeString string \"\\\"hello\\\"\"         == Ok \"hello\"\n    decodeString string \"{ \\\"hello\\\": 42 }\" == Err ...\n-}\nstring : Decoder String\nstring =\n  Elm.Kernel.Json.decodeString\n\n\n{-| Decode a JSON boolean into an Elm `Bool`.\n\n    decodeString bool \"true\"              == Ok True\n    decodeString bool \"42\"                == Err ...\n    decodeString bool \"3.14\"              == Err ...\n    decodeString bool \"\\\"hello\\\"\"         == Err ...\n    decodeString bool \"{ \\\"hello\\\": 42 }\" == Err ...\n-}\nbool : Decoder Bool\nbool =\n  Elm.Kernel.Json.decodeBool\n\n\n{-| Decode a JSON number into an Elm `Int`.\n\n    decodeString int \"true\"              == Err ...\n    decodeString int \"42\"                == Ok 42\n    decodeString int \"3.14\"              == Err ...\n    decodeString int \"\\\"hello\\\"\"         == Err ...\n    decodeString int \"{ \\\"hello\\\": 42 }\" == Err ...\n-}\nint : Decoder Int\nint =\n  Elm.Kernel.Json.decodeInt\n\n\n{-| Decode a JSON number into an Elm `Float`.\n\n    decodeString float \"true\"              == Err ..\n    decodeString float \"42\"                == Ok 42\n    decodeString float \"3.14\"              == Ok 3.14\n    decodeString float \"\\\"hello\\\"\"         == Err ...\n    decodeString float \"{ \\\"hello\\\": 42 }\" == Err ...\n-}\nfloat : Decoder Float\nfloat =\n  Elm.Kernel.Json.decodeFloat\n\n\n\n-- DATA STRUCTURES\n\n\n{-| Decode a nullable JSON value into an Elm value.\n\n    decodeString (nullable int) \"13\"    == Ok (Just 13)\n    decodeString (nullable int) \"42\"    == Ok (Just 42)\n    decodeString (nullable int) \"null\"  == Ok Nothing\n    decodeString (nullable int) \"true\"  == Err ..\n-}\nnullable : Decoder a -> Decoder (Maybe a)\nnullable decoder =\n  oneOf\n    [ null Nothing\n    , map Just decoder\n    ]\n\n\n{-| Decode a JSON array into an Elm `List`.\n\n    decodeString (list int) \"[1,2,3]\"       == Ok [1,2,3]\n    decodeString (list bool) \"[true,false]\" == Ok [True,False]\n-}\nlist : Decoder a -> Decoder (List a)\nlist =\n  Elm.Kernel.Json.decodeList\n\n\n{-| Decode a JSON array into an Elm `Array`.\n\n    decodeString (array int) \"[1,2,3]\"       == Ok (Array.fromList [1,2,3])\n    decodeString (array bool) \"[true,false]\" == Ok (Array.fromList [True,False])\n-}\narray : Decoder a -> Decoder (Array a)\narray =\n  Elm.Kernel.Json.decodeArray\n\n\n{-| Decode a JSON object into an Elm `Dict`.\n\n    decodeString (dict int) \"{ \\\"alice\\\": 42, \\\"bob\\\": 99 }\"\n      == Ok (Dict.fromList [(\"alice\", 42), (\"bob\", 99)])\n\nIf you need the keys (like `\"alice\"` and `\"bob\"`) available in the `Dict`\nvalues as well, I recommend using a (private) intermediate data structure like\n`Info` in this example:\n\n    module User exposing (User, decoder)\n\n    import Dict\n    import Json.Decode exposing (..)\n\n    type alias User =\n      { name : String\n      , height : Float\n      , age : Int\n      }\n\n    decoder : Decoder (Dict.Dict String User)\n    decoder =\n      map (Dict.map infoToUser) (dict infoDecoder)\n\n    type alias Info =\n      { height : Float\n      , age : Int\n      }\n\n    infoDecoder : Decoder Info\n    infoDecoder =\n      map2 Info\n        (field \"height\" float)\n        (field \"age\" int)\n\n    infoToUser : String -> Info -> User\n    infoToUser name { height, age } =\n      User name height age\n\nSo now JSON like `{ \"alice\": { height: 1.6, age: 33 }}` are turned into\ndictionary values like `Dict.singleton \"alice\" (User \"alice\" 1.6 33)` if\nyou need that.\n-}\ndict : Decoder a -> Decoder (Dict String a)\ndict decoder =\n  map Dict.fromList (keyValuePairs decoder)\n\n\n{-| Decode a JSON object into an Elm `List` of pairs.\n\n    decodeString (keyValuePairs int) \"{ \\\"alice\\\": 42, \\\"bob\\\": 99 }\"\n      == Ok [(\"alice\", 42), (\"bob\", 99)]\n-}\nkeyValuePairs : Decoder a -> Decoder (List (String, a))\nkeyValuePairs =\n  Elm.Kernel.Json.decodeKeyValuePairs\n\n\n{-| Decode a JSON array that has one or more elements. This comes up if you\nwant to enable drag-and-drop of files into your application. You would pair\nthis function with [`elm/file`]() to write a `dropDecoder` like this:\n\n    import File exposing (File)\n    import Json.Decoder as D\n\n    type Msg\n      = GotFiles File (List Files)\n\n    inputDecoder : D.Decoder Msg\n    inputDecoder =\n      D.at [\"dataTransfer\",\"files\"] (D.oneOrMore GotFiles File.decoder)\n\nThis captures the fact that you can never drag-and-drop zero files.\n-}\noneOrMore : (a -> List a -> value) -> Decoder a -> Decoder value\noneOrMore toValue decoder =\n  list decoder\n    |> andThen (oneOrMoreHelp toValue)\n\n\noneOrMoreHelp : (a -> List a -> value) -> List a -> Decoder value\noneOrMoreHelp toValue xs =\n  case xs of\n    [] ->\n      fail \"a ARRAY with at least ONE element\"\n\n    y :: ys ->\n      succeed (toValue y ys)\n\n\n\n-- OBJECT PRIMITIVES\n\n\n{-| Decode a JSON object, requiring a particular field.\n\n    decodeString (field \"x\" int) \"{ \\\"x\\\": 3 }\"            == Ok 3\n    decodeString (field \"x\" int) \"{ \\\"x\\\": 3, \\\"y\\\": 4 }\"  == Ok 3\n    decodeString (field \"x\" int) \"{ \\\"x\\\": true }\"         == Err ...\n    decodeString (field \"x\" int) \"{ \\\"y\\\": 4 }\"            == Err ...\n\n    decodeString (field \"name\" string) \"{ \\\"name\\\": \\\"tom\\\" }\" == Ok \"tom\"\n\nThe object *can* have other fields. Lots of them! The only thing this decoder\ncares about is if `x` is present and that the value there is an `Int`.\n\nCheck out [`map2`](#map2) to see how to decode multiple fields!\n-}\nfield : String -> Decoder a -> Decoder a\nfield =\n    Elm.Kernel.Json.decodeField\n\n\n{-| Decode a nested JSON object, requiring certain fields.\n\n    json = \"\"\"{ \"person\": { \"name\": \"tom\", \"age\": 42 } }\"\"\"\n\n    decodeString (at [\"person\", \"name\"] string) json  == Ok \"tom\"\n    decodeString (at [\"person\", \"age\" ] int   ) json  == Ok 42\n\nThis is really just a shorthand for saying things like:\n\n    field \"person\" (field \"name\" string) == at [\"person\",\"name\"] string\n-}\nat : List String -> Decoder a -> Decoder a\nat fields decoder =\n    List.foldr field decoder fields\n\n\n{-| Decode a JSON array, requiring a particular index.\n\n    json = \"\"\"[ \"alice\", \"bob\", \"chuck\" ]\"\"\"\n\n    decodeString (index 0 string) json  == Ok \"alice\"\n    decodeString (index 1 string) json  == Ok \"bob\"\n    decodeString (index 2 string) json  == Ok \"chuck\"\n    decodeString (index 3 string) json  == Err ...\n-}\nindex : Int -> Decoder a -> Decoder a\nindex =\n    Elm.Kernel.Json.decodeIndex\n\n\n\n-- WEIRD STRUCTURE\n\n\n{-| Helpful for dealing with optional fields. Here are a few slightly different\nexamples:\n\n    json = \"\"\"{ \"name\": \"tom\", \"age\": 42 }\"\"\"\n\n    decodeString (maybe (field \"age\"    int  )) json == Ok (Just 42)\n    decodeString (maybe (field \"name\"   int  )) json == Ok Nothing\n    decodeString (maybe (field \"height\" float)) json == Ok Nothing\n\n    decodeString (field \"age\"    (maybe int  )) json == Ok (Just 42)\n    decodeString (field \"name\"   (maybe int  )) json == Ok Nothing\n    decodeString (field \"height\" (maybe float)) json == Err ...\n\nNotice the last example! It is saying we *must* have a field named `height` and\nthe content *may* be a float. There is no `height` field, so the decoder fails.\n\nPoint is, `maybe` will make exactly what it contains conditional. For optional\nfields, this means you probably want it *outside* a use of `field` or `at`.\n-}\nmaybe : Decoder a -> Decoder (Maybe a)\nmaybe decoder =\n  oneOf\n    [ map Just decoder\n    , succeed Nothing\n    ]\n\n\n{-| Try a bunch of different decoders. This can be useful if the JSON may come\nin a couple different formats. For example, say you want to read an array of\nnumbers, but some of them are `null`.\n\n    import String\n\n    badInt : Decoder Int\n    badInt =\n      oneOf [ int, null 0 ]\n\n    -- decodeString (list badInt) \"[1,2,null,4]\" == Ok [1,2,0,4]\n\nWhy would someone generate JSON like this? Questions like this are not good\nfor your health. The point is that you can use `oneOf` to handle situations\nlike this!\n\nYou could also use `oneOf` to help version your data. Try the latest format,\nthen a few older ones that you still support. You could use `andThen` to be\neven more particular if you wanted.\n-}\noneOf : List (Decoder a) -> Decoder a\noneOf =\n    Elm.Kernel.Json.oneOf\n\n\n\n-- MAPPING\n\n\n{-| Transform a decoder. Maybe you just want to know the length of a string:\n\n    import String\n\n    stringLength : Decoder Int\n    stringLength =\n      map String.length string\n\nIt is often helpful to use `map` with `oneOf`, like when defining `nullable`:\n\n    nullable : Decoder a -> Decoder (Maybe a)\n    nullable decoder =\n      oneOf\n        [ null Nothing\n        , map Just decoder\n        ]\n-}\nmap : (a -> value) -> Decoder a -> Decoder value\nmap =\n    Elm.Kernel.Json.map1\n\n\n{-| Try two decoders and then combine the result. We can use this to decode\nobjects with many fields:\n\n    type alias Point = { x : Float, y : Float }\n\n    point : Decoder Point\n    point =\n      map2 Point\n        (field \"x\" float)\n        (field \"y\" float)\n\n    -- decodeString point \"\"\"{ \"x\": 3, \"y\": 4 }\"\"\" == Ok { x = 3, y = 4 }\n\nIt tries each individual decoder and puts the result together with the `Point`\nconstructor.\n-}\nmap2 : (a -> b -> value) -> Decoder a -> Decoder b -> Decoder value\nmap2 =\n    Elm.Kernel.Json.map2\n\n\n{-| Try three decoders and then combine the result. We can use this to decode\nobjects with many fields:\n\n    type alias Person = { name : String, age : Int, height : Float }\n\n    person : Decoder Person\n    person =\n      map3 Person\n        (at [\"name\"] string)\n        (at [\"info\",\"age\"] int)\n        (at [\"info\",\"height\"] float)\n\n    -- json = \"\"\"{ \"name\": \"tom\", \"info\": { \"age\": 42, \"height\": 1.8 } }\"\"\"\n    -- decodeString person json == Ok { name = \"tom\", age = 42, height = 1.8 }\n\nLike `map2` it tries each decoder in order and then give the results to the\n`Person` constructor. That can be any function though!\n-}\nmap3 : (a -> b -> c -> value) -> Decoder a -> Decoder b -> Decoder c -> Decoder value\nmap3 =\n    Elm.Kernel.Json.map3\n\n\n{-|-}\nmap4 : (a -> b -> c -> d -> value) -> Decoder a -> Decoder b -> Decoder c -> Decoder d -> Decoder value\nmap4 =\n    Elm.Kernel.Json.map4\n\n\n{-|-}\nmap5 : (a -> b -> c -> d -> e -> value) -> Decoder a -> Decoder b -> Decoder c -> Decoder d -> Decoder e -> Decoder value\nmap5 =\n    Elm.Kernel.Json.map5\n\n\n{-|-}\nmap6 : (a -> b -> c -> d -> e -> f -> value) -> Decoder a -> Decoder b -> Decoder c -> Decoder d -> Decoder e -> Decoder f -> Decoder value\nmap6 =\n    Elm.Kernel.Json.map6\n\n\n{-|-}\nmap7 : (a -> b -> c -> d -> e -> f -> g -> value) -> Decoder a -> Decoder b -> Decoder c -> Decoder d -> Decoder e -> Decoder f -> Decoder g -> Decoder value\nmap7 =\n    Elm.Kernel.Json.map7\n\n\n{-|-}\nmap8 : (a -> b -> c -> d -> e -> f -> g -> h -> value) -> Decoder a -> Decoder b -> Decoder c -> Decoder d -> Decoder e -> Decoder f -> Decoder g -> Decoder h -> Decoder value\nmap8 =\n    Elm.Kernel.Json.map8\n\n\n\n-- RUN DECODERS\n\n\n{-| Parse the given string into a JSON value and then run the `Decoder` on it.\nThis will fail if the string is not well-formed JSON or if the `Decoder`\nfails for some reason.\n\n    decodeString int \"4\"     == Ok 4\n    decodeString int \"1 + 2\" == Err ...\n-}\ndecodeString : Decoder a -> String -> Result Error a\ndecodeString =\n  Elm.Kernel.Json.runOnString\n\n\n{-| Run a `Decoder` on some JSON `Value`. You can send these JSON values\nthrough ports, so that is probably the main time you would use this function.\n-}\ndecodeValue : Decoder a -> Value -> Result Error a\ndecodeValue =\n  Elm.Kernel.Json.run\n\n\n{-| Represents a JavaScript value.\n-}\ntype alias Value = Json.Encode.Value\n\n\n{-| A structured error describing exactly how the decoder failed. You can use\nthis to create more elaborate visualizations of a decoder problem. For example,\nyou could show the entire JSON object and show the part causing the failure in\nred.\n-}\ntype Error\n  = Field String Error\n  | Index Int Error\n  | OneOf (List Error)\n  | Failure String Value\n\n\n{-| Convert a decoding error into a `String` that is nice for debugging.\n\nIt produces multiple lines of output, so you may want to peek at it with\nsomething like this:\n\n    import Html\n    import Json.Decode as Decode\n\n    errorToHtml : Decode.Error -> Html.Html msg\n    errorToHtml error =\n      Html.pre [] [ Html.text (Decode.errorToString error) ]\n\n**Note:** It would be cool to do nicer coloring and fancier HTML, but I wanted\nto avoid having an `elm/html` dependency for now. It is totally possible to\ncrawl the `Error` structure and create this separately though!\n-}\nerrorToString : Error -> String\nerrorToString error =\n  errorToStringHelp error []\n\n\nerrorToStringHelp : Error -> List String -> String\nerrorToStringHelp error context =\n  case error of\n    Field f err ->\n      let\n        isSimple =\n          case String.uncons f of\n            Nothing ->\n              False\n\n            Just (char, rest) ->\n              Char.isAlpha char && String.all Char.isAlphaNum rest\n\n        fieldName =\n          if isSimple then \".\" ++ f else \"[\'\" ++ f ++ \"\']\"\n      in\n        errorToStringHelp err (fieldName :: context)\n\n    Index i err ->\n      let\n        indexName =\n          \"[\" ++ String.fromInt i ++ \"]\"\n      in\n        errorToStringHelp err (indexName :: context)\n\n    OneOf errors ->\n      case errors of\n        [] ->\n          \"Ran into a Json.Decode.oneOf with no possibilities\" ++\n            case context of\n              [] ->\n                \"!\"\n              _ ->\n                \" at json\" ++ String.join \"\" (List.reverse context)\n\n        [err] ->\n          errorToStringHelp err context\n\n        _ ->\n          let\n            starter =\n              case context of\n                [] ->\n                  \"Json.Decode.oneOf\"\n                _ ->\n                  \"The Json.Decode.oneOf at json\" ++ String.join \"\" (List.reverse context)\n\n            introduction =\n              starter ++ \" failed in the following \" ++ String.fromInt (List.length errors) ++ \" ways:\"\n          in\n            String.join \"\\n\\n\" (introduction :: List.indexedMap errorOneOf errors)\n\n    Failure msg json ->\n      let\n        introduction =\n          case context of\n            [] ->\n              \"Problem with the given value:\\n\\n\"\n            _ ->\n              \"Problem with the value at json\" ++ String.join \"\" (List.reverse context) ++ \":\\n\\n    \"\n      in\n        introduction ++ indent (Json.Encode.encode 4 json) ++ \"\\n\\n\" ++ msg\n\n\nerrorOneOf : Int -> Error -> String\nerrorOneOf i error =\n  \"\\n\\n(\" ++ String.fromInt (i + 1) ++ \") \" ++ indent (errorToString error)\n\n\nindent : String -> String\nindent str =\n  String.join \"\\n    \" (String.split \"\\n\" str)\n\n\n\n-- FANCY PRIMITIVES\n\n\n{-| Ignore the JSON and produce a certain Elm value.\n\n    decodeString (succeed 42) \"true\"    == Ok 42\n    decodeString (succeed 42) \"[1,2,3]\" == Ok 42\n    decodeString (succeed 42) \"hello\"   == Err ... -- this is not a valid JSON string\n\nThis is handy when used with `oneOf` or `andThen`.\n-}\nsucceed : a -> Decoder a\nsucceed =\n  Elm.Kernel.Json.succeed\n\n\n{-| Ignore the JSON and make the decoder fail. This is handy when used with\n`oneOf` or `andThen` where you want to give a custom error message in some\ncase.\n\nSee the [`andThen`](#andThen) docs for an example.\n-}\nfail : String -> Decoder a\nfail =\n  Elm.Kernel.Json.fail\n\n\n{-| Create decoders that depend on previous results. If you are creating\nversioned data, you might do something like this:\n\n    info : Decoder Info\n    info =\n      field \"version\" int\n        |> andThen infoHelp\n\n    infoHelp : Int -> Decoder Info\n    infoHelp version =\n      case version of\n        4 ->\n          infoDecoder4\n\n        3 ->\n          infoDecoder3\n\n        _ ->\n          fail <|\n            \"Trying to decode info, but version \"\n            ++ toString version ++ \" is not supported.\"\n\n    -- infoDecoder4 : Decoder Info\n    -- infoDecoder3 : Decoder Info\n-}\nandThen : (a -> Decoder b) -> Decoder a -> Decoder b\nandThen =\n  Elm.Kernel.Json.andThen\n\n\n{-| Sometimes you have JSON with recursive structure, like nested comments.\nYou can use `lazy` to make sure your decoder unrolls lazily.\n\n    type alias Comment =\n      { message : String\n      , responses : Responses\n      }\n\n    type Responses = Responses (List Comment)\n\n    comment : Decoder Comment\n    comment =\n      map2 Comment\n        (field \"message\" string)\n        (field \"responses\" (map Responses (list (lazy (\\_ -> comment)))))\n\nIf we had said `list comment` instead, we would start expanding the value\ninfinitely. What is a `comment`? It is a decoder for objects where the\n`responses` field contains comments. What is a `comment` though? Etc.\n\nBy using `list (lazy (\\_ -> comment))` we make sure the decoder only expands\nto be as deep as the JSON we are given. You can read more about recursive data\nstructures [here][].\n\n[here]: https://github.com/elm/compiler/blob/master/hints/recursive-alias.md\n-}\nlazy : (() -> Decoder a) -> Decoder a\nlazy thunk =\n  andThen thunk (succeed ())\n\n\n{-| Do not do anything with a JSON value, just bring it into Elm as a `Value`.\nThis can be useful if you have particularly complex data that you would like to\ndeal with later. Or if you are going to send it out a port and do not care\nabout its structure.\n-}\nvalue : Decoder Value\nvalue =\n  Elm.Kernel.Json.decodeValue\n\n\n{-| Decode a `null` value into some Elm value.\n\n    decodeString (null False) \"null\" == Ok False\n    decodeString (null 42) \"null\"    == Ok 42\n    decodeString (null 42) \"42\"      == Err ..\n    decodeString (null 42) \"false\"   == Err ..\n\nSo if you ever see a `null`, this will return whatever value you specified.\n-}\nnull : a -> Decoder a\nnull =\n  Elm.Kernel.Json.decodeNull\n'})),
						_Utils_Tuple2(
						'Encode.elm',
						$author$project$CompilationInterface$SourceFiles$Generated_SourceFiles$BlobNode(
							{utf8: 'module Json.Encode exposing\n  ( Value\n  , encode\n  , string, int, float, bool, null\n  , list, array, set\n  , object, dict\n  )\n\n{-| Library for turning Elm values into Json values.\n\n# Encoding\n@docs encode, Value\n\n# Primitives\n@docs string, int, float, bool, null\n\n# Arrays\n@docs list, array, set\n\n# Objects\n@docs object, dict\n-}\n\n\nimport Array exposing (Array)\nimport Dict exposing (Dict)\nimport Set exposing (Set)\nimport Elm.Kernel.Json\n\n\n\n-- ENCODE\n\n\n{-| Represents a JavaScript value.\n-}\ntype Value = Value\n\n\n{-| Convert a `Value` into a prettified string. The first argument specifies\nthe amount of indentation in the resulting string.\n\n    import Json.Encode as Encode\n\n    tom : Encode.Value\n    tom =\n        Encode.object\n            [ ( \"name\", Encode.string \"Tom\" )\n            , ( \"age\", Encode.int 42 )\n            ]\n\n    compact = Encode.encode 0 tom\n    -- {\"name\":\"Tom\",\"age\":42}\n\n    readable = Encode.encode 4 tom\n    -- {\n    --     \"name\": \"Tom\",\n    --     \"age\": 42\n    -- }\n-}\nencode : Int -> Value -> String\nencode =\n    Elm.Kernel.Json.encode\n\n\n\n-- PRIMITIVES\n\n\n{-| Turn a `String` into a JSON string.\n\n    import Json.Encode exposing (encode, string)\n\n    -- encode 0 (string \"\")      == \"\\\"\\\"\"\n    -- encode 0 (string \"abc\")   == \"\\\"abc\\\"\"\n    -- encode 0 (string \"hello\") == \"\\\"hello\\\"\"\n-}\nstring : String -> Value\nstring =\n    Elm.Kernel.Json.wrap\n\n\n{-| Turn an `Int` into a JSON number.\n\n    import Json.Encode exposing (encode, int)\n\n    -- encode 0 (int 42) == \"42\"\n    -- encode 0 (int -7) == \"-7\"\n    -- encode 0 (int 0)  == \"0\"\n-}\nint : Int -> Value\nint =\n    Elm.Kernel.Json.wrap\n\n\n{-| Turn a `Float` into a JSON number.\n\n    import Json.Encode exposing (encode, float)\n\n    -- encode 0 (float 3.14)     == \"3.14\"\n    -- encode 0 (float 1.618)    == \"1.618\"\n    -- encode 0 (float -42)      == \"-42\"\n    -- encode 0 (float NaN)      == \"null\"\n    -- encode 0 (float Infinity) == \"null\"\n\n**Note:** Floating point numbers are defined in the [IEEE 754 standard][ieee]\nwhich is hardcoded into almost all CPUs. This standard allows `Infinity` and\n`NaN`. [The JSON spec][json] does not include these values, so we encode them\nboth as `null`.\n\n[ieee]: https://en.wikipedia.org/wiki/IEEE_754\n[json]: https://www.json.org/\n-}\nfloat : Float -> Value\nfloat =\n    Elm.Kernel.Json.wrap\n\n\n{-| Turn a `Bool` into a JSON boolean.\n\n    import Json.Encode exposing (encode, bool)\n\n    -- encode 0 (bool True)  == \"true\"\n    -- encode 0 (bool False) == \"false\"\n-}\nbool : Bool -> Value\nbool =\n    Elm.Kernel.Json.wrap\n\n\n\n-- NULLS\n\n\n{-| Create a JSON `null` value.\n\n    import Json.Encode exposing (encode, null)\n\n    -- encode 0 null == \"null\"\n-}\nnull : Value\nnull =\n    Elm.Kernel.Json.encodeNull\n\n\n\n-- ARRAYS\n\n\n{-| Turn a `List` into a JSON array.\n\n    import Json.Encode as Encode exposing (bool, encode, int, list, string)\n\n    -- encode 0 (list int [1,3,4])       == \"[1,3,4]\"\n    -- encode 0 (list bool [True,False]) == \"[true,false]\"\n    -- encode 0 (list string [\"a\",\"b\"])  == \"\"\"[\"a\",\"b\"]\"\"\"\n\n-}\nlist : (a -> Value) -> List a -> Value\nlist func entries =\n    Elm.Kernel.Json.wrap\n        (List.foldl (Elm.Kernel.Json.addEntry func) (Elm.Kernel.Json.emptyArray ()) entries)\n\n\n{-| Turn an `Array` into a JSON array.\n-}\narray : (a -> Value) -> Array a -> Value\narray func entries =\n    Elm.Kernel.Json.wrap\n        (Array.foldl (Elm.Kernel.Json.addEntry func) (Elm.Kernel.Json.emptyArray ()) entries)\n\n\n{-| Turn an `Set` into a JSON array.\n-}\nset : (a -> Value) -> Set a -> Value\nset func entries =\n    Elm.Kernel.Json.wrap\n        (Set.foldl (Elm.Kernel.Json.addEntry func) (Elm.Kernel.Json.emptyArray ()) entries)\n\n\n\n-- OBJECTS\n\n\n{-| Create a JSON object.\n\n    import Json.Encode as Encode\n\n    tom : Encode.Value\n    tom =\n        Encode.object\n            [ ( \"name\", Encode.string \"Tom\" )\n            , ( \"age\", Encode.int 42 )\n            ]\n\n    -- Encode.encode 0 tom == \"\"\"{\"name\":\"Tom\",\"age\":42}\"\"\"\n-}\nobject : List (String, Value) -> Value\nobject pairs =\n    Elm.Kernel.Json.wrap (\n        List.foldl\n            (\\(k,v) obj -> Elm.Kernel.Json.addField k v obj)\n            (Elm.Kernel.Json.emptyObject ())\n            pairs\n    )\n\n\n{-| Turn a `Dict` into a JSON object.\n\n    import Dict exposing (Dict)\n    import Json.Encode as Encode\n\n    people : Dict String Int\n    people =\n      Dict.fromList [ (\"Tom\",42), (\"Sue\", 38) ]\n\n    -- Encode.encode 0 (Encode.dict identity Encode.int people)\n    --   == \"\"\"{\"Tom\":42,\"Sue\":38}\"\"\"\n-}\ndict : (k -> String) -> (v -> Value) -> Dict k v -> Value\ndict toKey toValue dictionary =\n    Elm.Kernel.Json.wrap (\n        Dict.foldl\n            (\\key value obj -> Elm.Kernel.Json.addField (toKey key) (toValue value) obj)\n            (Elm.Kernel.Json.emptyObject ())\n            dictionary\n    )\n'}))
					])))
		]));
var $author$project$CompilationInterface$SourceFiles$file_tree____elm_kernel_modules_json_src = A2(
	$author$project$CompilationInterface$SourceFiles$mapBlobs,
	function (blobValue) {
		return {utf8: blobValue.utf8};
	},
	$author$project$CompilationInterface$SourceFiles$mapFileTreeNodeFromGenerated($author$project$CompilationInterface$SourceFiles$Generated_SourceFiles$file_tree_node_elm_kernel_modules_json_src));
var $author$project$CompilationInterface$SourceFiles$Generated_SourceFiles$file_tree_node_elm_kernel_modules_time_src = $author$project$CompilationInterface$SourceFiles$Generated_SourceFiles$TreeNode(
	_List_fromArray(
		[
			_Utils_Tuple2(
			'Time.elm',
			$author$project$CompilationInterface$SourceFiles$Generated_SourceFiles$BlobNode(
				{utf8: 'effect module Time where { subscription = MySub } exposing\n  ( Posix\n  , now\n  , every\n  , posixToMillis\n  , millisToPosix\n  , Zone\n  , utc\n  , here\n  , toYear\n  , toMonth\n  , toDay\n  , toWeekday\n  , toHour\n  , toMinute\n  , toSecond\n  , toMillis\n  , Month(..)\n  , Weekday(..)\n  , customZone\n  , getZoneName\n  , ZoneName(..)\n  )\n\n\n{-| Library for working with time and time zones.\n\n# Time\n@docs Posix, now, every, posixToMillis, millisToPosix\n\n# Time Zones\n@docs Zone, utc, here\n\n# Human Times\n@docs toYear, toMonth, toDay, toWeekday, toHour, toMinute, toSecond, toMillis\n\n# Weeks and Months\n@docs Weekday, Month\n\n# For Package Authors\n@docs customZone, getZoneName, ZoneName\n\n-}\n\n\nimport Basics exposing (..)\nimport Dict\nimport Elm.Kernel.Time\nimport List exposing ((::))\nimport Maybe exposing (Maybe(..))\nimport Platform\nimport Platform.Sub exposing (Sub)\nimport Process\nimport String exposing (String)\nimport Task exposing (Task)\n\n\n\n-- POSIX\n\n\n{-| A computer representation of time. It is the same all over Earth, so if we\nhave a phone call or meeting at a certain POSIX time, there is no ambiguity.\n\nIt is very hard for humans to _read_ a POSIX time though, so we use functions\nlike [`toHour`](#toHour) and [`toMinute`](#toMinute) to `view` them.\n-}\ntype Posix = Posix Int\n\n\n{-| Get the POSIX time at the moment when this task is run.\n-}\nnow : Task x Posix\nnow =\n  Elm.Kernel.Time.now millisToPosix\n\n\n{-| Turn a `Posix` time into the number of milliseconds since 1970 January 1\nat 00:00:00 UTC. It was a Thursday.\n-}\nposixToMillis : Posix -> Int\nposixToMillis (Posix millis) =\n  millis\n\n\n{-| Turn milliseconds into a `Posix` time.\n-}\nmillisToPosix : Int -> Posix\nmillisToPosix =\n  Posix\n\n\n\n-- TIME ZONES\n\n\n{-| Information about a particular time zone.\n\nThe [IANA Time Zone Database][iana] tracks things like UTC offsets and\ndaylight-saving rules so that you can turn a `Posix` time into local times\nwithin a time zone.\n\nSee [`utc`](#utc), [`here`](#here), and [`Browser.Env`][env] to learn how to\nobtain `Zone` values.\n\n[iana]: https://www.iana.org/time-zones\n[env]: /packages/elm/browser/latest/Browser#Env\n-}\ntype Zone =\n  Zone Int (List Era)\n\n\n-- TODO: add this note back to `Zone` docs when it is true\n--\n-- Did you know that in California the times change from 3pm PST to 3pm PDT to\n-- capture whether it is daylight-saving time? The database tracks those\n-- abbreviation changes too. (Tons of time zones do that actually.)\n--\n\n\n{-| Currently the public API only needs:\n\n- `start` is the beginning of this `Era` in \"minutes since the Unix Epoch\"\n- `offset` is the UTC offset of this `Era` in minutes\n\nBut eventually, it will make sense to have `abbr : String` for `PST` vs `PDT`\n-}\ntype alias Era =\n  { start : Int\n  , offset : Int\n  }\n\n\n{-| The time zone for Coordinated Universal Time ([UTC][])\n\nThe `utc` zone has no time adjustments. It never observes daylight-saving\ntime and it never shifts around based on political restructuring.\n\n[UTC]: https://en.wikipedia.org/wiki/Coordinated_Universal_Time\n-}\nutc : Zone\nutc =\n  Zone 0 []\n\n\n{-| Produce a `Zone` based on the current UTC offset. You can use this to figure\nout what day it is where you are:\n\n    import Task exposing (Task)\n    import Time\n\n    whatDayIsIt : Task x Int\n    whatDayIsIt =\n      Task.map2 Time.toDay Time.here Time.now\n\n**Accuracy Note:** This function can only give time zones like `Etc/GMT+9` or\n`Etc/GMT-6`. It cannot give you `Europe/Stockholm`, `Asia/Tokyo`, or any other\nnormal time zone from the [full list][tz] due to limitations in JavaScript.\nFor example, if you run `here` in New York City, the resulting `Zone` will\nnever be `America/New_York`. Instead you get `Etc/GMT-5` or `Etc/GMT-4`\ndepending on Daylight Saving Time. So even though browsers must have internal\naccess to `America/New_York` to figure out that offset, there is no public API\nto get the full information. This means the `Zone` you get from this function\nwill act weird if (1) an application stays open across a Daylight Saving Time\nboundary or (2) you try to use it on historical data.\n\n**Future Note:** We can improve `here` when there is good browser support for\nJavaScript functions that (1) expose the IANA time zone database and (2) let\nyou ask the time zone of the computer. The committee that reviews additions to\nJavaScript is called TC39, and I encourage you to push for these capabilities! I\ncannot do it myself unfortunately.\n\n**Alternatives:** See the `customZone` docs to learn how to implement stopgaps.\n\n[tz]: https://en.wikipedia.org/wiki/List_of_tz_database_time_zones\n-}\nhere : Task x Zone\nhere =\n  Elm.Kernel.Time.here ()\n\n\n\n-- DATES\n\n\n{-| What year is it?!\n\n    import Time exposing (toYear, utc, millisToPosix)\n\n    toYear utc (millisToPosix 0) == 1970\n    toYear nyc (millisToPosix 0) == 1969\n\n    -- pretend `nyc` is the `Zone` for America/New_York.\n-}\ntoYear : Zone -> Posix -> Int\ntoYear zone time =\n  (toCivil (toAdjustedMinutes zone time)).year\n\n\n{-| What month is it?!\n\n    import Time exposing (toMonth, utc, millisToPosix)\n\n    toMonth utc (millisToPosix 0) == Jan\n    toMonth nyc (millisToPosix 0) == Dec\n\n    -- pretend `nyc` is the `Zone` for America/New_York.\n-}\ntoMonth : Zone -> Posix -> Month\ntoMonth zone time =\n  case (toCivil (toAdjustedMinutes zone time)).month of\n    1  -> Jan\n    2  -> Feb\n    3  -> Mar\n    4  -> Apr\n    5  -> May\n    6  -> Jun\n    7  -> Jul\n    8  -> Aug\n    9  -> Sep\n    10 -> Oct\n    11 -> Nov\n    _  -> Dec\n\n\n{-| What day is it?! (Days go from 1 to 31)\n\n    import Time exposing (toDay, utc, millisToPosix)\n\n    toDay utc (millisToPosix 0) == 1\n    toDay nyc (millisToPosix 0) == 31\n\n    -- pretend `nyc` is the `Zone` for America/New_York.\n\n-}\ntoDay : Zone -> Posix -> Int\ntoDay zone time =\n  (toCivil (toAdjustedMinutes zone time)).day\n\n\n{-| What day of the week is it?\n\n    import Time exposing (toWeekday, utc, millisToPosix)\n\n    toWeekday utc (millisToPosix 0) == Thu\n    toWeekday nyc (millisToPosix 0) == Wed\n\n    -- pretend `nyc` is the `Zone` for America/New_York.\n-}\ntoWeekday : Zone -> Posix -> Weekday\ntoWeekday zone time =\n  case modBy 7 (flooredDiv (toAdjustedMinutes zone time) (60 * 24)) of\n    0 -> Thu\n    1 -> Fri\n    2 -> Sat\n    3 -> Sun\n    4 -> Mon\n    5 -> Tue\n    _ -> Wed\n\n\n{-| What hour is it? (From 0 to 23)\n\n    import Time exposing (toHour, utc, millisToPosix)\n\n    toHour utc (millisToPosix 0) == 0  -- 12am\n    toHour nyc (millisToPosix 0) == 19 -- 7pm\n\n    -- pretend `nyc` is the `Zone` for America/New_York.\n-}\ntoHour : Zone -> Posix -> Int\ntoHour zone time =\n  modBy 24 (flooredDiv (toAdjustedMinutes zone time) 60)\n\n\n{-| What minute is it? (From 0 to 59)\n\n    import Time exposing (toMinute, utc, millisToPosix)\n\n    toMinute utc (millisToPosix 0) == 0\n\nThis can be different in different time zones. Some time zones are offset\nby 30 or 45 minutes!\n-}\ntoMinute : Zone -> Posix -> Int\ntoMinute zone time =\n  modBy 60 (toAdjustedMinutes zone time)\n\n\n{-| What second is it?\n\n    import Time exposing (toSecond, utc, millisToPosix)\n\n    toSecond utc (millisToPosix    0) == 0\n    toSecond utc (millisToPosix 1234) == 1\n    toSecond utc (millisToPosix 5678) == 5\n-}\ntoSecond : Zone -> Posix -> Int\ntoSecond _ time =\n  modBy 60 (flooredDiv (posixToMillis time) 1000)\n\n\n{-|\n    import Time exposing (toMillis, utc, millisToPosix)\n\n    toMillis utc (millisToPosix    0) == 0\n    toMillis utc (millisToPosix 1234) == 234\n    toMillis utc (millisToPosix 5678) == 678\n-}\ntoMillis : Zone -> Posix -> Int\ntoMillis _ time =\n  modBy 1000 (posixToMillis time)\n\n\n\n-- DATE HELPERS\n\n\ntoAdjustedMinutes : Zone -> Posix -> Int\ntoAdjustedMinutes (Zone defaultOffset eras) time =\n  toAdjustedMinutesHelp defaultOffset (flooredDiv (posixToMillis time) 60000) eras\n\n\ntoAdjustedMinutesHelp : Int -> Int -> List Era -> Int\ntoAdjustedMinutesHelp defaultOffset posixMinutes eras =\n  case eras of\n    [] ->\n      posixMinutes + defaultOffset\n\n    era :: olderEras ->\n      if era.start < posixMinutes then\n        posixMinutes + era.offset\n      else\n        toAdjustedMinutesHelp defaultOffset posixMinutes olderEras\n\n\ntoCivil : Int -> { year : Int, month : Int, day : Int }\ntoCivil minutes =\n  let\n    rawDay    = flooredDiv minutes (60 * 24) + 719468\n    era       = (if rawDay >= 0 then rawDay else rawDay - 146096) // 146097\n    dayOfEra  = rawDay - era * 146097 -- [0, 146096]\n    yearOfEra = (dayOfEra - dayOfEra // 1460 + dayOfEra // 36524 - dayOfEra // 146096) // 365 -- [0, 399]\n    year      = yearOfEra + era * 400\n    dayOfYear = dayOfEra - (365 * yearOfEra + yearOfEra // 4 - yearOfEra // 100) -- [0, 365]\n    mp        = (5 * dayOfYear + 2) // 153 -- [0, 11]\n    month     = mp + (if mp < 10 then 3 else -9) -- [1, 12]\n  in\n  { year = year + (if month <= 2 then 1 else 0)\n  , month = month\n  , day = dayOfYear - (153 * mp + 2) // 5 + 1 -- [1, 31]\n  }\n\n\nflooredDiv : Int -> Float -> Int\nflooredDiv numerator denominator =\n  floor (toFloat numerator / denominator)\n\n\n\n-- WEEKDAYS AND MONTHS\n\n\n{-| Represents a `Weekday` so that you can convert it to a `String` or `Int`\nhowever you please. For example, if you need the Japanese representation, you\ncan say:\n\n    toJapaneseWeekday : Weekday -> String\n    toJapaneseWeekday weekday =\n      case weekday of\n        Mon -> \"月\"\n        Tue -> \"火\"\n        Wed -> \"水\"\n        Thu -> \"木\"\n        Fri -> \"金\"\n        Sat -> \"土\"\n        Sun -> \"日\"\n-}\ntype Weekday = Mon | Tue | Wed | Thu | Fri | Sat | Sun\n\n\n{-| Represents a `Month` so that you can convert it to a `String` or `Int`\nhowever you please. For example, if you need the Danish representation, you\ncan say:\n\n    toDanishMonth : Month -> String\n    toDanishMonth month =\n      case month of\n        Jan -> \"januar\"\n        Feb -> \"februar\"\n        Mar -> \"marts\"\n        Apr -> \"april\"\n        May -> \"maj\"\n        Jun -> \"juni\"\n        Jul -> \"juli\"\n        Aug -> \"august\"\n        Sep -> \"september\"\n        Oct -> \"oktober\"\n        Nov -> \"november\"\n        Dec -> \"december\"\n-}\ntype Month = Jan | Feb | Mar | Apr | May | Jun | Jul | Aug | Sep | Oct | Nov | Dec\n\n\n\n-- SUBSCRIPTIONS\n\n\n{-| Get the current time periodically. How often though? Well, you provide an\ninterval in milliseconds (like `1000` for a second or `60 * 1000` for a minute\nor `60 * 60 * 1000` for an hour) and that is how often you get a new time!\n\nCheck out [this example](https://elm-lang.org/examples/time) to see how to use\nit in an application.\n\n**This function is not for animation.** Use the [`elm/animation-frame`][af]\npackage for that sort of thing! It syncs up with repaints and will end up\nbeing much smoother for any moving visuals.\n\n[af]: /packages/elm/animation-frame/latest\n-}\nevery : Float -> (Posix -> msg) -> Sub msg\nevery interval tagger =\n  subscription (Every interval tagger)\n\n\ntype MySub msg =\n  Every Float (Posix -> msg)\n\n\nsubMap : (a -> b) -> MySub a -> MySub b\nsubMap f (Every interval tagger) =\n  Every interval (f << tagger)\n\n\n\n-- EFFECT MANAGER\n\n\ntype alias State msg =\n  { taggers : Taggers msg\n  , processes : Processes\n  }\n\n\ntype alias Processes =\n  Dict.Dict Float Platform.ProcessId\n\n\ntype alias Taggers msg =\n  Dict.Dict Float (List (Posix -> msg))\n\n\ninit : Task Never (State msg)\ninit =\n  Task.succeed (State Dict.empty Dict.empty)\n\n\nonEffects : Platform.Router msg Float -> List (MySub msg) -> State msg -> Task Never (State msg)\nonEffects router subs {processes} =\n  let\n    newTaggers =\n      List.foldl addMySub Dict.empty subs\n\n    leftStep interval taggers (spawns, existing, kills) =\n      ( interval :: spawns, existing, kills )\n\n    bothStep interval taggers id (spawns, existing, kills) =\n      ( spawns, Dict.insert interval id existing, kills )\n\n    rightStep _ id (spawns, existing, kills) =\n      ( spawns, existing, Task.andThen (\\_ -> kills) (Process.kill id) )\n\n    (spawnList, existingDict, killTask) =\n      Dict.merge\n        leftStep\n        bothStep\n        rightStep\n        newTaggers\n        processes\n        ([], Dict.empty, Task.succeed ())\n  in\n    killTask\n      |> Task.andThen (\\_ -> spawnHelp router spawnList existingDict)\n      |> Task.andThen (\\newProcesses -> Task.succeed (State newTaggers newProcesses))\n\n\naddMySub : MySub msg -> Taggers msg -> Taggers msg\naddMySub (Every interval tagger) state =\n  case Dict.get interval state of\n    Nothing ->\n      Dict.insert interval [tagger] state\n\n    Just taggers ->\n      Dict.insert interval (tagger :: taggers) state\n\n\nspawnHelp : Platform.Router msg Float -> List Float -> Processes -> Task.Task x Processes\nspawnHelp router intervals processes =\n  case intervals of\n    [] ->\n      Task.succeed processes\n\n    interval :: rest ->\n      let\n        spawnTimer =\n          Process.spawn (setInterval interval (Platform.sendToSelf router interval))\n\n        spawnRest id =\n          spawnHelp router rest (Dict.insert interval id processes)\n      in\n        spawnTimer\n          |> Task.andThen spawnRest\n\n\nonSelfMsg : Platform.Router msg Float -> Float -> State msg -> Task Never (State msg)\nonSelfMsg router interval state =\n  case Dict.get interval state.taggers of\n    Nothing ->\n      Task.succeed state\n\n    Just taggers ->\n      let\n        tellTaggers time =\n          Task.sequence (List.map (\\tagger -> Platform.sendToApp router (tagger time)) taggers)\n      in\n        now\n          |> Task.andThen tellTaggers\n          |> Task.andThen (\\_ -> Task.succeed state)\n\n\nsetInterval : Float -> Task Never () -> Task x Never\nsetInterval =\n  Elm.Kernel.Time.setInterval\n\n\n\n-- FOR PACKAGE AUTHORS\n\n\n\n{-| **Intended for package authors.**\n\nThe documentation of [`here`](#here) explains that it has certain accuracy\nlimitations that block on adding new APIs to JavaScript. The `customZone`\nfunction is a stopgap that takes:\n\n1. A default offset in minutes. So `Etc/GMT-5` is `customZone (-5 * 60) []`\nand `Etc/GMT+9` is `customZone (9 * 60) []`.\n2. A list of exceptions containing their `start` time in \"minutes since the Unix\nepoch\" and their `offset` in \"minutes from UTC\"\n\nHuman times will be based on the nearest `start`, falling back on the default\noffset if the time is older than all of the exceptions.\n\nWhen paired with `getZoneName`, this allows you to load the real IANA time zone\ndatabase however you want: HTTP, cache, hardcode, etc.\n\n**Note:** If you use this, please share your work in an Elm community forum!\nI am sure others would like to hear about it, and more experience reports will\nhelp me and the any potential TC39 proposal.\n-}\ncustomZone : Int -> List { start : Int, offset : Int } -> Zone\ncustomZone =\n  Zone\n\n\n{-| **Intended for package authors.**\n\nUse `Intl.DateTimeFormat().resolvedOptions().timeZone` to try to get names\nlike `Europe/Moscow` or `America/Havana`. From there you can look it up in any\nIANA data you loaded yourself.\n-}\ngetZoneName : Task x ZoneName\ngetZoneName =\n  Elm.Kernel.Time.getZoneName ()\n\n\n{-| **Intended for package authors.**\n\nThe `getZoneName` function relies on a JavaScript API that is not supported\nin all browsers yet, so it can return the following:\n\n    -- in more recent browsers\n    Name \"Europe/Moscow\"\n    Name \"America/Havana\"\n\n    -- in older browsers\n    Offset 180\n    Offset -300\n\nSo if the real info is not available, it will tell you the current UTC offset\nin minutes, just like what `here` uses to make zones like `customZone -60 []`.\n-}\ntype ZoneName\n  = Name String\n  | Offset Int\n'}))
		]));
var $author$project$CompilationInterface$SourceFiles$file_tree____elm_kernel_modules_time_src = A2(
	$author$project$CompilationInterface$SourceFiles$mapBlobs,
	function (blobValue) {
		return {utf8: blobValue.utf8};
	},
	$author$project$CompilationInterface$SourceFiles$mapFileTreeNodeFromGenerated($author$project$CompilationInterface$SourceFiles$Generated_SourceFiles$file_tree_node_elm_kernel_modules_time_src));
var $elm$core$Tuple$mapFirst = F2(
	function (func, _v0) {
		var x = _v0.a;
		var y = _v0.b;
		return _Utils_Tuple2(
			func(x),
			y);
	});
var $author$project$LanguageServiceWorker$listAllFilesFromSourceFileTreeNode = function (node) {
	if (node.$ === 'BlobNode') {
		var blob = node.a;
		return _List_fromArray(
			[
				_Utils_Tuple2(_List_Nil, blob)
			]);
	} else {
		var tree = node.a;
		return A2(
			$elm$core$List$concatMap,
			function (_v1) {
				var entryName = _v1.a;
				var entryNode = _v1.b;
				return A2(
					$elm$core$List$map,
					$elm$core$Tuple$mapFirst(
						$elm$core$List$cons(entryName)),
					$author$project$LanguageServiceWorker$listAllFilesFromSourceFileTreeNode(entryNode));
			},
			tree);
	}
};
var $author$project$LanguageServiceWorker$elmCoreModules = $elm$core$List$concat(
	_List_fromArray(
		[
			A2(
			$elm$core$List$map,
			function (_v0) {
				var fileContent = _v0.b;
				return {implicitImport: true, moduleText: fileContent.utf8};
			},
			$author$project$LanguageServiceWorker$listAllFilesFromSourceFileTreeNode($author$project$CompilationInterface$SourceFiles$file_tree____elm_core_modules_implicit_import)),
			A2(
			$elm$core$List$map,
			function (_v1) {
				var fileContent = _v1.b;
				return {implicitImport: false, moduleText: fileContent.utf8};
			},
			A2(
				$elm$core$List$concatMap,
				$author$project$LanguageServiceWorker$listAllFilesFromSourceFileTreeNode,
				_List_fromArray(
					[$author$project$CompilationInterface$SourceFiles$file_tree____elm_core_modules_explicit_import, $author$project$CompilationInterface$SourceFiles$file_tree____elm_kernel_modules_json_src, $author$project$CompilationInterface$SourceFiles$file_tree____elm_kernel_modules_http_src, $author$project$CompilationInterface$SourceFiles$file_tree____elm_kernel_modules_time_src, $author$project$CompilationInterface$SourceFiles$file_tree____elm_kernel_modules_html_src, $author$project$CompilationInterface$SourceFiles$file_tree____elm_kernel_modules_browser_src])))
		]));
var $elm$core$Basics$identity = function (x) {
	return x;
};
var $author$project$LanguageService$SourceContentForCooking = function (a) {
	return {$: 'SourceContentForCooking', a: a};
};
var $author$project$LanguageService$CompletionItem = F4(
	function (a, b, c, d) {
		return {$: 'CompletionItem', a: a, b: b, c: c, d: d};
	});
var $author$project$Frontend$MonacoEditor$EnumCompletionItemKind = {$: 'EnumCompletionItemKind'};
var $author$project$Frontend$MonacoEditor$EnumMemberCompletionItemKind = {$: 'EnumMemberCompletionItemKind'};
var $author$project$Frontend$MonacoEditor$FunctionCompletionItemKind = {$: 'FunctionCompletionItemKind'};
var $author$project$Frontend$MonacoEditor$StructCompletionItemKind = {$: 'StructCompletionItemKind'};
var $author$project$LanguageService$completionItemsFromParsedDeclaration = F2(
	function (declName, declarationOrReference) {
		switch (declarationOrReference.$) {
			case 'FunctionOrValueDeclaration':
				var _v1 = declarationOrReference.a;
				var topLevelRange = _v1.a;
				var markdown = _v1.b.a;
				return _List_fromArray(
					[
						_Utils_Tuple2(
						A4($author$project$LanguageService$CompletionItem, declName, declName, $author$project$Frontend$MonacoEditor$FunctionCompletionItemKind, markdown),
						topLevelRange)
					]);
			case 'TypeAliasDeclaration':
				var _v2 = declarationOrReference.a;
				var topLevelRange = _v2.a;
				var markdown = _v2.b.a;
				return _List_fromArray(
					[
						_Utils_Tuple2(
						A4($author$project$LanguageService$CompletionItem, declName, declName, $author$project$Frontend$MonacoEditor$StructCompletionItemKind, markdown),
						topLevelRange)
					]);
			default:
				var _v3 = declarationOrReference.a;
				var topLevelRange = _v3.a;
				var choiceTypeMarkdown = _v3.b.a;
				var tags = declarationOrReference.b;
				return A2(
					$elm$core$List$cons,
					_Utils_Tuple2(
						A4($author$project$LanguageService$CompletionItem, declName, declName, $author$project$Frontend$MonacoEditor$EnumCompletionItemKind, choiceTypeMarkdown),
						topLevelRange),
					A2(
						$elm$core$List$map,
						function (_v4) {
							var tagName = _v4.a;
							var _v5 = _v4.b;
							var tagRange = _v5.a;
							var tagMarkdown = _v5.b.a;
							return _Utils_Tuple2(
								A4($author$project$LanguageService$CompletionItem, tagName, tagName, $author$project$Frontend$MonacoEditor$EnumMemberCompletionItemKind, tagMarkdown),
								tagRange);
						},
						tags));
		}
	});
var $elm$core$List$any = F2(
	function (isOkay, list) {
		any:
		while (true) {
			if (!list.b) {
				return false;
			} else {
				var x = list.a;
				var xs = list.b;
				if (isOkay(x)) {
					return true;
				} else {
					var $temp$isOkay = isOkay,
						$temp$list = xs;
					isOkay = $temp$isOkay;
					list = $temp$list;
					continue any;
				}
			}
		}
	});
var $elm$core$Basics$eq = _Utils_equal;
var $stil4m$elm_syntax$Elm$Syntax$Exposing$exposesFunction = F2(
	function (s, exposure) {
		if (exposure.$ === 'All') {
			return true;
		} else {
			var l = exposure.a;
			return A2(
				$elm$core$List$any,
				function (_v1) {
					var value = _v1.b;
					if (value.$ === 'FunctionExpose') {
						var fun = value.a;
						return _Utils_eq(fun, s);
					} else {
						return false;
					}
				},
				l);
		}
	});
var $author$project$LanguageService$exposingListExposesTypeOrAlias = F2(
	function (name, exposingList) {
		if (exposingList.$ === 'All') {
			return true;
		} else {
			var topLevelExposings = exposingList.a;
			return A2(
				$elm$core$List$any,
				function (_v1) {
					var topLevelExpose = _v1.b;
					switch (topLevelExpose.$) {
						case 'TypeOrAliasExpose':
							var exposedName = topLevelExpose.a;
							return _Utils_eq(exposedName, name);
						case 'TypeExpose':
							var typeExpose = topLevelExpose.a;
							return _Utils_eq(typeExpose.name, name);
						case 'InfixExpose':
							return false;
						default:
							var functionName = topLevelExpose.a;
							return _Utils_eq(name, functionName);
					}
				},
				topLevelExposings);
		}
	});
var $elm$core$Maybe$Just = function (a) {
	return {$: 'Just', a: a};
};
var $elm$core$Maybe$Nothing = {$: 'Nothing'};
var $elm$core$String$lines = _String_lines;
var $author$project$LanguageService$CookedDocumentation = function (a) {
	return {$: 'CookedDocumentation', a: a};
};
var $author$project$LanguageService$DeclarationRange = F2(
	function (a, b) {
		return {$: 'DeclarationRange', a: a, b: b};
	});
var $author$project$LanguageService$Range = F2(
	function (a, b) {
		return {$: 'Range', a: a, b: b};
	});
var $author$project$LanguageService$TopLevelScope = {$: 'TopLevelScope'};
var $author$project$LanguageService$TypeAliasDeclaration = function (a) {
	return {$: 'TypeAliasDeclaration', a: a};
};
var $elm$core$String$join = F2(
	function (sep, chunks) {
		return A2(
			_String_join,
			sep,
			_List_toArray(chunks));
	});
var $elm$core$String$concat = function (strings) {
	return A2($elm$core$String$join, '', strings);
};
var $author$project$LanguageService$markdownElmCodeBlockFromCodeLines = function (codeLines) {
	return $elm$core$String$concat(
		_List_fromArray(
			[
				'    ',
				A2($elm$core$String$join, '\n    ', codeLines)
			]));
};
var $author$project$LanguageService$documentationMarkdownFromCodeLinesAndDocumentation = F2(
	function (codeLines, maybeDocumentation) {
		var lessDocumentation = $author$project$LanguageService$markdownElmCodeBlockFromCodeLines(codeLines);
		if (maybeDocumentation.$ === 'Nothing') {
			return lessDocumentation;
		} else {
			var documentation = maybeDocumentation.a;
			return $elm$core$String$concat(
				_List_fromArray(
					[lessDocumentation, '\n\n', documentation]));
		}
	});
var $author$project$LanguageService$expandRangeToLineStart = function (_v0) {
	var _v1 = _v0.a;
	var startRow = _v1.a;
	var end = _v0.b;
	return A2(
		$author$project$LanguageService$Range,
		_Utils_Tuple2(startRow, 1),
		end);
};
var $author$project$LanguageService$rangeFromRecordRange = function (_v0) {
	var start = _v0.start;
	var end = _v0.end;
	return A2(
		$author$project$LanguageService$Range,
		_Utils_Tuple2(start.row, start.column),
		_Utils_Tuple2(end.row, end.column));
};
var $elm$core$String$length = _String_length;
var $elm$core$Basics$lt = _Utils_lt;
var $elm$core$String$slice = _String_slice;
var $elm$core$String$dropLeft = F2(
	function (n, string) {
		return (n < 1) ? string : A3(
			$elm$core$String$slice,
			n,
			$elm$core$String$length(string),
			string);
	});
var $elm$core$Basics$negate = function (n) {
	return -n;
};
var $elm$core$String$dropRight = F2(
	function (n, string) {
		return (n < 1) ? string : A3($elm$core$String$slice, 0, -n, string);
	});
var $elm$core$String$endsWith = _String_endsWith;
var $elm$core$String$startsWith = _String_startsWith;
var $elm$core$String$trim = _String_trim;
var $elm$core$String$trimLeft = _String_trimLeft;
var $elm$core$String$trimRight = _String_trimRight;
var $author$project$LanguageService$removeWrappingFromMultilineComment = function (withWrapping) {
	var trimmed = $elm$core$String$trim(withWrapping);
	var lessPrefix = $elm$core$String$trimLeft(
		A2($elm$core$String$startsWith, '{-|', trimmed) ? A2($elm$core$String$dropLeft, 3, trimmed) : (A2($elm$core$String$startsWith, '{-', trimmed) ? A2($elm$core$String$dropLeft, 2, trimmed) : trimmed));
	return $elm$core$String$trimRight(
		A2($elm$core$String$endsWith, '-}', lessPrefix) ? A2($elm$core$String$dropRight, 2, lessPrefix) : lessPrefix);
};
var $elm$core$Basics$le = _Utils_le;
var $elm$core$Basics$sub = _Basics_sub;
var $elm$core$List$drop = F2(
	function (n, list) {
		drop:
		while (true) {
			if (n <= 0) {
				return list;
			} else {
				if (!list.b) {
					return list;
				} else {
					var x = list.a;
					var xs = list.b;
					var $temp$n = n - 1,
						$temp$list = xs;
					n = $temp$n;
					list = $temp$list;
					continue drop;
				}
			}
		}
	});
var $elm$core$String$left = F2(
	function (n, string) {
		return (n < 1) ? '' : A3($elm$core$String$slice, 0, n, string);
	});
var $elm$core$List$takeReverse = F3(
	function (n, list, kept) {
		takeReverse:
		while (true) {
			if (n <= 0) {
				return kept;
			} else {
				if (!list.b) {
					return kept;
				} else {
					var x = list.a;
					var xs = list.b;
					var $temp$n = n - 1,
						$temp$list = xs,
						$temp$kept = A2($elm$core$List$cons, x, kept);
					n = $temp$n;
					list = $temp$list;
					kept = $temp$kept;
					continue takeReverse;
				}
			}
		}
	});
var $elm$core$List$takeTailRec = F2(
	function (n, list) {
		return $elm$core$List$reverse(
			A3($elm$core$List$takeReverse, n, list, _List_Nil));
	});
var $elm$core$List$takeFast = F3(
	function (ctr, n, list) {
		if (n <= 0) {
			return _List_Nil;
		} else {
			var _v0 = _Utils_Tuple2(n, list);
			_v0$1:
			while (true) {
				_v0$5:
				while (true) {
					if (!_v0.b.b) {
						return list;
					} else {
						if (_v0.b.b.b) {
							switch (_v0.a) {
								case 1:
									break _v0$1;
								case 2:
									var _v2 = _v0.b;
									var x = _v2.a;
									var _v3 = _v2.b;
									var y = _v3.a;
									return _List_fromArray(
										[x, y]);
								case 3:
									if (_v0.b.b.b.b) {
										var _v4 = _v0.b;
										var x = _v4.a;
										var _v5 = _v4.b;
										var y = _v5.a;
										var _v6 = _v5.b;
										var z = _v6.a;
										return _List_fromArray(
											[x, y, z]);
									} else {
										break _v0$5;
									}
								default:
									if (_v0.b.b.b.b && _v0.b.b.b.b.b) {
										var _v7 = _v0.b;
										var x = _v7.a;
										var _v8 = _v7.b;
										var y = _v8.a;
										var _v9 = _v8.b;
										var z = _v9.a;
										var _v10 = _v9.b;
										var w = _v10.a;
										var tl = _v10.b;
										return (ctr > 1000) ? A2(
											$elm$core$List$cons,
											x,
											A2(
												$elm$core$List$cons,
												y,
												A2(
													$elm$core$List$cons,
													z,
													A2(
														$elm$core$List$cons,
														w,
														A2($elm$core$List$takeTailRec, n - 4, tl))))) : A2(
											$elm$core$List$cons,
											x,
											A2(
												$elm$core$List$cons,
												y,
												A2(
													$elm$core$List$cons,
													z,
													A2(
														$elm$core$List$cons,
														w,
														A3($elm$core$List$takeFast, ctr + 1, n - 4, tl)))));
									} else {
										break _v0$5;
									}
							}
						} else {
							if (_v0.a === 1) {
								break _v0$1;
							} else {
								break _v0$5;
							}
						}
					}
				}
				return list;
			}
			var _v1 = _v0.b;
			var x = _v1.a;
			return _List_fromArray(
				[x]);
		}
	});
var $elm$core$List$take = F2(
	function (n, list) {
		return A3($elm$core$List$takeFast, 0, n, list);
	});
var $author$project$LanguageService$sliceRangeFromTextLines = F2(
	function (textLines, _v0) {
		var _v1 = _v0.a;
		var startRow = _v1.a;
		var startColumn = _v1.b;
		var _v2 = _v0.b;
		var endRow = _v2.a;
		var endColumn = _v2.b;
		var startRowInt = startRow - 1;
		var startColumnInt = startColumn - 1;
		var linesFromStart = A2($elm$core$List$drop, startRowInt, textLines);
		var endRowInt = endRow - 1;
		var rangeRowCount = endRowInt - startRowInt;
		var endColumnInt = endColumn - 1;
		if (!rangeRowCount) {
			if (!linesFromStart.b) {
				return _List_Nil;
			} else {
				var line = linesFromStart.a;
				return _List_fromArray(
					[
						A3($elm$core$String$slice, startColumnInt, endColumnInt, line)
					]);
			}
		} else {
			var middleLines = A2(
				$elm$core$List$take,
				rangeRowCount - 1,
				A2($elm$core$List$drop, 1, linesFromStart));
			var lastLine = function () {
				var _v5 = A2($elm$core$List$drop, rangeRowCount, linesFromStart);
				if (!_v5.b) {
					return '';
				} else {
					var line = _v5.a;
					return A2($elm$core$String$left, endColumnInt, line);
				}
			}();
			var firstLine = function () {
				if (!linesFromStart.b) {
					return '';
				} else {
					var line = linesFromStart.a;
					return A2($elm$core$String$dropLeft, startColumnInt, line);
				}
			}();
			return $elm$core$List$concat(
				_List_fromArray(
					[
						_List_fromArray(
						[firstLine]),
						middleLines,
						_List_fromArray(
						[lastLine])
					]));
		}
	});
var $author$project$LanguageService$declarationsForAliasDeclaration = F3(
	function (_v0, declarationRangeRecord, aliasDeclaration) {
		var textLines = _v0.a;
		var declarationRange = $author$project$LanguageService$rangeFromRecordRange(declarationRangeRecord);
		var _v1 = declarationRange;
		var declarationRangeEnd = _v1.b;
		var _v2 = function () {
			var _v3 = aliasDeclaration.documentation;
			if (_v3.$ === 'Nothing') {
				return _Utils_Tuple2($elm$core$Maybe$Nothing, declarationRange);
			} else {
				var _v4 = _v3.a;
				var commentRangeRecord = _v4.a;
				var comment = _v4.b;
				return _Utils_Tuple2(
					$elm$core$Maybe$Just(
						$author$project$LanguageService$removeWrappingFromMultilineComment(comment)),
					A2(
						$author$project$LanguageService$Range,
						_Utils_Tuple2(commentRangeRecord.end.row + 1, 1),
						declarationRangeEnd));
			}
		}();
		var documentationStringFromSyntax = _v2.a;
		var rangeLessDocumentation = _v2.b;
		var codeRange = $author$project$LanguageService$expandRangeToLineStart(rangeLessDocumentation);
		var codeLines = A2($author$project$LanguageService$sliceRangeFromTextLines, textLines, codeRange);
		var _v5 = aliasDeclaration.name;
		var aliasNameRangeRecord = _v5.a;
		var aliasName = _v5.b;
		var aliasNameRange = $author$project$LanguageService$rangeFromRecordRange(aliasNameRangeRecord);
		var aliasDecl = $author$project$LanguageService$TypeAliasDeclaration(
			_Utils_Tuple2(
				A2(
					$author$project$LanguageService$DeclarationRange,
					codeRange,
					_List_fromArray(
						[aliasNameRange])),
				$author$project$LanguageService$CookedDocumentation(
					A2($author$project$LanguageService$documentationMarkdownFromCodeLinesAndDocumentation, codeLines, documentationStringFromSyntax))));
		return _List_fromArray(
			[
				_Utils_Tuple2(
				aliasName,
				_Utils_Tuple2(aliasDecl, $author$project$LanguageService$TopLevelScope))
			]);
	});
var $author$project$LanguageService$FunctionOrValueDeclaration = function (a) {
	return {$: 'FunctionOrValueDeclaration', a: a};
};
var $author$project$LanguageService$LocalScope = function (a) {
	return {$: 'LocalScope', a: a};
};
var $author$project$LanguageService$getTypeAnnotationFromFunctionArgumentIndex = F2(
	function (argumentIndex, typeAnnotationNode) {
		getTypeAnnotationFromFunctionArgumentIndex:
		while (true) {
			var typeAnnotation = typeAnnotationNode.b;
			if (typeAnnotation.$ === 'FunctionTypeAnnotation') {
				var argumentType = typeAnnotation.a;
				var returnType = typeAnnotation.b;
				if (argumentIndex < 1) {
					return $elm$core$Maybe$Just(argumentType);
				} else {
					var $temp$argumentIndex = argumentIndex - 1,
						$temp$typeAnnotationNode = returnType;
					argumentIndex = $temp$argumentIndex;
					typeAnnotationNode = $temp$typeAnnotationNode;
					continue getTypeAnnotationFromFunctionArgumentIndex;
				}
			} else {
				return (argumentIndex < 1) ? $elm$core$Maybe$Just(typeAnnotationNode) : $elm$core$Maybe$Nothing;
			}
		}
	});
var $elm$core$List$length = function (xs) {
	return A3(
		$elm$core$List$foldl,
		F2(
			function (_v0, i) {
				return i + 1;
			}),
		0,
		xs);
};
var $elm$core$List$map2 = _List_map2;
var $elm$core$List$rangeHelp = F3(
	function (lo, hi, list) {
		rangeHelp:
		while (true) {
			if (_Utils_cmp(lo, hi) < 1) {
				var $temp$lo = lo,
					$temp$hi = hi - 1,
					$temp$list = A2($elm$core$List$cons, hi, list);
				lo = $temp$lo;
				hi = $temp$hi;
				list = $temp$list;
				continue rangeHelp;
			} else {
				return list;
			}
		}
	});
var $elm$core$List$range = F2(
	function (lo, hi) {
		return A3($elm$core$List$rangeHelp, lo, hi, _List_Nil);
	});
var $elm$core$List$indexedMap = F2(
	function (f, xs) {
		return A3(
			$elm$core$List$map2,
			f,
			A2(
				$elm$core$List$range,
				0,
				$elm$core$List$length(xs) - 1),
			xs);
	});
var $author$project$LanguageService$listDeclarationsFromPattern = F3(
	function (sourceContent, config, _v0) {
		listDeclarationsFromPattern:
		while (true) {
			var textLines = sourceContent.a;
			var patternRangeRecord = _v0.a;
			var pattern = _v0.b;
			switch (pattern.$) {
				case 'TuplePattern':
					var tuplePattern = pattern.a;
					return A2(
						$elm$core$List$concatMap,
						A2(
							$author$project$LanguageService$listDeclarationsFromPattern,
							sourceContent,
							{typeAnnotation: $elm$core$Maybe$Nothing}),
						tuplePattern);
				case 'UnConsPattern':
					var head = pattern.a;
					var tail = pattern.b;
					return A2(
						$elm$core$List$concatMap,
						A2(
							$author$project$LanguageService$listDeclarationsFromPattern,
							sourceContent,
							{typeAnnotation: $elm$core$Maybe$Nothing}),
						_List_fromArray(
							[head, tail]));
				case 'ListPattern':
					var listPattern = pattern.a;
					return A2(
						$elm$core$List$concatMap,
						A2(
							$author$project$LanguageService$listDeclarationsFromPattern,
							sourceContent,
							{typeAnnotation: $elm$core$Maybe$Nothing}),
						listPattern);
				case 'VarPattern':
					var name = pattern.a;
					var patternRange = $author$project$LanguageService$rangeFromRecordRange(patternRangeRecord);
					var maybeTypeAnnotationText = function () {
						var _v3 = config.typeAnnotation;
						if (_v3.$ === 'Nothing') {
							return $elm$core$Maybe$Nothing;
						} else {
							var _v4 = _v3.a;
							var typeAnnotationRange = _v4.a;
							return $elm$core$Maybe$Just(
								A2(
									$elm$core$String$join,
									' ',
									A2(
										$author$project$LanguageService$sliceRangeFromTextLines,
										textLines,
										A2(
											$author$project$LanguageService$Range,
											_Utils_Tuple2(typeAnnotationRange.start.row, typeAnnotationRange.start.column),
											_Utils_Tuple2(typeAnnotationRange.end.row, typeAnnotationRange.end.column)))));
						}
					}();
					var codeLines = function () {
						if (maybeTypeAnnotationText.$ === 'Nothing') {
							return _List_fromArray(
								[name]);
						} else {
							var typeAnnotationText = maybeTypeAnnotationText.a;
							return _List_fromArray(
								[
									$elm$core$String$concat(
									_List_fromArray(
										[name, ' : ', typeAnnotationText]))
								]);
						}
					}();
					return _List_fromArray(
						[
							_Utils_Tuple2(
							name,
							_Utils_Tuple2(
								$author$project$LanguageService$FunctionOrValueDeclaration(
									_Utils_Tuple2(
										A2(
											$author$project$LanguageService$DeclarationRange,
											patternRange,
											_List_fromArray(
												[patternRange])),
										$author$project$LanguageService$CookedDocumentation(
											A2($author$project$LanguageService$documentationMarkdownFromCodeLinesAndDocumentation, codeLines, $elm$core$Maybe$Nothing)))),
								$author$project$LanguageService$TopLevelScope))
						]);
				case 'NamedPattern':
					var _arguments = pattern.b;
					return A2(
						$elm$core$List$concatMap,
						A2(
							$author$project$LanguageService$listDeclarationsFromPattern,
							sourceContent,
							{typeAnnotation: $elm$core$Maybe$Nothing}),
						_arguments);
				case 'ParenthesizedPattern':
					var parenthesized = pattern.a;
					var $temp$sourceContent = sourceContent,
						$temp$config = {typeAnnotation: $elm$core$Maybe$Nothing},
						$temp$_v0 = parenthesized;
					sourceContent = $temp$sourceContent;
					config = $temp$config;
					_v0 = $temp$_v0;
					continue listDeclarationsFromPattern;
				default:
					return _List_Nil;
			}
		}
	});
var $author$project$LanguageService$listDeclarationsForFunction = F3(
	function (sourceContent, declRange, _function) {
		var textLines = sourceContent.a;
		var getTypeAnnotationFromArgumentIndex = function (argumentIndex) {
			var _v22 = _function.signature;
			if (_v22.$ === 'Nothing') {
				return $elm$core$Maybe$Nothing;
			} else {
				var _v23 = _v22.a;
				var signature = _v23.b;
				return A2($author$project$LanguageService$getTypeAnnotationFromFunctionArgumentIndex, argumentIndex, signature.typeAnnotation);
			}
		};
		var documentationStringFromSyntax = function () {
			var _v20 = _function.documentation;
			if (_v20.$ === 'Nothing') {
				return $elm$core$Maybe$Nothing;
			} else {
				var _v21 = _v20.a;
				var comment = _v21.b;
				return $elm$core$Maybe$Just(
					$author$project$LanguageService$removeWrappingFromMultilineComment(comment));
			}
		}();
		var _v12 = function () {
			var _v13 = _function.signature;
			if (_v13.$ === 'Nothing') {
				return _Utils_Tuple2($elm$core$Maybe$Nothing, _List_Nil);
			} else {
				var _v14 = _v13.a;
				var signature = _v14.b;
				var _v15 = signature.typeAnnotation;
				var typeAnnotationRange = _v15.a;
				var _v16 = signature.name;
				var nameRangeRecord = _v16.a;
				var nameRange = $author$project$LanguageService$rangeFromRecordRange(nameRangeRecord);
				return _Utils_Tuple2(
					$elm$core$Maybe$Just(
						A2(
							$elm$core$String$join,
							' ',
							A2(
								$author$project$LanguageService$sliceRangeFromTextLines,
								textLines,
								A2(
									$author$project$LanguageService$Range,
									_Utils_Tuple2(typeAnnotationRange.start.row, typeAnnotationRange.start.column),
									_Utils_Tuple2(typeAnnotationRange.end.row, typeAnnotationRange.end.column))))),
					_List_fromArray(
						[nameRange]));
			}
		}();
		var maybeTypeAnnotationText = _v12.a;
		var signatureNameRanges = _v12.b;
		var _v17 = _function.declaration;
		var functionDeclaration = _v17.b;
		var _v18 = functionDeclaration.name;
		var functionNameRangeRecord = _v18.a;
		var functionName = _v18.b;
		var codeLines = function () {
			if (maybeTypeAnnotationText.$ === 'Nothing') {
				return _List_fromArray(
					[functionName]);
			} else {
				var typeAnnotationText = maybeTypeAnnotationText.a;
				return _List_fromArray(
					[
						$elm$core$String$concat(
						_List_fromArray(
							[functionName, ' : ', typeAnnotationText]))
					]);
			}
		}();
		var functionNameRange = $author$project$LanguageService$rangeFromRecordRange(functionNameRangeRecord);
		var functionItem = $author$project$LanguageService$FunctionOrValueDeclaration(
			_Utils_Tuple2(
				A2(
					$author$project$LanguageService$DeclarationRange,
					$author$project$LanguageService$rangeFromRecordRange(declRange),
					$elm$core$List$concat(
						_List_fromArray(
							[
								signatureNameRanges,
								_List_fromArray(
								[functionNameRange])
							]))),
				$author$project$LanguageService$CookedDocumentation(
					A2($author$project$LanguageService$documentationMarkdownFromCodeLinesAndDocumentation, codeLines, documentationStringFromSyntax))));
		var _arguments = $elm$core$List$concat(
			A2(
				$elm$core$List$indexedMap,
				F2(
					function (argumentIndex, argument) {
						return A3(
							$author$project$LanguageService$listDeclarationsFromPattern,
							sourceContent,
							{
								typeAnnotation: getTypeAnnotationFromArgumentIndex(argumentIndex)
							},
							argument);
					}),
				functionDeclaration._arguments));
		var expressionNode = functionDeclaration.expression;
		return $elm$core$List$concat(
			_List_fromArray(
				[
					_List_fromArray(
					[
						_Utils_Tuple2(
						functionName,
						_Utils_Tuple2(functionItem, $author$project$LanguageService$TopLevelScope))
					]),
					_arguments,
					A2($author$project$LanguageService$listDeclarationsInExpression, sourceContent, expressionNode)
				]));
	});
var $author$project$LanguageService$listDeclarationsInExpression = F2(
	function (sourceContent, _v2) {
		listDeclarationsInExpression:
		while (true) {
			var rangeRecord = _v2.a;
			var expression = _v2.b;
			switch (expression.$) {
				case 'UnitExpr':
					return _List_Nil;
				case 'Application':
					var application = expression.a;
					return A2(
						$elm$core$List$concatMap,
						$author$project$LanguageService$listDeclarationsInExpression(sourceContent),
						application);
				case 'OperatorApplication':
					var leftExpr = expression.c;
					var rightExpr = expression.d;
					return A2(
						$elm$core$List$concatMap,
						$author$project$LanguageService$listDeclarationsInExpression(sourceContent),
						_List_fromArray(
							[leftExpr, rightExpr]));
				case 'FunctionOrValue':
					return _List_Nil;
				case 'IfBlock':
					var ifExpr = expression.a;
					var thenExpr = expression.b;
					var elseExpr = expression.c;
					return A2(
						$elm$core$List$concatMap,
						$author$project$LanguageService$listDeclarationsInExpression(sourceContent),
						_List_fromArray(
							[ifExpr, thenExpr, elseExpr]));
				case 'PrefixOperator':
					return _List_Nil;
				case 'Operator':
					return _List_Nil;
				case 'Integer':
					return _List_Nil;
				case 'Hex':
					return _List_Nil;
				case 'Floatable':
					return _List_Nil;
				case 'Negation':
					var negation = expression.a;
					var $temp$sourceContent = sourceContent,
						$temp$_v2 = negation;
					sourceContent = $temp$sourceContent;
					_v2 = $temp$_v2;
					continue listDeclarationsInExpression;
				case 'Literal':
					return _List_Nil;
				case 'CharLiteral':
					return _List_Nil;
				case 'TupledExpression':
					var tupled = expression.a;
					return A2(
						$elm$core$List$concatMap,
						$author$project$LanguageService$listDeclarationsInExpression(sourceContent),
						tupled);
				case 'ParenthesizedExpression':
					var parenthesized = expression.a;
					var $temp$sourceContent = sourceContent,
						$temp$_v2 = parenthesized;
					sourceContent = $temp$sourceContent;
					_v2 = $temp$_v2;
					continue listDeclarationsInExpression;
				case 'LetExpression':
					var letBlock = expression.a;
					var blockRange = $author$project$LanguageService$rangeFromRecordRange(rangeRecord);
					return A2(
						$elm$core$List$map,
						function (_v4) {
							var name = _v4.a;
							var _v5 = _v4.b;
							var declaration = _v5.a;
							return _Utils_Tuple2(
								name,
								_Utils_Tuple2(
									declaration,
									$author$project$LanguageService$LocalScope(blockRange)));
						},
						A2($author$project$LanguageService$listDeclarationsInLetBlock, sourceContent, letBlock));
				case 'CaseExpression':
					var caseBlock = expression.a;
					return $elm$core$List$concat(
						_List_fromArray(
							[
								A2($author$project$LanguageService$listDeclarationsInExpression, sourceContent, caseBlock.expression),
								A2(
								$elm$core$List$concatMap,
								function (_v6) {
									var caseBranch = _v6.b;
									return A2($author$project$LanguageService$listDeclarationsInExpression, sourceContent, caseBranch);
								},
								caseBlock.cases)
							]));
				case 'LambdaExpression':
					var lambda = expression.a;
					var $temp$sourceContent = sourceContent,
						$temp$_v2 = lambda.expression;
					sourceContent = $temp$sourceContent;
					_v2 = $temp$_v2;
					continue listDeclarationsInExpression;
				case 'RecordExpr':
					var recordExpr = expression.a;
					return A2(
						$elm$core$List$concatMap,
						function (_v7) {
							var _v8 = _v7.b;
							var recordField = _v8.b;
							return A2($author$project$LanguageService$listDeclarationsInExpression, sourceContent, recordField);
						},
						recordExpr);
				case 'ListExpr':
					var listExpr = expression.a;
					return A2(
						$elm$core$List$concatMap,
						$author$project$LanguageService$listDeclarationsInExpression(sourceContent),
						listExpr);
				case 'RecordAccess':
					var recordAccess = expression.a;
					var $temp$sourceContent = sourceContent,
						$temp$_v2 = recordAccess;
					sourceContent = $temp$sourceContent;
					_v2 = $temp$_v2;
					continue listDeclarationsInExpression;
				case 'RecordAccessFunction':
					return _List_Nil;
				case 'RecordUpdateExpression':
					var _v9 = expression.a;
					var recordUpdateExpression = expression.b;
					return A2(
						$elm$core$List$concatMap,
						function (_v10) {
							var _v11 = _v10.b;
							var recordField = _v11.b;
							return A2($author$project$LanguageService$listDeclarationsInExpression, sourceContent, recordField);
						},
						recordUpdateExpression);
				default:
					return _List_Nil;
			}
		}
	});
var $author$project$LanguageService$listDeclarationsInLetBlock = F2(
	function (sourceContent, letBlock) {
		return $elm$core$List$concat(
			_List_fromArray(
				[
					A2(
					$elm$core$List$concatMap,
					$author$project$LanguageService$listDeclarationsInLetDeclaration(sourceContent),
					letBlock.declarations),
					A2($author$project$LanguageService$listDeclarationsInExpression, sourceContent, letBlock.expression)
				]));
	});
var $author$project$LanguageService$listDeclarationsInLetDeclaration = F2(
	function (sourceContent, declarationNode) {
		var _v0 = declarationNode;
		var declarationRange = _v0.a;
		var declaration = _v0.b;
		if (declaration.$ === 'LetFunction') {
			var _function = declaration.a;
			return A3($author$project$LanguageService$listDeclarationsForFunction, sourceContent, declarationRange, _function);
		} else {
			var letDestructuring = declaration.b;
			return A2($author$project$LanguageService$listDeclarationsInExpression, sourceContent, letDestructuring);
		}
	});
var $author$project$LanguageService$ChoiceTypeDeclaration = F2(
	function (a, b) {
		return {$: 'ChoiceTypeDeclaration', a: a, b: b};
	});
var $elm$core$Basics$append = _Utils_append;
var $elm_community$list_extra$List$Extra$dropWhile = F2(
	function (predicate, list) {
		dropWhile:
		while (true) {
			if (!list.b) {
				return _List_Nil;
			} else {
				var x = list.a;
				var xs = list.b;
				if (predicate(x)) {
					var $temp$predicate = predicate,
						$temp$list = xs;
					predicate = $temp$predicate;
					list = $temp$list;
					continue dropWhile;
				} else {
					return list;
				}
			}
		}
	});
var $elm$core$String$isEmpty = function (string) {
	return string === '';
};
var $author$project$LanguageService$listDeclarationsFromTypeDeclaration = F3(
	function (_v0, declarationRangeRecord, choiceTypeDeclaration) {
		var textLines = _v0.a;
		var declarationRange = $author$project$LanguageService$rangeFromRecordRange(declarationRangeRecord);
		var _v1 = declarationRange;
		var declarationRangeEnd = _v1.b;
		var _v2 = function () {
			var _v3 = choiceTypeDeclaration.documentation;
			if (_v3.$ === 'Nothing') {
				return _Utils_Tuple2($elm$core$Maybe$Nothing, declarationRange);
			} else {
				var _v4 = _v3.a;
				var commentRangeRecord = _v4.a;
				var comment = _v4.b;
				return _Utils_Tuple2(
					$elm$core$Maybe$Just(
						$author$project$LanguageService$removeWrappingFromMultilineComment(comment)),
					A2(
						$author$project$LanguageService$Range,
						_Utils_Tuple2(commentRangeRecord.end.row + 1, 1),
						declarationRangeEnd));
			}
		}();
		var documentationStringFromSyntax = _v2.a;
		var rangeLessDocumentation = _v2.b;
		var codeRange = $author$project$LanguageService$expandRangeToLineStart(rangeLessDocumentation);
		var choiceTypeCodeLines = A2(
			$elm_community$list_extra$List$Extra$dropWhile,
			$elm$core$String$isEmpty,
			A2($author$project$LanguageService$sliceRangeFromTextLines, textLines, codeRange));
		var _v5 = choiceTypeDeclaration.name;
		var nameRangeRecord = _v5.a;
		var choiceTypeName = _v5.b;
		var tagsDeclarations = A2(
			$elm$core$List$map,
			function (_v6) {
				var constructorRangeRecord = _v6.a;
				var constructor = _v6.b;
				var wholeConstructorRange = $author$project$LanguageService$rangeFromRecordRange(constructorRangeRecord);
				var _v7 = constructor.name;
				var tagNameRecordRange = _v7.a;
				var tagName = _v7.b;
				var tagNameRange = $author$project$LanguageService$rangeFromRecordRange(tagNameRecordRange);
				return _Utils_Tuple2(
					tagName,
					_Utils_Tuple2(
						A2(
							$author$project$LanguageService$DeclarationRange,
							wholeConstructorRange,
							_List_fromArray(
								[tagNameRange])),
						$author$project$LanguageService$CookedDocumentation(
							A2(
								$elm$core$String$join,
								'\n\n',
								_List_fromArray(
									[
										$author$project$LanguageService$markdownElmCodeBlockFromCodeLines(
										_List_fromArray(
											[tagName])),
										'A variant of the choice type `' + (choiceTypeName + '`'),
										$author$project$LanguageService$markdownElmCodeBlockFromCodeLines(choiceTypeCodeLines)
									])))));
			},
			choiceTypeDeclaration.constructors);
		var nameRange = $author$project$LanguageService$rangeFromRecordRange(nameRangeRecord);
		return _List_fromArray(
			[
				_Utils_Tuple2(
				choiceTypeName,
				_Utils_Tuple2(
					A2(
						$author$project$LanguageService$ChoiceTypeDeclaration,
						_Utils_Tuple2(
							A2(
								$author$project$LanguageService$DeclarationRange,
								codeRange,
								_List_fromArray(
									[nameRange])),
							$author$project$LanguageService$CookedDocumentation(
								A2($author$project$LanguageService$documentationMarkdownFromCodeLinesAndDocumentation, choiceTypeCodeLines, documentationStringFromSyntax))),
						tagsDeclarations),
					$author$project$LanguageService$TopLevelScope))
			]);
	});
var $author$project$LanguageService$listDeclarationsInDeclaration = F2(
	function (sourceContent, _v0) {
		var declarationRange = _v0.a;
		var declaration = _v0.b;
		switch (declaration.$) {
			case 'FunctionDeclaration':
				var _function = declaration.a;
				return A3($author$project$LanguageService$listDeclarationsForFunction, sourceContent, declarationRange, _function);
			case 'AliasDeclaration':
				var aliasDeclaration = declaration.a;
				return A3($author$project$LanguageService$declarationsForAliasDeclaration, sourceContent, declarationRange, aliasDeclaration);
			case 'CustomTypeDeclaration':
				var choiceTypeDeclaration = declaration.a;
				return A3($author$project$LanguageService$listDeclarationsFromTypeDeclaration, sourceContent, declarationRange, choiceTypeDeclaration);
			case 'PortDeclaration':
				return _List_Nil;
			case 'InfixDeclaration':
				return _List_Nil;
			default:
				return _List_Nil;
		}
	});
var $author$project$LanguageService$listDeclarationsInFile = F2(
	function (fileSyntax, sourceContent) {
		return A2(
			$elm$core$List$concatMap,
			$author$project$LanguageService$listDeclarationsInDeclaration(sourceContent),
			fileSyntax.declarations);
	});
var $author$project$LanguageService$completionItemsFromModule = function (moduleCache) {
	var textLines = $elm$core$String$lines(moduleCache.text);
	var cookedDeclarations = A2(
		$author$project$LanguageService$listDeclarationsInFile,
		moduleCache.syntax,
		$author$project$LanguageService$SourceContentForCooking(textLines));
	var fromLocals = A2(
		$elm$core$List$concatMap,
		function (_v8) {
			var declName = _v8.a;
			var _v9 = _v8.b;
			var declOrRef = _v9.a;
			var scope = _v9.b;
			if (scope.$ === 'TopLevelScope') {
				return _List_Nil;
			} else {
				var scopeRange = scope.a;
				return A2(
					$elm$core$List$map,
					function (_v11) {
						var completionItem = _v11.a;
						var declRangeInner = _v11.b;
						return _Utils_Tuple3(completionItem, declRangeInner, scopeRange);
					},
					A2($author$project$LanguageService$completionItemsFromParsedDeclaration, declName, declOrRef));
			}
		},
		cookedDeclarations);
	var _v0 = moduleCache.syntax.moduleDefinition;
	var moduleDefinition = _v0.b;
	var exposingListNode = function () {
		switch (moduleDefinition.$) {
			case 'EffectModule':
				var effectModule = moduleDefinition.a;
				return effectModule.exposingList;
			case 'NormalModule':
				var normalModule = moduleDefinition.a;
				return normalModule.exposingList;
			default:
				var portModule = moduleDefinition.a;
				return portModule.exposingList;
		}
	}();
	var _v1 = exposingListNode;
	var exposingList = _v1.b;
	var fromTopLevel = A2(
		$elm$core$List$concatMap,
		function (_v2) {
			var declName = _v2.a;
			var _v3 = _v2.b;
			var declOrRef = _v3.a;
			var scope = _v3.b;
			if (scope.$ === 'TopLevelScope') {
				var isExposed = function () {
					switch (declOrRef.$) {
						case 'FunctionOrValueDeclaration':
							return A2($stil4m$elm_syntax$Elm$Syntax$Exposing$exposesFunction, declName, exposingList);
						case 'TypeAliasDeclaration':
							return A2($author$project$LanguageService$exposingListExposesTypeOrAlias, declName, exposingList);
						default:
							return A2($author$project$LanguageService$exposingListExposesTypeOrAlias, declName, exposingList);
					}
				}();
				return A2(
					$elm$core$List$map,
					function (_v5) {
						var completionItem = _v5.a;
						var declRangeInner = _v5.b;
						return {completionItem: completionItem, isExposed: isExposed, range: declRangeInner};
					},
					A2($author$project$LanguageService$completionItemsFromParsedDeclaration, declName, declOrRef));
			} else {
				return _List_Nil;
			}
		},
		cookedDeclarations);
	return {fromLocals: fromLocals, fromTopLevel: fromTopLevel};
};
var $elm$core$Dict$RBEmpty_elm_builtin = {$: 'RBEmpty_elm_builtin'};
var $elm$core$Dict$empty = $elm$core$Dict$RBEmpty_elm_builtin;
var $elm$core$List$maybeCons = F3(
	function (f, mx, xs) {
		var _v0 = f(mx);
		if (_v0.$ === 'Just') {
			var x = _v0.a;
			return A2($elm$core$List$cons, x, xs);
		} else {
			return xs;
		}
	});
var $elm$core$List$filterMap = F2(
	function (f, xs) {
		return A3(
			$elm$core$List$foldr,
			$elm$core$List$maybeCons(f),
			_List_Nil,
			xs);
	});
var $elm$core$Maybe$map = F2(
	function (f, maybe) {
		if (maybe.$ === 'Just') {
			var value = maybe.a;
			return $elm$core$Maybe$Just(
				f(value));
		} else {
			return $elm$core$Maybe$Nothing;
		}
	});
var $stil4m$elm_syntax$Rope$empty = $elm$core$Maybe$Nothing;
var $stil4m$elm_syntax$Elm$Syntax$Declaration$AliasDeclaration = function (a) {
	return {$: 'AliasDeclaration', a: a};
};
var $stil4m$elm_syntax$Elm$Syntax$Declaration$CustomTypeDeclaration = function (a) {
	return {$: 'CustomTypeDeclaration', a: a};
};
var $stil4m$elm_syntax$Elm$Syntax$Declaration$FunctionDeclaration = function (a) {
	return {$: 'FunctionDeclaration', a: a};
};
var $stil4m$elm_syntax$Elm$Syntax$Node$Node = F2(
	function (a, b) {
		return {$: 'Node', a: a, b: b};
	});
var $stil4m$elm_syntax$Elm$Syntax$Declaration$PortDeclaration = function (a) {
	return {$: 'PortDeclaration', a: a};
};
var $stil4m$elm_syntax$Elm$Syntax$Signature$Signature = F2(
	function (name, typeAnnotation) {
		return {name: name, typeAnnotation: typeAnnotation};
	});
var $stil4m$elm_syntax$Elm$Syntax$Node$combine = F3(
	function (f, a, b) {
		var start = a.a.start;
		var end = b.a.end;
		return A2(
			$stil4m$elm_syntax$Elm$Syntax$Node$Node,
			{end: end, start: start},
			A2(f, a, b));
	});
var $stil4m$elm_syntax$ParserFast$Done = function (a) {
	return {$: 'Done', a: a};
};
var $stil4m$elm_syntax$ParserFast$Loop = function (a) {
	return {$: 'Loop', a: a};
};
var $elm$core$Basics$and = _Basics_and;
var $stil4m$elm_syntax$ParserFast$Bad = F2(
	function (a, b) {
		return {$: 'Bad', a: a, b: b};
	});
var $stil4m$elm_syntax$ParserFast$ExpectingAnyChar = F2(
	function (a, b) {
		return {$: 'ExpectingAnyChar', a: a, b: b};
	});
var $stil4m$elm_syntax$ParserFast$Good = F2(
	function (a, b) {
		return {$: 'Good', a: a, b: b};
	});
var $stil4m$elm_syntax$ParserFast$Parser = function (a) {
	return {$: 'Parser', a: a};
};
var $elm$core$String$any = _String_any;
var $elm$core$Basics$isNaN = _Basics_isNaN;
var $elm$core$Char$toCode = _Char_toCode;
var $elm$core$Basics$toFloat = _Basics_toFloat;
var $stil4m$elm_syntax$Char$Extra$isUtf16Surrogate = function (c) {
	return $elm$core$Basics$isNaN(
		$elm$core$Char$toCode(c));
};
var $stil4m$elm_syntax$ParserFast$charStringIsUtf16HighSurrogate = function (charString) {
	return A2($elm$core$String$any, $stil4m$elm_syntax$Char$Extra$isUtf16Surrogate, charString);
};
var $stil4m$elm_syntax$ParserFast$charOrEnd = F2(
	function (offset, string) {
		var actualChar = A3($elm$core$String$slice, offset, offset + 1, string);
		switch (actualChar) {
			case '\n':
				return -2;
			case '':
				return -1;
			default:
				return $stil4m$elm_syntax$ParserFast$charStringIsUtf16HighSurrogate(actualChar) ? (offset + 2) : (offset + 1);
		}
	});
var $stil4m$elm_syntax$ParserFast$skipWhileHelp = F6(
	function (isGood, offset, row, col, src, indent) {
		skipWhileHelp:
		while (true) {
			var actualChar = A3($elm$core$String$slice, offset, offset + 1, src);
			if (A2($elm$core$String$any, isGood, actualChar)) {
				if (actualChar === '\n') {
					var $temp$isGood = isGood,
						$temp$offset = offset + 1,
						$temp$row = row + 1,
						$temp$col = 1,
						$temp$src = src,
						$temp$indent = indent;
					isGood = $temp$isGood;
					offset = $temp$offset;
					row = $temp$row;
					col = $temp$col;
					src = $temp$src;
					indent = $temp$indent;
					continue skipWhileHelp;
				} else {
					var $temp$isGood = isGood,
						$temp$offset = offset + 1,
						$temp$row = row,
						$temp$col = col + 1,
						$temp$src = src,
						$temp$indent = indent;
					isGood = $temp$isGood;
					offset = $temp$offset;
					row = $temp$row;
					col = $temp$col;
					src = $temp$src;
					indent = $temp$indent;
					continue skipWhileHelp;
				}
			} else {
				if ($stil4m$elm_syntax$ParserFast$charStringIsUtf16HighSurrogate(actualChar) && A2(
					$elm$core$String$any,
					isGood,
					A3($elm$core$String$slice, offset, offset + 2, src))) {
					var $temp$isGood = isGood,
						$temp$offset = offset + 2,
						$temp$row = row,
						$temp$col = col + 1,
						$temp$src = src,
						$temp$indent = indent;
					isGood = $temp$isGood;
					offset = $temp$offset;
					row = $temp$row;
					col = $temp$col;
					src = $temp$src;
					indent = $temp$indent;
					continue skipWhileHelp;
				} else {
					return {col: col, indent: indent, offset: offset, row: row, src: src};
				}
			}
		}
	});
var $stil4m$elm_syntax$ParserFast$anyCharFollowedByWhileMap = F2(
	function (consumedStringToRes, afterFirstIsOkay) {
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s) {
				var firstOffset = A2($stil4m$elm_syntax$ParserFast$charOrEnd, s.offset, s.src);
				if (_Utils_eq(firstOffset, -1)) {
					return A2(
						$stil4m$elm_syntax$ParserFast$Bad,
						false,
						A2($stil4m$elm_syntax$ParserFast$ExpectingAnyChar, s.row, s.col));
				} else {
					var s1 = _Utils_eq(firstOffset, -2) ? A6($stil4m$elm_syntax$ParserFast$skipWhileHelp, afterFirstIsOkay, s.offset + 1, s.row + 1, 1, s.src, s.indent) : A6($stil4m$elm_syntax$ParserFast$skipWhileHelp, afterFirstIsOkay, firstOffset, s.row, s.col + 1, s.src, s.indent);
					return A2(
						$stil4m$elm_syntax$ParserFast$Good,
						consumedStringToRes(
							A3($elm$core$String$slice, s.offset, s1.offset, s.src)),
						s1);
				}
			});
	});
var $elm$core$String$cons = _String_cons;
var $elm$core$Basics$or = _Basics_or;
var $stil4m$elm_syntax$ParserFast$loopHelp = F5(
	function (committedSoFar, state, element, reduce, s0) {
		loopHelp:
		while (true) {
			var parseElement = element.a;
			var _v0 = parseElement(s0);
			if (_v0.$ === 'Good') {
				var step = _v0.a;
				var s1 = _v0.b;
				var _v1 = A2(reduce, step, state);
				if (_v1.$ === 'Loop') {
					var newState = _v1.a;
					var $temp$committedSoFar = true,
						$temp$state = newState,
						$temp$element = element,
						$temp$reduce = reduce,
						$temp$s0 = s1;
					committedSoFar = $temp$committedSoFar;
					state = $temp$state;
					element = $temp$element;
					reduce = $temp$reduce;
					s0 = $temp$s0;
					continue loopHelp;
				} else {
					var result = _v1.a;
					return A2($stil4m$elm_syntax$ParserFast$Good, result, s1);
				}
			} else {
				var elementCommitted = _v0.a;
				var x = _v0.b;
				return A2($stil4m$elm_syntax$ParserFast$Bad, committedSoFar || elementCommitted, x);
			}
		}
	});
var $stil4m$elm_syntax$ParserFast$loop = F3(
	function (state, element, reduce) {
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s) {
				return A5($stil4m$elm_syntax$ParserFast$loopHelp, false, state, element, reduce, s);
			});
	});
var $stil4m$elm_syntax$ParserFast$map2WithRange = F3(
	function (func, _v0, _v1) {
		var parseA = _v0.a;
		var parseB = _v1.a;
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s0) {
				var _v2 = parseA(s0);
				if (_v2.$ === 'Bad') {
					var committed = _v2.a;
					var x = _v2.b;
					return A2($stil4m$elm_syntax$ParserFast$Bad, committed, x);
				} else {
					var a = _v2.a;
					var s1 = _v2.b;
					var _v3 = parseB(s1);
					if (_v3.$ === 'Bad') {
						var x = _v3.b;
						return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
					} else {
						var b = _v3.a;
						var s2 = _v3.b;
						return A2(
							$stil4m$elm_syntax$ParserFast$Good,
							A3(
								func,
								{
									end: {column: s2.col, row: s2.row},
									start: {column: s0.col, row: s0.row}
								},
								a,
								b),
							s2);
					}
				}
			});
	});
var $elm$core$Basics$neq = _Utils_notEqual;
var $elm$core$Basics$not = _Basics_not;
var $stil4m$elm_syntax$ParserFast$ExpectingOneOf = F3(
	function (a, b, c) {
		return {$: 'ExpectingOneOf', a: a, b: b, c: c};
	});
var $stil4m$elm_syntax$ParserFast$oneOf2 = F2(
	function (_v0, _v1) {
		var attemptFirst = _v0.a;
		var attemptSecond = _v1.a;
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s) {
				var _v2 = attemptFirst(s);
				if (_v2.$ === 'Good') {
					var firstGood = _v2;
					return firstGood;
				} else {
					var firstBad = _v2;
					var firstCommitted = firstBad.a;
					var firstX = firstBad.b;
					if (firstCommitted) {
						return firstBad;
					} else {
						var _v3 = attemptSecond(s);
						if (_v3.$ === 'Good') {
							var secondGood = _v3;
							return secondGood;
						} else {
							var secondBad = _v3;
							var secondCommitted = secondBad.a;
							var secondX = secondBad.b;
							return secondCommitted ? secondBad : A2(
								$stil4m$elm_syntax$ParserFast$Bad,
								false,
								A3($stil4m$elm_syntax$ParserFast$ExpectingOneOf, firstX, secondX, _List_Nil));
						}
					}
				}
			});
	});
var $stil4m$elm_syntax$ParserFast$oneOf3 = F3(
	function (_v0, _v1, _v2) {
		var attemptFirst = _v0.a;
		var attemptSecond = _v1.a;
		var attemptThird = _v2.a;
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s) {
				var _v3 = attemptFirst(s);
				if (_v3.$ === 'Good') {
					var firstGood = _v3;
					return firstGood;
				} else {
					var firstBad = _v3;
					var firstCommitted = firstBad.a;
					var firstX = firstBad.b;
					if (firstCommitted) {
						return firstBad;
					} else {
						var _v4 = attemptSecond(s);
						if (_v4.$ === 'Good') {
							var secondGood = _v4;
							return secondGood;
						} else {
							var secondBad = _v4;
							var secondCommitted = secondBad.a;
							var secondX = secondBad.b;
							if (secondCommitted) {
								return secondBad;
							} else {
								var _v5 = attemptThird(s);
								if (_v5.$ === 'Good') {
									var thirdGood = _v5;
									return thirdGood;
								} else {
									var thirdBad = _v5;
									var thirdCommitted = thirdBad.a;
									var thirdX = thirdBad.b;
									return thirdCommitted ? thirdBad : A2(
										$stil4m$elm_syntax$ParserFast$Bad,
										false,
										A3(
											$stil4m$elm_syntax$ParserFast$ExpectingOneOf,
											firstX,
											secondX,
											_List_fromArray(
												[thirdX])));
								}
							}
						}
					}
				}
			});
	});
var $stil4m$elm_syntax$ParserFast$ExpectingSymbol = F3(
	function (a, b, c) {
		return {$: 'ExpectingSymbol', a: a, b: b, c: c};
	});
var $stil4m$elm_syntax$ParserFast$symbol = F2(
	function (str, res) {
		var strLength = $elm$core$String$length(str);
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s) {
				var newOffset = s.offset + strLength;
				return _Utils_eq(
					A3($elm$core$String$slice, s.offset, newOffset, s.src),
					str + '') ? A2(
					$stil4m$elm_syntax$ParserFast$Good,
					res,
					{col: s.col + strLength, indent: s.indent, offset: newOffset, row: s.row, src: s.src}) : A2(
					$stil4m$elm_syntax$ParserFast$Bad,
					false,
					A3($stil4m$elm_syntax$ParserFast$ExpectingSymbol, s.row, s.col, str));
			});
	});
var $stil4m$elm_syntax$ParserFast$pStepCommit = function (pStep) {
	if (pStep.$ === 'Good') {
		var good = pStep;
		return good;
	} else {
		var x = pStep.b;
		return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
	}
};
var $stil4m$elm_syntax$ParserFast$symbolFollowedBy = F2(
	function (str, _v0) {
		var parseNext = _v0.a;
		var strLength = $elm$core$String$length(str);
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s) {
				var newOffset = s.offset + strLength;
				return _Utils_eq(
					A3($elm$core$String$slice, s.offset, newOffset, s.src),
					str + '') ? $stil4m$elm_syntax$ParserFast$pStepCommit(
					parseNext(
						{col: s.col + strLength, indent: s.indent, offset: newOffset, row: s.row, src: s.src})) : A2(
					$stil4m$elm_syntax$ParserFast$Bad,
					false,
					A3($stil4m$elm_syntax$ParserFast$ExpectingSymbol, s.row, s.col, str));
			});
	});
var $stil4m$elm_syntax$ParserFast$while = function (isGood) {
	return $stil4m$elm_syntax$ParserFast$Parser(
		function (s0) {
			var s1 = A6($stil4m$elm_syntax$ParserFast$skipWhileHelp, isGood, s0.offset, s0.row, s0.col, s0.src, s0.indent);
			return A2(
				$stil4m$elm_syntax$ParserFast$Good,
				A3($elm$core$String$slice, s0.offset, s1.offset, s0.src),
				s1);
		});
};
var $stil4m$elm_syntax$ParserFast$nestableMultiCommentMapWithRange = F3(
	function (rangeContentToRes, _v0, _v1) {
		var openChar = _v0.a;
		var openTail = _v0.b;
		var closeChar = _v1.a;
		var closeTail = _v1.b;
		var open = A2($elm$core$String$cons, openChar, openTail);
		var isNotRelevant = function (_char) {
			return (!_Utils_eq(_char, openChar)) && ((!_Utils_eq(_char, closeChar)) && (!$stil4m$elm_syntax$Char$Extra$isUtf16Surrogate(_char)));
		};
		var close = A2($elm$core$String$cons, closeChar, closeTail);
		return A3(
			$stil4m$elm_syntax$ParserFast$map2WithRange,
			F3(
				function (range, afterOpen, contentAfterAfterOpen) {
					return A2(
						rangeContentToRes,
						range,
						_Utils_ap(
							open,
							_Utils_ap(
								afterOpen,
								_Utils_ap(contentAfterAfterOpen, close))));
				}),
			A2(
				$stil4m$elm_syntax$ParserFast$symbolFollowedBy,
				open,
				$stil4m$elm_syntax$ParserFast$while(isNotRelevant)),
			A2(
				$stil4m$elm_syntax$ParserFast$oneOf2,
				A2($stil4m$elm_syntax$ParserFast$symbol, close, ''),
				A3(
					$stil4m$elm_syntax$ParserFast$loop,
					_Utils_Tuple2('', 1),
					A3(
						$stil4m$elm_syntax$ParserFast$oneOf3,
						A2(
							$stil4m$elm_syntax$ParserFast$symbol,
							close,
							_Utils_Tuple2(close, -1)),
						A2(
							$stil4m$elm_syntax$ParserFast$symbol,
							open,
							_Utils_Tuple2(open, 1)),
						A2(
							$stil4m$elm_syntax$ParserFast$anyCharFollowedByWhileMap,
							function (consumed) {
								return _Utils_Tuple2(consumed, 0);
							},
							isNotRelevant)),
					F2(
						function (_v2, _v3) {
							var toAppend = _v2.a;
							var nestingChange = _v2.b;
							var soFarContent = _v3.a;
							var soFarNesting = _v3.b;
							var newNesting = soFarNesting + nestingChange;
							return (!newNesting) ? $stil4m$elm_syntax$ParserFast$Done(soFarContent) : $stil4m$elm_syntax$ParserFast$Loop(
								_Utils_Tuple2(soFarContent + (toAppend + ''), newNesting));
						}))));
	});
var $stil4m$elm_syntax$Elm$Parser$Comments$multiLineCommentNoCheck = A3(
	$stil4m$elm_syntax$ParserFast$nestableMultiCommentMapWithRange,
	$stil4m$elm_syntax$Elm$Syntax$Node$Node,
	_Utils_Tuple2(
		_Utils_chr('{'),
		'-'),
	_Utils_Tuple2(
		_Utils_chr('-'),
		'}'));
var $stil4m$elm_syntax$Elm$Parser$Comments$declarationDocumentation = $stil4m$elm_syntax$Elm$Parser$Comments$multiLineCommentNoCheck;
var $stil4m$elm_syntax$Rope$Branch2 = F2(
	function (a, b) {
		return {$: 'Branch2', a: a, b: b};
	});
var $stil4m$elm_syntax$Rope$filledPrependTo = F2(
	function (right, leftLikelyFilled) {
		if (right.$ === 'Nothing') {
			return $elm$core$Maybe$Just(leftLikelyFilled);
		} else {
			var rightLikelyFilled = right.a;
			return $elm$core$Maybe$Just(
				A2($stil4m$elm_syntax$Rope$Branch2, leftLikelyFilled, rightLikelyFilled));
		}
	});
var $stil4m$elm_syntax$Elm$Parser$Declarations$FunctionDeclarationAfterDocumentation = function (a) {
	return {$: 'FunctionDeclarationAfterDocumentation', a: a};
};
var $stil4m$elm_syntax$Elm$Syntax$Expression$Application = function (a) {
	return {$: 'Application', a: a};
};
var $stil4m$elm_syntax$Elm$Syntax$Expression$CaseExpression = function (a) {
	return {$: 'CaseExpression', a: a};
};
var $stil4m$elm_syntax$Elm$Parser$Expression$ExtendRightByOperation = function (a) {
	return {$: 'ExtendRightByOperation', a: a};
};
var $stil4m$elm_syntax$Elm$Parser$Expression$FieldsFirstValue = function (a) {
	return {$: 'FieldsFirstValue', a: a};
};
var $stil4m$elm_syntax$Elm$Syntax$Expression$IfBlock = F3(
	function (a, b, c) {
		return {$: 'IfBlock', a: a, b: b, c: c};
	});
var $stil4m$elm_syntax$Elm$Syntax$Expression$LambdaExpression = function (a) {
	return {$: 'LambdaExpression', a: a};
};
var $stil4m$elm_syntax$Elm$Syntax$Infix$Left = {$: 'Left'};
var $stil4m$elm_syntax$Elm$Syntax$Expression$LetDestructuring = F2(
	function (a, b) {
		return {$: 'LetDestructuring', a: a, b: b};
	});
var $stil4m$elm_syntax$Elm$Syntax$Expression$LetExpression = function (a) {
	return {$: 'LetExpression', a: a};
};
var $stil4m$elm_syntax$Elm$Syntax$Expression$LetFunction = function (a) {
	return {$: 'LetFunction', a: a};
};
var $stil4m$elm_syntax$Elm$Syntax$Expression$ListExpr = function (a) {
	return {$: 'ListExpr', a: a};
};
var $stil4m$elm_syntax$Elm$Syntax$Expression$Negation = function (a) {
	return {$: 'Negation', a: a};
};
var $stil4m$elm_syntax$Elm$Syntax$Infix$Non = {$: 'Non'};
var $elm$core$Result$Ok = function (a) {
	return {$: 'Ok', a: a};
};
var $stil4m$elm_syntax$Elm$Syntax$Expression$ParenthesizedExpression = function (a) {
	return {$: 'ParenthesizedExpression', a: a};
};
var $stil4m$elm_syntax$Elm$Syntax$Expression$RecordAccess = F2(
	function (a, b) {
		return {$: 'RecordAccess', a: a, b: b};
	});
var $stil4m$elm_syntax$Elm$Syntax$Expression$RecordExpr = function (a) {
	return {$: 'RecordExpr', a: a};
};
var $stil4m$elm_syntax$Elm$Syntax$Expression$RecordUpdateExpression = F2(
	function (a, b) {
		return {$: 'RecordUpdateExpression', a: a, b: b};
	});
var $stil4m$elm_syntax$Elm$Parser$Expression$RecordUpdateFirstSetter = function (a) {
	return {$: 'RecordUpdateFirstSetter', a: a};
};
var $stil4m$elm_syntax$Elm$Syntax$Infix$Right = {$: 'Right'};
var $stil4m$elm_syntax$Elm$Syntax$Expression$TupledExpression = function (a) {
	return {$: 'TupledExpression', a: a};
};
var $stil4m$elm_syntax$Elm$Parser$Expression$TupledParenthesizedFollowedByRecordAccesses = function (a) {
	return {$: 'TupledParenthesizedFollowedByRecordAccesses', a: a};
};
var $stil4m$elm_syntax$Elm$Parser$Expression$TupledTwoOrThree = function (a) {
	return {$: 'TupledTwoOrThree', a: a};
};
var $stil4m$elm_syntax$Elm$Syntax$Expression$UnitExpr = {$: 'UnitExpr'};
var $stil4m$elm_syntax$Elm$Syntax$Expression$PrefixOperator = function (a) {
	return {$: 'PrefixOperator', a: a};
};
var $stil4m$elm_syntax$Elm$Parser$Tokens$isAllowedOperatorToken = function (operatorCandidateToValidate) {
	switch (operatorCandidateToValidate) {
		case '==':
			return true;
		case '/=':
			return true;
		case '::':
			return true;
		case '++':
			return true;
		case '+':
			return true;
		case '*':
			return true;
		case '<|':
			return true;
		case '|>':
			return true;
		case '||':
			return true;
		case '<=':
			return true;
		case '>=':
			return true;
		case '|=':
			return true;
		case '|.':
			return true;
		case '//':
			return true;
		case '</>':
			return true;
		case '<?>':
			return true;
		case '^':
			return true;
		case '<<':
			return true;
		case '>>':
			return true;
		case '<':
			return true;
		case '>':
			return true;
		case '/':
			return true;
		case '&&':
			return true;
		case '-':
			return true;
		default:
			return false;
	}
};
var $stil4m$elm_syntax$Elm$Parser$Tokens$isOperatorSymbolChar = function (c) {
	switch (c.valueOf()) {
		case '+':
			return true;
		case '-':
			return true;
		case '/':
			return true;
		case '*':
			return true;
		case '=':
			return true;
		case '.':
			return true;
		case '<':
			return true;
		case '>':
			return true;
		case ':':
			return true;
		case '&':
			return true;
		case '|':
			return true;
		case '^':
			return true;
		case '?':
			return true;
		default:
			return false;
	}
};
var $stil4m$elm_syntax$ParserFast$ExpectingStringSatisfyingPredicate = F2(
	function (a, b) {
		return {$: 'ExpectingStringSatisfyingPredicate', a: a, b: b};
	});
var $stil4m$elm_syntax$ParserFast$skipWhileWithoutLinebreakAnd2PartUtf16Help = F3(
	function (isGood, offset, src) {
		skipWhileWithoutLinebreakAnd2PartUtf16Help:
		while (true) {
			if (A2(
				$elm$core$String$any,
				isGood,
				A3($elm$core$String$slice, offset, offset + 1, src))) {
				var $temp$isGood = isGood,
					$temp$offset = offset + 1,
					$temp$src = src;
				isGood = $temp$isGood;
				offset = $temp$offset;
				src = $temp$src;
				continue skipWhileWithoutLinebreakAnd2PartUtf16Help;
			} else {
				return offset;
			}
		}
	});
var $stil4m$elm_syntax$ParserFast$whileWithoutLinebreakAnd2PartUtf16ValidateMapWithRangeBacktrackableFollowedBySymbol = F4(
	function (whileRangeAndContentToRes, whileCharIsOkay, whileResultIsOkay, mandatoryFinalSymbol) {
		var mandatoryFinalSymbolLength = $elm$core$String$length(mandatoryFinalSymbol);
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s0) {
				var s1Offset = A3($stil4m$elm_syntax$ParserFast$skipWhileWithoutLinebreakAnd2PartUtf16Help, whileCharIsOkay, s0.offset, s0.src);
				var whileContent = A3($elm$core$String$slice, s0.offset, s1Offset, s0.src);
				if (_Utils_eq(
					A3($elm$core$String$slice, s1Offset, s1Offset + mandatoryFinalSymbolLength, s0.src),
					mandatoryFinalSymbol + '') && whileResultIsOkay(whileContent)) {
					var s1Column = s0.col + (s1Offset - s0.offset);
					return A2(
						$stil4m$elm_syntax$ParserFast$Good,
						A2(
							whileRangeAndContentToRes,
							{
								end: {column: s1Column, row: s0.row},
								start: {column: s0.col, row: s0.row}
							},
							whileContent),
						{col: s1Column + mandatoryFinalSymbolLength, indent: s0.indent, offset: s1Offset + mandatoryFinalSymbolLength, row: s0.row, src: s0.src});
				} else {
					return A2(
						$stil4m$elm_syntax$ParserFast$Bad,
						false,
						A2($stil4m$elm_syntax$ParserFast$ExpectingStringSatisfyingPredicate, s0.row, s0.col + 1));
				}
			});
	});
var $stil4m$elm_syntax$Elm$Parser$Expression$allowedPrefixOperatorFollowedByClosingParensOneOf = A4(
	$stil4m$elm_syntax$ParserFast$whileWithoutLinebreakAnd2PartUtf16ValidateMapWithRangeBacktrackableFollowedBySymbol,
	F2(
		function (operatorRange, operator) {
			return {
				comments: $stil4m$elm_syntax$Rope$empty,
				syntax: A2(
					$stil4m$elm_syntax$Elm$Syntax$Node$Node,
					{
						end: {column: operatorRange.end.column + 1, row: operatorRange.end.row},
						start: {column: operatorRange.start.column - 1, row: operatorRange.start.row}
					},
					$stil4m$elm_syntax$Elm$Syntax$Expression$PrefixOperator(operator))
			};
		}),
	$stil4m$elm_syntax$Elm$Parser$Tokens$isOperatorSymbolChar,
	$stil4m$elm_syntax$Elm$Parser$Tokens$isAllowedOperatorToken,
	')');
var $stil4m$elm_syntax$Elm$Syntax$Expression$OperatorApplication = F4(
	function (a, b, c, d) {
		return {$: 'OperatorApplication', a: a, b: b, c: c, d: d};
	});
var $stil4m$elm_syntax$Elm$Parser$Expression$applyExtensionRight = F2(
	function (_v0, leftNode) {
		var operation = _v0.a;
		var leftRange = leftNode.a;
		var rightExpressionNode = operation.expression;
		var rightExpressionRange = rightExpressionNode.a;
		return A2(
			$stil4m$elm_syntax$Elm$Syntax$Node$Node,
			{end: rightExpressionRange.end, start: leftRange.start},
			A4($stil4m$elm_syntax$Elm$Syntax$Expression$OperatorApplication, operation.symbol, operation.direction, leftNode, rightExpressionNode));
	});
var $stil4m$elm_syntax$Elm$Syntax$Expression$CharLiteral = function (a) {
	return {$: 'CharLiteral', a: a};
};
var $elm$core$String$foldr = _String_foldr;
var $elm$core$String$toList = function (string) {
	return A3($elm$core$String$foldr, $elm$core$List$cons, _List_Nil, string);
};
var $stil4m$elm_syntax$ParserFast$anyChar = $stil4m$elm_syntax$ParserFast$Parser(
	function (s) {
		var newOffset = A2($stil4m$elm_syntax$ParserFast$charOrEnd, s.offset, s.src);
		if (_Utils_eq(newOffset, -1)) {
			return A2(
				$stil4m$elm_syntax$ParserFast$Bad,
				false,
				A2($stil4m$elm_syntax$ParserFast$ExpectingAnyChar, s.row, s.col));
		} else {
			if (_Utils_eq(newOffset, -2)) {
				return A2(
					$stil4m$elm_syntax$ParserFast$Good,
					_Utils_chr('\n'),
					{col: 1, indent: s.indent, offset: s.offset + 1, row: s.row + 1, src: s.src});
			} else {
				var _v0 = $elm$core$String$toList(
					A3($elm$core$String$slice, s.offset, newOffset, s.src));
				if (!_v0.b) {
					return A2(
						$stil4m$elm_syntax$ParserFast$Bad,
						false,
						A2($stil4m$elm_syntax$ParserFast$ExpectingAnyChar, s.row, s.col));
				} else {
					var c = _v0.a;
					return A2(
						$stil4m$elm_syntax$ParserFast$Good,
						c,
						{col: s.col + 1, indent: s.indent, offset: newOffset, row: s.row, src: s.src});
				}
			}
		}
	});
var $stil4m$elm_syntax$ParserFast$followedBySymbol = F2(
	function (str, _v0) {
		var parsePrevious = _v0.a;
		var strLength = $elm$core$String$length(str);
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s0) {
				var _v1 = parsePrevious(s0);
				if (_v1.$ === 'Good') {
					var res = _v1.a;
					var s1 = _v1.b;
					var newOffset = s1.offset + strLength;
					return _Utils_eq(
						A3($elm$core$String$slice, s1.offset, newOffset, s1.src),
						str + '') ? A2(
						$stil4m$elm_syntax$ParserFast$Good,
						res,
						{col: s1.col + strLength, indent: s1.indent, offset: newOffset, row: s1.row, src: s1.src}) : A2(
						$stil4m$elm_syntax$ParserFast$Bad,
						true,
						A3($stil4m$elm_syntax$ParserFast$ExpectingSymbol, s1.row, s1.col, str));
				} else {
					var bad = _v1;
					return bad;
				}
			});
	});
var $elm$core$Char$fromCode = _Char_fromCode;
var $stil4m$elm_syntax$Elm$Parser$Tokens$charToHex = function (c) {
	switch (c.valueOf()) {
		case '0':
			return 0;
		case '1':
			return 1;
		case '2':
			return 2;
		case '3':
			return 3;
		case '4':
			return 4;
		case '5':
			return 5;
		case '6':
			return 6;
		case '7':
			return 7;
		case '8':
			return 8;
		case '9':
			return 9;
		case 'a':
			return 10;
		case 'b':
			return 11;
		case 'c':
			return 12;
		case 'd':
			return 13;
		case 'e':
			return 14;
		case 'f':
			return 15;
		case 'A':
			return 10;
		case 'B':
			return 11;
		case 'C':
			return 12;
		case 'D':
			return 13;
		case 'E':
			return 14;
		default:
			return 15;
	}
};
var $elm$core$Basics$mul = _Basics_mul;
var $elm$core$Basics$pow = _Basics_pow;
var $stil4m$elm_syntax$Elm$Parser$Tokens$hexStringToInt = function (string) {
	return A3(
		$elm$core$String$foldr,
		F2(
			function (c, soFar) {
				return {
					exponent: soFar.exponent + 1,
					result: soFar.result + (A2($elm$core$Basics$pow, 16, soFar.exponent) * $stil4m$elm_syntax$Elm$Parser$Tokens$charToHex(c))
				};
			}),
		{exponent: 0, result: 0},
		string).result;
};
var $stil4m$elm_syntax$ParserFast$ExpectingCharSatisfyingPredicate = F2(
	function (a, b) {
		return {$: 'ExpectingCharSatisfyingPredicate', a: a, b: b};
	});
var $stil4m$elm_syntax$ParserFast$isSubCharWithoutLinebreak = F3(
	function (predicate, offset, string) {
		var actualChar = A3($elm$core$String$slice, offset, offset + 1, string);
		return A2($elm$core$String$any, predicate, actualChar) ? (offset + 1) : (($stil4m$elm_syntax$ParserFast$charStringIsUtf16HighSurrogate(actualChar) && A2(
			$elm$core$String$any,
			predicate,
			A3($elm$core$String$slice, offset, offset + 2, string))) ? (offset + 2) : (-1));
	});
var $stil4m$elm_syntax$ParserFast$skipWhileWithoutLinebreakHelp = F6(
	function (isGood, offset, row, col, src, indent) {
		skipWhileWithoutLinebreakHelp:
		while (true) {
			var actualChar = A3($elm$core$String$slice, offset, offset + 1, src);
			if (A2($elm$core$String$any, isGood, actualChar)) {
				var $temp$isGood = isGood,
					$temp$offset = offset + 1,
					$temp$row = row,
					$temp$col = col + 1,
					$temp$src = src,
					$temp$indent = indent;
				isGood = $temp$isGood;
				offset = $temp$offset;
				row = $temp$row;
				col = $temp$col;
				src = $temp$src;
				indent = $temp$indent;
				continue skipWhileWithoutLinebreakHelp;
			} else {
				if ($stil4m$elm_syntax$ParserFast$charStringIsUtf16HighSurrogate(actualChar) && A2(
					$elm$core$String$any,
					isGood,
					A3($elm$core$String$slice, offset, offset + 2, src))) {
					var $temp$isGood = isGood,
						$temp$offset = offset + 2,
						$temp$row = row,
						$temp$col = col + 1,
						$temp$src = src,
						$temp$indent = indent;
					isGood = $temp$isGood;
					offset = $temp$offset;
					row = $temp$row;
					col = $temp$col;
					src = $temp$src;
					indent = $temp$indent;
					continue skipWhileWithoutLinebreakHelp;
				} else {
					return {col: col, indent: indent, offset: offset, row: row, src: src};
				}
			}
		}
	});
var $stil4m$elm_syntax$ParserFast$ifFollowedByWhileMapWithoutLinebreak = F3(
	function (consumedStringToRes, firstIsOkay, afterFirstIsOkay) {
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s0) {
				var firstOffset = A3($stil4m$elm_syntax$ParserFast$isSubCharWithoutLinebreak, firstIsOkay, s0.offset, s0.src);
				if (_Utils_eq(firstOffset, -1)) {
					return A2(
						$stil4m$elm_syntax$ParserFast$Bad,
						false,
						A2($stil4m$elm_syntax$ParserFast$ExpectingCharSatisfyingPredicate, s0.row, s0.col));
				} else {
					var s1 = A6($stil4m$elm_syntax$ParserFast$skipWhileWithoutLinebreakHelp, afterFirstIsOkay, firstOffset, s0.row, s0.col + 1, s0.src, s0.indent);
					return A2(
						$stil4m$elm_syntax$ParserFast$Good,
						consumedStringToRes(
							A3($elm$core$String$slice, s0.offset, s1.offset, s0.src)),
						s1);
				}
			});
	});
var $elm$core$Char$isHexDigit = function (_char) {
	var code = $elm$core$Char$toCode(_char);
	return ((48 <= code) && (code <= 57)) || (((65 <= code) && (code <= 70)) || ((97 <= code) && (code <= 102)));
};
var $stil4m$elm_syntax$ParserFast$oneOf7 = F7(
	function (_v0, _v1, _v2, _v3, _v4, _v5, _v6) {
		var attempt0 = _v0.a;
		var attempt1 = _v1.a;
		var attempt2 = _v2.a;
		var attempt3 = _v3.a;
		var attempt4 = _v4.a;
		var attempt5 = _v5.a;
		var attempt6 = _v6.a;
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s) {
				var _v7 = attempt0(s);
				if (_v7.$ === 'Good') {
					var good = _v7;
					return good;
				} else {
					var bad0 = _v7;
					var committed0 = bad0.a;
					var x0 = bad0.b;
					if (committed0) {
						return bad0;
					} else {
						var _v8 = attempt1(s);
						if (_v8.$ === 'Good') {
							var good = _v8;
							return good;
						} else {
							var bad1 = _v8;
							var committed1 = bad1.a;
							var x1 = bad1.b;
							if (committed1) {
								return bad1;
							} else {
								var _v9 = attempt2(s);
								if (_v9.$ === 'Good') {
									var good = _v9;
									return good;
								} else {
									var bad2 = _v9;
									var committed2 = bad2.a;
									var x2 = bad2.b;
									if (committed2) {
										return bad2;
									} else {
										var _v10 = attempt3(s);
										if (_v10.$ === 'Good') {
											var good = _v10;
											return good;
										} else {
											var bad3 = _v10;
											var committed3 = bad3.a;
											var x3 = bad3.b;
											if (committed3) {
												return bad3;
											} else {
												var _v11 = attempt4(s);
												if (_v11.$ === 'Good') {
													var good = _v11;
													return good;
												} else {
													var bad4 = _v11;
													var committed4 = bad4.a;
													var x4 = bad4.b;
													if (committed4) {
														return bad4;
													} else {
														var _v12 = attempt5(s);
														if (_v12.$ === 'Good') {
															var good = _v12;
															return good;
														} else {
															var bad5 = _v12;
															var committed5 = bad5.a;
															var x5 = bad5.b;
															if (committed5) {
																return bad5;
															} else {
																var _v13 = attempt6(s);
																if (_v13.$ === 'Good') {
																	var good = _v13;
																	return good;
																} else {
																	var bad6 = _v13;
																	var committed6 = bad6.a;
																	var x6 = bad6.b;
																	return committed6 ? bad6 : A2(
																		$stil4m$elm_syntax$ParserFast$Bad,
																		false,
																		A3(
																			$stil4m$elm_syntax$ParserFast$ExpectingOneOf,
																			x0,
																			x1,
																			_List_fromArray(
																				[x2, x3, x4, x5, x6])));
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			});
	});
var $stil4m$elm_syntax$Elm$Parser$Tokens$escapedCharValueMap = function (charToRes) {
	return A7(
		$stil4m$elm_syntax$ParserFast$oneOf7,
		A2(
			$stil4m$elm_syntax$ParserFast$symbol,
			'\'',
			charToRes(
				_Utils_chr('\''))),
		A2(
			$stil4m$elm_syntax$ParserFast$symbol,
			'\"',
			charToRes(
				_Utils_chr('\"'))),
		A2(
			$stil4m$elm_syntax$ParserFast$symbol,
			'n',
			charToRes(
				_Utils_chr('\n'))),
		A2(
			$stil4m$elm_syntax$ParserFast$symbol,
			't',
			charToRes(
				_Utils_chr('\t'))),
		A2(
			$stil4m$elm_syntax$ParserFast$symbol,
			'r',
			charToRes(
				_Utils_chr('\u000D'))),
		A2(
			$stil4m$elm_syntax$ParserFast$symbol,
			'\\',
			charToRes(
				_Utils_chr('\\'))),
		A2(
			$stil4m$elm_syntax$ParserFast$symbolFollowedBy,
			'u{',
			A2(
				$stil4m$elm_syntax$ParserFast$followedBySymbol,
				'}',
				A3(
					$stil4m$elm_syntax$ParserFast$ifFollowedByWhileMapWithoutLinebreak,
					function (hex) {
						return charToRes(
							$elm$core$Char$fromCode(
								$stil4m$elm_syntax$Elm$Parser$Tokens$hexStringToInt(hex)));
					},
					$elm$core$Char$isHexDigit,
					$elm$core$Char$isHexDigit))));
};
var $stil4m$elm_syntax$ParserFast$oneOf2MapWithStartRowColumnAndEndRowColumn = F4(
	function (firstToChoice, _v0, secondToChoice, _v1) {
		var attemptFirst = _v0.a;
		var attemptSecond = _v1.a;
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s) {
				var _v2 = attemptFirst(s);
				if (_v2.$ === 'Good') {
					var first = _v2.a;
					var s1 = _v2.b;
					return A2(
						$stil4m$elm_syntax$ParserFast$Good,
						A5(firstToChoice, s.row, s.col, first, s1.row, s1.col),
						s1);
				} else {
					var firstCommitted = _v2.a;
					var firstX = _v2.b;
					if (firstCommitted) {
						return A2($stil4m$elm_syntax$ParserFast$Bad, firstCommitted, firstX);
					} else {
						var _v3 = attemptSecond(s);
						if (_v3.$ === 'Good') {
							var second = _v3.a;
							var s1 = _v3.b;
							return A2(
								$stil4m$elm_syntax$ParserFast$Good,
								A5(secondToChoice, s.row, s.col, second, s1.row, s1.col),
								s1);
						} else {
							var secondCommitted = _v3.a;
							var secondX = _v3.b;
							return secondCommitted ? A2($stil4m$elm_syntax$ParserFast$Bad, secondCommitted, secondX) : A2(
								$stil4m$elm_syntax$ParserFast$Bad,
								false,
								A3($stil4m$elm_syntax$ParserFast$ExpectingOneOf, firstX, secondX, _List_Nil));
						}
					}
				}
			});
	});
var $stil4m$elm_syntax$Elm$Parser$Tokens$characterLiteralMapWithRange = function (rangeAndCharToRes) {
	return A2(
		$stil4m$elm_syntax$ParserFast$symbolFollowedBy,
		'\'',
		A2(
			$stil4m$elm_syntax$ParserFast$followedBySymbol,
			'\'',
			A4(
				$stil4m$elm_syntax$ParserFast$oneOf2MapWithStartRowColumnAndEndRowColumn,
				F5(
					function (startRow, startColumn, _char, endRow, endColumn) {
						return A2(
							rangeAndCharToRes,
							{
								end: {column: endColumn + 1, row: endRow},
								start: {column: startColumn - 1, row: startRow}
							},
							_char);
					}),
				A2(
					$stil4m$elm_syntax$ParserFast$symbolFollowedBy,
					'\\',
					$stil4m$elm_syntax$Elm$Parser$Tokens$escapedCharValueMap($elm$core$Basics$identity)),
				F5(
					function (startRow, startColumn, _char, endRow, endColumn) {
						return A2(
							rangeAndCharToRes,
							{
								end: {column: endColumn + 1, row: endRow},
								start: {column: startColumn - 1, row: startRow}
							},
							_char);
					}),
				$stil4m$elm_syntax$ParserFast$anyChar)));
};
var $stil4m$elm_syntax$Elm$Parser$Expression$charLiteralExpression = $stil4m$elm_syntax$Elm$Parser$Tokens$characterLiteralMapWithRange(
	F2(
		function (range, _char) {
			return {
				comments: $stil4m$elm_syntax$Rope$empty,
				syntax: A2(
					$stil4m$elm_syntax$Elm$Syntax$Node$Node,
					range,
					$stil4m$elm_syntax$Elm$Syntax$Expression$CharLiteral(_char))
			};
		}));
var $elm$core$Result$Err = function (a) {
	return {$: 'Err', a: a};
};
var $stil4m$elm_syntax$Elm$Parser$Expression$errUnknownInfixOperator = $elm$core$Result$Err('unknown infix operator');
var $stil4m$elm_syntax$ParserFast$ifFollowedByWhileValidateMapWithRangeWithoutLinebreak = F4(
	function (toResult, firstIsOkay, afterFirstIsOkay, resultIsOkay) {
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s0) {
				var firstOffset = A3($stil4m$elm_syntax$ParserFast$isSubCharWithoutLinebreak, firstIsOkay, s0.offset, s0.src);
				if (_Utils_eq(firstOffset, -1)) {
					return A2(
						$stil4m$elm_syntax$ParserFast$Bad,
						false,
						A2($stil4m$elm_syntax$ParserFast$ExpectingCharSatisfyingPredicate, s0.row, s0.col));
				} else {
					var s1 = A6($stil4m$elm_syntax$ParserFast$skipWhileWithoutLinebreakHelp, afterFirstIsOkay, firstOffset, s0.row, s0.col + 1, s0.src, s0.indent);
					var name = A3($elm$core$String$slice, s0.offset, s1.offset, s0.src);
					return resultIsOkay(name) ? A2(
						$stil4m$elm_syntax$ParserFast$Good,
						A2(
							toResult,
							{
								end: {column: s1.col, row: s1.row},
								start: {column: s0.col, row: s0.row}
							},
							name),
						s1) : A2(
						$stil4m$elm_syntax$ParserFast$Bad,
						false,
						A2($stil4m$elm_syntax$ParserFast$ExpectingStringSatisfyingPredicate, s0.row, s0.col + 1));
				}
			});
	});
var $stil4m$elm_syntax$Elm$Parser$Tokens$isNotReserved = function (name) {
	switch (name) {
		case 'module':
			return false;
		case 'exposing':
			return false;
		case 'import':
			return false;
		case 'as':
			return false;
		case 'if':
			return false;
		case 'then':
			return false;
		case 'else':
			return false;
		case 'let':
			return false;
		case 'in':
			return false;
		case 'case':
			return false;
		case 'of':
			return false;
		case 'port':
			return false;
		case 'type':
			return false;
		case 'where':
			return false;
		default:
			return true;
	}
};
var $stil4m$elm_syntax$Char$Extra$charCodeIsDigit = function (code) {
	return (code <= 57) && (48 <= code);
};
var $stil4m$elm_syntax$Char$Extra$charCodeIsLower = function (code) {
	return (97 <= code) && (code <= 122);
};
var $stil4m$elm_syntax$Char$Extra$charCodeIsUpper = function (code) {
	return (code <= 90) && (65 <= code);
};
var $elm$core$Basics$modBy = _Basics_modBy;
var $stil4m$elm_syntax$Char$Extra$unicodeIsAlphaNumOrUnderscoreFast = function (c) {
	var code = $elm$core$Char$toCode(c);
	return $stil4m$elm_syntax$Char$Extra$charCodeIsLower(code) || ($stil4m$elm_syntax$Char$Extra$charCodeIsUpper(code) || ($stil4m$elm_syntax$Char$Extra$charCodeIsDigit(code) || ((code === 95) || (((code !== 32) && (code !== 10)) && ((code < 256) ? (((48 <= code) && (code <= 57)) || (((65 <= code) && (code <= 90)) || (((97 <= code) && (code <= 122)) || ((code === 170) || (((178 <= code) && (code <= 179)) || ((code === 181) || (((185 <= code) && (code <= 186)) || (((188 <= code) && (code <= 190)) || (((192 <= code) && (code <= 214)) || (((216 <= code) && (code <= 246)) || ((248 <= code) && (code <= 255)))))))))))) : ((code < 43700) ? ((code < 4347) ? ((code < 2868) ? ((code < 2364) ? ((code < 1648) ? ((code < 930) ? (((256 <= code) && (code <= 705)) || (((710 <= code) && (code <= 721)) || (((736 <= code) && (code <= 740)) || (((880 <= code) && (code <= 884)) || (((886 <= code) && (code <= 887)) || (((890 <= code) && (code <= 893)) || ((code === 895) || ((code === 902) || (((904 <= code) && (code <= 906)) || ((code === 908) || (((910 <= code) && (code <= 929)) || ((!A2($elm$core$Basics$modBy, 2, code)) && ((748 <= code) && (code <= 750)))))))))))))) : (((931 <= code) && (code <= 1013)) || (((1015 <= code) && (code <= 1153)) || (((1162 <= code) && (code <= 1327)) || (((1329 <= code) && (code <= 1366)) || ((code === 1369) || (((1376 <= code) && (code <= 1416)) || (((1488 <= code) && (code <= 1514)) || (((1519 <= code) && (code <= 1522)) || (((1568 <= code) && (code <= 1610)) || (((1632 <= code) && (code <= 1641)) || ((1646 <= code) && (code <= 1647))))))))))))) : ((code < 2041) ? (((1649 <= code) && (code <= 1747)) || ((code === 1749) || (((1765 <= code) && (code <= 1766)) || (((1774 <= code) && (code <= 1788)) || ((code === 1791) || ((code === 1808) || (((1810 <= code) && (code <= 1839)) || (((1869 <= code) && (code <= 1957)) || ((code === 1969) || (((1984 <= code) && (code <= 2026)) || ((2036 <= code) && (code <= 2037)))))))))))) : ((code === 2042) || (((2048 <= code) && (code <= 2069)) || ((code === 2074) || ((code === 2084) || ((code === 2088) || (((2112 <= code) && (code <= 2136)) || (((2144 <= code) && (code <= 2154)) || (((2160 <= code) && (code <= 2183)) || (((2185 <= code) && (code <= 2190)) || (((2208 <= code) && (code <= 2249)) || ((2308 <= code) && (code <= 2361)))))))))))))) : ((code < 2609) ? ((code < 2492) ? ((code === 2365) || ((code === 2384) || (((2392 <= code) && (code <= 2401)) || (((2406 <= code) && (code <= 2415)) || (((2417 <= code) && (code <= 2432)) || (((2437 <= code) && (code <= 2444)) || (((2447 <= code) && (code <= 2448)) || (((2451 <= code) && (code <= 2472)) || (((2474 <= code) && (code <= 2480)) || ((code === 2482) || ((2486 <= code) && (code <= 2489)))))))))))) : ((code === 2493) || ((code === 2510) || (((2524 <= code) && (code <= 2525)) || (((2527 <= code) && (code <= 2529)) || (((2534 <= code) && (code <= 2545)) || (((2548 <= code) && (code <= 2553)) || ((code === 2556) || (((2565 <= code) && (code <= 2570)) || (((2575 <= code) && (code <= 2576)) || (((2579 <= code) && (code <= 2600)) || ((2602 <= code) && (code <= 2608))))))))))))) : ((code < 2737) ? (((2610 <= code) && (code <= 2611)) || (((2613 <= code) && (code <= 2614)) || (((2616 <= code) && (code <= 2617)) || (((2649 <= code) && (code <= 2652)) || ((code === 2654) || (((2662 <= code) && (code <= 2671)) || (((2674 <= code) && (code <= 2676)) || (((2693 <= code) && (code <= 2701)) || (((2703 <= code) && (code <= 2705)) || (((2707 <= code) && (code <= 2728)) || ((2730 <= code) && (code <= 2736)))))))))))) : (((2738 <= code) && (code <= 2739)) || (((2741 <= code) && (code <= 2745)) || ((code === 2749) || ((code === 2768) || (((2784 <= code) && (code <= 2785)) || (((2790 <= code) && (code <= 2799)) || ((code === 2809) || (((2821 <= code) && (code <= 2828)) || (((2831 <= code) && (code <= 2832)) || (((2835 <= code) && (code <= 2856)) || (((2858 <= code) && (code <= 2864)) || ((2866 <= code) && (code <= 2867)))))))))))))))) : ((code < 3411) ? ((code < 3132) ? ((code < 2971) ? (((2869 <= code) && (code <= 2873)) || ((code === 2877) || (((2908 <= code) && (code <= 2909)) || (((2911 <= code) && (code <= 2913)) || (((2918 <= code) && (code <= 2927)) || (((2929 <= code) && (code <= 2935)) || ((code === 2947) || (((2949 <= code) && (code <= 2954)) || (((2958 <= code) && (code <= 2960)) || (((2962 <= code) && (code <= 2965)) || ((2969 <= code) && (code <= 2970)))))))))))) : ((code === 2972) || (((2974 <= code) && (code <= 2975)) || (((2979 <= code) && (code <= 2980)) || (((2984 <= code) && (code <= 2986)) || (((2990 <= code) && (code <= 3001)) || ((code === 3024) || (((3046 <= code) && (code <= 3058)) || (((3077 <= code) && (code <= 3084)) || (((3086 <= code) && (code <= 3088)) || (((3090 <= code) && (code <= 3112)) || ((3114 <= code) && (code <= 3129))))))))))))) : ((code < 3252) ? ((code === 3133) || (((3160 <= code) && (code <= 3162)) || ((code === 3165) || (((3168 <= code) && (code <= 3169)) || (((3174 <= code) && (code <= 3183)) || (((3192 <= code) && (code <= 3198)) || ((code === 3200) || (((3205 <= code) && (code <= 3212)) || (((3214 <= code) && (code <= 3216)) || (((3218 <= code) && (code <= 3240)) || ((3242 <= code) && (code <= 3251)))))))))))) : (((3253 <= code) && (code <= 3257)) || ((code === 3261) || (((3293 <= code) && (code <= 3294)) || (((3296 <= code) && (code <= 3297)) || (((3302 <= code) && (code <= 3311)) || (((3313 <= code) && (code <= 3314)) || (((3332 <= code) && (code <= 3340)) || (((3342 <= code) && (code <= 3344)) || (((3346 <= code) && (code <= 3386)) || ((code === 3389) || (code === 3406))))))))))))) : ((code < 3775) ? ((code < 3633) ? (((3412 <= code) && (code <= 3414)) || (((3416 <= code) && (code <= 3425)) || (((3430 <= code) && (code <= 3448)) || (((3450 <= code) && (code <= 3455)) || (((3461 <= code) && (code <= 3478)) || (((3482 <= code) && (code <= 3505)) || (((3507 <= code) && (code <= 3515)) || ((code === 3517) || (((3520 <= code) && (code <= 3526)) || (((3558 <= code) && (code <= 3567)) || ((3585 <= code) && (code <= 3632)))))))))))) : (((3634 <= code) && (code <= 3635)) || (((3648 <= code) && (code <= 3654)) || (((3664 <= code) && (code <= 3673)) || (((3713 <= code) && (code <= 3714)) || ((code === 3716) || (((3718 <= code) && (code <= 3722)) || (((3724 <= code) && (code <= 3747)) || ((code === 3749) || (((3751 <= code) && (code <= 3760)) || (((3762 <= code) && (code <= 3763)) || (code === 3773)))))))))))) : ((code < 4175) ? (((3776 <= code) && (code <= 3780)) || ((code === 3782) || (((3792 <= code) && (code <= 3801)) || (((3804 <= code) && (code <= 3807)) || ((code === 3840) || (((3872 <= code) && (code <= 3891)) || (((3904 <= code) && (code <= 3911)) || (((3913 <= code) && (code <= 3948)) || (((3976 <= code) && (code <= 3980)) || (((4096 <= code) && (code <= 4138)) || ((4159 <= code) && (code <= 4169)))))))))))) : (((4176 <= code) && (code <= 4181)) || (((4186 <= code) && (code <= 4189)) || ((code === 4193) || (((4197 <= code) && (code <= 4198)) || (((4206 <= code) && (code <= 4208)) || (((4213 <= code) && (code <= 4225)) || ((code === 4238) || (((4240 <= code) && (code <= 4249)) || (((4256 <= code) && (code <= 4293)) || ((code === 4295) || ((code === 4301) || ((4304 <= code) && (code <= 4346))))))))))))))))) : ((code < 8454) ? ((code < 6527) ? ((code < 5760) ? ((code < 4801) ? (((4348 <= code) && (code <= 4680)) || (((4682 <= code) && (code <= 4685)) || (((4688 <= code) && (code <= 4694)) || ((code === 4696) || (((4698 <= code) && (code <= 4701)) || (((4704 <= code) && (code <= 4744)) || (((4746 <= code) && (code <= 4749)) || (((4752 <= code) && (code <= 4784)) || (((4786 <= code) && (code <= 4789)) || (((4792 <= code) && (code <= 4798)) || (code === 4800))))))))))) : (((4802 <= code) && (code <= 4805)) || (((4808 <= code) && (code <= 4822)) || (((4824 <= code) && (code <= 4880)) || (((4882 <= code) && (code <= 4885)) || (((4888 <= code) && (code <= 4954)) || (((4969 <= code) && (code <= 4988)) || (((4992 <= code) && (code <= 5007)) || (((5024 <= code) && (code <= 5109)) || (((5112 <= code) && (code <= 5117)) || (((5121 <= code) && (code <= 5740)) || ((5743 <= code) && (code <= 5759))))))))))))) : ((code < 6111) ? (((5761 <= code) && (code <= 5786)) || (((5792 <= code) && (code <= 5866)) || (((5870 <= code) && (code <= 5880)) || (((5888 <= code) && (code <= 5905)) || (((5919 <= code) && (code <= 5937)) || (((5952 <= code) && (code <= 5969)) || (((5984 <= code) && (code <= 5996)) || (((5998 <= code) && (code <= 6000)) || (((6016 <= code) && (code <= 6067)) || ((code === 6103) || (code === 6108))))))))))) : (((6112 <= code) && (code <= 6121)) || (((6128 <= code) && (code <= 6137)) || (((6160 <= code) && (code <= 6169)) || (((6176 <= code) && (code <= 6264)) || (((6272 <= code) && (code <= 6276)) || (((6279 <= code) && (code <= 6312)) || ((code === 6314) || (((6320 <= code) && (code <= 6389)) || (((6400 <= code) && (code <= 6430)) || (((6470 <= code) && (code <= 6509)) || ((6512 <= code) && (code <= 6516)))))))))))))) : ((code < 7417) ? ((code < 7042) ? (((6528 <= code) && (code <= 6571)) || (((6576 <= code) && (code <= 6601)) || (((6608 <= code) && (code <= 6618)) || (((6656 <= code) && (code <= 6678)) || (((6688 <= code) && (code <= 6740)) || (((6784 <= code) && (code <= 6793)) || (((6800 <= code) && (code <= 6809)) || ((code === 6823) || (((6917 <= code) && (code <= 6963)) || (((6981 <= code) && (code <= 6988)) || ((6992 <= code) && (code <= 7001)))))))))))) : (((7043 <= code) && (code <= 7072)) || (((7086 <= code) && (code <= 7141)) || (((7168 <= code) && (code <= 7203)) || (((7232 <= code) && (code <= 7241)) || (((7245 <= code) && (code <= 7293)) || (((7296 <= code) && (code <= 7304)) || (((7312 <= code) && (code <= 7354)) || (((7357 <= code) && (code <= 7359)) || (((7401 <= code) && (code <= 7404)) || (((7406 <= code) && (code <= 7411)) || ((7413 <= code) && (code <= 7414))))))))))))) : ((code < 8129) ? ((code === 7418) || (((7424 <= code) && (code <= 7615)) || (((7680 <= code) && (code <= 7957)) || (((7960 <= code) && (code <= 7965)) || (((7968 <= code) && (code <= 8005)) || (((8008 <= code) && (code <= 8013)) || (((8016 <= code) && (code <= 8023)) || (((8032 <= code) && (code <= 8061)) || (((8064 <= code) && (code <= 8116)) || (((8118 <= code) && (code <= 8124)) || ((code === 8126) || ((A2($elm$core$Basics$modBy, 2, code) === 1) && ((8025 <= code) && (code <= 8031)))))))))))))) : (((8130 <= code) && (code <= 8132)) || (((8134 <= code) && (code <= 8140)) || (((8144 <= code) && (code <= 8147)) || (((8150 <= code) && (code <= 8155)) || (((8160 <= code) && (code <= 8172)) || (((8178 <= code) && (code <= 8180)) || (((8182 <= code) && (code <= 8188)) || (((8304 <= code) && (code <= 8305)) || (((8308 <= code) && (code <= 8313)) || (((8319 <= code) && (code <= 8329)) || (((8336 <= code) && (code <= 8348)) || (code === 8450))))))))))))))) : ((code < 12783) ? ((code < 11647) ? ((code < 9449) ? ((code === 8455) || (((8458 <= code) && (code <= 8467)) || ((code === 8469) || (((8473 <= code) && (code <= 8477)) || (((8490 <= code) && (code <= 8493)) || (((8495 <= code) && (code <= 8505)) || (((8508 <= code) && (code <= 8511)) || (((8517 <= code) && (code <= 8521)) || ((code === 8526) || (((8528 <= code) && (code <= 8585)) || (((9312 <= code) && (code <= 9371)) || ((!A2($elm$core$Basics$modBy, 2, code)) && ((8484 <= code) && (code <= 8488)))))))))))))) : (((9450 <= code) && (code <= 9471)) || (((10102 <= code) && (code <= 10131)) || (((11264 <= code) && (code <= 11492)) || (((11499 <= code) && (code <= 11502)) || (((11506 <= code) && (code <= 11507)) || ((code === 11517) || (((11520 <= code) && (code <= 11557)) || ((code === 11559) || ((code === 11565) || (((11568 <= code) && (code <= 11623)) || (code === 11631)))))))))))) : ((code < 12320) ? (((11648 <= code) && (code <= 11670)) || (((11680 <= code) && (code <= 11686)) || (((11688 <= code) && (code <= 11694)) || (((11696 <= code) && (code <= 11702)) || (((11704 <= code) && (code <= 11710)) || (((11712 <= code) && (code <= 11718)) || (((11720 <= code) && (code <= 11726)) || (((11728 <= code) && (code <= 11734)) || (((11736 <= code) && (code <= 11742)) || ((code === 11823) || ((12293 <= code) && (code <= 12295)))))))))))) : (((12321 <= code) && (code <= 12329)) || (((12337 <= code) && (code <= 12341)) || (((12344 <= code) && (code <= 12348)) || (((12353 <= code) && (code <= 12438)) || (((12445 <= code) && (code <= 12447)) || (((12449 <= code) && (code <= 12538)) || (((12540 <= code) && (code <= 12543)) || (((12549 <= code) && (code <= 12591)) || (((12593 <= code) && (code <= 12686)) || (((12690 <= code) && (code <= 12693)) || ((12704 <= code) && (code <= 12735)))))))))))))) : ((code < 43019) ? ((code < 42559) ? (((12784 <= code) && (code <= 12799)) || (((12832 <= code) && (code <= 12841)) || (((12872 <= code) && (code <= 12879)) || (((12881 <= code) && (code <= 12895)) || (((12928 <= code) && (code <= 12937)) || (((12977 <= code) && (code <= 12991)) || (((13312 <= code) && (code <= 19903)) || (((19968 <= code) && (code <= 42124)) || (((42192 <= code) && (code <= 42237)) || (((42240 <= code) && (code <= 42508)) || ((42512 <= code) && (code <= 42539)))))))))))) : (((42560 <= code) && (code <= 42606)) || (((42623 <= code) && (code <= 42653)) || (((42656 <= code) && (code <= 42735)) || (((42775 <= code) && (code <= 42783)) || (((42786 <= code) && (code <= 42888)) || (((42891 <= code) && (code <= 42954)) || (((42960 <= code) && (code <= 42961)) || (((42966 <= code) && (code <= 42969)) || (((42994 <= code) && (code <= 43009)) || (((43011 <= code) && (code <= 43013)) || (((43015 <= code) && (code <= 43018)) || ((A2($elm$core$Basics$modBy, 2, code) === 1) && ((42963 <= code) && (code <= 42965))))))))))))))) : ((code < 43395) ? (((43020 <= code) && (code <= 43042)) || (((43056 <= code) && (code <= 43061)) || (((43072 <= code) && (code <= 43123)) || (((43138 <= code) && (code <= 43187)) || (((43216 <= code) && (code <= 43225)) || (((43250 <= code) && (code <= 43255)) || ((code === 43259) || (((43261 <= code) && (code <= 43262)) || (((43264 <= code) && (code <= 43301)) || (((43312 <= code) && (code <= 43334)) || ((43360 <= code) && (code <= 43388)))))))))))) : (((43396 <= code) && (code <= 43442)) || (((43471 <= code) && (code <= 43481)) || (((43488 <= code) && (code <= 43492)) || (((43494 <= code) && (code <= 43518)) || (((43520 <= code) && (code <= 43560)) || (((43584 <= code) && (code <= 43586)) || (((43588 <= code) && (code <= 43595)) || (((43600 <= code) && (code <= 43609)) || (((43616 <= code) && (code <= 43638)) || ((code === 43642) || (((43646 <= code) && (code <= 43695)) || (code === 43697))))))))))))))))) : ((code < 71351) ? ((code < 67671) ? ((code < 65548) ? ((code < 64286) ? ((code < 43867) ? (((43701 <= code) && (code <= 43702)) || (((43705 <= code) && (code <= 43709)) || (((43739 <= code) && (code <= 43741)) || (((43744 <= code) && (code <= 43754)) || (((43762 <= code) && (code <= 43764)) || (((43777 <= code) && (code <= 43782)) || (((43785 <= code) && (code <= 43790)) || (((43793 <= code) && (code <= 43798)) || (((43808 <= code) && (code <= 43814)) || (((43816 <= code) && (code <= 43822)) || (((43824 <= code) && (code <= 43866)) || ((!A2($elm$core$Basics$modBy, 2, code)) && ((43712 <= code) && (code <= 43714)))))))))))))) : (((43868 <= code) && (code <= 43881)) || (((43888 <= code) && (code <= 44002)) || (((44016 <= code) && (code <= 44025)) || (((44032 <= code) && (code <= 55203)) || (((55216 <= code) && (code <= 55238)) || (((55243 <= code) && (code <= 55291)) || (((63744 <= code) && (code <= 64109)) || (((64112 <= code) && (code <= 64217)) || (((64256 <= code) && (code <= 64262)) || (((64275 <= code) && (code <= 64279)) || (code === 64285)))))))))))) : ((code < 65135) ? (((64287 <= code) && (code <= 64296)) || (((64298 <= code) && (code <= 64310)) || (((64312 <= code) && (code <= 64316)) || ((code === 64318) || (((64320 <= code) && (code <= 64321)) || (((64323 <= code) && (code <= 64324)) || (((64326 <= code) && (code <= 64433)) || (((64467 <= code) && (code <= 64829)) || (((64848 <= code) && (code <= 64911)) || (((64914 <= code) && (code <= 64967)) || ((65008 <= code) && (code <= 65019)))))))))))) : (((65136 <= code) && (code <= 65140)) || (((65142 <= code) && (code <= 65276)) || (((65296 <= code) && (code <= 65305)) || (((65313 <= code) && (code <= 65338)) || (((65345 <= code) && (code <= 65370)) || (((65382 <= code) && (code <= 65470)) || (((65474 <= code) && (code <= 65479)) || (((65482 <= code) && (code <= 65487)) || (((65490 <= code) && (code <= 65495)) || (((65498 <= code) && (code <= 65500)) || ((65536 <= code) && (code <= 65547)))))))))))))) : ((code < 66775) ? ((code < 66272) ? (((65549 <= code) && (code <= 65574)) || (((65576 <= code) && (code <= 65594)) || (((65596 <= code) && (code <= 65597)) || (((65599 <= code) && (code <= 65613)) || (((65616 <= code) && (code <= 65629)) || (((65664 <= code) && (code <= 65786)) || (((65799 <= code) && (code <= 65843)) || (((65856 <= code) && (code <= 65912)) || (((65930 <= code) && (code <= 65931)) || (((66176 <= code) && (code <= 66204)) || ((66208 <= code) && (code <= 66256)))))))))))) : (((66273 <= code) && (code <= 66299)) || (((66304 <= code) && (code <= 66339)) || (((66349 <= code) && (code <= 66378)) || (((66384 <= code) && (code <= 66421)) || (((66432 <= code) && (code <= 66461)) || (((66464 <= code) && (code <= 66499)) || (((66504 <= code) && (code <= 66511)) || (((66513 <= code) && (code <= 66517)) || (((66560 <= code) && (code <= 66717)) || (((66720 <= code) && (code <= 66729)) || ((66736 <= code) && (code <= 66771))))))))))))) : ((code < 67071) ? (((66776 <= code) && (code <= 66811)) || (((66816 <= code) && (code <= 66855)) || (((66864 <= code) && (code <= 66915)) || (((66928 <= code) && (code <= 66938)) || (((66940 <= code) && (code <= 66954)) || (((66956 <= code) && (code <= 66962)) || (((66964 <= code) && (code <= 66965)) || (((66967 <= code) && (code <= 66977)) || (((66979 <= code) && (code <= 66993)) || (((66995 <= code) && (code <= 67001)) || ((67003 <= code) && (code <= 67004)))))))))))) : (((67072 <= code) && (code <= 67382)) || (((67392 <= code) && (code <= 67413)) || (((67424 <= code) && (code <= 67431)) || (((67456 <= code) && (code <= 67461)) || (((67463 <= code) && (code <= 67504)) || (((67506 <= code) && (code <= 67514)) || (((67584 <= code) && (code <= 67589)) || ((code === 67592) || (((67594 <= code) && (code <= 67637)) || (((67639 <= code) && (code <= 67640)) || ((code === 67644) || ((67647 <= code) && (code <= 67669)))))))))))))))) : ((code < 69871) ? ((code < 68471) ? ((code < 68116) ? (((67672 <= code) && (code <= 67702)) || (((67705 <= code) && (code <= 67742)) || (((67751 <= code) && (code <= 67759)) || (((67808 <= code) && (code <= 67826)) || (((67828 <= code) && (code <= 67829)) || (((67835 <= code) && (code <= 67867)) || (((67872 <= code) && (code <= 67897)) || (((67968 <= code) && (code <= 68023)) || (((68028 <= code) && (code <= 68047)) || (((68050 <= code) && (code <= 68096)) || ((68112 <= code) && (code <= 68115)))))))))))) : (((68117 <= code) && (code <= 68119)) || (((68121 <= code) && (code <= 68149)) || (((68160 <= code) && (code <= 68168)) || (((68192 <= code) && (code <= 68222)) || (((68224 <= code) && (code <= 68255)) || (((68288 <= code) && (code <= 68295)) || (((68297 <= code) && (code <= 68324)) || (((68331 <= code) && (code <= 68335)) || (((68352 <= code) && (code <= 68405)) || (((68416 <= code) && (code <= 68437)) || ((68440 <= code) && (code <= 68466))))))))))))) : ((code < 69423) ? (((68472 <= code) && (code <= 68497)) || (((68521 <= code) && (code <= 68527)) || (((68608 <= code) && (code <= 68680)) || (((68736 <= code) && (code <= 68786)) || (((68800 <= code) && (code <= 68850)) || (((68858 <= code) && (code <= 68899)) || (((68912 <= code) && (code <= 68921)) || (((69216 <= code) && (code <= 69246)) || (((69248 <= code) && (code <= 69289)) || (((69296 <= code) && (code <= 69297)) || ((69376 <= code) && (code <= 69415)))))))))))) : (((69424 <= code) && (code <= 69445)) || (((69457 <= code) && (code <= 69460)) || (((69488 <= code) && (code <= 69505)) || (((69552 <= code) && (code <= 69579)) || (((69600 <= code) && (code <= 69622)) || (((69635 <= code) && (code <= 69687)) || (((69714 <= code) && (code <= 69743)) || (((69745 <= code) && (code <= 69746)) || ((code === 69749) || (((69763 <= code) && (code <= 69807)) || ((69840 <= code) && (code <= 69864)))))))))))))) : ((code < 70404) ? ((code < 70112) ? (((69872 <= code) && (code <= 69881)) || (((69891 <= code) && (code <= 69926)) || (((69942 <= code) && (code <= 69951)) || ((code === 69956) || ((code === 69959) || (((69968 <= code) && (code <= 70002)) || ((code === 70006) || (((70019 <= code) && (code <= 70066)) || (((70081 <= code) && (code <= 70084)) || (((70096 <= code) && (code <= 70106)) || (code === 70108))))))))))) : (((70113 <= code) && (code <= 70132)) || (((70144 <= code) && (code <= 70161)) || (((70163 <= code) && (code <= 70187)) || (((70207 <= code) && (code <= 70208)) || (((70272 <= code) && (code <= 70278)) || ((code === 70280) || (((70282 <= code) && (code <= 70285)) || (((70287 <= code) && (code <= 70301)) || (((70303 <= code) && (code <= 70312)) || (((70320 <= code) && (code <= 70366)) || ((70384 <= code) && (code <= 70393))))))))))))) : ((code < 70735) ? (((70405 <= code) && (code <= 70412)) || (((70415 <= code) && (code <= 70416)) || (((70419 <= code) && (code <= 70440)) || (((70442 <= code) && (code <= 70448)) || (((70450 <= code) && (code <= 70451)) || (((70453 <= code) && (code <= 70457)) || ((code === 70461) || ((code === 70480) || (((70493 <= code) && (code <= 70497)) || (((70656 <= code) && (code <= 70708)) || ((70727 <= code) && (code <= 70730)))))))))))) : (((70736 <= code) && (code <= 70745)) || (((70751 <= code) && (code <= 70753)) || (((70784 <= code) && (code <= 70831)) || (((70852 <= code) && (code <= 70853)) || ((code === 70855) || (((70864 <= code) && (code <= 70873)) || (((71040 <= code) && (code <= 71086)) || (((71128 <= code) && (code <= 71131)) || (((71168 <= code) && (code <= 71215)) || ((code === 71236) || (((71248 <= code) && (code <= 71257)) || ((71296 <= code) && (code <= 71338))))))))))))))))) : ((code < 119893) ? ((code < 73727) ? ((code < 72703) ? ((code < 71959) ? ((code === 71352) || (((71360 <= code) && (code <= 71369)) || (((71424 <= code) && (code <= 71450)) || (((71472 <= code) && (code <= 71483)) || (((71488 <= code) && (code <= 71494)) || (((71680 <= code) && (code <= 71723)) || (((71840 <= code) && (code <= 71922)) || (((71935 <= code) && (code <= 71942)) || ((code === 71945) || (((71948 <= code) && (code <= 71955)) || ((71957 <= code) && (code <= 71958)))))))))))) : (((71960 <= code) && (code <= 71983)) || (((72016 <= code) && (code <= 72025)) || (((72096 <= code) && (code <= 72103)) || (((72106 <= code) && (code <= 72144)) || ((code === 72192) || (((72203 <= code) && (code <= 72242)) || ((code === 72250) || ((code === 72272) || (((72284 <= code) && (code <= 72329)) || ((code === 72349) || (((72368 <= code) && (code <= 72440)) || ((A2($elm$core$Basics$modBy, 2, code) === 1) && (((71999 <= code) && (code <= 72001)) || ((72161 <= code) && (code <= 72163)))))))))))))))) : ((code < 73062) ? (((72704 <= code) && (code <= 72712)) || (((72714 <= code) && (code <= 72750)) || ((code === 72768) || (((72784 <= code) && (code <= 72812)) || (((72818 <= code) && (code <= 72847)) || (((72960 <= code) && (code <= 72966)) || (((72968 <= code) && (code <= 72969)) || (((72971 <= code) && (code <= 73008)) || ((code === 73030) || (((73040 <= code) && (code <= 73049)) || ((73056 <= code) && (code <= 73061)))))))))))) : (((73063 <= code) && (code <= 73064)) || (((73066 <= code) && (code <= 73097)) || ((code === 73112) || (((73120 <= code) && (code <= 73129)) || (((73440 <= code) && (code <= 73458)) || ((code === 73474) || (((73476 <= code) && (code <= 73488)) || (((73490 <= code) && (code <= 73523)) || (((73552 <= code) && (code <= 73561)) || ((code === 73648) || ((73664 <= code) && (code <= 73684)))))))))))))) : ((code < 94098) ? ((code < 92863) ? (((73728 <= code) && (code <= 74649)) || (((74752 <= code) && (code <= 74862)) || (((74880 <= code) && (code <= 75075)) || (((77712 <= code) && (code <= 77808)) || (((77824 <= code) && (code <= 78895)) || (((78913 <= code) && (code <= 78918)) || (((82944 <= code) && (code <= 83526)) || (((92160 <= code) && (code <= 92728)) || (((92736 <= code) && (code <= 92766)) || (((92768 <= code) && (code <= 92777)) || ((92784 <= code) && (code <= 92862)))))))))))) : (((92864 <= code) && (code <= 92873)) || (((92880 <= code) && (code <= 92909)) || (((92928 <= code) && (code <= 92975)) || (((92992 <= code) && (code <= 92995)) || (((93008 <= code) && (code <= 93017)) || (((93019 <= code) && (code <= 93025)) || (((93027 <= code) && (code <= 93047)) || (((93053 <= code) && (code <= 93071)) || (((93760 <= code) && (code <= 93846)) || (((93952 <= code) && (code <= 94026)) || (code === 94032)))))))))))) : ((code < 110927) ? (((94099 <= code) && (code <= 94111)) || (((94176 <= code) && (code <= 94177)) || ((code === 94179) || (((94208 <= code) && (code <= 100343)) || (((100352 <= code) && (code <= 101589)) || (((101632 <= code) && (code <= 101640)) || (((110576 <= code) && (code <= 110579)) || (((110581 <= code) && (code <= 110587)) || (((110589 <= code) && (code <= 110590)) || (((110592 <= code) && (code <= 110882)) || (code === 110898))))))))))) : (((110928 <= code) && (code <= 110930)) || ((code === 110933) || (((110948 <= code) && (code <= 110951)) || (((110960 <= code) && (code <= 111355)) || (((113664 <= code) && (code <= 113770)) || (((113776 <= code) && (code <= 113788)) || (((113792 <= code) && (code <= 113800)) || (((113808 <= code) && (code <= 113817)) || (((119488 <= code) && (code <= 119507)) || (((119520 <= code) && (code <= 119539)) || (((119648 <= code) && (code <= 119672)) || ((119808 <= code) && (code <= 119892)))))))))))))))) : ((code < 124911) ? ((code < 120597) ? ((code < 120085) ? (((119894 <= code) && (code <= 119964)) || (((119966 <= code) && (code <= 119967)) || ((code === 119970) || (((119973 <= code) && (code <= 119974)) || (((119977 <= code) && (code <= 119980)) || (((119982 <= code) && (code <= 119993)) || ((code === 119995) || (((119997 <= code) && (code <= 120003)) || (((120005 <= code) && (code <= 120069)) || (((120071 <= code) && (code <= 120074)) || ((120077 <= code) && (code <= 120084)))))))))))) : (((120086 <= code) && (code <= 120092)) || (((120094 <= code) && (code <= 120121)) || (((120123 <= code) && (code <= 120126)) || (((120128 <= code) && (code <= 120132)) || ((code === 120134) || (((120138 <= code) && (code <= 120144)) || (((120146 <= code) && (code <= 120485)) || (((120488 <= code) && (code <= 120512)) || (((120514 <= code) && (code <= 120538)) || (((120540 <= code) && (code <= 120570)) || ((120572 <= code) && (code <= 120596))))))))))))) : ((code < 123135) ? (((120598 <= code) && (code <= 120628)) || (((120630 <= code) && (code <= 120654)) || (((120656 <= code) && (code <= 120686)) || (((120688 <= code) && (code <= 120712)) || (((120714 <= code) && (code <= 120744)) || (((120746 <= code) && (code <= 120770)) || (((120772 <= code) && (code <= 120779)) || (((120782 <= code) && (code <= 120831)) || (((122624 <= code) && (code <= 122654)) || (((122661 <= code) && (code <= 122666)) || ((122928 <= code) && (code <= 122989)))))))))))) : (((123136 <= code) && (code <= 123180)) || (((123191 <= code) && (code <= 123197)) || (((123200 <= code) && (code <= 123209)) || ((code === 123214) || (((123536 <= code) && (code <= 123565)) || (((123584 <= code) && (code <= 123627)) || (((123632 <= code) && (code <= 123641)) || (((124112 <= code) && (code <= 124139)) || (((124144 <= code) && (code <= 124153)) || (((124896 <= code) && (code <= 124902)) || (((124904 <= code) && (code <= 124907)) || ((124909 <= code) && (code <= 124910))))))))))))))) : ((code < 126560) ? ((code < 126463) ? (((124912 <= code) && (code <= 124926)) || (((124928 <= code) && (code <= 125124)) || (((125127 <= code) && (code <= 125135)) || (((125184 <= code) && (code <= 125251)) || ((code === 125259) || (((125264 <= code) && (code <= 125273)) || (((126065 <= code) && (code <= 126123)) || (((126125 <= code) && (code <= 126127)) || (((126129 <= code) && (code <= 126132)) || (((126209 <= code) && (code <= 126253)) || ((126255 <= code) && (code <= 126269)))))))))))) : (((126464 <= code) && (code <= 126467)) || (((126469 <= code) && (code <= 126495)) || (((126497 <= code) && (code <= 126498)) || ((code === 126500) || ((code === 126503) || (((126505 <= code) && (code <= 126514)) || (((126516 <= code) && (code <= 126519)) || ((code === 126530) || (((126541 <= code) && (code <= 126543)) || (((126545 <= code) && (code <= 126546)) || ((code === 126548) || ((A2($elm$core$Basics$modBy, 2, code) === 1) && (((126521 <= code) && (code <= 126523)) || (((126535 <= code) && (code <= 126539)) || ((126551 <= code) && (code <= 126559))))))))))))))))) : ((code < 126634) ? (((126561 <= code) && (code <= 126562)) || ((code === 126564) || (((126567 <= code) && (code <= 126570)) || (((126572 <= code) && (code <= 126578)) || (((126580 <= code) && (code <= 126583)) || (((126585 <= code) && (code <= 126588)) || ((code === 126590) || (((126592 <= code) && (code <= 126601)) || (((126603 <= code) && (code <= 126619)) || (((126625 <= code) && (code <= 126627)) || ((126629 <= code) && (code <= 126633)))))))))))) : (((126635 <= code) && (code <= 126651)) || (((127232 <= code) && (code <= 127244)) || (((130032 <= code) && (code <= 130041)) || (((131072 <= code) && (code <= 173791)) || (((173824 <= code) && (code <= 177977)) || (((177984 <= code) && (code <= 178205)) || (((178208 <= code) && (code <= 183969)) || (((183984 <= code) && (code <= 191456)) || (((191472 <= code) && (code <= 192093)) || (((194560 <= code) && (code <= 195101)) || (((196608 <= code) && (code <= 201546)) || ((201552 <= code) && (code <= 205743))))))))))))))))))))))));
};
var $elm$core$String$fromChar = function (_char) {
	return A2($elm$core$String$cons, _char, '');
};
var $elm$core$String$toLower = _String_toLower;
var $elm$core$String$toUpper = _String_toUpper;
var $stil4m$elm_syntax$Char$Extra$unicodeIsLowerFast = function (c) {
	var code = $elm$core$Char$toCode(c);
	var cString = $elm$core$String$fromChar(c);
	return $stil4m$elm_syntax$Char$Extra$charCodeIsLower(code) || ((_Utils_eq(
		$elm$core$String$toLower(cString),
		cString + '') && (!_Utils_eq(
		$elm$core$String$toUpper(cString),
		cString + ''))) ? ((code <= 836) || (((838 <= code) && (code <= 8559)) || (((8576 <= code) && (code <= 9423)) || ((9450 <= code) && (code <= 983040))))) : ((code < 43001) ? ((code < 8457) ? ((code < 590) ? (((311 <= code) && (code <= 312)) || (((396 <= code) && (code <= 397)) || (((409 <= code) && (code <= 411)) || (((426 <= code) && (code <= 427)) || (((441 <= code) && (code <= 442)) || (((445 <= code) && (code <= 447)) || ((code === 545) || ((563 <= code) && (code <= 569))))))))) : (((591 <= code) && (code <= 659)) || (((661 <= code) && (code <= 687)) || (((1019 <= code) && (code <= 1020)) || (((1376 <= code) && (code <= 1416)) || (((7424 <= code) && (code <= 7467)) || (((7531 <= code) && (code <= 7543)) || (((7545 <= code) && (code <= 7578)) || (((7829 <= code) && (code <= 7837)) || (code === 7839)))))))))) : ((code < 11376) ? ((code === 8458) || (((8462 <= code) && (code <= 8463)) || ((code === 8467) || ((code === 8495) || ((code === 8500) || ((code === 8505) || (((8508 <= code) && (code <= 8509)) || ((8518 <= code) && (code <= 8521))))))))) : ((code === 11377) || (((11379 <= code) && (code <= 11380)) || (((11382 <= code) && (code <= 11387)) || (((11491 <= code) && (code <= 11492)) || (((42799 <= code) && (code <= 42801)) || (((42865 <= code) && (code <= 42872)) || ((code === 42894) || (((42899 <= code) && (code <= 42901)) || ((code === 42927) || ((A2($elm$core$Basics$modBy, 2, code) === 1) && ((42963 <= code) && (code <= 42965)))))))))))))) : ((code < 120353) ? ((code < 119994) ? ((code === 43002) || (((43824 <= code) && (code <= 43866)) || (((43872 <= code) && (code <= 43880)) || (((119834 <= code) && (code <= 119859)) || (((119886 <= code) && (code <= 119892)) || (((119894 <= code) && (code <= 119911)) || (((119938 <= code) && (code <= 119963)) || ((119990 <= code) && (code <= 119993))))))))) : ((code === 119995) || (((119997 <= code) && (code <= 120003)) || (((120005 <= code) && (code <= 120015)) || (((120042 <= code) && (code <= 120067)) || (((120094 <= code) && (code <= 120119)) || (((120146 <= code) && (code <= 120171)) || (((120198 <= code) && (code <= 120223)) || (((120250 <= code) && (code <= 120275)) || ((120302 <= code) && (code <= 120327))))))))))) : ((code < 120655) ? (((120354 <= code) && (code <= 120379)) || (((120406 <= code) && (code <= 120431)) || (((120458 <= code) && (code <= 120485)) || (((120514 <= code) && (code <= 120538)) || (((120540 <= code) && (code <= 120545)) || (((120572 <= code) && (code <= 120596)) || (((120598 <= code) && (code <= 120603)) || ((120630 <= code) && (code <= 120654))))))))) : (((120656 <= code) && (code <= 120661)) || (((120688 <= code) && (code <= 120712)) || (((120714 <= code) && (code <= 120719)) || (((120746 <= code) && (code <= 120770)) || (((120772 <= code) && (code <= 120777)) || ((code === 120779) || (((122624 <= code) && (code <= 122633)) || (((122635 <= code) && (code <= 122654)) || ((122661 <= code) && (code <= 122666))))))))))))));
};
var $stil4m$elm_syntax$Elm$Parser$Tokens$functionNameNode = A4($stil4m$elm_syntax$ParserFast$ifFollowedByWhileValidateMapWithRangeWithoutLinebreak, $stil4m$elm_syntax$Elm$Syntax$Node$Node, $stil4m$elm_syntax$Char$Extra$unicodeIsLowerFast, $stil4m$elm_syntax$Char$Extra$unicodeIsAlphaNumOrUnderscoreFast, $stil4m$elm_syntax$Elm$Parser$Tokens$isNotReserved);
var $elm$core$Basics$ge = _Utils_ge;
var $stil4m$elm_syntax$Elm$Syntax$Expression$GLSLExpression = function (a) {
	return {$: 'GLSLExpression', a: a};
};
var $stil4m$elm_syntax$ParserFast$loopUntilHelp = F7(
	function (committedSoFar, endParser, element, soFar, reduce, foldedToRes, s0) {
		loopUntilHelp:
		while (true) {
			var parseEnd = endParser.a;
			var parseElement = element.a;
			var _v0 = parseEnd(s0);
			if (_v0.$ === 'Good') {
				var s1 = _v0.b;
				return A2(
					$stil4m$elm_syntax$ParserFast$Good,
					foldedToRes(soFar),
					s1);
			} else {
				var endCommitted = _v0.a;
				var endX = _v0.b;
				if (endCommitted) {
					return A2($stil4m$elm_syntax$ParserFast$Bad, true, endX);
				} else {
					var _v1 = parseElement(s0);
					if (_v1.$ === 'Good') {
						var elementResult = _v1.a;
						var s1 = _v1.b;
						var $temp$committedSoFar = true,
							$temp$endParser = endParser,
							$temp$element = element,
							$temp$soFar = A2(reduce, elementResult, soFar),
							$temp$reduce = reduce,
							$temp$foldedToRes = foldedToRes,
							$temp$s0 = s1;
						committedSoFar = $temp$committedSoFar;
						endParser = $temp$endParser;
						element = $temp$element;
						soFar = $temp$soFar;
						reduce = $temp$reduce;
						foldedToRes = $temp$foldedToRes;
						s0 = $temp$s0;
						continue loopUntilHelp;
					} else {
						var elementCommitted = _v1.a;
						var x = _v1.b;
						return A2($stil4m$elm_syntax$ParserFast$Bad, committedSoFar || elementCommitted, x);
					}
				}
			}
		}
	});
var $stil4m$elm_syntax$ParserFast$loopUntil = F5(
	function (endParser, element, initialFolded, reduce, foldedToRes) {
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s) {
				return A7($stil4m$elm_syntax$ParserFast$loopUntilHelp, false, endParser, element, initialFolded, reduce, foldedToRes, s);
			});
	});
var $stil4m$elm_syntax$ParserFast$mapWithRange = F2(
	function (combineStartAndResult, _v0) {
		var parse = _v0.a;
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s0) {
				var _v1 = parse(s0);
				if (_v1.$ === 'Good') {
					var a = _v1.a;
					var s1 = _v1.b;
					return A2(
						$stil4m$elm_syntax$ParserFast$Good,
						A2(
							combineStartAndResult,
							{
								end: {column: s1.col, row: s1.row},
								start: {column: s0.col, row: s0.row}
							},
							a),
						s1);
				} else {
					var committed = _v1.a;
					var x = _v1.b;
					return A2($stil4m$elm_syntax$ParserFast$Bad, committed, x);
				}
			});
	});
var $stil4m$elm_syntax$Elm$Parser$Expression$glslExpressionAfterOpeningSquareBracket = A2(
	$stil4m$elm_syntax$ParserFast$symbolFollowedBy,
	'glsl|',
	A2(
		$stil4m$elm_syntax$ParserFast$mapWithRange,
		F2(
			function (range, s) {
				return {
					comments: $stil4m$elm_syntax$Rope$empty,
					syntax: A2(
						$stil4m$elm_syntax$Elm$Syntax$Node$Node,
						{
							end: {column: range.end.column + 2, row: range.end.row},
							start: {column: range.start.column - 6, row: range.start.row}
						},
						$stil4m$elm_syntax$Elm$Syntax$Expression$GLSLExpression(s))
				};
			}),
		A5(
			$stil4m$elm_syntax$ParserFast$loopUntil,
			A2($stil4m$elm_syntax$ParserFast$symbol, '|]', _Utils_Tuple0),
			A2(
				$stil4m$elm_syntax$ParserFast$oneOf2,
				A2($stil4m$elm_syntax$ParserFast$symbol, '|', '|'),
				$stil4m$elm_syntax$ParserFast$while(
					function (c) {
						return !_Utils_eq(
							c,
							_Utils_chr('|'));
					})),
			'',
			F2(
				function (extension, soFar) {
					return soFar + (extension + '');
				}),
			$elm$core$Basics$identity)));
var $stil4m$elm_syntax$ParserFast$ExpectingKeyword = F3(
	function (a, b, c) {
		return {$: 'ExpectingKeyword', a: a, b: b, c: c};
	});
var $stil4m$elm_syntax$Char$Extra$isLatinAlphaNumOrUnderscoreFast = function (c) {
	var code = $elm$core$Char$toCode(c);
	return $stil4m$elm_syntax$Char$Extra$charCodeIsLower(code) || ($stil4m$elm_syntax$Char$Extra$charCodeIsUpper(code) || ($stil4m$elm_syntax$Char$Extra$charCodeIsDigit(code) || (code === 95)));
};
var $stil4m$elm_syntax$ParserFast$isSubCharAlphaNumOrUnderscore = F2(
	function (offset, string) {
		return A2(
			$elm$core$String$any,
			$stil4m$elm_syntax$Char$Extra$isLatinAlphaNumOrUnderscoreFast,
			A3($elm$core$String$slice, offset, offset + 1, string));
	});
var $stil4m$elm_syntax$ParserFast$keyword = F2(
	function (kwd, res) {
		var kwdLength = $elm$core$String$length(kwd);
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s) {
				var newOffset = s.offset + kwdLength;
				return (_Utils_eq(
					A3($elm$core$String$slice, s.offset, newOffset, s.src),
					kwd + '') && (!A2($stil4m$elm_syntax$ParserFast$isSubCharAlphaNumOrUnderscore, newOffset, s.src))) ? A2(
					$stil4m$elm_syntax$ParserFast$Good,
					res,
					{col: s.col + kwdLength, indent: s.indent, offset: newOffset, row: s.row, src: s.src}) : A2(
					$stil4m$elm_syntax$ParserFast$Bad,
					false,
					A3($stil4m$elm_syntax$ParserFast$ExpectingKeyword, s.row, s.col, kwd));
			});
	});
var $stil4m$elm_syntax$Elm$Parser$Tokens$inToken = A2($stil4m$elm_syntax$ParserFast$keyword, 'in', _Utils_Tuple0);
var $stil4m$elm_syntax$ParserFast$keywordFollowedBy = F2(
	function (kwd, _v0) {
		var parseNext = _v0.a;
		var kwdLength = $elm$core$String$length(kwd);
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s) {
				var newOffset = s.offset + kwdLength;
				return (_Utils_eq(
					A3($elm$core$String$slice, s.offset, newOffset, s.src),
					kwd + '') && (!A2($stil4m$elm_syntax$ParserFast$isSubCharAlphaNumOrUnderscore, newOffset, s.src))) ? $stil4m$elm_syntax$ParserFast$pStepCommit(
					parseNext(
						{col: s.col + kwdLength, indent: s.indent, offset: newOffset, row: s.row, src: s.src})) : A2(
					$stil4m$elm_syntax$ParserFast$Bad,
					false,
					A3($stil4m$elm_syntax$ParserFast$ExpectingKeyword, s.row, s.col, kwd));
			});
	});
var $stil4m$elm_syntax$ParserFast$map2 = F3(
	function (func, _v0, _v1) {
		var parseA = _v0.a;
		var parseB = _v1.a;
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s0) {
				var _v2 = parseA(s0);
				if (_v2.$ === 'Bad') {
					var committed = _v2.a;
					var x = _v2.b;
					return A2($stil4m$elm_syntax$ParserFast$Bad, committed, x);
				} else {
					var a = _v2.a;
					var s1 = _v2.b;
					var _v3 = parseB(s1);
					if (_v3.$ === 'Bad') {
						var x = _v3.b;
						return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
					} else {
						var b = _v3.a;
						var s2 = _v3.b;
						return A2(
							$stil4m$elm_syntax$ParserFast$Good,
							A2(func, a, b),
							s2);
					}
				}
			});
	});
var $stil4m$elm_syntax$ParserFast$columnIndentAndThen = function (callback) {
	return $stil4m$elm_syntax$ParserFast$Parser(
		function (s) {
			var _v0 = A2(callback, s.col, s.indent);
			var parse = _v0.a;
			return parse(s);
		});
};
var $stil4m$elm_syntax$ParserFast$ExpectingCustom = F3(
	function (a, b, c) {
		return {$: 'ExpectingCustom', a: a, b: b, c: c};
	});
var $stil4m$elm_syntax$ParserFast$problem = function (msg) {
	return $stil4m$elm_syntax$ParserFast$Parser(
		function (s) {
			return A2(
				$stil4m$elm_syntax$ParserFast$Bad,
				false,
				A3($stil4m$elm_syntax$ParserFast$ExpectingCustom, s.row, s.col, msg));
		});
};
var $stil4m$elm_syntax$Elm$Parser$Layout$problemTopIndentation = $stil4m$elm_syntax$ParserFast$problem('must be on top indentation');
var $stil4m$elm_syntax$Elm$Parser$Layout$onTopIndentationFollowedBy = function (nextParser) {
	return $stil4m$elm_syntax$ParserFast$columnIndentAndThen(
		F2(
			function (column, indent) {
				return (!(column - indent)) ? nextParser : $stil4m$elm_syntax$Elm$Parser$Layout$problemTopIndentation;
			}));
};
var $stil4m$elm_syntax$ParserFast$skipWhileWhitespaceHelp = F5(
	function (offset, row, col, src, indent) {
		skipWhileWhitespaceHelp:
		while (true) {
			var _v0 = A3($elm$core$String$slice, offset, offset + 1, src);
			switch (_v0) {
				case ' ':
					var $temp$offset = offset + 1,
						$temp$row = row,
						$temp$col = col + 1,
						$temp$src = src,
						$temp$indent = indent;
					offset = $temp$offset;
					row = $temp$row;
					col = $temp$col;
					src = $temp$src;
					indent = $temp$indent;
					continue skipWhileWhitespaceHelp;
				case '\n':
					var $temp$offset = offset + 1,
						$temp$row = row + 1,
						$temp$col = 1,
						$temp$src = src,
						$temp$indent = indent;
					offset = $temp$offset;
					row = $temp$row;
					col = $temp$col;
					src = $temp$src;
					indent = $temp$indent;
					continue skipWhileWhitespaceHelp;
				case '\u000D':
					var $temp$offset = offset + 1,
						$temp$row = row,
						$temp$col = col + 1,
						$temp$src = src,
						$temp$indent = indent;
					offset = $temp$offset;
					row = $temp$row;
					col = $temp$col;
					src = $temp$src;
					indent = $temp$indent;
					continue skipWhileWhitespaceHelp;
				default:
					return {col: col, indent: indent, offset: offset, row: row, src: src};
			}
		}
	});
var $stil4m$elm_syntax$ParserFast$followedBySkipWhileWhitespace = function (_v0) {
	var parseBefore = _v0.a;
	return $stil4m$elm_syntax$ParserFast$Parser(
		function (s0) {
			var _v1 = parseBefore(s0);
			if (_v1.$ === 'Good') {
				var res = _v1.a;
				var s1 = _v1.b;
				var s2 = A5($stil4m$elm_syntax$ParserFast$skipWhileWhitespaceHelp, s1.offset, s1.row, s1.col, s1.src, s1.indent);
				return A2($stil4m$elm_syntax$ParserFast$Good, res, s2);
			} else {
				var bad = _v1;
				return bad;
			}
		});
};
var $stil4m$elm_syntax$ParserFast$map2OrSucceed = F4(
	function (func, _v0, _v1, fallback) {
		var parseA = _v0.a;
		var parseB = _v1.a;
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s0) {
				var _v2 = parseA(s0);
				if (_v2.$ === 'Bad') {
					var c1 = _v2.a;
					var x = _v2.b;
					return c1 ? A2($stil4m$elm_syntax$ParserFast$Bad, true, x) : A2($stil4m$elm_syntax$ParserFast$Good, fallback, s0);
				} else {
					var a = _v2.a;
					var s1 = _v2.b;
					var _v3 = parseB(s1);
					if (_v3.$ === 'Bad') {
						var x = _v3.b;
						return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
					} else {
						var b = _v3.a;
						var s2 = _v3.b;
						return A2(
							$stil4m$elm_syntax$ParserFast$Good,
							A2(func, a, b),
							s2);
					}
				}
			});
	});
var $stil4m$elm_syntax$ParserFast$offsetSourceAndThen = function (callback) {
	return $stil4m$elm_syntax$ParserFast$Parser(
		function (s) {
			var _v0 = A2(callback, s.offset, s.src);
			var parse = _v0.a;
			return parse(s);
		});
};
var $stil4m$elm_syntax$Elm$Parser$Comments$problemUnexpectedDocumentation = $stil4m$elm_syntax$ParserFast$problem('unexpected documentation comment');
var $stil4m$elm_syntax$Elm$Parser$Comments$multilineComment = $stil4m$elm_syntax$ParserFast$offsetSourceAndThen(
	F2(
		function (offset, source) {
			var _v0 = A3($elm$core$String$slice, offset + 2, offset + 3, source);
			if (_v0 === '|') {
				return $stil4m$elm_syntax$Elm$Parser$Comments$problemUnexpectedDocumentation;
			} else {
				return $stil4m$elm_syntax$Elm$Parser$Comments$multiLineCommentNoCheck;
			}
		}));
var $stil4m$elm_syntax$Rope$Leaf = F2(
	function (a, b) {
		return {$: 'Leaf', a: a, b: b};
	});
var $stil4m$elm_syntax$Rope$one = function (onlyElement) {
	return A2($stil4m$elm_syntax$Rope$Leaf, onlyElement, _Utils_Tuple0);
};
var $stil4m$elm_syntax$ParserFast$loopWhileSucceedsHelp = F5(
	function (element, soFar, reduce, foldedToRes, s0) {
		loopWhileSucceedsHelp:
		while (true) {
			var parseElement = element.a;
			var _v0 = parseElement(s0);
			if (_v0.$ === 'Good') {
				var elementResult = _v0.a;
				var s1 = _v0.b;
				var $temp$element = element,
					$temp$soFar = A2(reduce, elementResult, soFar),
					$temp$reduce = reduce,
					$temp$foldedToRes = foldedToRes,
					$temp$s0 = s1;
				element = $temp$element;
				soFar = $temp$soFar;
				reduce = $temp$reduce;
				foldedToRes = $temp$foldedToRes;
				s0 = $temp$s0;
				continue loopWhileSucceedsHelp;
			} else {
				var elementCommitted = _v0.a;
				var x = _v0.b;
				return elementCommitted ? A2($stil4m$elm_syntax$ParserFast$Bad, true, x) : A2(
					$stil4m$elm_syntax$ParserFast$Good,
					foldedToRes(soFar),
					s0);
			}
		}
	});
var $stil4m$elm_syntax$ParserFast$loopWhileSucceeds = F4(
	function (element, initialFolded, reduce, foldedToRes) {
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s) {
				return A5($stil4m$elm_syntax$ParserFast$loopWhileSucceedsHelp, element, initialFolded, reduce, foldedToRes, s);
			});
	});
var $stil4m$elm_syntax$Rope$prependToFilled = F2(
	function (rightLikelyFilled, left) {
		if (left.$ === 'Nothing') {
			return $elm$core$Maybe$Just(rightLikelyFilled);
		} else {
			var leftLikelyFilled = left.a;
			return $elm$core$Maybe$Just(
				A2($stil4m$elm_syntax$Rope$Branch2, leftLikelyFilled, rightLikelyFilled));
		}
	});
var $stil4m$elm_syntax$ParserFast$whileMapWithRange = F2(
	function (isGood, rangeAndConsumedStringToRes) {
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s0) {
				var s1 = A6($stil4m$elm_syntax$ParserFast$skipWhileHelp, isGood, s0.offset, s0.row, s0.col, s0.src, s0.indent);
				return A2(
					$stil4m$elm_syntax$ParserFast$Good,
					A2(
						rangeAndConsumedStringToRes,
						{
							end: {column: s1.col, row: s1.row},
							start: {column: s0.col, row: s0.row}
						},
						A3($elm$core$String$slice, s0.offset, s1.offset, s0.src)),
					s1);
			});
	});
var $stil4m$elm_syntax$Elm$Parser$Comments$singleLineComment = A2(
	$stil4m$elm_syntax$ParserFast$symbolFollowedBy,
	'--',
	A2(
		$stil4m$elm_syntax$ParserFast$whileMapWithRange,
		function (c) {
			switch (c.valueOf()) {
				case '\u000D':
					return false;
				case '\n':
					return false;
				default:
					return !$stil4m$elm_syntax$Char$Extra$isUtf16Surrogate(c);
			}
		},
		F2(
			function (range, content) {
				return A2(
					$stil4m$elm_syntax$Elm$Syntax$Node$Node,
					{
						end: {column: range.end.column, row: range.start.row},
						start: {column: range.start.column - 2, row: range.start.row}
					},
					'--' + content);
			})));
var $stil4m$elm_syntax$Elm$Parser$Layout$whitespaceAndCommentsOrEmptyLoop = A4(
	$stil4m$elm_syntax$ParserFast$loopWhileSucceeds,
	$stil4m$elm_syntax$ParserFast$followedBySkipWhileWhitespace(
		A2($stil4m$elm_syntax$ParserFast$oneOf2, $stil4m$elm_syntax$Elm$Parser$Comments$singleLineComment, $stil4m$elm_syntax$Elm$Parser$Comments$multilineComment)),
	$stil4m$elm_syntax$Rope$empty,
	F2(
		function (right, soFar) {
			return A2(
				$stil4m$elm_syntax$Rope$prependToFilled,
				$stil4m$elm_syntax$Rope$one(right),
				soFar);
		}),
	$elm$core$Basics$identity);
var $stil4m$elm_syntax$Elm$Parser$Layout$fromMultilineCommentNodeOrEmptyOnProblem = A4(
	$stil4m$elm_syntax$ParserFast$map2OrSucceed,
	F2(
		function (comment, commentsAfter) {
			return A2(
				$stil4m$elm_syntax$Rope$filledPrependTo,
				commentsAfter,
				$stil4m$elm_syntax$Rope$one(comment));
		}),
	$stil4m$elm_syntax$ParserFast$followedBySkipWhileWhitespace($stil4m$elm_syntax$Elm$Parser$Comments$multilineComment),
	$stil4m$elm_syntax$Elm$Parser$Layout$whitespaceAndCommentsOrEmptyLoop,
	$stil4m$elm_syntax$Rope$empty);
var $stil4m$elm_syntax$Elm$Parser$Layout$fromSingleLineCommentNode = A3(
	$stil4m$elm_syntax$ParserFast$map2,
	F2(
		function (content, commentsAfter) {
			return A2(
				$stil4m$elm_syntax$Rope$filledPrependTo,
				commentsAfter,
				$stil4m$elm_syntax$Rope$one(content));
		}),
	$stil4m$elm_syntax$ParserFast$followedBySkipWhileWhitespace($stil4m$elm_syntax$Elm$Parser$Comments$singleLineComment),
	$stil4m$elm_syntax$Elm$Parser$Layout$whitespaceAndCommentsOrEmptyLoop);
var $stil4m$elm_syntax$ParserFast$offsetSourceAndThenOrSucceed = F2(
	function (callback, fallback) {
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s) {
				var _v0 = A2(callback, s.offset, s.src);
				if (_v0.$ === 'Nothing') {
					return A2($stil4m$elm_syntax$ParserFast$Good, fallback, s);
				} else {
					var parse = _v0.a.a;
					return parse(s);
				}
			});
	});
var $stil4m$elm_syntax$ParserFast$skipWhileWhitespaceFollowedBy = function (_v0) {
	var parseNext = _v0.a;
	return $stil4m$elm_syntax$ParserFast$Parser(
		function (s0) {
			var s1 = A5($stil4m$elm_syntax$ParserFast$skipWhileWhitespaceHelp, s0.offset, s0.row, s0.col, s0.src, s0.indent);
			return $stil4m$elm_syntax$ParserFast$pStepCommit(
				parseNext(s1));
		});
};
var $stil4m$elm_syntax$Elm$Parser$Layout$whitespaceAndCommentsOrEmpty = $stil4m$elm_syntax$ParserFast$skipWhileWhitespaceFollowedBy(
	A2(
		$stil4m$elm_syntax$ParserFast$offsetSourceAndThenOrSucceed,
		F2(
			function (offset, source) {
				var _v0 = A3($elm$core$String$slice, offset, offset + 2, source);
				switch (_v0) {
					case '--':
						return $elm$core$Maybe$Just($stil4m$elm_syntax$Elm$Parser$Layout$fromSingleLineCommentNode);
					case '{-':
						return $elm$core$Maybe$Just($stil4m$elm_syntax$Elm$Parser$Layout$fromMultilineCommentNodeOrEmptyOnProblem);
					default:
						return $elm$core$Maybe$Nothing;
				}
			}),
		$stil4m$elm_syntax$Rope$empty));
var $stil4m$elm_syntax$Elm$Parser$Layout$optimisticLayout = $stil4m$elm_syntax$Elm$Parser$Layout$whitespaceAndCommentsOrEmpty;
var $stil4m$elm_syntax$Elm$Parser$Layout$layoutStrictFollowedBy = function (nextParser) {
	return A3(
		$stil4m$elm_syntax$ParserFast$map2,
		F2(
			function (commentsBefore, after) {
				return {comments: commentsBefore, syntax: after};
			}),
		$stil4m$elm_syntax$Elm$Parser$Layout$optimisticLayout,
		$stil4m$elm_syntax$Elm$Parser$Layout$onTopIndentationFollowedBy(nextParser));
};
var $stil4m$elm_syntax$ParserFast$lazy = function (thunk) {
	return $stil4m$elm_syntax$ParserFast$Parser(
		function (s) {
			var _v0 = thunk(_Utils_Tuple0);
			var parse = _v0.a;
			return parse(s);
		});
};
var $stil4m$elm_syntax$Elm$Syntax$Expression$Literal = function (a) {
	return {$: 'Literal', a: a};
};
var $stil4m$elm_syntax$ParserFast$whileWithoutLinebreak = function (isGood) {
	return $stil4m$elm_syntax$ParserFast$Parser(
		function (s0) {
			var s1 = A6($stil4m$elm_syntax$ParserFast$skipWhileWithoutLinebreakHelp, isGood, s0.offset, s0.row, s0.col, s0.src, s0.indent);
			return A2(
				$stil4m$elm_syntax$ParserFast$Good,
				A3($elm$core$String$slice, s0.offset, s1.offset, s0.src),
				s1);
		});
};
var $stil4m$elm_syntax$Elm$Parser$Tokens$singleQuotedStringLiteralAfterDoubleQuote = A5(
	$stil4m$elm_syntax$ParserFast$loopUntil,
	A2($stil4m$elm_syntax$ParserFast$symbol, '\"', _Utils_Tuple0),
	A2(
		$stil4m$elm_syntax$ParserFast$oneOf2,
		A2(
			$stil4m$elm_syntax$ParserFast$symbolFollowedBy,
			'\\',
			$stil4m$elm_syntax$Elm$Parser$Tokens$escapedCharValueMap($elm$core$String$fromChar)),
		$stil4m$elm_syntax$ParserFast$whileWithoutLinebreak(
			function (c) {
				switch (c.valueOf()) {
					case '\"':
						return false;
					case '\\':
						return false;
					default:
						return !$stil4m$elm_syntax$Char$Extra$isUtf16Surrogate(c);
				}
			})),
	'',
	F2(
		function (extension, soFar) {
			return soFar + (extension + '');
		}),
	$elm$core$Basics$identity);
var $stil4m$elm_syntax$Elm$Parser$Tokens$tripleQuotedStringLiteralOfterTripleDoubleQuote = A5(
	$stil4m$elm_syntax$ParserFast$loopUntil,
	A2($stil4m$elm_syntax$ParserFast$symbol, '\"\"\"', _Utils_Tuple0),
	A3(
		$stil4m$elm_syntax$ParserFast$oneOf3,
		A2($stil4m$elm_syntax$ParserFast$symbol, '\"', '\"'),
		A2(
			$stil4m$elm_syntax$ParserFast$symbolFollowedBy,
			'\\',
			$stil4m$elm_syntax$Elm$Parser$Tokens$escapedCharValueMap($elm$core$String$fromChar)),
		$stil4m$elm_syntax$ParserFast$while(
			function (c) {
				switch (c.valueOf()) {
					case '\"':
						return false;
					case '\\':
						return false;
					default:
						return !$stil4m$elm_syntax$Char$Extra$isUtf16Surrogate(c);
				}
			})),
	'',
	F2(
		function (extension, soFar) {
			return soFar + (extension + '');
		}),
	$elm$core$Basics$identity);
var $stil4m$elm_syntax$Elm$Parser$Tokens$singleOrTripleQuotedStringLiteralMapWithRange = function (rangeAndStringToRes) {
	return A2(
		$stil4m$elm_syntax$ParserFast$symbolFollowedBy,
		'\"',
		A4(
			$stil4m$elm_syntax$ParserFast$oneOf2MapWithStartRowColumnAndEndRowColumn,
			F5(
				function (startRow, startColumn, string, endRow, endColumn) {
					return A2(
						rangeAndStringToRes,
						{
							end: {column: endColumn, row: endRow},
							start: {column: startColumn - 1, row: startRow}
						},
						string);
				}),
			A2($stil4m$elm_syntax$ParserFast$symbolFollowedBy, '\"\"', $stil4m$elm_syntax$Elm$Parser$Tokens$tripleQuotedStringLiteralOfterTripleDoubleQuote),
			F5(
				function (startRow, startColumn, string, endRow, endColumn) {
					return A2(
						rangeAndStringToRes,
						{
							end: {column: endColumn, row: endRow},
							start: {column: startColumn - 1, row: startRow}
						},
						string);
				}),
			$stil4m$elm_syntax$Elm$Parser$Tokens$singleQuotedStringLiteralAfterDoubleQuote));
};
var $stil4m$elm_syntax$Elm$Parser$Expression$literalExpression = $stil4m$elm_syntax$Elm$Parser$Tokens$singleOrTripleQuotedStringLiteralMapWithRange(
	F2(
		function (range, string) {
			return {
				comments: $stil4m$elm_syntax$Rope$empty,
				syntax: A2(
					$stil4m$elm_syntax$Elm$Syntax$Node$Node,
					range,
					$stil4m$elm_syntax$Elm$Syntax$Expression$Literal(string))
			};
		}));
var $stil4m$elm_syntax$ParserFast$loopWhileSucceedsOntoResultFromParser = F4(
	function (element, _v0, reduce, foldedToRes) {
		var parseInitialFolded = _v0.a;
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s0) {
				var _v1 = parseInitialFolded(s0);
				if (_v1.$ === 'Good') {
					var initialFolded = _v1.a;
					var s1 = _v1.b;
					return A5($stil4m$elm_syntax$ParserFast$loopWhileSucceedsHelp, element, initialFolded, reduce, foldedToRes, s1);
				} else {
					var committed = _v1.a;
					var x = _v1.b;
					return A2($stil4m$elm_syntax$ParserFast$Bad, committed, x);
				}
			});
	});
var $stil4m$elm_syntax$Rope$prependTo = F2(
	function (right, left) {
		if (left.$ === 'Nothing') {
			return right;
		} else {
			var leftLikelyFilled = left.a;
			if (right.$ === 'Nothing') {
				return left;
			} else {
				var rightLikelyFilled = right.a;
				return $elm$core$Maybe$Just(
					A2($stil4m$elm_syntax$Rope$Branch2, leftLikelyFilled, rightLikelyFilled));
			}
		}
	});
var $stil4m$elm_syntax$ParserWithComments$many = function (p) {
	return A4(
		$stil4m$elm_syntax$ParserFast$loopWhileSucceeds,
		p,
		_Utils_Tuple2($stil4m$elm_syntax$Rope$empty, _List_Nil),
		F2(
			function (pResult, _v0) {
				var commentsSoFar = _v0.a;
				var itemsSoFar = _v0.b;
				return _Utils_Tuple2(
					A2($stil4m$elm_syntax$Rope$prependTo, pResult.comments, commentsSoFar),
					A2($elm$core$List$cons, pResult.syntax, itemsSoFar));
			}),
		function (_v1) {
			var commentsSoFar = _v1.a;
			var itemsSoFar = _v1.b;
			return {
				comments: commentsSoFar,
				syntax: $elm$core$List$reverse(itemsSoFar)
			};
		});
};
var $stil4m$elm_syntax$ParserWithComments$manyWithoutReverse = function (p) {
	return A4(
		$stil4m$elm_syntax$ParserFast$loopWhileSucceeds,
		p,
		_Utils_Tuple2($stil4m$elm_syntax$Rope$empty, _List_Nil),
		F2(
			function (pResult, _v0) {
				var commentsSoFar = _v0.a;
				var itemsSoFar = _v0.b;
				return _Utils_Tuple2(
					A2($stil4m$elm_syntax$Rope$prependTo, pResult.comments, commentsSoFar),
					A2($elm$core$List$cons, pResult.syntax, itemsSoFar));
			}),
		function (_v1) {
			var commentsSoFar = _v1.a;
			var itemsSoFar = _v1.b;
			return {comments: commentsSoFar, syntax: itemsSoFar};
		});
};
var $stil4m$elm_syntax$ParserFast$map = F2(
	function (func, _v0) {
		var parse = _v0.a;
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s0) {
				var _v1 = parse(s0);
				if (_v1.$ === 'Good') {
					var a = _v1.a;
					var s1 = _v1.b;
					return A2(
						$stil4m$elm_syntax$ParserFast$Good,
						func(a),
						s1);
				} else {
					var committed = _v1.a;
					var x = _v1.b;
					return A2($stil4m$elm_syntax$ParserFast$Bad, committed, x);
				}
			});
	});
var $stil4m$elm_syntax$ParserFast$map3 = F4(
	function (func, _v0, _v1, _v2) {
		var parseA = _v0.a;
		var parseB = _v1.a;
		var parseC = _v2.a;
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s0) {
				var _v3 = parseA(s0);
				if (_v3.$ === 'Bad') {
					var committed = _v3.a;
					var x = _v3.b;
					return A2($stil4m$elm_syntax$ParserFast$Bad, committed, x);
				} else {
					var a = _v3.a;
					var s1 = _v3.b;
					var _v4 = parseB(s1);
					if (_v4.$ === 'Bad') {
						var x = _v4.b;
						return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
					} else {
						var b = _v4.a;
						var s2 = _v4.b;
						var _v5 = parseC(s2);
						if (_v5.$ === 'Bad') {
							var x = _v5.b;
							return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
						} else {
							var c = _v5.a;
							var s3 = _v5.b;
							return A2(
								$stil4m$elm_syntax$ParserFast$Good,
								A3(func, a, b, c),
								s3);
						}
					}
				}
			});
	});
var $stil4m$elm_syntax$ParserFast$map3WithStartLocation = F4(
	function (func, _v0, _v1, _v2) {
		var parseA = _v0.a;
		var parseB = _v1.a;
		var parseC = _v2.a;
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s0) {
				var _v3 = parseA(s0);
				if (_v3.$ === 'Bad') {
					var committed = _v3.a;
					var x = _v3.b;
					return A2($stil4m$elm_syntax$ParserFast$Bad, committed, x);
				} else {
					var a = _v3.a;
					var s1 = _v3.b;
					var _v4 = parseB(s1);
					if (_v4.$ === 'Bad') {
						var x = _v4.b;
						return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
					} else {
						var b = _v4.a;
						var s2 = _v4.b;
						var _v5 = parseC(s2);
						if (_v5.$ === 'Bad') {
							var x = _v5.b;
							return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
						} else {
							var c = _v5.a;
							var s3 = _v5.b;
							return A2(
								$stil4m$elm_syntax$ParserFast$Good,
								A4(
									func,
									{column: s0.col, row: s0.row},
									a,
									b,
									c),
								s3);
						}
					}
				}
			});
	});
var $stil4m$elm_syntax$ParserFast$map4 = F5(
	function (func, _v0, _v1, _v2, _v3) {
		var parseA = _v0.a;
		var parseB = _v1.a;
		var parseC = _v2.a;
		var parseD = _v3.a;
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s0) {
				var _v4 = parseA(s0);
				if (_v4.$ === 'Bad') {
					var committed = _v4.a;
					var x = _v4.b;
					return A2($stil4m$elm_syntax$ParserFast$Bad, committed, x);
				} else {
					var a = _v4.a;
					var s1 = _v4.b;
					var _v5 = parseB(s1);
					if (_v5.$ === 'Bad') {
						var x = _v5.b;
						return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
					} else {
						var b = _v5.a;
						var s2 = _v5.b;
						var _v6 = parseC(s2);
						if (_v6.$ === 'Bad') {
							var x = _v6.b;
							return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
						} else {
							var c = _v6.a;
							var s3 = _v6.b;
							var _v7 = parseD(s3);
							if (_v7.$ === 'Bad') {
								var x = _v7.b;
								return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
							} else {
								var d = _v7.a;
								var s4 = _v7.b;
								return A2(
									$stil4m$elm_syntax$ParserFast$Good,
									A4(func, a, b, c, d),
									s4);
							}
						}
					}
				}
			});
	});
var $stil4m$elm_syntax$ParserFast$map4OrSucceed = F6(
	function (func, _v0, _v1, _v2, _v3, fallback) {
		var parseA = _v0.a;
		var parseB = _v1.a;
		var parseC = _v2.a;
		var parseD = _v3.a;
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s0) {
				var _v4 = parseA(s0);
				if (_v4.$ === 'Bad') {
					var c1 = _v4.a;
					var x = _v4.b;
					return c1 ? A2($stil4m$elm_syntax$ParserFast$Bad, true, x) : A2($stil4m$elm_syntax$ParserFast$Good, fallback, s0);
				} else {
					var a = _v4.a;
					var s1 = _v4.b;
					var _v5 = parseB(s1);
					if (_v5.$ === 'Bad') {
						var x = _v5.b;
						return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
					} else {
						var b = _v5.a;
						var s2 = _v5.b;
						var _v6 = parseC(s2);
						if (_v6.$ === 'Bad') {
							var x = _v6.b;
							return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
						} else {
							var c = _v6.a;
							var s3 = _v6.b;
							var _v7 = parseD(s3);
							if (_v7.$ === 'Bad') {
								var x = _v7.b;
								return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
							} else {
								var d = _v7.a;
								var s4 = _v7.b;
								return A2(
									$stil4m$elm_syntax$ParserFast$Good,
									A4(func, a, b, c, d),
									s4);
							}
						}
					}
				}
			});
	});
var $stil4m$elm_syntax$ParserFast$map4WithRange = F5(
	function (func, _v0, _v1, _v2, _v3) {
		var parseA = _v0.a;
		var parseB = _v1.a;
		var parseC = _v2.a;
		var parseD = _v3.a;
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s0) {
				var _v4 = parseA(s0);
				if (_v4.$ === 'Bad') {
					var committed = _v4.a;
					var x = _v4.b;
					return A2($stil4m$elm_syntax$ParserFast$Bad, committed, x);
				} else {
					var a = _v4.a;
					var s1 = _v4.b;
					var _v5 = parseB(s1);
					if (_v5.$ === 'Bad') {
						var x = _v5.b;
						return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
					} else {
						var b = _v5.a;
						var s2 = _v5.b;
						var _v6 = parseC(s2);
						if (_v6.$ === 'Bad') {
							var x = _v6.b;
							return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
						} else {
							var c = _v6.a;
							var s3 = _v6.b;
							var _v7 = parseD(s3);
							if (_v7.$ === 'Bad') {
								var x = _v7.b;
								return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
							} else {
								var d = _v7.a;
								var s4 = _v7.b;
								return A2(
									$stil4m$elm_syntax$ParserFast$Good,
									A5(
										func,
										{
											end: {column: s4.col, row: s4.row},
											start: {column: s0.col, row: s0.row}
										},
										a,
										b,
										c,
										d),
									s4);
							}
						}
					}
				}
			});
	});
var $stil4m$elm_syntax$ParserFast$map5 = F6(
	function (func, _v0, _v1, _v2, _v3, _v4) {
		var parseA = _v0.a;
		var parseB = _v1.a;
		var parseC = _v2.a;
		var parseD = _v3.a;
		var parseE = _v4.a;
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s0) {
				var _v5 = parseA(s0);
				if (_v5.$ === 'Bad') {
					var committed = _v5.a;
					var x = _v5.b;
					return A2($stil4m$elm_syntax$ParserFast$Bad, committed, x);
				} else {
					var a = _v5.a;
					var s1 = _v5.b;
					var _v6 = parseB(s1);
					if (_v6.$ === 'Bad') {
						var x = _v6.b;
						return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
					} else {
						var b = _v6.a;
						var s2 = _v6.b;
						var _v7 = parseC(s2);
						if (_v7.$ === 'Bad') {
							var x = _v7.b;
							return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
						} else {
							var c = _v7.a;
							var s3 = _v7.b;
							var _v8 = parseD(s3);
							if (_v8.$ === 'Bad') {
								var x = _v8.b;
								return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
							} else {
								var d = _v8.a;
								var s4 = _v8.b;
								var _v9 = parseE(s4);
								if (_v9.$ === 'Bad') {
									var x = _v9.b;
									return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
								} else {
									var e = _v9.a;
									var s5 = _v9.b;
									return A2(
										$stil4m$elm_syntax$ParserFast$Good,
										A5(func, a, b, c, d, e),
										s5);
								}
							}
						}
					}
				}
			});
	});
var $stil4m$elm_syntax$ParserFast$map5WithRange = F6(
	function (func, _v0, _v1, _v2, _v3, _v4) {
		var parseA = _v0.a;
		var parseB = _v1.a;
		var parseC = _v2.a;
		var parseD = _v3.a;
		var parseE = _v4.a;
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s0) {
				var _v5 = parseA(s0);
				if (_v5.$ === 'Bad') {
					var committed = _v5.a;
					var x = _v5.b;
					return A2($stil4m$elm_syntax$ParserFast$Bad, committed, x);
				} else {
					var a = _v5.a;
					var s1 = _v5.b;
					var _v6 = parseB(s1);
					if (_v6.$ === 'Bad') {
						var x = _v6.b;
						return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
					} else {
						var b = _v6.a;
						var s2 = _v6.b;
						var _v7 = parseC(s2);
						if (_v7.$ === 'Bad') {
							var x = _v7.b;
							return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
						} else {
							var c = _v7.a;
							var s3 = _v7.b;
							var _v8 = parseD(s3);
							if (_v8.$ === 'Bad') {
								var x = _v8.b;
								return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
							} else {
								var d = _v8.a;
								var s4 = _v8.b;
								var _v9 = parseE(s4);
								if (_v9.$ === 'Bad') {
									var x = _v9.b;
									return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
								} else {
									var e = _v9.a;
									var s5 = _v9.b;
									return A2(
										$stil4m$elm_syntax$ParserFast$Good,
										A6(
											func,
											{
												end: {column: s5.col, row: s5.row},
												start: {column: s0.col, row: s0.row}
											},
											a,
											b,
											c,
											d,
											e),
										s5);
								}
							}
						}
					}
				}
			});
	});
var $stil4m$elm_syntax$ParserFast$map5WithStartLocation = F6(
	function (func, _v0, _v1, _v2, _v3, _v4) {
		var parseA = _v0.a;
		var parseB = _v1.a;
		var parseC = _v2.a;
		var parseD = _v3.a;
		var parseE = _v4.a;
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s0) {
				var _v5 = parseA(s0);
				if (_v5.$ === 'Bad') {
					var committed = _v5.a;
					var x = _v5.b;
					return A2($stil4m$elm_syntax$ParserFast$Bad, committed, x);
				} else {
					var a = _v5.a;
					var s1 = _v5.b;
					var _v6 = parseB(s1);
					if (_v6.$ === 'Bad') {
						var x = _v6.b;
						return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
					} else {
						var b = _v6.a;
						var s2 = _v6.b;
						var _v7 = parseC(s2);
						if (_v7.$ === 'Bad') {
							var x = _v7.b;
							return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
						} else {
							var c = _v7.a;
							var s3 = _v7.b;
							var _v8 = parseD(s3);
							if (_v8.$ === 'Bad') {
								var x = _v8.b;
								return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
							} else {
								var d = _v8.a;
								var s4 = _v8.b;
								var _v9 = parseE(s4);
								if (_v9.$ === 'Bad') {
									var x = _v9.b;
									return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
								} else {
									var e = _v9.a;
									var s5 = _v9.b;
									return A2(
										$stil4m$elm_syntax$ParserFast$Good,
										A6(
											func,
											{column: s0.col, row: s0.row},
											a,
											b,
											c,
											d,
											e),
										s5);
								}
							}
						}
					}
				}
			});
	});
var $stil4m$elm_syntax$ParserFast$map6WithStartLocation = F7(
	function (func, _v0, _v1, _v2, _v3, _v4, _v5) {
		var parseA = _v0.a;
		var parseB = _v1.a;
		var parseC = _v2.a;
		var parseD = _v3.a;
		var parseE = _v4.a;
		var parseF = _v5.a;
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s0) {
				var _v6 = parseA(s0);
				if (_v6.$ === 'Bad') {
					var committed = _v6.a;
					var x = _v6.b;
					return A2($stil4m$elm_syntax$ParserFast$Bad, committed, x);
				} else {
					var a = _v6.a;
					var s1 = _v6.b;
					var _v7 = parseB(s1);
					if (_v7.$ === 'Bad') {
						var x = _v7.b;
						return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
					} else {
						var b = _v7.a;
						var s2 = _v7.b;
						var _v8 = parseC(s2);
						if (_v8.$ === 'Bad') {
							var x = _v8.b;
							return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
						} else {
							var c = _v8.a;
							var s3 = _v8.b;
							var _v9 = parseD(s3);
							if (_v9.$ === 'Bad') {
								var x = _v9.b;
								return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
							} else {
								var d = _v9.a;
								var s4 = _v9.b;
								var _v10 = parseE(s4);
								if (_v10.$ === 'Bad') {
									var x = _v10.b;
									return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
								} else {
									var e = _v10.a;
									var s5 = _v10.b;
									var _v11 = parseF(s5);
									if (_v11.$ === 'Bad') {
										var x = _v11.b;
										return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
									} else {
										var f = _v11.a;
										var s6 = _v11.b;
										return A2(
											$stil4m$elm_syntax$ParserFast$Good,
											A7(
												func,
												{column: s0.col, row: s0.row},
												a,
												b,
												c,
												d,
												e,
												f),
											s6);
									}
								}
							}
						}
					}
				}
			});
	});
var $stil4m$elm_syntax$ParserFast$map8WithStartLocation = F9(
	function (func, _v0, _v1, _v2, _v3, _v4, _v5, _v6, _v7) {
		var parseA = _v0.a;
		var parseB = _v1.a;
		var parseC = _v2.a;
		var parseD = _v3.a;
		var parseE = _v4.a;
		var parseF = _v5.a;
		var parseG = _v6.a;
		var parseH = _v7.a;
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s0) {
				var _v8 = parseA(s0);
				if (_v8.$ === 'Bad') {
					var committed = _v8.a;
					var x = _v8.b;
					return A2($stil4m$elm_syntax$ParserFast$Bad, committed, x);
				} else {
					var a = _v8.a;
					var s1 = _v8.b;
					var _v9 = parseB(s1);
					if (_v9.$ === 'Bad') {
						var x = _v9.b;
						return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
					} else {
						var b = _v9.a;
						var s2 = _v9.b;
						var _v10 = parseC(s2);
						if (_v10.$ === 'Bad') {
							var x = _v10.b;
							return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
						} else {
							var c = _v10.a;
							var s3 = _v10.b;
							var _v11 = parseD(s3);
							if (_v11.$ === 'Bad') {
								var x = _v11.b;
								return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
							} else {
								var d = _v11.a;
								var s4 = _v11.b;
								var _v12 = parseE(s4);
								if (_v12.$ === 'Bad') {
									var x = _v12.b;
									return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
								} else {
									var e = _v12.a;
									var s5 = _v12.b;
									var _v13 = parseF(s5);
									if (_v13.$ === 'Bad') {
										var x = _v13.b;
										return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
									} else {
										var f = _v13.a;
										var s6 = _v13.b;
										var _v14 = parseG(s6);
										if (_v14.$ === 'Bad') {
											var x = _v14.b;
											return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
										} else {
											var g = _v14.a;
											var s7 = _v14.b;
											var _v15 = parseH(s7);
											if (_v15.$ === 'Bad') {
												var x = _v15.b;
												return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
											} else {
												var h = _v15.a;
												var s8 = _v15.b;
												return A2(
													$stil4m$elm_syntax$ParserFast$Good,
													A9(
														func,
														{column: s0.col, row: s0.row},
														a,
														b,
														c,
														d,
														e,
														f,
														g,
														h),
													s8);
											}
										}
									}
								}
							}
						}
					}
				}
			});
	});
var $stil4m$elm_syntax$ParserFast$validateEndColumnIndentation = F3(
	function (isOkay, problemOnIsNotOkay, _v0) {
		var parse = _v0.a;
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s0) {
				var _v1 = parse(s0);
				if (_v1.$ === 'Good') {
					var good = _v1;
					var s1 = good.b;
					return A2(isOkay, s1.col, s1.indent) ? good : A2(
						$stil4m$elm_syntax$ParserFast$Bad,
						true,
						A3($stil4m$elm_syntax$ParserFast$ExpectingCustom, s1.row, s1.col, problemOnIsNotOkay));
				} else {
					var bad = _v1;
					return bad;
				}
			});
	});
var $stil4m$elm_syntax$Elm$Parser$Layout$endsPositivelyIndented = function (parser) {
	return A3(
		$stil4m$elm_syntax$ParserFast$validateEndColumnIndentation,
		F2(
			function (column, indent) {
				return _Utils_cmp(column, indent) > 0;
			}),
		'must be positively indented',
		parser);
};
var $stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout = $stil4m$elm_syntax$Elm$Parser$Layout$endsPositivelyIndented($stil4m$elm_syntax$Elm$Parser$Layout$whitespaceAndCommentsOrEmpty);
var $stil4m$elm_syntax$Elm$Parser$Layout$maybeAroundBothSides = function (x) {
	return A4(
		$stil4m$elm_syntax$ParserFast$map3,
		F3(
			function (before, v, after) {
				return {
					comments: A2(
						$stil4m$elm_syntax$Rope$prependTo,
						after,
						A2($stil4m$elm_syntax$Rope$prependTo, v.comments, before)),
					syntax: v.syntax
				};
			}),
		$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
		x,
		$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout);
};
var $stil4m$elm_syntax$Elm$Parser$Expression$multiRecordAccess = A4(
	$stil4m$elm_syntax$ParserFast$loopWhileSucceeds,
	A2($stil4m$elm_syntax$ParserFast$symbolFollowedBy, '.', $stil4m$elm_syntax$Elm$Parser$Tokens$functionNameNode),
	_List_Nil,
	$elm$core$List$cons,
	$elm$core$List$reverse);
var $stil4m$elm_syntax$Elm$Parser$Expression$multiRecordAccessMap = function (fieldsToRes) {
	return A4(
		$stil4m$elm_syntax$ParserFast$loopWhileSucceeds,
		A2($stil4m$elm_syntax$ParserFast$symbolFollowedBy, '.', $stil4m$elm_syntax$Elm$Parser$Tokens$functionNameNode),
		_List_Nil,
		$elm$core$List$cons,
		function (reversed) {
			return fieldsToRes(
				$elm$core$List$reverse(reversed));
		});
};
var $stil4m$elm_syntax$Elm$Parser$Expression$negationWhitespaceProblem = $stil4m$elm_syntax$ParserFast$problem('if a negation sign is not preceded by whitespace, it\'s considered subtraction');
var $elm$core$Tuple$pair = F2(
	function (a, b) {
		return _Utils_Tuple2(a, b);
	});
var $stil4m$elm_syntax$Elm$Parser$Tokens$equal = A2($stil4m$elm_syntax$ParserFast$symbol, '=', _Utils_Tuple0);
var $stil4m$elm_syntax$Elm$Syntax$Pattern$AsPattern = F2(
	function (a, b) {
		return {$: 'AsPattern', a: a, b: b};
	});
var $stil4m$elm_syntax$Elm$Syntax$Pattern$ListPattern = function (a) {
	return {$: 'ListPattern', a: a};
};
var $stil4m$elm_syntax$Elm$Syntax$Pattern$NamedPattern = F2(
	function (a, b) {
		return {$: 'NamedPattern', a: a, b: b};
	});
var $stil4m$elm_syntax$Elm$Syntax$Pattern$ParenthesizedPattern = function (a) {
	return {$: 'ParenthesizedPattern', a: a};
};
var $stil4m$elm_syntax$Elm$Parser$Patterns$PatternComposedWithAs = function (a) {
	return {$: 'PatternComposedWithAs', a: a};
};
var $stil4m$elm_syntax$Elm$Parser$Patterns$PatternComposedWithCons = function (a) {
	return {$: 'PatternComposedWithCons', a: a};
};
var $stil4m$elm_syntax$Elm$Parser$Patterns$PatternComposedWithNothing = function (a) {
	return {$: 'PatternComposedWithNothing', a: a};
};
var $stil4m$elm_syntax$Elm$Syntax$Pattern$TuplePattern = function (a) {
	return {$: 'TuplePattern', a: a};
};
var $stil4m$elm_syntax$Elm$Syntax$Pattern$UnConsPattern = F2(
	function (a, b) {
		return {$: 'UnConsPattern', a: a, b: b};
	});
var $stil4m$elm_syntax$Elm$Syntax$Pattern$UnitPattern = {$: 'UnitPattern'};
var $stil4m$elm_syntax$Elm$Syntax$Pattern$AllPattern = {$: 'AllPattern'};
var $stil4m$elm_syntax$ParserFast$symbolWithRange = F2(
	function (str, startAndEndLocationToRes) {
		var strLength = $elm$core$String$length(str);
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s) {
				var newOffset = s.offset + strLength;
				if (_Utils_eq(
					A3($elm$core$String$slice, s.offset, newOffset, s.src),
					str + '')) {
					var newCol = s.col + strLength;
					return A2(
						$stil4m$elm_syntax$ParserFast$Good,
						startAndEndLocationToRes(
							{
								end: {column: newCol, row: s.row},
								start: {column: s.col, row: s.row}
							}),
						{col: newCol, indent: s.indent, offset: newOffset, row: s.row, src: s.src});
				} else {
					return A2(
						$stil4m$elm_syntax$ParserFast$Bad,
						false,
						A3($stil4m$elm_syntax$ParserFast$ExpectingSymbol, s.row, s.col, str));
				}
			});
	});
var $stil4m$elm_syntax$Elm$Parser$Patterns$allPattern = A2(
	$stil4m$elm_syntax$ParserFast$symbolWithRange,
	'_',
	function (range) {
		return {
			comments: $stil4m$elm_syntax$Rope$empty,
			syntax: A2($stil4m$elm_syntax$Elm$Syntax$Node$Node, range, $stil4m$elm_syntax$Elm$Syntax$Pattern$AllPattern)
		};
	});
var $stil4m$elm_syntax$Elm$Syntax$Pattern$CharPattern = function (a) {
	return {$: 'CharPattern', a: a};
};
var $stil4m$elm_syntax$Elm$Parser$Patterns$charPattern = $stil4m$elm_syntax$Elm$Parser$Tokens$characterLiteralMapWithRange(
	F2(
		function (range, _char) {
			return {
				comments: $stil4m$elm_syntax$Rope$empty,
				syntax: A2(
					$stil4m$elm_syntax$Elm$Syntax$Node$Node,
					range,
					$stil4m$elm_syntax$Elm$Syntax$Pattern$CharPattern(_char))
			};
		}));
var $stil4m$elm_syntax$Elm$Syntax$Pattern$HexPattern = function (a) {
	return {$: 'HexPattern', a: a};
};
var $stil4m$elm_syntax$Elm$Syntax$Pattern$IntPattern = function (a) {
	return {$: 'IntPattern', a: a};
};
var $stil4m$elm_syntax$ParserFast$ExpectingNumber = F2(
	function (a, b) {
		return {$: 'ExpectingNumber', a: a, b: b};
	});
var $stil4m$elm_syntax$ParserFast$Decimal = {$: 'Decimal'};
var $stil4m$elm_syntax$ParserFast$Hexadecimal = {$: 'Hexadecimal'};
var $stil4m$elm_syntax$ParserFast$convert0OrMore0To9s = F3(
	function (soFar, offset, src) {
		convert0OrMore0To9s:
		while (true) {
			var _v0 = A3($elm$core$String$slice, offset, offset + 1, src);
			switch (_v0) {
				case '0':
					var $temp$soFar = soFar * 10,
						$temp$offset = offset + 1,
						$temp$src = src;
					soFar = $temp$soFar;
					offset = $temp$offset;
					src = $temp$src;
					continue convert0OrMore0To9s;
				case '1':
					var $temp$soFar = (soFar * 10) + 1,
						$temp$offset = offset + 1,
						$temp$src = src;
					soFar = $temp$soFar;
					offset = $temp$offset;
					src = $temp$src;
					continue convert0OrMore0To9s;
				case '2':
					var $temp$soFar = (soFar * 10) + 2,
						$temp$offset = offset + 1,
						$temp$src = src;
					soFar = $temp$soFar;
					offset = $temp$offset;
					src = $temp$src;
					continue convert0OrMore0To9s;
				case '3':
					var $temp$soFar = (soFar * 10) + 3,
						$temp$offset = offset + 1,
						$temp$src = src;
					soFar = $temp$soFar;
					offset = $temp$offset;
					src = $temp$src;
					continue convert0OrMore0To9s;
				case '4':
					var $temp$soFar = (soFar * 10) + 4,
						$temp$offset = offset + 1,
						$temp$src = src;
					soFar = $temp$soFar;
					offset = $temp$offset;
					src = $temp$src;
					continue convert0OrMore0To9s;
				case '5':
					var $temp$soFar = (soFar * 10) + 5,
						$temp$offset = offset + 1,
						$temp$src = src;
					soFar = $temp$soFar;
					offset = $temp$offset;
					src = $temp$src;
					continue convert0OrMore0To9s;
				case '6':
					var $temp$soFar = (soFar * 10) + 6,
						$temp$offset = offset + 1,
						$temp$src = src;
					soFar = $temp$soFar;
					offset = $temp$offset;
					src = $temp$src;
					continue convert0OrMore0To9s;
				case '7':
					var $temp$soFar = (soFar * 10) + 7,
						$temp$offset = offset + 1,
						$temp$src = src;
					soFar = $temp$soFar;
					offset = $temp$offset;
					src = $temp$src;
					continue convert0OrMore0To9s;
				case '8':
					var $temp$soFar = (soFar * 10) + 8,
						$temp$offset = offset + 1,
						$temp$src = src;
					soFar = $temp$soFar;
					offset = $temp$offset;
					src = $temp$src;
					continue convert0OrMore0To9s;
				case '9':
					var $temp$soFar = (soFar * 10) + 9,
						$temp$offset = offset + 1,
						$temp$src = src;
					soFar = $temp$soFar;
					offset = $temp$offset;
					src = $temp$src;
					continue convert0OrMore0To9s;
				default:
					return {_int: soFar, offset: offset};
			}
		}
	});
var $stil4m$elm_syntax$ParserFast$convert0OrMoreHexadecimal = F3(
	function (soFar, offset, src) {
		convert0OrMoreHexadecimal:
		while (true) {
			var _v0 = A3($elm$core$String$slice, offset, offset + 1, src);
			switch (_v0) {
				case '0':
					var $temp$soFar = soFar * 16,
						$temp$offset = offset + 1,
						$temp$src = src;
					soFar = $temp$soFar;
					offset = $temp$offset;
					src = $temp$src;
					continue convert0OrMoreHexadecimal;
				case '1':
					var $temp$soFar = (soFar * 16) + 1,
						$temp$offset = offset + 1,
						$temp$src = src;
					soFar = $temp$soFar;
					offset = $temp$offset;
					src = $temp$src;
					continue convert0OrMoreHexadecimal;
				case '2':
					var $temp$soFar = (soFar * 16) + 2,
						$temp$offset = offset + 1,
						$temp$src = src;
					soFar = $temp$soFar;
					offset = $temp$offset;
					src = $temp$src;
					continue convert0OrMoreHexadecimal;
				case '3':
					var $temp$soFar = (soFar * 16) + 3,
						$temp$offset = offset + 1,
						$temp$src = src;
					soFar = $temp$soFar;
					offset = $temp$offset;
					src = $temp$src;
					continue convert0OrMoreHexadecimal;
				case '4':
					var $temp$soFar = (soFar * 16) + 4,
						$temp$offset = offset + 1,
						$temp$src = src;
					soFar = $temp$soFar;
					offset = $temp$offset;
					src = $temp$src;
					continue convert0OrMoreHexadecimal;
				case '5':
					var $temp$soFar = (soFar * 16) + 5,
						$temp$offset = offset + 1,
						$temp$src = src;
					soFar = $temp$soFar;
					offset = $temp$offset;
					src = $temp$src;
					continue convert0OrMoreHexadecimal;
				case '6':
					var $temp$soFar = (soFar * 16) + 6,
						$temp$offset = offset + 1,
						$temp$src = src;
					soFar = $temp$soFar;
					offset = $temp$offset;
					src = $temp$src;
					continue convert0OrMoreHexadecimal;
				case '7':
					var $temp$soFar = (soFar * 16) + 7,
						$temp$offset = offset + 1,
						$temp$src = src;
					soFar = $temp$soFar;
					offset = $temp$offset;
					src = $temp$src;
					continue convert0OrMoreHexadecimal;
				case '8':
					var $temp$soFar = (soFar * 16) + 8,
						$temp$offset = offset + 1,
						$temp$src = src;
					soFar = $temp$soFar;
					offset = $temp$offset;
					src = $temp$src;
					continue convert0OrMoreHexadecimal;
				case '9':
					var $temp$soFar = (soFar * 16) + 9,
						$temp$offset = offset + 1,
						$temp$src = src;
					soFar = $temp$soFar;
					offset = $temp$offset;
					src = $temp$src;
					continue convert0OrMoreHexadecimal;
				case 'a':
					var $temp$soFar = (soFar * 16) + 10,
						$temp$offset = offset + 1,
						$temp$src = src;
					soFar = $temp$soFar;
					offset = $temp$offset;
					src = $temp$src;
					continue convert0OrMoreHexadecimal;
				case 'A':
					var $temp$soFar = (soFar * 16) + 10,
						$temp$offset = offset + 1,
						$temp$src = src;
					soFar = $temp$soFar;
					offset = $temp$offset;
					src = $temp$src;
					continue convert0OrMoreHexadecimal;
				case 'b':
					var $temp$soFar = (soFar * 16) + 11,
						$temp$offset = offset + 1,
						$temp$src = src;
					soFar = $temp$soFar;
					offset = $temp$offset;
					src = $temp$src;
					continue convert0OrMoreHexadecimal;
				case 'B':
					var $temp$soFar = (soFar * 16) + 11,
						$temp$offset = offset + 1,
						$temp$src = src;
					soFar = $temp$soFar;
					offset = $temp$offset;
					src = $temp$src;
					continue convert0OrMoreHexadecimal;
				case 'c':
					var $temp$soFar = (soFar * 16) + 12,
						$temp$offset = offset + 1,
						$temp$src = src;
					soFar = $temp$soFar;
					offset = $temp$offset;
					src = $temp$src;
					continue convert0OrMoreHexadecimal;
				case 'C':
					var $temp$soFar = (soFar * 16) + 12,
						$temp$offset = offset + 1,
						$temp$src = src;
					soFar = $temp$soFar;
					offset = $temp$offset;
					src = $temp$src;
					continue convert0OrMoreHexadecimal;
				case 'd':
					var $temp$soFar = (soFar * 16) + 13,
						$temp$offset = offset + 1,
						$temp$src = src;
					soFar = $temp$soFar;
					offset = $temp$offset;
					src = $temp$src;
					continue convert0OrMoreHexadecimal;
				case 'D':
					var $temp$soFar = (soFar * 16) + 13,
						$temp$offset = offset + 1,
						$temp$src = src;
					soFar = $temp$soFar;
					offset = $temp$offset;
					src = $temp$src;
					continue convert0OrMoreHexadecimal;
				case 'e':
					var $temp$soFar = (soFar * 16) + 14,
						$temp$offset = offset + 1,
						$temp$src = src;
					soFar = $temp$soFar;
					offset = $temp$offset;
					src = $temp$src;
					continue convert0OrMoreHexadecimal;
				case 'E':
					var $temp$soFar = (soFar * 16) + 14,
						$temp$offset = offset + 1,
						$temp$src = src;
					soFar = $temp$soFar;
					offset = $temp$offset;
					src = $temp$src;
					continue convert0OrMoreHexadecimal;
				case 'f':
					var $temp$soFar = (soFar * 16) + 15,
						$temp$offset = offset + 1,
						$temp$src = src;
					soFar = $temp$soFar;
					offset = $temp$offset;
					src = $temp$src;
					continue convert0OrMoreHexadecimal;
				case 'F':
					var $temp$soFar = (soFar * 16) + 15,
						$temp$offset = offset + 1,
						$temp$src = src;
					soFar = $temp$soFar;
					offset = $temp$offset;
					src = $temp$src;
					continue convert0OrMoreHexadecimal;
				default:
					return {_int: soFar, offset: offset};
			}
		}
	});
var $stil4m$elm_syntax$ParserFast$convert1OrMoreHexadecimal = F2(
	function (offset, src) {
		var _v0 = A3($elm$core$String$slice, offset, offset + 1, src);
		switch (_v0) {
			case '0':
				return A3($stil4m$elm_syntax$ParserFast$convert0OrMoreHexadecimal, 0, offset + 1, src);
			case '1':
				return A3($stil4m$elm_syntax$ParserFast$convert0OrMoreHexadecimal, 1, offset + 1, src);
			case '2':
				return A3($stil4m$elm_syntax$ParserFast$convert0OrMoreHexadecimal, 2, offset + 1, src);
			case '3':
				return A3($stil4m$elm_syntax$ParserFast$convert0OrMoreHexadecimal, 3, offset + 1, src);
			case '4':
				return A3($stil4m$elm_syntax$ParserFast$convert0OrMoreHexadecimal, 4, offset + 1, src);
			case '5':
				return A3($stil4m$elm_syntax$ParserFast$convert0OrMoreHexadecimal, 5, offset + 1, src);
			case '6':
				return A3($stil4m$elm_syntax$ParserFast$convert0OrMoreHexadecimal, 6, offset + 1, src);
			case '7':
				return A3($stil4m$elm_syntax$ParserFast$convert0OrMoreHexadecimal, 7, offset + 1, src);
			case '8':
				return A3($stil4m$elm_syntax$ParserFast$convert0OrMoreHexadecimal, 8, offset + 1, src);
			case '9':
				return A3($stil4m$elm_syntax$ParserFast$convert0OrMoreHexadecimal, 9, offset + 1, src);
			case 'a':
				return A3($stil4m$elm_syntax$ParserFast$convert0OrMoreHexadecimal, 10, offset + 1, src);
			case 'A':
				return A3($stil4m$elm_syntax$ParserFast$convert0OrMoreHexadecimal, 10, offset + 1, src);
			case 'b':
				return A3($stil4m$elm_syntax$ParserFast$convert0OrMoreHexadecimal, 11, offset + 1, src);
			case 'B':
				return A3($stil4m$elm_syntax$ParserFast$convert0OrMoreHexadecimal, 11, offset + 1, src);
			case 'c':
				return A3($stil4m$elm_syntax$ParserFast$convert0OrMoreHexadecimal, 12, offset + 1, src);
			case 'C':
				return A3($stil4m$elm_syntax$ParserFast$convert0OrMoreHexadecimal, 12, offset + 1, src);
			case 'd':
				return A3($stil4m$elm_syntax$ParserFast$convert0OrMoreHexadecimal, 13, offset + 1, src);
			case 'D':
				return A3($stil4m$elm_syntax$ParserFast$convert0OrMoreHexadecimal, 13, offset + 1, src);
			case 'e':
				return A3($stil4m$elm_syntax$ParserFast$convert0OrMoreHexadecimal, 14, offset + 1, src);
			case 'E':
				return A3($stil4m$elm_syntax$ParserFast$convert0OrMoreHexadecimal, 14, offset + 1, src);
			case 'f':
				return A3($stil4m$elm_syntax$ParserFast$convert0OrMoreHexadecimal, 15, offset + 1, src);
			case 'F':
				return A3($stil4m$elm_syntax$ParserFast$convert0OrMoreHexadecimal, 15, offset + 1, src);
			default:
				return {_int: 0, offset: -1};
		}
	});
var $stil4m$elm_syntax$ParserFast$errorAsBaseOffsetAndInt = {
	base: $stil4m$elm_syntax$ParserFast$Decimal,
	offsetAndInt: {_int: 0, offset: -1}
};
var $stil4m$elm_syntax$ParserFast$convertIntegerDecimalOrHexadecimal = F2(
	function (offset, src) {
		var _v0 = A3($elm$core$String$slice, offset, offset + 1, src);
		switch (_v0) {
			case '0':
				var _v1 = A3($elm$core$String$slice, offset + 1, offset + 2, src);
				if (_v1 === 'x') {
					var hex = A2($stil4m$elm_syntax$ParserFast$convert1OrMoreHexadecimal, offset + 2, src);
					return {
						base: $stil4m$elm_syntax$ParserFast$Hexadecimal,
						offsetAndInt: {_int: hex._int, offset: hex.offset}
					};
				} else {
					return {
						base: $stil4m$elm_syntax$ParserFast$Decimal,
						offsetAndInt: {_int: 0, offset: offset + 1}
					};
				}
			case '1':
				return {
					base: $stil4m$elm_syntax$ParserFast$Decimal,
					offsetAndInt: A3($stil4m$elm_syntax$ParserFast$convert0OrMore0To9s, 1, offset + 1, src)
				};
			case '2':
				return {
					base: $stil4m$elm_syntax$ParserFast$Decimal,
					offsetAndInt: A3($stil4m$elm_syntax$ParserFast$convert0OrMore0To9s, 2, offset + 1, src)
				};
			case '3':
				return {
					base: $stil4m$elm_syntax$ParserFast$Decimal,
					offsetAndInt: A3($stil4m$elm_syntax$ParserFast$convert0OrMore0To9s, 3, offset + 1, src)
				};
			case '4':
				return {
					base: $stil4m$elm_syntax$ParserFast$Decimal,
					offsetAndInt: A3($stil4m$elm_syntax$ParserFast$convert0OrMore0To9s, 4, offset + 1, src)
				};
			case '5':
				return {
					base: $stil4m$elm_syntax$ParserFast$Decimal,
					offsetAndInt: A3($stil4m$elm_syntax$ParserFast$convert0OrMore0To9s, 5, offset + 1, src)
				};
			case '6':
				return {
					base: $stil4m$elm_syntax$ParserFast$Decimal,
					offsetAndInt: A3($stil4m$elm_syntax$ParserFast$convert0OrMore0To9s, 6, offset + 1, src)
				};
			case '7':
				return {
					base: $stil4m$elm_syntax$ParserFast$Decimal,
					offsetAndInt: A3($stil4m$elm_syntax$ParserFast$convert0OrMore0To9s, 7, offset + 1, src)
				};
			case '8':
				return {
					base: $stil4m$elm_syntax$ParserFast$Decimal,
					offsetAndInt: A3($stil4m$elm_syntax$ParserFast$convert0OrMore0To9s, 8, offset + 1, src)
				};
			case '9':
				return {
					base: $stil4m$elm_syntax$ParserFast$Decimal,
					offsetAndInt: A3($stil4m$elm_syntax$ParserFast$convert0OrMore0To9s, 9, offset + 1, src)
				};
			default:
				return $stil4m$elm_syntax$ParserFast$errorAsBaseOffsetAndInt;
		}
	});
var $stil4m$elm_syntax$ParserFast$integerDecimalOrHexadecimalMapWithRange = F2(
	function (rangeAndIntDecimalToRes, rangeAndIntHexadecimalToRes) {
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s0) {
				var s1 = A2($stil4m$elm_syntax$ParserFast$convertIntegerDecimalOrHexadecimal, s0.offset, s0.src);
				if (_Utils_eq(s1.offsetAndInt.offset, -1)) {
					return A2(
						$stil4m$elm_syntax$ParserFast$Bad,
						false,
						A2($stil4m$elm_syntax$ParserFast$ExpectingNumber, s0.row, s0.col));
				} else {
					var newColumn = s0.col + (s1.offsetAndInt.offset - s0.offset);
					var range = {
						end: {column: newColumn, row: s0.row},
						start: {column: s0.col, row: s0.row}
					};
					return A2(
						$stil4m$elm_syntax$ParserFast$Good,
						function () {
							var _v0 = s1.base;
							if (_v0.$ === 'Decimal') {
								return A2(rangeAndIntDecimalToRes, range, s1.offsetAndInt._int);
							} else {
								return A2(rangeAndIntHexadecimalToRes, range, s1.offsetAndInt._int);
							}
						}(),
						{col: newColumn, indent: s0.indent, offset: s1.offsetAndInt.offset, row: s0.row, src: s0.src});
				}
			});
	});
var $stil4m$elm_syntax$Elm$Parser$Patterns$numberPart = A2(
	$stil4m$elm_syntax$ParserFast$integerDecimalOrHexadecimalMapWithRange,
	F2(
		function (range, n) {
			return {
				comments: $stil4m$elm_syntax$Rope$empty,
				syntax: A2(
					$stil4m$elm_syntax$Elm$Syntax$Node$Node,
					range,
					$stil4m$elm_syntax$Elm$Syntax$Pattern$IntPattern(n))
			};
		}),
	F2(
		function (range, n) {
			return {
				comments: $stil4m$elm_syntax$Rope$empty,
				syntax: A2(
					$stil4m$elm_syntax$Elm$Syntax$Node$Node,
					range,
					$stil4m$elm_syntax$Elm$Syntax$Pattern$HexPattern(n))
			};
		}));
var $stil4m$elm_syntax$ParserFast$oneOf2OrSucceed = F3(
	function (_v0, _v1, thirdRes) {
		var attemptFirst = _v0.a;
		var attemptSecond = _v1.a;
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s) {
				var _v2 = attemptFirst(s);
				if (_v2.$ === 'Good') {
					var firstGood = _v2;
					return firstGood;
				} else {
					var firstBad = _v2;
					var firstCommitted = firstBad.a;
					if (firstCommitted) {
						return firstBad;
					} else {
						var _v3 = attemptSecond(s);
						if (_v3.$ === 'Good') {
							var secondGood = _v3;
							return secondGood;
						} else {
							var secondBad = _v3;
							var secondCommitted = secondBad.a;
							return secondCommitted ? secondBad : A2($stil4m$elm_syntax$ParserFast$Good, thirdRes, s);
						}
					}
				}
			});
	});
var $stil4m$elm_syntax$ParserFast$oneOf9 = F9(
	function (_v0, _v1, _v2, _v3, _v4, _v5, _v6, _v7, _v8) {
		var attempt0 = _v0.a;
		var attempt1 = _v1.a;
		var attempt2 = _v2.a;
		var attempt3 = _v3.a;
		var attempt4 = _v4.a;
		var attempt5 = _v5.a;
		var attempt6 = _v6.a;
		var attempt7 = _v7.a;
		var attempt8 = _v8.a;
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s) {
				var _v9 = attempt0(s);
				if (_v9.$ === 'Good') {
					var good = _v9;
					return good;
				} else {
					var bad0 = _v9;
					var committed0 = bad0.a;
					var x0 = bad0.b;
					if (committed0) {
						return bad0;
					} else {
						var _v10 = attempt1(s);
						if (_v10.$ === 'Good') {
							var good = _v10;
							return good;
						} else {
							var bad1 = _v10;
							var committed1 = bad1.a;
							var x1 = bad1.b;
							if (committed1) {
								return bad1;
							} else {
								var _v11 = attempt2(s);
								if (_v11.$ === 'Good') {
									var good = _v11;
									return good;
								} else {
									var bad2 = _v11;
									var committed2 = bad2.a;
									var x2 = bad2.b;
									if (committed2) {
										return bad2;
									} else {
										var _v12 = attempt3(s);
										if (_v12.$ === 'Good') {
											var good = _v12;
											return good;
										} else {
											var bad3 = _v12;
											var committed3 = bad3.a;
											var x3 = bad3.b;
											if (committed3) {
												return bad3;
											} else {
												var _v13 = attempt4(s);
												if (_v13.$ === 'Good') {
													var good = _v13;
													return good;
												} else {
													var bad4 = _v13;
													var committed4 = bad4.a;
													var x4 = bad4.b;
													if (committed4) {
														return bad4;
													} else {
														var _v14 = attempt5(s);
														if (_v14.$ === 'Good') {
															var good = _v14;
															return good;
														} else {
															var bad5 = _v14;
															var committed5 = bad5.a;
															var x5 = bad5.b;
															if (committed5) {
																return bad5;
															} else {
																var _v15 = attempt6(s);
																if (_v15.$ === 'Good') {
																	var good = _v15;
																	return good;
																} else {
																	var bad6 = _v15;
																	var committed6 = bad6.a;
																	var x6 = bad6.b;
																	if (committed6) {
																		return bad6;
																	} else {
																		var _v16 = attempt7(s);
																		if (_v16.$ === 'Good') {
																			var good = _v16;
																			return good;
																		} else {
																			var bad7 = _v16;
																			var committed7 = bad7.a;
																			var x7 = bad7.b;
																			if (committed7) {
																				return bad7;
																			} else {
																				var _v17 = attempt8(s);
																				if (_v17.$ === 'Good') {
																					var good = _v17;
																					return good;
																				} else {
																					var bad8 = _v17;
																					var committed8 = bad8.a;
																					var x8 = bad8.b;
																					return committed8 ? bad8 : A2(
																						$stil4m$elm_syntax$ParserFast$Bad,
																						false,
																						A3(
																							$stil4m$elm_syntax$ParserFast$ExpectingOneOf,
																							x0,
																							x1,
																							_List_fromArray(
																								[x2, x3, x4, x5, x6, x7, x8])));
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			});
	});
var $stil4m$elm_syntax$Elm$Parser$Patterns$patternListEmpty = $stil4m$elm_syntax$Elm$Syntax$Pattern$ListPattern(_List_Nil);
var $stil4m$elm_syntax$Elm$Parser$Layout$problemPositivelyIndented = $stil4m$elm_syntax$ParserFast$problem('must be positively indented');
var $stil4m$elm_syntax$Elm$Parser$Layout$positivelyIndentedFollowedBy = function (nextParser) {
	return $stil4m$elm_syntax$ParserFast$columnIndentAndThen(
		F2(
			function (column, indent) {
				return (_Utils_cmp(column, indent) > 0) ? nextParser : $stil4m$elm_syntax$Elm$Parser$Layout$problemPositivelyIndented;
			}));
};
var $stil4m$elm_syntax$ParserFast$ifFollowedByWhileWithoutLinebreak = F2(
	function (firstIsOkay, afterFirstIsOkay) {
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s) {
				var firstOffset = A3($stil4m$elm_syntax$ParserFast$isSubCharWithoutLinebreak, firstIsOkay, s.offset, s.src);
				if (_Utils_eq(firstOffset, -1)) {
					return A2(
						$stil4m$elm_syntax$ParserFast$Bad,
						false,
						A2($stil4m$elm_syntax$ParserFast$ExpectingCharSatisfyingPredicate, s.row, s.col));
				} else {
					var s1 = A6($stil4m$elm_syntax$ParserFast$skipWhileWithoutLinebreakHelp, afterFirstIsOkay, firstOffset, s.row, s.col + 1, s.src, s.indent);
					return A2(
						$stil4m$elm_syntax$ParserFast$Good,
						A3($elm$core$String$slice, s.offset, s1.offset, s.src),
						s1);
				}
			});
	});
var $stil4m$elm_syntax$Char$Extra$unicodeIsUpperFast = function (c) {
	var code = $elm$core$Char$toCode(c);
	return $stil4m$elm_syntax$Char$Extra$charCodeIsUpper(code) || function () {
		var cString = $elm$core$String$fromChar(c);
		return (_Utils_eq(
			$elm$core$String$toUpper(cString),
			cString + '') && (!_Utils_eq(
			$elm$core$String$toLower(cString),
			cString + ''))) ? ((code <= 8543) || (((8560 <= code) && (code <= 9397)) || ((9424 <= code) && (code <= 983040)))) : ((code < 120015) ? ((code < 8509) ? (((978 <= code) && (code <= 980)) || ((code === 8450) || ((code === 8455) || (((8459 <= code) && (code <= 8461)) || (((8464 <= code) && (code <= 8466)) || ((code === 8469) || (((8473 <= code) && (code <= 8477)) || ((code === 8484) || ((code === 8488) || (((8490 <= code) && (code <= 8493)) || ((8496 <= code) && (code <= 8499)))))))))))) : (((8510 <= code) && (code <= 8511)) || ((code === 8517) || (((119808 <= code) && (code <= 119833)) || (((119860 <= code) && (code <= 119885)) || (((119912 <= code) && (code <= 119937)) || ((code === 119964) || (((119966 <= code) && (code <= 119967)) || ((code === 119970) || (((119973 <= code) && (code <= 119974)) || (((119977 <= code) && (code <= 119980)) || ((119982 <= code) && (code <= 119989))))))))))))) : ((code < 120223) ? (((120016 <= code) && (code <= 120041)) || (((120068 <= code) && (code <= 120069)) || (((120071 <= code) && (code <= 120074)) || (((120077 <= code) && (code <= 120084)) || (((120086 <= code) && (code <= 120092)) || (((120120 <= code) && (code <= 120121)) || (((120123 <= code) && (code <= 120126)) || (((120128 <= code) && (code <= 120132)) || ((code === 120134) || (((120138 <= code) && (code <= 120144)) || ((120172 <= code) && (code <= 120197)))))))))))) : (((120224 <= code) && (code <= 120249)) || (((120276 <= code) && (code <= 120301)) || (((120328 <= code) && (code <= 120353)) || (((120380 <= code) && (code <= 120405)) || (((120432 <= code) && (code <= 120457)) || (((120488 <= code) && (code <= 120512)) || (((120546 <= code) && (code <= 120570)) || (((120604 <= code) && (code <= 120628)) || (((120662 <= code) && (code <= 120686)) || (((120720 <= code) && (code <= 120744)) || (code === 120778)))))))))))));
	}();
};
var $stil4m$elm_syntax$Elm$Parser$Tokens$typeName = A2($stil4m$elm_syntax$ParserFast$ifFollowedByWhileWithoutLinebreak, $stil4m$elm_syntax$Char$Extra$unicodeIsUpperFast, $stil4m$elm_syntax$Char$Extra$unicodeIsAlphaNumOrUnderscoreFast);
function $stil4m$elm_syntax$Elm$Parser$Patterns$cyclic$maybeDotTypeNamesTuple() {
	return A4(
		$stil4m$elm_syntax$ParserFast$map2OrSucceed,
		F2(
			function (startName, afterStartName) {
				if (afterStartName.$ === 'Nothing') {
					return $elm$core$Maybe$Just(
						_Utils_Tuple2(_List_Nil, startName));
				} else {
					var _v1 = afterStartName.a;
					var qualificationAfter = _v1.a;
					var unqualified = _v1.b;
					return $elm$core$Maybe$Just(
						_Utils_Tuple2(
							A2($elm$core$List$cons, startName, qualificationAfter),
							unqualified));
				}
			}),
		A2($stil4m$elm_syntax$ParserFast$symbolFollowedBy, '.', $stil4m$elm_syntax$Elm$Parser$Tokens$typeName),
		$stil4m$elm_syntax$ParserFast$lazy(
			function (_v2) {
				return $stil4m$elm_syntax$Elm$Parser$Patterns$cyclic$maybeDotTypeNamesTuple();
			}),
		$elm$core$Maybe$Nothing);
}
try {
	var $stil4m$elm_syntax$Elm$Parser$Patterns$maybeDotTypeNamesTuple = $stil4m$elm_syntax$Elm$Parser$Patterns$cyclic$maybeDotTypeNamesTuple();
	$stil4m$elm_syntax$Elm$Parser$Patterns$cyclic$maybeDotTypeNamesTuple = function () {
		return $stil4m$elm_syntax$Elm$Parser$Patterns$maybeDotTypeNamesTuple;
	};
} catch ($) {
	throw 'Some top-level definitions from `Elm.Parser.Patterns` are causing infinite recursion:\n\n  ┌─────┐\n  │    maybeDotTypeNamesTuple\n  └─────┘\n\nThese errors are very tricky, so read https://elm-lang.org/0.19.1/bad-recursion to learn how to fix it!';}
var $stil4m$elm_syntax$Elm$Parser$Patterns$qualifiedNameRefNode = A3(
	$stil4m$elm_syntax$ParserFast$map2WithRange,
	F3(
		function (range, firstName, after) {
			return A2(
				$stil4m$elm_syntax$Elm$Syntax$Node$Node,
				range,
				function () {
					if (after.$ === 'Nothing') {
						return {moduleName: _List_Nil, name: firstName};
					} else {
						var _v1 = after.a;
						var qualificationAfter = _v1.a;
						var unqualified = _v1.b;
						return {
							moduleName: A2($elm$core$List$cons, firstName, qualificationAfter),
							name: unqualified
						};
					}
				}());
		}),
	$stil4m$elm_syntax$Elm$Parser$Tokens$typeName,
	$stil4m$elm_syntax$Elm$Parser$Patterns$maybeDotTypeNamesTuple);
var $stil4m$elm_syntax$Elm$Parser$Patterns$qualifiedPatternWithoutConsumeArgs = A3(
	$stil4m$elm_syntax$ParserFast$map2WithRange,
	F3(
		function (range, firstName, after) {
			return {
				comments: $stil4m$elm_syntax$Rope$empty,
				syntax: A2(
					$stil4m$elm_syntax$Elm$Syntax$Node$Node,
					range,
					A2(
						$stil4m$elm_syntax$Elm$Syntax$Pattern$NamedPattern,
						function () {
							if (after.$ === 'Nothing') {
								return {moduleName: _List_Nil, name: firstName};
							} else {
								var _v1 = after.a;
								var qualificationAfter = _v1.a;
								var unqualified = _v1.b;
								return {
									moduleName: A2($elm$core$List$cons, firstName, qualificationAfter),
									name: unqualified
								};
							}
						}(),
						_List_Nil))
			};
		}),
	$stil4m$elm_syntax$Elm$Parser$Tokens$typeName,
	$stil4m$elm_syntax$Elm$Parser$Patterns$maybeDotTypeNamesTuple);
var $stil4m$elm_syntax$Elm$Syntax$Pattern$RecordPattern = function (a) {
	return {$: 'RecordPattern', a: a};
};
var $stil4m$elm_syntax$Elm$Parser$Patterns$recordPattern = A3(
	$stil4m$elm_syntax$ParserFast$map2WithRange,
	F3(
		function (range, commentsBeforeElements, elements) {
			return {
				comments: A2($stil4m$elm_syntax$Rope$prependTo, elements.comments, commentsBeforeElements),
				syntax: A2(
					$stil4m$elm_syntax$Elm$Syntax$Node$Node,
					range,
					$stil4m$elm_syntax$Elm$Syntax$Pattern$RecordPattern(elements.syntax))
			};
		}),
	A2($stil4m$elm_syntax$ParserFast$symbolFollowedBy, '{', $stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout),
	A2(
		$stil4m$elm_syntax$ParserFast$oneOf2,
		A2(
			$stil4m$elm_syntax$ParserFast$followedBySymbol,
			'}',
			A4(
				$stil4m$elm_syntax$ParserFast$map3,
				F3(
					function (head, commentsAfterHead, tail) {
						return {
							comments: A2($stil4m$elm_syntax$Rope$prependTo, tail.comments, commentsAfterHead),
							syntax: A2($elm$core$List$cons, head, tail.syntax)
						};
					}),
				$stil4m$elm_syntax$Elm$Parser$Tokens$functionNameNode,
				$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
				$stil4m$elm_syntax$ParserWithComments$many(
					A2(
						$stil4m$elm_syntax$ParserFast$symbolFollowedBy,
						',',
						A4(
							$stil4m$elm_syntax$ParserFast$map3,
							F3(
								function (beforeName, name, afterName) {
									return {
										comments: A2($stil4m$elm_syntax$Rope$prependTo, afterName, beforeName),
										syntax: name
									};
								}),
							$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
							$stil4m$elm_syntax$Elm$Parser$Tokens$functionNameNode,
							$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout))))),
		A2(
			$stil4m$elm_syntax$ParserFast$symbol,
			'}',
			{comments: $stil4m$elm_syntax$Rope$empty, syntax: _List_Nil})));
var $stil4m$elm_syntax$Elm$Syntax$Pattern$StringPattern = function (a) {
	return {$: 'StringPattern', a: a};
};
var $stil4m$elm_syntax$Elm$Parser$Patterns$stringPattern = $stil4m$elm_syntax$Elm$Parser$Tokens$singleOrTripleQuotedStringLiteralMapWithRange(
	F2(
		function (range, string) {
			return {
				comments: $stil4m$elm_syntax$Rope$empty,
				syntax: A2(
					$stil4m$elm_syntax$Elm$Syntax$Node$Node,
					range,
					$stil4m$elm_syntax$Elm$Syntax$Pattern$StringPattern(string))
			};
		}));
var $stil4m$elm_syntax$Elm$Syntax$Pattern$VarPattern = function (a) {
	return {$: 'VarPattern', a: a};
};
var $stil4m$elm_syntax$Elm$Parser$Tokens$functionNameMapWithRange = function (rangeAndNameToResult) {
	return A4($stil4m$elm_syntax$ParserFast$ifFollowedByWhileValidateMapWithRangeWithoutLinebreak, rangeAndNameToResult, $stil4m$elm_syntax$Char$Extra$unicodeIsLowerFast, $stil4m$elm_syntax$Char$Extra$unicodeIsAlphaNumOrUnderscoreFast, $stil4m$elm_syntax$Elm$Parser$Tokens$isNotReserved);
};
var $stil4m$elm_syntax$Elm$Parser$Patterns$varPattern = $stil4m$elm_syntax$Elm$Parser$Tokens$functionNameMapWithRange(
	F2(
		function (range, _var) {
			return {
				comments: $stil4m$elm_syntax$Rope$empty,
				syntax: A2(
					$stil4m$elm_syntax$Elm$Syntax$Node$Node,
					range,
					$stil4m$elm_syntax$Elm$Syntax$Pattern$VarPattern(_var))
			};
		}));
function $stil4m$elm_syntax$Elm$Parser$Patterns$cyclic$composablePatternTryToCompose() {
	return A4(
		$stil4m$elm_syntax$ParserFast$map3,
		F3(
			function (x, commentsAfterLeft, maybeComposedWithResult) {
				return {
					comments: A2(
						$stil4m$elm_syntax$Rope$prependTo,
						maybeComposedWithResult.comments,
						A2($stil4m$elm_syntax$Rope$prependTo, commentsAfterLeft, x.comments)),
					syntax: function () {
						var _v7 = maybeComposedWithResult.syntax;
						switch (_v7.$) {
							case 'PatternComposedWithNothing':
								return x.syntax;
							case 'PatternComposedWithAs':
								var anotherName = _v7.a;
								return A3($stil4m$elm_syntax$Elm$Syntax$Node$combine, $stil4m$elm_syntax$Elm$Syntax$Pattern$AsPattern, x.syntax, anotherName);
							default:
								var y = _v7.a;
								return A3($stil4m$elm_syntax$Elm$Syntax$Node$combine, $stil4m$elm_syntax$Elm$Syntax$Pattern$UnConsPattern, x.syntax, y);
						}
					}()
				};
			}),
		$stil4m$elm_syntax$Elm$Parser$Patterns$cyclic$composablePattern(),
		$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
		$stil4m$elm_syntax$Elm$Parser$Patterns$cyclic$maybeComposedWith());
}
function $stil4m$elm_syntax$Elm$Parser$Patterns$cyclic$composablePattern() {
	return A9(
		$stil4m$elm_syntax$ParserFast$oneOf9,
		$stil4m$elm_syntax$Elm$Parser$Patterns$varPattern,
		$stil4m$elm_syntax$Elm$Parser$Patterns$cyclic$qualifiedPatternWithConsumeArgs(),
		$stil4m$elm_syntax$Elm$Parser$Patterns$allPattern,
		$stil4m$elm_syntax$Elm$Parser$Patterns$cyclic$parensPattern(),
		$stil4m$elm_syntax$Elm$Parser$Patterns$recordPattern,
		$stil4m$elm_syntax$Elm$Parser$Patterns$stringPattern,
		$stil4m$elm_syntax$Elm$Parser$Patterns$cyclic$listPattern(),
		$stil4m$elm_syntax$Elm$Parser$Patterns$numberPart,
		$stil4m$elm_syntax$Elm$Parser$Patterns$charPattern);
}
function $stil4m$elm_syntax$Elm$Parser$Patterns$cyclic$qualifiedPatternWithConsumeArgs() {
	return A4(
		$stil4m$elm_syntax$ParserFast$map3,
		F3(
			function (_v4, afterStartName, argsReverse) {
				var nameRange = _v4.a;
				var name = _v4.b;
				var range = function () {
					var _v5 = argsReverse.syntax;
					if (!_v5.b) {
						return nameRange;
					} else {
						var _v6 = _v5.a;
						var lastArgRange = _v6.a;
						return {end: lastArgRange.end, start: nameRange.start};
					}
				}();
				return {
					comments: A2($stil4m$elm_syntax$Rope$prependTo, argsReverse.comments, afterStartName),
					syntax: A2(
						$stil4m$elm_syntax$Elm$Syntax$Node$Node,
						range,
						A2(
							$stil4m$elm_syntax$Elm$Syntax$Pattern$NamedPattern,
							name,
							$elm$core$List$reverse(argsReverse.syntax)))
				};
			}),
		$stil4m$elm_syntax$Elm$Parser$Patterns$qualifiedNameRefNode,
		$stil4m$elm_syntax$Elm$Parser$Layout$optimisticLayout,
		$stil4m$elm_syntax$ParserWithComments$manyWithoutReverse(
			$stil4m$elm_syntax$Elm$Parser$Layout$positivelyIndentedFollowedBy(
				A3(
					$stil4m$elm_syntax$ParserFast$map2,
					F2(
						function (arg, commentsAfterArg) {
							return {
								comments: A2($stil4m$elm_syntax$Rope$prependTo, commentsAfterArg, arg.comments),
								syntax: arg.syntax
							};
						}),
					$stil4m$elm_syntax$Elm$Parser$Patterns$cyclic$patternNotDirectlyComposing(),
					$stil4m$elm_syntax$Elm$Parser$Layout$optimisticLayout))));
}
function $stil4m$elm_syntax$Elm$Parser$Patterns$cyclic$patternNotDirectlyComposing() {
	return A9(
		$stil4m$elm_syntax$ParserFast$oneOf9,
		$stil4m$elm_syntax$Elm$Parser$Patterns$varPattern,
		$stil4m$elm_syntax$Elm$Parser$Patterns$qualifiedPatternWithoutConsumeArgs,
		$stil4m$elm_syntax$Elm$Parser$Patterns$allPattern,
		$stil4m$elm_syntax$Elm$Parser$Patterns$cyclic$parensPattern(),
		$stil4m$elm_syntax$Elm$Parser$Patterns$recordPattern,
		$stil4m$elm_syntax$Elm$Parser$Patterns$stringPattern,
		$stil4m$elm_syntax$Elm$Parser$Patterns$cyclic$listPattern(),
		$stil4m$elm_syntax$Elm$Parser$Patterns$numberPart,
		$stil4m$elm_syntax$Elm$Parser$Patterns$charPattern);
}
function $stil4m$elm_syntax$Elm$Parser$Patterns$cyclic$listPattern() {
	return A3(
		$stil4m$elm_syntax$ParserFast$map2WithRange,
		F3(
			function (range, commentsBeforeElements, maybeElements) {
				if (maybeElements.$ === 'Nothing') {
					return {
						comments: commentsBeforeElements,
						syntax: A2($stil4m$elm_syntax$Elm$Syntax$Node$Node, range, $stil4m$elm_syntax$Elm$Parser$Patterns$patternListEmpty)
					};
				} else {
					var elements = maybeElements.a;
					return {
						comments: A2($stil4m$elm_syntax$Rope$prependTo, elements.comments, commentsBeforeElements),
						syntax: A2(
							$stil4m$elm_syntax$Elm$Syntax$Node$Node,
							range,
							$stil4m$elm_syntax$Elm$Syntax$Pattern$ListPattern(elements.syntax))
					};
				}
			}),
		A2($stil4m$elm_syntax$ParserFast$symbolFollowedBy, '[', $stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout),
		A2(
			$stil4m$elm_syntax$ParserFast$oneOf2,
			A2($stil4m$elm_syntax$ParserFast$symbol, ']', $elm$core$Maybe$Nothing),
			A2(
				$stil4m$elm_syntax$ParserFast$followedBySymbol,
				']',
				A4(
					$stil4m$elm_syntax$ParserFast$map3,
					F3(
						function (head, commentsAfterHead, tail) {
							return $elm$core$Maybe$Just(
								{
									comments: A2(
										$stil4m$elm_syntax$Rope$prependTo,
										commentsAfterHead,
										A2($stil4m$elm_syntax$Rope$prependTo, tail.comments, head.comments)),
									syntax: A2($elm$core$List$cons, head.syntax, tail.syntax)
								});
						}),
					$stil4m$elm_syntax$Elm$Parser$Patterns$cyclic$pattern(),
					$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
					$stil4m$elm_syntax$ParserWithComments$many(
						A2(
							$stil4m$elm_syntax$ParserFast$symbolFollowedBy,
							',',
							$stil4m$elm_syntax$Elm$Parser$Layout$maybeAroundBothSides(
								$stil4m$elm_syntax$Elm$Parser$Patterns$cyclic$pattern())))))));
}
function $stil4m$elm_syntax$Elm$Parser$Patterns$cyclic$maybeComposedWith() {
	return A3(
		$stil4m$elm_syntax$ParserFast$oneOf2OrSucceed,
		A2(
			$stil4m$elm_syntax$ParserFast$keywordFollowedBy,
			'as',
			A3(
				$stil4m$elm_syntax$ParserFast$map2,
				F2(
					function (commentsAfterAs, name) {
						return {
							comments: commentsAfterAs,
							syntax: $stil4m$elm_syntax$Elm$Parser$Patterns$PatternComposedWithAs(name)
						};
					}),
				$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
				$stil4m$elm_syntax$Elm$Parser$Tokens$functionNameNode)),
		A2(
			$stil4m$elm_syntax$ParserFast$symbolFollowedBy,
			'::',
			A3(
				$stil4m$elm_syntax$ParserFast$map2,
				F2(
					function (commentsAfterCons, patternResult) {
						return {
							comments: A2($stil4m$elm_syntax$Rope$prependTo, patternResult.comments, commentsAfterCons),
							syntax: $stil4m$elm_syntax$Elm$Parser$Patterns$PatternComposedWithCons(patternResult.syntax)
						};
					}),
				$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
				$stil4m$elm_syntax$Elm$Parser$Patterns$cyclic$pattern())),
		{
			comments: $stil4m$elm_syntax$Rope$empty,
			syntax: $stil4m$elm_syntax$Elm$Parser$Patterns$PatternComposedWithNothing(_Utils_Tuple0)
		});
}
function $stil4m$elm_syntax$Elm$Parser$Patterns$cyclic$parensPattern() {
	return A2(
		$stil4m$elm_syntax$ParserFast$symbolFollowedBy,
		'(',
		A3(
			$stil4m$elm_syntax$ParserFast$map2WithRange,
			F3(
				function (range, commentsBeforeHead, contentResult) {
					return {
						comments: A2($stil4m$elm_syntax$Rope$prependTo, contentResult.comments, commentsBeforeHead),
						syntax: A2(
							$stil4m$elm_syntax$Elm$Syntax$Node$Node,
							{
								end: range.end,
								start: {column: range.start.column - 1, row: range.start.row}
							},
							contentResult.syntax)
					};
				}),
			$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
			A2(
				$stil4m$elm_syntax$ParserFast$oneOf2,
				A2(
					$stil4m$elm_syntax$ParserFast$symbol,
					')',
					{comments: $stil4m$elm_syntax$Rope$empty, syntax: $stil4m$elm_syntax$Elm$Syntax$Pattern$UnitPattern}),
				A4(
					$stil4m$elm_syntax$ParserFast$map3,
					F3(
						function (headResult, commentsAfterHead, tailResult) {
							return {
								comments: A2(
									$stil4m$elm_syntax$Rope$prependTo,
									tailResult.comments,
									A2($stil4m$elm_syntax$Rope$prependTo, commentsAfterHead, headResult.comments)),
								syntax: function () {
									var _v1 = tailResult.syntax;
									if (_v1.$ === 'Nothing') {
										return $stil4m$elm_syntax$Elm$Syntax$Pattern$ParenthesizedPattern(headResult.syntax);
									} else {
										var secondAndMaybeThirdPart = _v1.a;
										var _v2 = secondAndMaybeThirdPart.maybeThirdPart;
										if (_v2.$ === 'Nothing') {
											return $stil4m$elm_syntax$Elm$Syntax$Pattern$TuplePattern(
												_List_fromArray(
													[headResult.syntax, secondAndMaybeThirdPart.secondPart]));
										} else {
											var thirdPart = _v2.a;
											return $stil4m$elm_syntax$Elm$Syntax$Pattern$TuplePattern(
												_List_fromArray(
													[headResult.syntax, secondAndMaybeThirdPart.secondPart, thirdPart]));
										}
									}
								}()
							};
						}),
					$stil4m$elm_syntax$Elm$Parser$Patterns$cyclic$pattern(),
					$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
					A2(
						$stil4m$elm_syntax$ParserFast$oneOf2,
						A2(
							$stil4m$elm_syntax$ParserFast$symbol,
							')',
							{comments: $stil4m$elm_syntax$Rope$empty, syntax: $elm$core$Maybe$Nothing}),
						A2(
							$stil4m$elm_syntax$ParserFast$symbolFollowedBy,
							',',
							A5(
								$stil4m$elm_syntax$ParserFast$map4,
								F4(
									function (commentsBefore, secondPart, commentsAfter, maybeThirdPart) {
										return {
											comments: A2(
												$stil4m$elm_syntax$Rope$prependTo,
												maybeThirdPart.comments,
												A2(
													$stil4m$elm_syntax$Rope$prependTo,
													commentsAfter,
													A2($stil4m$elm_syntax$Rope$prependTo, secondPart.comments, commentsBefore))),
											syntax: $elm$core$Maybe$Just(
												{maybeThirdPart: maybeThirdPart.syntax, secondPart: secondPart.syntax})
										};
									}),
								$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
								$stil4m$elm_syntax$Elm$Parser$Patterns$cyclic$pattern(),
								$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
								A2(
									$stil4m$elm_syntax$ParserFast$oneOf2,
									A2(
										$stil4m$elm_syntax$ParserFast$symbol,
										')',
										{comments: $stil4m$elm_syntax$Rope$empty, syntax: $elm$core$Maybe$Nothing}),
									A2(
										$stil4m$elm_syntax$ParserFast$symbolFollowedBy,
										',',
										A2(
											$stil4m$elm_syntax$ParserFast$followedBySymbol,
											')',
											A4(
												$stil4m$elm_syntax$ParserFast$map3,
												F3(
													function (commentsBefore, thirdPart, commentsAfter) {
														return {
															comments: A2(
																$stil4m$elm_syntax$Rope$prependTo,
																commentsAfter,
																A2($stil4m$elm_syntax$Rope$prependTo, thirdPart.comments, commentsBefore)),
															syntax: $elm$core$Maybe$Just(thirdPart.syntax)
														};
													}),
												$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
												$stil4m$elm_syntax$Elm$Parser$Patterns$cyclic$pattern(),
												$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout)))))))))));
}
function $stil4m$elm_syntax$Elm$Parser$Patterns$cyclic$pattern() {
	return $stil4m$elm_syntax$ParserFast$lazy(
		function (_v0) {
			return $stil4m$elm_syntax$Elm$Parser$Patterns$cyclic$composablePatternTryToCompose();
		});
}
try {
	var $stil4m$elm_syntax$Elm$Parser$Patterns$composablePatternTryToCompose = $stil4m$elm_syntax$Elm$Parser$Patterns$cyclic$composablePatternTryToCompose();
	$stil4m$elm_syntax$Elm$Parser$Patterns$cyclic$composablePatternTryToCompose = function () {
		return $stil4m$elm_syntax$Elm$Parser$Patterns$composablePatternTryToCompose;
	};
	var $stil4m$elm_syntax$Elm$Parser$Patterns$composablePattern = $stil4m$elm_syntax$Elm$Parser$Patterns$cyclic$composablePattern();
	$stil4m$elm_syntax$Elm$Parser$Patterns$cyclic$composablePattern = function () {
		return $stil4m$elm_syntax$Elm$Parser$Patterns$composablePattern;
	};
	var $stil4m$elm_syntax$Elm$Parser$Patterns$qualifiedPatternWithConsumeArgs = $stil4m$elm_syntax$Elm$Parser$Patterns$cyclic$qualifiedPatternWithConsumeArgs();
	$stil4m$elm_syntax$Elm$Parser$Patterns$cyclic$qualifiedPatternWithConsumeArgs = function () {
		return $stil4m$elm_syntax$Elm$Parser$Patterns$qualifiedPatternWithConsumeArgs;
	};
	var $stil4m$elm_syntax$Elm$Parser$Patterns$patternNotDirectlyComposing = $stil4m$elm_syntax$Elm$Parser$Patterns$cyclic$patternNotDirectlyComposing();
	$stil4m$elm_syntax$Elm$Parser$Patterns$cyclic$patternNotDirectlyComposing = function () {
		return $stil4m$elm_syntax$Elm$Parser$Patterns$patternNotDirectlyComposing;
	};
	var $stil4m$elm_syntax$Elm$Parser$Patterns$listPattern = $stil4m$elm_syntax$Elm$Parser$Patterns$cyclic$listPattern();
	$stil4m$elm_syntax$Elm$Parser$Patterns$cyclic$listPattern = function () {
		return $stil4m$elm_syntax$Elm$Parser$Patterns$listPattern;
	};
	var $stil4m$elm_syntax$Elm$Parser$Patterns$maybeComposedWith = $stil4m$elm_syntax$Elm$Parser$Patterns$cyclic$maybeComposedWith();
	$stil4m$elm_syntax$Elm$Parser$Patterns$cyclic$maybeComposedWith = function () {
		return $stil4m$elm_syntax$Elm$Parser$Patterns$maybeComposedWith;
	};
	var $stil4m$elm_syntax$Elm$Parser$Patterns$parensPattern = $stil4m$elm_syntax$Elm$Parser$Patterns$cyclic$parensPattern();
	$stil4m$elm_syntax$Elm$Parser$Patterns$cyclic$parensPattern = function () {
		return $stil4m$elm_syntax$Elm$Parser$Patterns$parensPattern;
	};
	var $stil4m$elm_syntax$Elm$Parser$Patterns$pattern = $stil4m$elm_syntax$Elm$Parser$Patterns$cyclic$pattern();
	$stil4m$elm_syntax$Elm$Parser$Patterns$cyclic$pattern = function () {
		return $stil4m$elm_syntax$Elm$Parser$Patterns$pattern;
	};
} catch ($) {
	throw 'Some top-level definitions from `Elm.Parser.Patterns` are causing infinite recursion:\n\n  ┌─────┐\n  │    composablePatternTryToCompose\n  │     ↓\n  │    composablePattern\n  │     ↓\n  │    qualifiedPatternWithConsumeArgs\n  │     ↓\n  │    patternNotDirectlyComposing\n  │     ↓\n  │    listPattern\n  │     ↓\n  │    maybeComposedWith\n  │     ↓\n  │    parensPattern\n  │     ↓\n  │    pattern\n  └─────┘\n\nThese errors are very tricky, so read https://elm-lang.org/0.19.1/bad-recursion to learn how to fix it!';}
var $stil4m$elm_syntax$ParserWithComments$until = F2(
	function (end, element) {
		return A5(
			$stil4m$elm_syntax$ParserFast$loopUntil,
			end,
			element,
			_Utils_Tuple2($stil4m$elm_syntax$Rope$empty, _List_Nil),
			F2(
				function (pResult, _v0) {
					var commentsSoFar = _v0.a;
					var itemsSoFar = _v0.b;
					return _Utils_Tuple2(
						A2($stil4m$elm_syntax$Rope$prependTo, pResult.comments, commentsSoFar),
						A2($elm$core$List$cons, pResult.syntax, itemsSoFar));
				}),
			function (_v1) {
				var commentsSoFar = _v1.a;
				var itemsSoFar = _v1.b;
				return {
					comments: commentsSoFar,
					syntax: $elm$core$List$reverse(itemsSoFar)
				};
			});
	});
var $stil4m$elm_syntax$Elm$Parser$Expression$parameterPatternsEqual = A2(
	$stil4m$elm_syntax$ParserWithComments$until,
	$stil4m$elm_syntax$Elm$Parser$Tokens$equal,
	A3(
		$stil4m$elm_syntax$ParserFast$map2,
		F2(
			function (patternResult, commentsAfterPattern) {
				return {
					comments: A2($stil4m$elm_syntax$Rope$prependTo, commentsAfterPattern, patternResult.comments),
					syntax: patternResult.syntax
				};
			}),
		$stil4m$elm_syntax$Elm$Parser$Patterns$patternNotDirectlyComposing,
		$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout));
var $stil4m$elm_syntax$Elm$Parser$Layout$positivelyIndentedPlusFollowedBy = F2(
	function (extraIndent, nextParser) {
		return $stil4m$elm_syntax$ParserFast$columnIndentAndThen(
			F2(
				function (column, indent) {
					return (_Utils_cmp(column, indent + extraIndent) > 0) ? nextParser : $stil4m$elm_syntax$Elm$Parser$Layout$problemPositivelyIndented;
				}));
	});
var $stil4m$elm_syntax$Elm$Parser$Expression$problemCannotMixNonAssociativeInfixOperators = $stil4m$elm_syntax$ParserFast$problem('cannot mix non-associative infix operators without parenthesis');
var $stil4m$elm_syntax$Elm$Parser$Expression$rangeMoveStartLeftByOneColumn = function (range) {
	return {
		end: range.end,
		start: {column: range.start.column - 1, row: range.start.row}
	};
};
var $stil4m$elm_syntax$Elm$Syntax$Expression$RecordAccessFunction = function (a) {
	return {$: 'RecordAccessFunction', a: a};
};
var $stil4m$elm_syntax$Elm$Parser$Expression$recordAccessFunctionExpression = A2(
	$stil4m$elm_syntax$ParserFast$symbolFollowedBy,
	'.',
	$stil4m$elm_syntax$Elm$Parser$Tokens$functionNameMapWithRange(
		F2(
			function (range, field) {
				return {
					comments: $stil4m$elm_syntax$Rope$empty,
					syntax: A2(
						$stil4m$elm_syntax$Elm$Syntax$Node$Node,
						$stil4m$elm_syntax$Elm$Parser$Expression$rangeMoveStartLeftByOneColumn(range),
						$stil4m$elm_syntax$Elm$Syntax$Expression$RecordAccessFunction('.' + field))
				};
			})));
var $stil4m$elm_syntax$Elm$Syntax$Expression$Floatable = function (a) {
	return {$: 'Floatable', a: a};
};
var $stil4m$elm_syntax$Elm$Syntax$Expression$Hex = function (a) {
	return {$: 'Hex', a: a};
};
var $stil4m$elm_syntax$Elm$Syntax$Expression$Integer = function (a) {
	return {$: 'Integer', a: a};
};
var $stil4m$elm_syntax$ParserFast$skip0OrMoreDigits0To9 = F2(
	function (offset, src) {
		skip0OrMoreDigits0To9:
		while (true) {
			var _v0 = A3($elm$core$String$slice, offset, offset + 1, src);
			switch (_v0) {
				case '0':
					var $temp$offset = offset + 1,
						$temp$src = src;
					offset = $temp$offset;
					src = $temp$src;
					continue skip0OrMoreDigits0To9;
				case '1':
					var $temp$offset = offset + 1,
						$temp$src = src;
					offset = $temp$offset;
					src = $temp$src;
					continue skip0OrMoreDigits0To9;
				case '2':
					var $temp$offset = offset + 1,
						$temp$src = src;
					offset = $temp$offset;
					src = $temp$src;
					continue skip0OrMoreDigits0To9;
				case '3':
					var $temp$offset = offset + 1,
						$temp$src = src;
					offset = $temp$offset;
					src = $temp$src;
					continue skip0OrMoreDigits0To9;
				case '4':
					var $temp$offset = offset + 1,
						$temp$src = src;
					offset = $temp$offset;
					src = $temp$src;
					continue skip0OrMoreDigits0To9;
				case '5':
					var $temp$offset = offset + 1,
						$temp$src = src;
					offset = $temp$offset;
					src = $temp$src;
					continue skip0OrMoreDigits0To9;
				case '6':
					var $temp$offset = offset + 1,
						$temp$src = src;
					offset = $temp$offset;
					src = $temp$src;
					continue skip0OrMoreDigits0To9;
				case '7':
					var $temp$offset = offset + 1,
						$temp$src = src;
					offset = $temp$offset;
					src = $temp$src;
					continue skip0OrMoreDigits0To9;
				case '8':
					var $temp$offset = offset + 1,
						$temp$src = src;
					offset = $temp$offset;
					src = $temp$src;
					continue skip0OrMoreDigits0To9;
				case '9':
					var $temp$offset = offset + 1,
						$temp$src = src;
					offset = $temp$offset;
					src = $temp$src;
					continue skip0OrMoreDigits0To9;
				default:
					return offset;
			}
		}
	});
var $stil4m$elm_syntax$ParserFast$skip1OrMoreDigits0To9 = F2(
	function (offset, src) {
		var _v0 = A3($elm$core$String$slice, offset, offset + 1, src);
		switch (_v0) {
			case '0':
				return A2($stil4m$elm_syntax$ParserFast$skip0OrMoreDigits0To9, offset + 1, src);
			case '1':
				return A2($stil4m$elm_syntax$ParserFast$skip0OrMoreDigits0To9, offset + 1, src);
			case '2':
				return A2($stil4m$elm_syntax$ParserFast$skip0OrMoreDigits0To9, offset + 1, src);
			case '3':
				return A2($stil4m$elm_syntax$ParserFast$skip0OrMoreDigits0To9, offset + 1, src);
			case '4':
				return A2($stil4m$elm_syntax$ParserFast$skip0OrMoreDigits0To9, offset + 1, src);
			case '5':
				return A2($stil4m$elm_syntax$ParserFast$skip0OrMoreDigits0To9, offset + 1, src);
			case '6':
				return A2($stil4m$elm_syntax$ParserFast$skip0OrMoreDigits0To9, offset + 1, src);
			case '7':
				return A2($stil4m$elm_syntax$ParserFast$skip0OrMoreDigits0To9, offset + 1, src);
			case '8':
				return A2($stil4m$elm_syntax$ParserFast$skip0OrMoreDigits0To9, offset + 1, src);
			case '9':
				return A2($stil4m$elm_syntax$ParserFast$skip0OrMoreDigits0To9, offset + 1, src);
			default:
				return -1;
		}
	});
var $stil4m$elm_syntax$ParserFast$skipAfterFloatExponentMark = F2(
	function (offset, src) {
		var _v0 = A3($elm$core$String$slice, offset, offset + 1, src);
		switch (_v0) {
			case '+':
				return A2($stil4m$elm_syntax$ParserFast$skip1OrMoreDigits0To9, offset + 1, src);
			case '-':
				return A2($stil4m$elm_syntax$ParserFast$skip1OrMoreDigits0To9, offset + 1, src);
			default:
				return A2($stil4m$elm_syntax$ParserFast$skip1OrMoreDigits0To9, offset, src);
		}
	});
var $stil4m$elm_syntax$ParserFast$skipFloatAfterIntegerDecimal = F2(
	function (offset, src) {
		var _v0 = A3($elm$core$String$slice, offset, offset + 1, src);
		switch (_v0) {
			case '.':
				var offsetAfterDigits = A2($stil4m$elm_syntax$ParserFast$skip1OrMoreDigits0To9, offset + 1, src);
				if (_Utils_eq(offsetAfterDigits, -1)) {
					return -1;
				} else {
					var _v1 = A3($elm$core$String$slice, offsetAfterDigits, offsetAfterDigits + 1, src);
					switch (_v1) {
						case 'e':
							return A2($stil4m$elm_syntax$ParserFast$skipAfterFloatExponentMark, offsetAfterDigits + 1, src);
						case 'E':
							return A2($stil4m$elm_syntax$ParserFast$skipAfterFloatExponentMark, offsetAfterDigits + 1, src);
						default:
							return offsetAfterDigits;
					}
				}
			case 'e':
				return A2($stil4m$elm_syntax$ParserFast$skipAfterFloatExponentMark, offset + 1, src);
			case 'E':
				return A2($stil4m$elm_syntax$ParserFast$skipAfterFloatExponentMark, offset + 1, src);
			default:
				return -1;
		}
	});
var $elm$core$String$toFloat = _String_toFloat;
var $stil4m$elm_syntax$ParserFast$floatOrIntegerDecimalOrHexadecimalMapWithRange = F3(
	function (rangeAndFloatToRes, rangeAndIntDecimalToRes, rangeAndIntHexadecimalToRes) {
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s0) {
				var s1 = A2($stil4m$elm_syntax$ParserFast$convertIntegerDecimalOrHexadecimal, s0.offset, s0.src);
				if (_Utils_eq(s1.offsetAndInt.offset, -1)) {
					return A2(
						$stil4m$elm_syntax$ParserFast$Bad,
						false,
						A2($stil4m$elm_syntax$ParserFast$ExpectingNumber, s0.row, s0.col));
				} else {
					var offsetAfterFloat = A2($stil4m$elm_syntax$ParserFast$skipFloatAfterIntegerDecimal, s1.offsetAndInt.offset, s0.src);
					if (_Utils_eq(offsetAfterFloat, -1)) {
						var newColumn = s0.col + (s1.offsetAndInt.offset - s0.offset);
						var range = {
							end: {column: newColumn, row: s0.row},
							start: {column: s0.col, row: s0.row}
						};
						return A2(
							$stil4m$elm_syntax$ParserFast$Good,
							function () {
								var _v0 = s1.base;
								if (_v0.$ === 'Decimal') {
									return A2(rangeAndIntDecimalToRes, range, s1.offsetAndInt._int);
								} else {
									return A2(rangeAndIntHexadecimalToRes, range, s1.offsetAndInt._int);
								}
							}(),
							{col: newColumn, indent: s0.indent, offset: s1.offsetAndInt.offset, row: s0.row, src: s0.src});
					} else {
						var _v1 = $elm$core$String$toFloat(
							A3($elm$core$String$slice, s0.offset, offsetAfterFloat, s0.src));
						if (_v1.$ === 'Just') {
							var _float = _v1.a;
							var newColumn = s0.col + (offsetAfterFloat - s0.offset);
							return A2(
								$stil4m$elm_syntax$ParserFast$Good,
								A2(
									rangeAndFloatToRes,
									{
										end: {column: newColumn, row: s0.row},
										start: {column: s0.col, row: s0.row}
									},
									_float),
								{col: newColumn, indent: s0.indent, offset: offsetAfterFloat, row: s0.row, src: s0.src});
						} else {
							return A2(
								$stil4m$elm_syntax$ParserFast$Bad,
								false,
								A2($stil4m$elm_syntax$ParserFast$ExpectingNumber, s0.row, s0.col));
						}
					}
				}
			});
	});
var $stil4m$elm_syntax$Elm$Parser$Expression$numberExpression = A3(
	$stil4m$elm_syntax$ParserFast$floatOrIntegerDecimalOrHexadecimalMapWithRange,
	F2(
		function (range, n) {
			return {
				comments: $stil4m$elm_syntax$Rope$empty,
				syntax: A2(
					$stil4m$elm_syntax$Elm$Syntax$Node$Node,
					range,
					$stil4m$elm_syntax$Elm$Syntax$Expression$Floatable(n))
			};
		}),
	F2(
		function (range, n) {
			return {
				comments: $stil4m$elm_syntax$Rope$empty,
				syntax: A2(
					$stil4m$elm_syntax$Elm$Syntax$Node$Node,
					range,
					$stil4m$elm_syntax$Elm$Syntax$Expression$Integer(n))
			};
		}),
	F2(
		function (range, n) {
			return {
				comments: $stil4m$elm_syntax$Rope$empty,
				syntax: A2(
					$stil4m$elm_syntax$Elm$Syntax$Node$Node,
					range,
					$stil4m$elm_syntax$Elm$Syntax$Expression$Hex(n))
			};
		}));
var $stil4m$elm_syntax$Elm$Syntax$Expression$FunctionOrValue = F2(
	function (a, b) {
		return {$: 'FunctionOrValue', a: a, b: b};
	});
var $stil4m$elm_syntax$ParserFast$ifFollowedByWhileValidateWithoutLinebreak = F3(
	function (firstIsOkay, afterFirstIsOkay, resultIsOkay) {
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s) {
				var firstOffset = A3($stil4m$elm_syntax$ParserFast$isSubCharWithoutLinebreak, firstIsOkay, s.offset, s.src);
				if (_Utils_eq(firstOffset, -1)) {
					return A2(
						$stil4m$elm_syntax$ParserFast$Bad,
						false,
						A2($stil4m$elm_syntax$ParserFast$ExpectingCharSatisfyingPredicate, s.row, s.col));
				} else {
					var s1 = A6($stil4m$elm_syntax$ParserFast$skipWhileWithoutLinebreakHelp, afterFirstIsOkay, firstOffset, s.row, s.col + 1, s.src, s.indent);
					var name = A3($elm$core$String$slice, s.offset, s1.offset, s.src);
					return resultIsOkay(name) ? A2($stil4m$elm_syntax$ParserFast$Good, name, s1) : A2(
						$stil4m$elm_syntax$ParserFast$Bad,
						false,
						A2($stil4m$elm_syntax$ParserFast$ExpectingStringSatisfyingPredicate, s.row, s.col + 1));
				}
			});
	});
var $stil4m$elm_syntax$Elm$Parser$Tokens$functionName = A3($stil4m$elm_syntax$ParserFast$ifFollowedByWhileValidateWithoutLinebreak, $stil4m$elm_syntax$Char$Extra$unicodeIsLowerFast, $stil4m$elm_syntax$Char$Extra$unicodeIsAlphaNumOrUnderscoreFast, $stil4m$elm_syntax$Elm$Parser$Tokens$isNotReserved);
var $stil4m$elm_syntax$ParserFast$oneOf2Map = F4(
	function (firstToChoice, _v0, secondToChoice, _v1) {
		var attemptFirst = _v0.a;
		var attemptSecond = _v1.a;
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s) {
				var _v2 = attemptFirst(s);
				if (_v2.$ === 'Good') {
					var first = _v2.a;
					var s1 = _v2.b;
					return A2(
						$stil4m$elm_syntax$ParserFast$Good,
						firstToChoice(first),
						s1);
				} else {
					var firstCommitted = _v2.a;
					var firstX = _v2.b;
					if (firstCommitted) {
						return A2($stil4m$elm_syntax$ParserFast$Bad, firstCommitted, firstX);
					} else {
						var _v3 = attemptSecond(s);
						if (_v3.$ === 'Good') {
							var second = _v3.a;
							var s1 = _v3.b;
							return A2(
								$stil4m$elm_syntax$ParserFast$Good,
								secondToChoice(second),
								s1);
						} else {
							var secondCommitted = _v3.a;
							var secondX = _v3.b;
							return secondCommitted ? A2($stil4m$elm_syntax$ParserFast$Bad, secondCommitted, secondX) : A2(
								$stil4m$elm_syntax$ParserFast$Bad,
								false,
								A3($stil4m$elm_syntax$ParserFast$ExpectingOneOf, firstX, secondX, _List_Nil));
						}
					}
				}
			});
	});
var $stil4m$elm_syntax$ParserFast$orSucceed = F2(
	function (_v0, secondRes) {
		var attemptFirst = _v0.a;
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s) {
				var _v1 = attemptFirst(s);
				if (_v1.$ === 'Good') {
					var firstGood = _v1;
					return firstGood;
				} else {
					var firstBad = _v1;
					var firstCommitted = firstBad.a;
					return firstCommitted ? firstBad : A2($stil4m$elm_syntax$ParserFast$Good, secondRes, s);
				}
			});
	});
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$maybeDotReferenceExpressionTuple() {
	return A2(
		$stil4m$elm_syntax$ParserFast$orSucceed,
		A2(
			$stil4m$elm_syntax$ParserFast$symbolFollowedBy,
			'.',
			A4(
				$stil4m$elm_syntax$ParserFast$oneOf2Map,
				$elm$core$Maybe$Just,
				A3(
					$stil4m$elm_syntax$ParserFast$map2,
					F2(
						function (firstName, after) {
							if (after.$ === 'Nothing') {
								return _Utils_Tuple3(_List_Nil, firstName, _List_Nil);
							} else {
								var _v1 = after.a;
								var qualificationAfter = _v1.a;
								var unqualified = _v1.b;
								var recordAccess = _v1.c;
								return _Utils_Tuple3(
									A2($elm$core$List$cons, firstName, qualificationAfter),
									unqualified,
									recordAccess);
							}
						}),
					$stil4m$elm_syntax$Elm$Parser$Tokens$typeName,
					$stil4m$elm_syntax$ParserFast$lazy(
						function (_v2) {
							return $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$maybeDotReferenceExpressionTuple();
						})),
				$elm$core$Basics$identity,
				A3(
					$stil4m$elm_syntax$ParserFast$map2,
					F2(
						function (name, recordAccesses) {
							return $elm$core$Maybe$Just(
								_Utils_Tuple3(_List_Nil, name, recordAccesses));
						}),
					$stil4m$elm_syntax$Elm$Parser$Tokens$functionName,
					$stil4m$elm_syntax$Elm$Parser$Expression$multiRecordAccess))),
		$elm$core$Maybe$Nothing);
}
try {
	var $stil4m$elm_syntax$Elm$Parser$Expression$maybeDotReferenceExpressionTuple = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$maybeDotReferenceExpressionTuple();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$maybeDotReferenceExpressionTuple = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$maybeDotReferenceExpressionTuple;
	};
} catch ($) {
	throw 'Some top-level definitions from `Elm.Parser.Expression` are causing infinite recursion:\n\n  ┌─────┐\n  │    maybeDotReferenceExpressionTuple\n  └─────┘\n\nThese errors are very tricky, so read https://elm-lang.org/0.19.1/bad-recursion to learn how to fix it!';}
var $stil4m$elm_syntax$Elm$Parser$Expression$qualifiedOrVariantOrRecordConstructorReferenceExpressionFollowedByRecordAccess = A3(
	$stil4m$elm_syntax$ParserFast$map2WithRange,
	F3(
		function (range, firstName, after) {
			return {
				comments: $stil4m$elm_syntax$Rope$empty,
				syntax: function () {
					if (after.$ === 'Nothing') {
						return A2(
							$stil4m$elm_syntax$Elm$Syntax$Node$Node,
							range,
							A2($stil4m$elm_syntax$Elm$Syntax$Expression$FunctionOrValue, _List_Nil, firstName));
					} else {
						var _v1 = after.a;
						var qualificationAfter = _v1.a;
						var unqualified = _v1.b;
						var recordAccesses = _v1.c;
						if (!recordAccesses.b) {
							return A2(
								$stil4m$elm_syntax$Elm$Syntax$Node$Node,
								range,
								A2(
									$stil4m$elm_syntax$Elm$Syntax$Expression$FunctionOrValue,
									A2($elm$core$List$cons, firstName, qualificationAfter),
									unqualified));
						} else {
							var _v3 = recordAccesses.a;
							var firstRecordAccessRange = _v3.a;
							var referenceNode = A2(
								$stil4m$elm_syntax$Elm$Syntax$Node$Node,
								{
									end: {column: firstRecordAccessRange.start.column - 1, row: firstRecordAccessRange.start.row},
									start: range.start
								},
								A2(
									$stil4m$elm_syntax$Elm$Syntax$Expression$FunctionOrValue,
									A2($elm$core$List$cons, firstName, qualificationAfter),
									unqualified));
							return A3(
								$elm$core$List$foldl,
								F2(
									function (fieldNode, leftNode) {
										var fieldRange = fieldNode.a;
										var leftRange = leftNode.a;
										return A2(
											$stil4m$elm_syntax$Elm$Syntax$Node$Node,
											{end: fieldRange.end, start: leftRange.start},
											A2($stil4m$elm_syntax$Elm$Syntax$Expression$RecordAccess, leftNode, fieldNode));
									}),
								referenceNode,
								recordAccesses);
						}
					}
				}()
			};
		}),
	$stil4m$elm_syntax$Elm$Parser$Tokens$typeName,
	$stil4m$elm_syntax$Elm$Parser$Expression$maybeDotReferenceExpressionTuple);
var $stil4m$elm_syntax$Elm$Parser$Expression$unqualifiedFunctionReferenceExpressionFollowedByRecordAccess = A3(
	$stil4m$elm_syntax$ParserFast$map2,
	F2(
		function (leftestResult, recordAccesses) {
			if (!recordAccesses.b) {
				return leftestResult;
			} else {
				return {
					comments: leftestResult.comments,
					syntax: A3(
						$elm$core$List$foldl,
						F2(
							function (fieldNode, leftNode) {
								var fieldRange = fieldNode.a;
								var leftRange = leftNode.a;
								return A2(
									$stil4m$elm_syntax$Elm$Syntax$Node$Node,
									{end: fieldRange.end, start: leftRange.start},
									A2($stil4m$elm_syntax$Elm$Syntax$Expression$RecordAccess, leftNode, fieldNode));
							}),
						leftestResult.syntax,
						recordAccesses)
				};
			}
		}),
	$stil4m$elm_syntax$Elm$Parser$Tokens$functionNameMapWithRange(
		F2(
			function (range, unqualified) {
				return {
					comments: $stil4m$elm_syntax$Rope$empty,
					syntax: A2(
						$stil4m$elm_syntax$Elm$Syntax$Node$Node,
						range,
						A2($stil4m$elm_syntax$Elm$Syntax$Expression$FunctionOrValue, _List_Nil, unqualified))
				};
			})),
	$stil4m$elm_syntax$Elm$Parser$Expression$multiRecordAccess);
var $stil4m$elm_syntax$Elm$Parser$Expression$referenceOrNumberExpression = A3($stil4m$elm_syntax$ParserFast$oneOf3, $stil4m$elm_syntax$Elm$Parser$Expression$qualifiedOrVariantOrRecordConstructorReferenceExpressionFollowedByRecordAccess, $stil4m$elm_syntax$Elm$Parser$Expression$unqualifiedFunctionReferenceExpressionFollowedByRecordAccess, $stil4m$elm_syntax$Elm$Parser$Expression$numberExpression);
var $stil4m$elm_syntax$ParserFast$symbolBacktrackableFollowedBy = F2(
	function (str, _v0) {
		var parseNext = _v0.a;
		var strLength = $elm$core$String$length(str);
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s) {
				var newOffset = s.offset + strLength;
				return _Utils_eq(
					A3($elm$core$String$slice, s.offset, newOffset, s.src),
					str + '') ? parseNext(
					{col: s.col + strLength, indent: s.indent, offset: newOffset, row: s.row, src: s.src}) : A2(
					$stil4m$elm_syntax$ParserFast$Bad,
					false,
					A3($stil4m$elm_syntax$ParserFast$ExpectingSymbol, s.row, s.col, str));
			});
	});
var $stil4m$elm_syntax$ParserFast$symbolWithEndLocation = F2(
	function (str, endLocationToRes) {
		var strLength = $elm$core$String$length(str);
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s) {
				var newOffset = s.offset + strLength;
				if (_Utils_eq(
					A3($elm$core$String$slice, s.offset, newOffset, s.src),
					str + '')) {
					var newCol = s.col + strLength;
					return A2(
						$stil4m$elm_syntax$ParserFast$Good,
						endLocationToRes(
							{column: newCol, row: s.row}),
						{col: newCol, indent: s.indent, offset: newOffset, row: s.row, src: s.src});
				} else {
					return A2(
						$stil4m$elm_syntax$ParserFast$Bad,
						false,
						A3($stil4m$elm_syntax$ParserFast$ExpectingSymbol, s.row, s.col, str));
				}
			});
	});
var $stil4m$elm_syntax$Elm$Parser$Expression$temporaryErrPrecedenceTooHigh = $elm$core$Result$Err('infix operator precedence too high');
var $stil4m$elm_syntax$Elm$Parser$TypeAnnotation$FieldsAfterName = function (a) {
	return {$: 'FieldsAfterName', a: a};
};
var $stil4m$elm_syntax$Elm$Syntax$TypeAnnotation$FunctionTypeAnnotation = F2(
	function (a, b) {
		return {$: 'FunctionTypeAnnotation', a: a, b: b};
	});
var $stil4m$elm_syntax$Elm$Syntax$TypeAnnotation$GenericRecord = F2(
	function (a, b) {
		return {$: 'GenericRecord', a: a, b: b};
	});
var $stil4m$elm_syntax$Elm$Syntax$TypeAnnotation$Record = function (a) {
	return {$: 'Record', a: a};
};
var $stil4m$elm_syntax$Elm$Parser$TypeAnnotation$RecordExtensionExpressionAfterName = function (a) {
	return {$: 'RecordExtensionExpressionAfterName', a: a};
};
var $stil4m$elm_syntax$Elm$Syntax$TypeAnnotation$Tupled = function (a) {
	return {$: 'Tupled', a: a};
};
var $stil4m$elm_syntax$Elm$Syntax$TypeAnnotation$Typed = F2(
	function (a, b) {
		return {$: 'Typed', a: a, b: b};
	});
var $stil4m$elm_syntax$Elm$Syntax$TypeAnnotation$Unit = {$: 'Unit'};
var $stil4m$elm_syntax$Elm$Syntax$TypeAnnotation$GenericType = function (a) {
	return {$: 'GenericType', a: a};
};
var $stil4m$elm_syntax$Elm$Parser$TypeAnnotation$genericTypeAnnotation = $stil4m$elm_syntax$Elm$Parser$Tokens$functionNameMapWithRange(
	F2(
		function (range, _var) {
			return {
				comments: $stil4m$elm_syntax$Rope$empty,
				syntax: A2(
					$stil4m$elm_syntax$Elm$Syntax$Node$Node,
					range,
					$stil4m$elm_syntax$Elm$Syntax$TypeAnnotation$GenericType(_var))
			};
		}));
var $stil4m$elm_syntax$ParserFast$map3WithRange = F4(
	function (func, _v0, _v1, _v2) {
		var parseA = _v0.a;
		var parseB = _v1.a;
		var parseC = _v2.a;
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s0) {
				var _v3 = parseA(s0);
				if (_v3.$ === 'Bad') {
					var committed = _v3.a;
					var x = _v3.b;
					return A2($stil4m$elm_syntax$ParserFast$Bad, committed, x);
				} else {
					var a = _v3.a;
					var s1 = _v3.b;
					var _v4 = parseB(s1);
					if (_v4.$ === 'Bad') {
						var x = _v4.b;
						return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
					} else {
						var b = _v4.a;
						var s2 = _v4.b;
						var _v5 = parseC(s2);
						if (_v5.$ === 'Bad') {
							var x = _v5.b;
							return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
						} else {
							var c = _v5.a;
							var s3 = _v5.b;
							return A2(
								$stil4m$elm_syntax$ParserFast$Good,
								A4(
									func,
									{
										end: {column: s3.col, row: s3.row},
										start: {column: s0.col, row: s0.row}
									},
									a,
									b,
									c),
								s3);
						}
					}
				}
			});
	});
var $stil4m$elm_syntax$ParserFast$map6WithRange = F7(
	function (func, _v0, _v1, _v2, _v3, _v4, _v5) {
		var parseA = _v0.a;
		var parseB = _v1.a;
		var parseC = _v2.a;
		var parseD = _v3.a;
		var parseE = _v4.a;
		var parseF = _v5.a;
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s0) {
				var _v6 = parseA(s0);
				if (_v6.$ === 'Bad') {
					var committed = _v6.a;
					var x = _v6.b;
					return A2($stil4m$elm_syntax$ParserFast$Bad, committed, x);
				} else {
					var a = _v6.a;
					var s1 = _v6.b;
					var _v7 = parseB(s1);
					if (_v7.$ === 'Bad') {
						var x = _v7.b;
						return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
					} else {
						var b = _v7.a;
						var s2 = _v7.b;
						var _v8 = parseC(s2);
						if (_v8.$ === 'Bad') {
							var x = _v8.b;
							return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
						} else {
							var c = _v8.a;
							var s3 = _v8.b;
							var _v9 = parseD(s3);
							if (_v9.$ === 'Bad') {
								var x = _v9.b;
								return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
							} else {
								var d = _v9.a;
								var s4 = _v9.b;
								var _v10 = parseE(s4);
								if (_v10.$ === 'Bad') {
									var x = _v10.b;
									return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
								} else {
									var e = _v10.a;
									var s5 = _v10.b;
									var _v11 = parseF(s5);
									if (_v11.$ === 'Bad') {
										var x = _v11.b;
										return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
									} else {
										var f = _v11.a;
										var s6 = _v11.b;
										return A2(
											$stil4m$elm_syntax$ParserFast$Good,
											A7(
												func,
												{
													end: {column: s6.col, row: s6.row},
													start: {column: s0.col, row: s0.row}
												},
												a,
												b,
												c,
												d,
												e,
												f),
											s6);
									}
								}
							}
						}
					}
				}
			});
	});
function $stil4m$elm_syntax$Elm$Parser$TypeAnnotation$cyclic$maybeDotTypeNamesTuple() {
	return A4(
		$stil4m$elm_syntax$ParserFast$map2OrSucceed,
		F2(
			function (firstName, afterFirstName) {
				if (afterFirstName.$ === 'Nothing') {
					return $elm$core$Maybe$Just(
						_Utils_Tuple2(_List_Nil, firstName));
				} else {
					var _v1 = afterFirstName.a;
					var qualificationAfter = _v1.a;
					var unqualified = _v1.b;
					return $elm$core$Maybe$Just(
						_Utils_Tuple2(
							A2($elm$core$List$cons, firstName, qualificationAfter),
							unqualified));
				}
			}),
		A2($stil4m$elm_syntax$ParserFast$symbolFollowedBy, '.', $stil4m$elm_syntax$Elm$Parser$Tokens$typeName),
		$stil4m$elm_syntax$ParserFast$lazy(
			function (_v2) {
				return $stil4m$elm_syntax$Elm$Parser$TypeAnnotation$cyclic$maybeDotTypeNamesTuple();
			}),
		$elm$core$Maybe$Nothing);
}
try {
	var $stil4m$elm_syntax$Elm$Parser$TypeAnnotation$maybeDotTypeNamesTuple = $stil4m$elm_syntax$Elm$Parser$TypeAnnotation$cyclic$maybeDotTypeNamesTuple();
	$stil4m$elm_syntax$Elm$Parser$TypeAnnotation$cyclic$maybeDotTypeNamesTuple = function () {
		return $stil4m$elm_syntax$Elm$Parser$TypeAnnotation$maybeDotTypeNamesTuple;
	};
} catch ($) {
	throw 'Some top-level definitions from `Elm.Parser.TypeAnnotation` are causing infinite recursion:\n\n  ┌─────┐\n  │    maybeDotTypeNamesTuple\n  └─────┘\n\nThese errors are very tricky, so read https://elm-lang.org/0.19.1/bad-recursion to learn how to fix it!';}
var $stil4m$elm_syntax$ParserFast$oneOf4 = F4(
	function (_v0, _v1, _v2, _v3) {
		var attemptFirst = _v0.a;
		var attemptSecond = _v1.a;
		var attemptThird = _v2.a;
		var attemptFourth = _v3.a;
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s) {
				var _v4 = attemptFirst(s);
				if (_v4.$ === 'Good') {
					var firstGood = _v4;
					return firstGood;
				} else {
					var firstBad = _v4;
					var firstCommitted = firstBad.a;
					var firstX = firstBad.b;
					if (firstCommitted) {
						return firstBad;
					} else {
						var _v5 = attemptSecond(s);
						if (_v5.$ === 'Good') {
							var secondGood = _v5;
							return secondGood;
						} else {
							var secondBad = _v5;
							var secondCommitted = secondBad.a;
							var secondX = secondBad.b;
							if (secondCommitted) {
								return secondBad;
							} else {
								var _v6 = attemptThird(s);
								if (_v6.$ === 'Good') {
									var thirdGood = _v6;
									return thirdGood;
								} else {
									var thirdBad = _v6;
									var thirdCommitted = thirdBad.a;
									var thirdX = thirdBad.b;
									if (thirdCommitted) {
										return thirdBad;
									} else {
										var _v7 = attemptFourth(s);
										if (_v7.$ === 'Good') {
											var fourthGood = _v7;
											return fourthGood;
										} else {
											var fourthBad = _v7;
											var fourthCommitted = fourthBad.a;
											var fourthX = fourthBad.b;
											return fourthCommitted ? fourthBad : A2(
												$stil4m$elm_syntax$ParserFast$Bad,
												false,
												A3(
													$stil4m$elm_syntax$ParserFast$ExpectingOneOf,
													firstX,
													secondX,
													_List_fromArray(
														[thirdX, fourthX])));
										}
									}
								}
							}
						}
					}
				}
			});
	});
var $stil4m$elm_syntax$Elm$Parser$TypeAnnotation$typeAnnotationRecordEmpty = $stil4m$elm_syntax$Elm$Syntax$TypeAnnotation$Record(_List_Nil);
var $stil4m$elm_syntax$Elm$Parser$TypeAnnotation$typedTypeAnnotationWithoutArguments = A3(
	$stil4m$elm_syntax$ParserFast$map2WithRange,
	F3(
		function (range, startName, afterStartName) {
			var name = function () {
				if (afterStartName.$ === 'Nothing') {
					return _Utils_Tuple2(_List_Nil, startName);
				} else {
					var _v1 = afterStartName.a;
					var qualificationAfterStartName = _v1.a;
					var unqualified = _v1.b;
					return _Utils_Tuple2(
						A2($elm$core$List$cons, startName, qualificationAfterStartName),
						unqualified);
				}
			}();
			return {
				comments: $stil4m$elm_syntax$Rope$empty,
				syntax: A2(
					$stil4m$elm_syntax$Elm$Syntax$Node$Node,
					range,
					A2(
						$stil4m$elm_syntax$Elm$Syntax$TypeAnnotation$Typed,
						A2($stil4m$elm_syntax$Elm$Syntax$Node$Node, range, name),
						_List_Nil))
			};
		}),
	$stil4m$elm_syntax$Elm$Parser$Tokens$typeName,
	$stil4m$elm_syntax$Elm$Parser$TypeAnnotation$maybeDotTypeNamesTuple);
function $stil4m$elm_syntax$Elm$Parser$TypeAnnotation$cyclic$typeAnnotationNoFnIncludingTypedWithArguments() {
	return A4(
		$stil4m$elm_syntax$ParserFast$oneOf4,
		$stil4m$elm_syntax$Elm$Parser$TypeAnnotation$cyclic$parensTypeAnnotation(),
		$stil4m$elm_syntax$Elm$Parser$TypeAnnotation$cyclic$typedTypeAnnotationWithArgumentsOptimisticLayout(),
		$stil4m$elm_syntax$Elm$Parser$TypeAnnotation$genericTypeAnnotation,
		$stil4m$elm_syntax$Elm$Parser$TypeAnnotation$cyclic$recordTypeAnnotation());
}
function $stil4m$elm_syntax$Elm$Parser$TypeAnnotation$cyclic$typedTypeAnnotationWithArgumentsOptimisticLayout() {
	return A4(
		$stil4m$elm_syntax$ParserFast$map3,
		F3(
			function (nameNode, commentsAfterName, argsReverse) {
				var nameRange = nameNode.a;
				var range = function () {
					var _v8 = argsReverse.syntax;
					if (!_v8.b) {
						return nameRange;
					} else {
						var _v9 = _v8.a;
						var lastArgRange = _v9.a;
						return {end: lastArgRange.end, start: nameRange.start};
					}
				}();
				return {
					comments: A2($stil4m$elm_syntax$Rope$prependTo, argsReverse.comments, commentsAfterName),
					syntax: A2(
						$stil4m$elm_syntax$Elm$Syntax$Node$Node,
						range,
						A2(
							$stil4m$elm_syntax$Elm$Syntax$TypeAnnotation$Typed,
							nameNode,
							$elm$core$List$reverse(argsReverse.syntax)))
				};
			}),
		A3(
			$stil4m$elm_syntax$ParserFast$map2WithRange,
			F3(
				function (range, startName, afterStartName) {
					var name = function () {
						if (afterStartName.$ === 'Nothing') {
							return _Utils_Tuple2(_List_Nil, startName);
						} else {
							var _v11 = afterStartName.a;
							var qualificationAfterStartName = _v11.a;
							var unqualified = _v11.b;
							return _Utils_Tuple2(
								A2($elm$core$List$cons, startName, qualificationAfterStartName),
								unqualified);
						}
					}();
					return A2($stil4m$elm_syntax$Elm$Syntax$Node$Node, range, name);
				}),
			$stil4m$elm_syntax$Elm$Parser$Tokens$typeName,
			$stil4m$elm_syntax$Elm$Parser$TypeAnnotation$maybeDotTypeNamesTuple),
		$stil4m$elm_syntax$Elm$Parser$Layout$optimisticLayout,
		$stil4m$elm_syntax$ParserWithComments$manyWithoutReverse(
			$stil4m$elm_syntax$Elm$Parser$Layout$positivelyIndentedFollowedBy(
				A3(
					$stil4m$elm_syntax$ParserFast$map2,
					F2(
						function (typeAnnotationResult, commentsAfter) {
							return {
								comments: A2($stil4m$elm_syntax$Rope$prependTo, commentsAfter, typeAnnotationResult.comments),
								syntax: typeAnnotationResult.syntax
							};
						}),
					$stil4m$elm_syntax$Elm$Parser$TypeAnnotation$cyclic$typeAnnotationNoFnExcludingTypedWithArguments(),
					$stil4m$elm_syntax$Elm$Parser$Layout$optimisticLayout))));
}
function $stil4m$elm_syntax$Elm$Parser$TypeAnnotation$cyclic$typeAnnotationNoFnExcludingTypedWithArguments() {
	return A4(
		$stil4m$elm_syntax$ParserFast$oneOf4,
		$stil4m$elm_syntax$Elm$Parser$TypeAnnotation$cyclic$parensTypeAnnotation(),
		$stil4m$elm_syntax$Elm$Parser$TypeAnnotation$typedTypeAnnotationWithoutArguments,
		$stil4m$elm_syntax$Elm$Parser$TypeAnnotation$genericTypeAnnotation,
		$stil4m$elm_syntax$Elm$Parser$TypeAnnotation$cyclic$recordTypeAnnotation());
}
function $stil4m$elm_syntax$Elm$Parser$TypeAnnotation$cyclic$parensTypeAnnotation() {
	return A2(
		$stil4m$elm_syntax$ParserFast$symbolFollowedBy,
		'(',
		A2(
			$stil4m$elm_syntax$ParserFast$oneOf2,
			A2(
				$stil4m$elm_syntax$ParserFast$symbolWithEndLocation,
				')',
				function (end) {
					return {
						comments: $stil4m$elm_syntax$Rope$empty,
						syntax: A2(
							$stil4m$elm_syntax$Elm$Syntax$Node$Node,
							{
								end: end,
								start: {column: end.column - 2, row: end.row}
							},
							$stil4m$elm_syntax$Elm$Syntax$TypeAnnotation$Unit)
					};
				}),
			A5(
				$stil4m$elm_syntax$ParserFast$map4WithRange,
				F5(
					function (rangeAfterOpeningParens, commentsBeforeFirstPart, firstPart, commentsAfterFirstPart, lastToSecondPart) {
						return {
							comments: A2(
								$stil4m$elm_syntax$Rope$prependTo,
								lastToSecondPart.comments,
								A2(
									$stil4m$elm_syntax$Rope$prependTo,
									commentsAfterFirstPart,
									A2($stil4m$elm_syntax$Rope$prependTo, firstPart.comments, commentsBeforeFirstPart))),
							syntax: A2(
								$stil4m$elm_syntax$Elm$Syntax$Node$Node,
								{
									end: rangeAfterOpeningParens.end,
									start: {column: rangeAfterOpeningParens.start.column - 1, row: rangeAfterOpeningParens.start.row}
								},
								function () {
									var _v5 = lastToSecondPart.syntax;
									if (_v5.$ === 'Nothing') {
										var _v6 = firstPart.syntax;
										var firstPartType = _v6.b;
										return firstPartType;
									} else {
										var firstAndMaybeThirdPart = _v5.a;
										var _v7 = firstAndMaybeThirdPart.maybeThirdPart;
										if (_v7.$ === 'Nothing') {
											return $stil4m$elm_syntax$Elm$Syntax$TypeAnnotation$Tupled(
												_List_fromArray(
													[firstPart.syntax, firstAndMaybeThirdPart.secondPart]));
										} else {
											var thirdPart = _v7.a;
											return $stil4m$elm_syntax$Elm$Syntax$TypeAnnotation$Tupled(
												_List_fromArray(
													[firstPart.syntax, firstAndMaybeThirdPart.secondPart, thirdPart]));
										}
									}
								}())
						};
					}),
				$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
				$stil4m$elm_syntax$Elm$Parser$TypeAnnotation$cyclic$typeAnnotation(),
				$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
				A2(
					$stil4m$elm_syntax$ParserFast$oneOf2,
					A2(
						$stil4m$elm_syntax$ParserFast$symbol,
						')',
						{comments: $stil4m$elm_syntax$Rope$empty, syntax: $elm$core$Maybe$Nothing}),
					A2(
						$stil4m$elm_syntax$ParserFast$symbolFollowedBy,
						',',
						A5(
							$stil4m$elm_syntax$ParserFast$map4,
							F4(
								function (commentsBefore, secondPartResult, commentsAfter, maybeThirdPartResult) {
									return {
										comments: A2(
											$stil4m$elm_syntax$Rope$prependTo,
											commentsAfter,
											A2($stil4m$elm_syntax$Rope$prependTo, secondPartResult.comments, commentsBefore)),
										syntax: $elm$core$Maybe$Just(
											{maybeThirdPart: maybeThirdPartResult.syntax, secondPart: secondPartResult.syntax})
									};
								}),
							$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
							$stil4m$elm_syntax$Elm$Parser$TypeAnnotation$cyclic$typeAnnotation(),
							$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
							A2(
								$stil4m$elm_syntax$ParserFast$oneOf2,
								A2(
									$stil4m$elm_syntax$ParserFast$symbol,
									')',
									{comments: $stil4m$elm_syntax$Rope$empty, syntax: $elm$core$Maybe$Nothing}),
								A2(
									$stil4m$elm_syntax$ParserFast$symbolFollowedBy,
									',',
									A2(
										$stil4m$elm_syntax$ParserFast$followedBySymbol,
										')',
										A4(
											$stil4m$elm_syntax$ParserFast$map3,
											F3(
												function (commentsBefore, thirdPartResult, commentsAfter) {
													return {
														comments: A2(
															$stil4m$elm_syntax$Rope$prependTo,
															commentsAfter,
															A2($stil4m$elm_syntax$Rope$prependTo, thirdPartResult.comments, commentsBefore)),
														syntax: $elm$core$Maybe$Just(thirdPartResult.syntax)
													};
												}),
											$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
											$stil4m$elm_syntax$Elm$Parser$TypeAnnotation$cyclic$typeAnnotation(),
											$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout))))))))));
}
function $stil4m$elm_syntax$Elm$Parser$TypeAnnotation$cyclic$recordTypeAnnotation() {
	return A3(
		$stil4m$elm_syntax$ParserFast$map2WithRange,
		F3(
			function (range, commentsBefore, afterCurly) {
				return {
					comments: A2($stil4m$elm_syntax$Rope$prependTo, afterCurly.comments, commentsBefore),
					syntax: function () {
						var _v3 = afterCurly.syntax;
						if (_v3.$ === 'Nothing') {
							return A2($stil4m$elm_syntax$Elm$Syntax$Node$Node, range, $stil4m$elm_syntax$Elm$Parser$TypeAnnotation$typeAnnotationRecordEmpty);
						} else {
							var afterCurlyResult = _v3.a;
							return A2($stil4m$elm_syntax$Elm$Syntax$Node$Node, range, afterCurlyResult);
						}
					}()
				};
			}),
		A2($stil4m$elm_syntax$ParserFast$symbolFollowedBy, '{', $stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout),
		A2(
			$stil4m$elm_syntax$ParserFast$oneOf2,
			A2(
				$stil4m$elm_syntax$ParserFast$followedBySymbol,
				'}',
				A4(
					$stil4m$elm_syntax$ParserFast$map3,
					F3(
						function (firstNameNode, commentsAfterFirstName, afterFirstName) {
							return {
								comments: A2($stil4m$elm_syntax$Rope$prependTo, afterFirstName.comments, commentsAfterFirstName),
								syntax: $elm$core$Maybe$Just(
									function () {
										var _v4 = afterFirstName.syntax;
										if (_v4.$ === 'RecordExtensionExpressionAfterName') {
											var fields = _v4.a;
											return A2($stil4m$elm_syntax$Elm$Syntax$TypeAnnotation$GenericRecord, firstNameNode, fields);
										} else {
											var fieldsAfterName = _v4.a;
											return $stil4m$elm_syntax$Elm$Syntax$TypeAnnotation$Record(
												A2(
													$elm$core$List$cons,
													A3($stil4m$elm_syntax$Elm$Syntax$Node$combine, $elm$core$Tuple$pair, firstNameNode, fieldsAfterName.firstFieldValue),
													fieldsAfterName.tailFields));
										}
									}())
							};
						}),
					$stil4m$elm_syntax$Elm$Parser$Tokens$functionNameNode,
					$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
					A2(
						$stil4m$elm_syntax$ParserFast$oneOf2,
						A2(
							$stil4m$elm_syntax$ParserFast$symbolFollowedBy,
							'|',
							A4(
								$stil4m$elm_syntax$ParserFast$map3WithRange,
								F4(
									function (range, commentsBefore, head, tail) {
										return {
											comments: A2(
												$stil4m$elm_syntax$Rope$prependTo,
												tail.comments,
												A2($stil4m$elm_syntax$Rope$prependTo, head.comments, commentsBefore)),
											syntax: $stil4m$elm_syntax$Elm$Parser$TypeAnnotation$RecordExtensionExpressionAfterName(
												A2(
													$stil4m$elm_syntax$Elm$Syntax$Node$Node,
													range,
													A2($elm$core$List$cons, head.syntax, tail.syntax)))
										};
									}),
								$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
								$stil4m$elm_syntax$Elm$Parser$TypeAnnotation$cyclic$recordFieldDefinition(),
								$stil4m$elm_syntax$ParserWithComments$many(
									A2(
										$stil4m$elm_syntax$ParserFast$symbolFollowedBy,
										',',
										A3(
											$stil4m$elm_syntax$ParserFast$map2,
											F2(
												function (commentsBefore, field) {
													return {
														comments: A2($stil4m$elm_syntax$Rope$prependTo, field.comments, commentsBefore),
														syntax: field.syntax
													};
												}),
											$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
											$stil4m$elm_syntax$Elm$Parser$TypeAnnotation$cyclic$recordFieldDefinition()))))),
						A2(
							$stil4m$elm_syntax$ParserFast$symbolFollowedBy,
							':',
							A5(
								$stil4m$elm_syntax$ParserFast$map4,
								F4(
									function (commentsBeforeFirstFieldValue, firstFieldValue, commentsAfterFirstFieldValue, tailFields) {
										return {
											comments: A2(
												$stil4m$elm_syntax$Rope$prependTo,
												tailFields.comments,
												A2(
													$stil4m$elm_syntax$Rope$prependTo,
													commentsAfterFirstFieldValue,
													A2($stil4m$elm_syntax$Rope$prependTo, firstFieldValue.comments, commentsBeforeFirstFieldValue))),
											syntax: $stil4m$elm_syntax$Elm$Parser$TypeAnnotation$FieldsAfterName(
												{firstFieldValue: firstFieldValue.syntax, tailFields: tailFields.syntax})
										};
									}),
								$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
								$stil4m$elm_syntax$Elm$Parser$TypeAnnotation$cyclic$typeAnnotation(),
								$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
								A2(
									$stil4m$elm_syntax$ParserFast$orSucceed,
									A2(
										$stil4m$elm_syntax$ParserFast$symbolFollowedBy,
										',',
										$stil4m$elm_syntax$Elm$Parser$TypeAnnotation$cyclic$recordFieldsTypeAnnotation()),
									{comments: $stil4m$elm_syntax$Rope$empty, syntax: _List_Nil})))))),
			A2(
				$stil4m$elm_syntax$ParserFast$symbol,
				'}',
				{comments: $stil4m$elm_syntax$Rope$empty, syntax: $elm$core$Maybe$Nothing})));
}
function $stil4m$elm_syntax$Elm$Parser$TypeAnnotation$cyclic$recordFieldsTypeAnnotation() {
	return A4(
		$stil4m$elm_syntax$ParserFast$map3,
		F3(
			function (commentsBefore, head, tail) {
				return {
					comments: A2(
						$stil4m$elm_syntax$Rope$prependTo,
						tail.comments,
						A2($stil4m$elm_syntax$Rope$prependTo, head.comments, commentsBefore)),
					syntax: A2($elm$core$List$cons, head.syntax, tail.syntax)
				};
			}),
		$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
		$stil4m$elm_syntax$Elm$Parser$TypeAnnotation$cyclic$recordFieldDefinition(),
		$stil4m$elm_syntax$ParserWithComments$many(
			A2(
				$stil4m$elm_syntax$ParserFast$symbolFollowedBy,
				',',
				A3(
					$stil4m$elm_syntax$ParserFast$map2,
					F2(
						function (commentsBefore, field) {
							return {
								comments: A2($stil4m$elm_syntax$Rope$prependTo, field.comments, commentsBefore),
								syntax: field.syntax
							};
						}),
					$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
					$stil4m$elm_syntax$Elm$Parser$TypeAnnotation$cyclic$recordFieldDefinition()))));
}
function $stil4m$elm_syntax$Elm$Parser$TypeAnnotation$cyclic$recordFieldDefinition() {
	return A7(
		$stil4m$elm_syntax$ParserFast$map6WithRange,
		F7(
			function (range, commentsBeforeFunctionName, name, commentsAfterFunctionName, commentsAfterColon, value, commentsAfterValue) {
				return {
					comments: A2(
						$stil4m$elm_syntax$Rope$prependTo,
						commentsAfterValue,
						A2(
							$stil4m$elm_syntax$Rope$prependTo,
							value.comments,
							A2(
								$stil4m$elm_syntax$Rope$prependTo,
								commentsAfterColon,
								A2($stil4m$elm_syntax$Rope$prependTo, commentsAfterFunctionName, commentsBeforeFunctionName)))),
					syntax: A2(
						$stil4m$elm_syntax$Elm$Syntax$Node$Node,
						range,
						_Utils_Tuple2(name, value.syntax))
				};
			}),
		$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
		$stil4m$elm_syntax$Elm$Parser$Tokens$functionNameNode,
		$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
		A2($stil4m$elm_syntax$ParserFast$symbolFollowedBy, ':', $stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout),
		$stil4m$elm_syntax$Elm$Parser$TypeAnnotation$cyclic$typeAnnotation(),
		$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout);
}
function $stil4m$elm_syntax$Elm$Parser$TypeAnnotation$cyclic$typeAnnotation() {
	return A4(
		$stil4m$elm_syntax$ParserFast$map3,
		F3(
			function (inType, commentsAfterIn, maybeOut) {
				return {
					comments: A2(
						$stil4m$elm_syntax$Rope$prependTo,
						maybeOut.comments,
						A2($stil4m$elm_syntax$Rope$prependTo, commentsAfterIn, inType.comments)),
					syntax: function () {
						var _v0 = maybeOut.syntax;
						if (_v0.$ === 'Nothing') {
							return inType.syntax;
						} else {
							var out = _v0.a;
							return A3($stil4m$elm_syntax$Elm$Syntax$Node$combine, $stil4m$elm_syntax$Elm$Syntax$TypeAnnotation$FunctionTypeAnnotation, inType.syntax, out);
						}
					}()
				};
			}),
		$stil4m$elm_syntax$ParserFast$lazy(
			function (_v1) {
				return $stil4m$elm_syntax$Elm$Parser$TypeAnnotation$cyclic$typeAnnotationNoFnIncludingTypedWithArguments();
			}),
		$stil4m$elm_syntax$Elm$Parser$Layout$optimisticLayout,
		A4(
			$stil4m$elm_syntax$ParserFast$map2OrSucceed,
			F2(
				function (commentsAfterArrow, typeAnnotationResult) {
					return {
						comments: A2($stil4m$elm_syntax$Rope$prependTo, typeAnnotationResult.comments, commentsAfterArrow),
						syntax: $elm$core$Maybe$Just(typeAnnotationResult.syntax)
					};
				}),
			A2(
				$stil4m$elm_syntax$ParserFast$symbolFollowedBy,
				'->',
				A2($stil4m$elm_syntax$Elm$Parser$Layout$positivelyIndentedPlusFollowedBy, 2, $stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout)),
			$stil4m$elm_syntax$ParserFast$lazy(
				function (_v2) {
					return $stil4m$elm_syntax$Elm$Parser$TypeAnnotation$cyclic$typeAnnotation();
				}),
			{comments: $stil4m$elm_syntax$Rope$empty, syntax: $elm$core$Maybe$Nothing}));
}
try {
	var $stil4m$elm_syntax$Elm$Parser$TypeAnnotation$typeAnnotationNoFnIncludingTypedWithArguments = $stil4m$elm_syntax$Elm$Parser$TypeAnnotation$cyclic$typeAnnotationNoFnIncludingTypedWithArguments();
	$stil4m$elm_syntax$Elm$Parser$TypeAnnotation$cyclic$typeAnnotationNoFnIncludingTypedWithArguments = function () {
		return $stil4m$elm_syntax$Elm$Parser$TypeAnnotation$typeAnnotationNoFnIncludingTypedWithArguments;
	};
	var $stil4m$elm_syntax$Elm$Parser$TypeAnnotation$typedTypeAnnotationWithArgumentsOptimisticLayout = $stil4m$elm_syntax$Elm$Parser$TypeAnnotation$cyclic$typedTypeAnnotationWithArgumentsOptimisticLayout();
	$stil4m$elm_syntax$Elm$Parser$TypeAnnotation$cyclic$typedTypeAnnotationWithArgumentsOptimisticLayout = function () {
		return $stil4m$elm_syntax$Elm$Parser$TypeAnnotation$typedTypeAnnotationWithArgumentsOptimisticLayout;
	};
	var $stil4m$elm_syntax$Elm$Parser$TypeAnnotation$typeAnnotationNoFnExcludingTypedWithArguments = $stil4m$elm_syntax$Elm$Parser$TypeAnnotation$cyclic$typeAnnotationNoFnExcludingTypedWithArguments();
	$stil4m$elm_syntax$Elm$Parser$TypeAnnotation$cyclic$typeAnnotationNoFnExcludingTypedWithArguments = function () {
		return $stil4m$elm_syntax$Elm$Parser$TypeAnnotation$typeAnnotationNoFnExcludingTypedWithArguments;
	};
	var $stil4m$elm_syntax$Elm$Parser$TypeAnnotation$parensTypeAnnotation = $stil4m$elm_syntax$Elm$Parser$TypeAnnotation$cyclic$parensTypeAnnotation();
	$stil4m$elm_syntax$Elm$Parser$TypeAnnotation$cyclic$parensTypeAnnotation = function () {
		return $stil4m$elm_syntax$Elm$Parser$TypeAnnotation$parensTypeAnnotation;
	};
	var $stil4m$elm_syntax$Elm$Parser$TypeAnnotation$recordTypeAnnotation = $stil4m$elm_syntax$Elm$Parser$TypeAnnotation$cyclic$recordTypeAnnotation();
	$stil4m$elm_syntax$Elm$Parser$TypeAnnotation$cyclic$recordTypeAnnotation = function () {
		return $stil4m$elm_syntax$Elm$Parser$TypeAnnotation$recordTypeAnnotation;
	};
	var $stil4m$elm_syntax$Elm$Parser$TypeAnnotation$recordFieldsTypeAnnotation = $stil4m$elm_syntax$Elm$Parser$TypeAnnotation$cyclic$recordFieldsTypeAnnotation();
	$stil4m$elm_syntax$Elm$Parser$TypeAnnotation$cyclic$recordFieldsTypeAnnotation = function () {
		return $stil4m$elm_syntax$Elm$Parser$TypeAnnotation$recordFieldsTypeAnnotation;
	};
	var $stil4m$elm_syntax$Elm$Parser$TypeAnnotation$recordFieldDefinition = $stil4m$elm_syntax$Elm$Parser$TypeAnnotation$cyclic$recordFieldDefinition();
	$stil4m$elm_syntax$Elm$Parser$TypeAnnotation$cyclic$recordFieldDefinition = function () {
		return $stil4m$elm_syntax$Elm$Parser$TypeAnnotation$recordFieldDefinition;
	};
	var $stil4m$elm_syntax$Elm$Parser$TypeAnnotation$typeAnnotation = $stil4m$elm_syntax$Elm$Parser$TypeAnnotation$cyclic$typeAnnotation();
	$stil4m$elm_syntax$Elm$Parser$TypeAnnotation$cyclic$typeAnnotation = function () {
		return $stil4m$elm_syntax$Elm$Parser$TypeAnnotation$typeAnnotation;
	};
} catch ($) {
	throw 'Some top-level definitions from `Elm.Parser.TypeAnnotation` are causing infinite recursion:\n\n  ┌─────┐\n  │    typeAnnotationNoFnIncludingTypedWithArguments\n  │     ↓\n  │    typedTypeAnnotationWithArgumentsOptimisticLayout\n  │     ↓\n  │    typeAnnotationNoFnExcludingTypedWithArguments\n  │     ↓\n  │    parensTypeAnnotation\n  │     ↓\n  │    recordTypeAnnotation\n  │     ↓\n  │    recordFieldsTypeAnnotation\n  │     ↓\n  │    recordFieldDefinition\n  │     ↓\n  │    typeAnnotation\n  └─────┘\n\nThese errors are very tricky, so read https://elm-lang.org/0.19.1/bad-recursion to learn how to fix it!';}
var $stil4m$elm_syntax$ParserFast$validate = F3(
	function (isOkay, problemOnNotOkay, _v0) {
		var parseA = _v0.a;
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s0) {
				var _v1 = parseA(s0);
				if (_v1.$ === 'Bad') {
					var committed = _v1.a;
					var x = _v1.b;
					return A2($stil4m$elm_syntax$ParserFast$Bad, committed, x);
				} else {
					var good = _v1;
					var a = good.a;
					var s1 = good.b;
					return isOkay(a) ? good : A2(
						$stil4m$elm_syntax$ParserFast$Bad,
						true,
						A3($stil4m$elm_syntax$ParserFast$ExpectingCustom, s1.row, s1.col, problemOnNotOkay));
				}
			});
	});
var $stil4m$elm_syntax$ParserFast$whileWithoutLinebreakAnd2PartUtf16ToResultAndThen = F3(
	function (whileCharIsOkay, consumedStringToIntermediateOrErr, intermediateToFollowupParser) {
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s0) {
				var s1Offset = A3($stil4m$elm_syntax$ParserFast$skipWhileWithoutLinebreakAnd2PartUtf16Help, whileCharIsOkay, s0.offset, s0.src);
				var whileContent = A3($elm$core$String$slice, s0.offset, s1Offset, s0.src);
				var _v0 = consumedStringToIntermediateOrErr(whileContent);
				if (_v0.$ === 'Err') {
					var problemMessage = _v0.a;
					return A2(
						$stil4m$elm_syntax$ParserFast$Bad,
						false,
						A3($stil4m$elm_syntax$ParserFast$ExpectingCustom, s0.row, s0.col, problemMessage));
				} else {
					var intermediate = _v0.a;
					var s1Column = s0.col + (s1Offset - s0.offset);
					var _v1 = intermediateToFollowupParser(intermediate);
					var parseFollowup = _v1.a;
					return $stil4m$elm_syntax$ParserFast$pStepCommit(
						parseFollowup(
							{col: s1Column, indent: s0.indent, offset: s1Offset, row: s0.row, src: s0.src}));
				}
			});
	});
var $stil4m$elm_syntax$ParserFast$changeIndent = F2(
	function (newIndent, s) {
		return {col: s.col, indent: newIndent, offset: s.offset, row: s.row, src: s.src};
	});
var $stil4m$elm_syntax$ParserFast$withIndentSetToColumn = function (_v0) {
	var parse = _v0.a;
	return $stil4m$elm_syntax$ParserFast$Parser(
		function (s0) {
			var _v1 = parse(
				A2($stil4m$elm_syntax$ParserFast$changeIndent, s0.col, s0));
			if (_v1.$ === 'Good') {
				var a = _v1.a;
				var s1 = _v1.b;
				return A2(
					$stil4m$elm_syntax$ParserFast$Good,
					a,
					A2($stil4m$elm_syntax$ParserFast$changeIndent, s0.indent, s1));
			} else {
				var bad = _v1;
				return bad;
			}
		});
};
var $stil4m$elm_syntax$ParserFast$withIndentSetToColumnMinus = F2(
	function (columnToMoveIndentationBaseBackBy, _v0) {
		var parse = _v0.a;
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s0) {
				var _v1 = parse(
					A2($stil4m$elm_syntax$ParserFast$changeIndent, s0.col - columnToMoveIndentationBaseBackBy, s0));
				if (_v1.$ === 'Good') {
					var a = _v1.a;
					var s1 = _v1.b;
					return A2(
						$stil4m$elm_syntax$ParserFast$Good,
						a,
						A2($stil4m$elm_syntax$ParserFast$changeIndent, s0.indent, s1));
				} else {
					var bad = _v1;
					return bad;
				}
			});
	});
var $stil4m$elm_syntax$Elm$Parser$Expression$extendedSubExpressionOptimisticLayout = F2(
	function (toResult, afterCommitting) {
		return A4(
			$stil4m$elm_syntax$ParserFast$loopWhileSucceedsOntoResultFromParser,
			$stil4m$elm_syntax$Elm$Parser$Layout$positivelyIndentedFollowedBy(
				A2($stil4m$elm_syntax$Elm$Parser$Expression$infixOperatorAndThen, toResult, afterCommitting)),
			$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$subExpressionMaybeAppliedOptimisticLayout(),
			F2(
				function (extensionRightResult, leftNodeWithComments) {
					return {
						comments: A2($stil4m$elm_syntax$Rope$prependTo, extensionRightResult.comments, leftNodeWithComments.comments),
						syntax: A2($stil4m$elm_syntax$Elm$Parser$Expression$applyExtensionRight, extensionRightResult.syntax, leftNodeWithComments.syntax)
					};
				}),
			$elm$core$Basics$identity);
	});
var $stil4m$elm_syntax$Elm$Parser$Expression$infixLeft = F2(
	function (leftPrecedence, symbol) {
		return {
			extensionRight: A3(
				$stil4m$elm_syntax$ParserFast$map2,
				F2(
					function (commentsBeforeFirst, first) {
						return {
							comments: A2($stil4m$elm_syntax$Rope$prependTo, first.comments, commentsBeforeFirst),
							syntax: $stil4m$elm_syntax$Elm$Parser$Expression$ExtendRightByOperation(
								{direction: $stil4m$elm_syntax$Elm$Syntax$Infix$Left, expression: first.syntax, symbol: symbol})
						};
					}),
				$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
				A2(
					$stil4m$elm_syntax$Elm$Parser$Expression$extendedSubExpressionOptimisticLayout,
					function (info) {
						return (_Utils_cmp(info.leftPrecedence, leftPrecedence) > 0) ? $elm$core$Result$Ok(info) : $stil4m$elm_syntax$Elm$Parser$Expression$temporaryErrPrecedenceTooHigh;
					},
					function ($) {
						return $.extensionRight;
					})),
			leftPrecedence: leftPrecedence,
			symbol: symbol
		};
	});
var $stil4m$elm_syntax$Elm$Parser$Expression$infixNonAssociative = F2(
	function (leftPrecedence, symbol) {
		return {
			extensionRight: A3(
				$stil4m$elm_syntax$ParserFast$map2,
				F2(
					function (commentsBefore, right) {
						return {
							comments: A2($stil4m$elm_syntax$Rope$prependTo, right.comments, commentsBefore),
							syntax: $stil4m$elm_syntax$Elm$Parser$Expression$ExtendRightByOperation(
								{direction: $stil4m$elm_syntax$Elm$Syntax$Infix$Non, expression: right.syntax, symbol: symbol})
						};
					}),
				$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
				A2(
					$stil4m$elm_syntax$Elm$Parser$Expression$extendedSubExpressionOptimisticLayout,
					function (info) {
						return (_Utils_cmp(info.leftPrecedence, leftPrecedence) > -1) ? $elm$core$Result$Ok(info) : $stil4m$elm_syntax$Elm$Parser$Expression$temporaryErrPrecedenceTooHigh;
					},
					function (info) {
						return _Utils_eq(info.leftPrecedence, leftPrecedence) ? $stil4m$elm_syntax$Elm$Parser$Expression$problemCannotMixNonAssociativeInfixOperators : info.extensionRight;
					})),
			leftPrecedence: leftPrecedence,
			symbol: symbol
		};
	});
var $stil4m$elm_syntax$Elm$Parser$Expression$infixOperatorAndThen = F2(
	function (toResult, afterCommitting) {
		return A3(
			$stil4m$elm_syntax$ParserFast$whileWithoutLinebreakAnd2PartUtf16ToResultAndThen,
			$stil4m$elm_syntax$Elm$Parser$Tokens$isOperatorSymbolChar,
			function (operator) {
				switch (operator) {
					case '|>':
						return toResult(
							$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence1ApR());
					case '++':
						return toResult(
							$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence5append());
					case '<|':
						return toResult(
							$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence1ApL());
					case '>>':
						return toResult(
							$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence9ComposeR());
					case '==':
						return toResult(
							$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence4Eq());
					case '*':
						return toResult(
							$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence7Mul());
					case '::':
						return toResult(
							$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence5Cons());
					case '+':
						return toResult(
							$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence6Add());
					case '-':
						return toResult(
							$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence6Sub());
					case '|.':
						return toResult(
							$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence6Ignore());
					case '&&':
						return toResult(
							$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence3And());
					case '|=':
						return toResult(
							$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence5Keep());
					case '<<':
						return toResult(
							$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence9ComposeL());
					case '/=':
						return toResult(
							$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence4Neq());
					case '//':
						return toResult(
							$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence7Idiv());
					case '/':
						return toResult(
							$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence7Fdiv());
					case '</>':
						return toResult(
							$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence7Slash());
					case '||':
						return toResult(
							$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence2Or());
					case '<=':
						return toResult(
							$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence4Le());
					case '>=':
						return toResult(
							$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence4Ge());
					case '>':
						return toResult(
							$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence4Gt());
					case '<?>':
						return toResult(
							$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence8QuestionMark());
					case '<':
						return toResult(
							$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence4Lt());
					case '^':
						return toResult(
							$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence8Pow());
					default:
						return $stil4m$elm_syntax$Elm$Parser$Expression$errUnknownInfixOperator;
				}
			},
			afterCommitting);
	});
var $stil4m$elm_syntax$Elm$Parser$Expression$infixRight = F2(
	function (leftPrecedence, symbol) {
		return {
			extensionRight: A3(
				$stil4m$elm_syntax$ParserFast$map2,
				F2(
					function (commentsBeforeFirst, first) {
						return {
							comments: A2($stil4m$elm_syntax$Rope$prependTo, first.comments, commentsBeforeFirst),
							syntax: $stil4m$elm_syntax$Elm$Parser$Expression$ExtendRightByOperation(
								{direction: $stil4m$elm_syntax$Elm$Syntax$Infix$Right, expression: first.syntax, symbol: symbol})
						};
					}),
				$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
				A2(
					$stil4m$elm_syntax$Elm$Parser$Expression$extendedSubExpressionOptimisticLayout,
					function (info) {
						return (_Utils_cmp(info.leftPrecedence, leftPrecedence) > -1) ? $elm$core$Result$Ok(info) : $stil4m$elm_syntax$Elm$Parser$Expression$temporaryErrPrecedenceTooHigh;
					},
					function ($) {
						return $.extensionRight;
					})),
			leftPrecedence: leftPrecedence,
			symbol: symbol
		};
	});
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$letOrUnqualifiedReferenceExpression() {
	return A2(
		$stil4m$elm_syntax$ParserFast$oneOf2,
		$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$letExpression(),
		$stil4m$elm_syntax$Elm$Parser$Expression$unqualifiedFunctionReferenceExpressionFollowedByRecordAccess);
}
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$letExpression() {
	return A2(
		$stil4m$elm_syntax$ParserFast$keywordFollowedBy,
		'let',
		A4(
			$stil4m$elm_syntax$ParserFast$map3WithStartLocation,
			F4(
				function (start, declarations, commentsAfterIn, expressionResult) {
					var _v38 = expressionResult.syntax;
					var expressionRange = _v38.a;
					return {
						comments: A2(
							$stil4m$elm_syntax$Rope$prependTo,
							expressionResult.comments,
							A2($stil4m$elm_syntax$Rope$prependTo, commentsAfterIn, declarations.comments)),
						syntax: A2(
							$stil4m$elm_syntax$Elm$Syntax$Node$Node,
							{
								end: expressionRange.end,
								start: {column: start.column - 3, row: start.row}
							},
							$stil4m$elm_syntax$Elm$Syntax$Expression$LetExpression(
								{declarations: declarations.declarations, expression: expressionResult.syntax}))
					};
				}),
			A2(
				$stil4m$elm_syntax$ParserFast$withIndentSetToColumnMinus,
				3,
				A3(
					$stil4m$elm_syntax$ParserFast$map2,
					F2(
						function (commentsAfterLet, declarations) {
							return {
								comments: A2($stil4m$elm_syntax$Rope$prependTo, declarations.comments, commentsAfterLet),
								declarations: declarations.syntax
							};
						}),
					$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
					$stil4m$elm_syntax$ParserFast$withIndentSetToColumn(
						$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$letDeclarationsIn()))),
			A2($stil4m$elm_syntax$Elm$Parser$Layout$positivelyIndentedPlusFollowedBy, 2, $stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout),
			$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$expression()));
}
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$letDeclarationsIn() {
	return $stil4m$elm_syntax$Elm$Parser$Layout$onTopIndentationFollowedBy(
		A4(
			$stil4m$elm_syntax$ParserFast$map3,
			F3(
				function (headLetResult, commentsAfter, tailLetResult) {
					return {
						comments: A2(
							$stil4m$elm_syntax$Rope$prependTo,
							tailLetResult.comments,
							A2($stil4m$elm_syntax$Rope$prependTo, commentsAfter, headLetResult.comments)),
						syntax: A2($elm$core$List$cons, headLetResult.syntax, tailLetResult.syntax)
					};
				}),
			A2(
				$stil4m$elm_syntax$ParserFast$oneOf2,
				$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$letFunction(),
				$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$letDestructuringDeclaration()),
			$stil4m$elm_syntax$Elm$Parser$Layout$optimisticLayout,
			A2(
				$stil4m$elm_syntax$ParserWithComments$until,
				$stil4m$elm_syntax$Elm$Parser$Tokens$inToken,
				$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$blockElement())));
}
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$blockElement() {
	return $stil4m$elm_syntax$Elm$Parser$Layout$onTopIndentationFollowedBy(
		A3(
			$stil4m$elm_syntax$ParserFast$map2,
			F2(
				function (letDeclarationResult, commentsAfter) {
					return {
						comments: A2($stil4m$elm_syntax$Rope$prependTo, commentsAfter, letDeclarationResult.comments),
						syntax: letDeclarationResult.syntax
					};
				}),
			A2(
				$stil4m$elm_syntax$ParserFast$oneOf2,
				$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$letFunction(),
				$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$letDestructuringDeclaration()),
			$stil4m$elm_syntax$Elm$Parser$Layout$optimisticLayout));
}
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$caseOrUnqualifiedReferenceExpression() {
	return A2(
		$stil4m$elm_syntax$ParserFast$oneOf2,
		$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$caseExpression(),
		$stil4m$elm_syntax$Elm$Parser$Expression$unqualifiedFunctionReferenceExpressionFollowedByRecordAccess);
}
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$caseExpression() {
	return A2(
		$stil4m$elm_syntax$ParserFast$keywordFollowedBy,
		'case',
		A6(
			$stil4m$elm_syntax$ParserFast$map5WithStartLocation,
			F6(
				function (start, commentsAfterCase, casedExpressionResult, commentsBeforeOf, commentsAfterOf, casesResult) {
					var _v32 = casesResult.syntax;
					var firstCase = _v32.a;
					var lastToSecondCase = _v32.b;
					return {
						comments: A2(
							$stil4m$elm_syntax$Rope$prependTo,
							casesResult.comments,
							A2(
								$stil4m$elm_syntax$Rope$prependTo,
								commentsAfterOf,
								A2(
									$stil4m$elm_syntax$Rope$prependTo,
									commentsBeforeOf,
									A2($stil4m$elm_syntax$Rope$prependTo, casedExpressionResult.comments, commentsAfterCase)))),
						syntax: A2(
							$stil4m$elm_syntax$Elm$Syntax$Node$Node,
							{
								end: function () {
									if (lastToSecondCase.b) {
										var _v34 = lastToSecondCase.a;
										var _v35 = _v34.b;
										var lastCaseExpressionRange = _v35.a;
										return lastCaseExpressionRange.end;
									} else {
										var _v36 = firstCase;
										var _v37 = _v36.b;
										var firstCaseExpressionRange = _v37.a;
										return firstCaseExpressionRange.end;
									}
								}(),
								start: {column: start.column - 4, row: start.row}
							},
							$stil4m$elm_syntax$Elm$Syntax$Expression$CaseExpression(
								{
									cases: A2(
										$elm$core$List$cons,
										firstCase,
										$elm$core$List$reverse(lastToSecondCase)),
									expression: casedExpressionResult.syntax
								}))
					};
				}),
			$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
			$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$expression(),
			$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
			A2($stil4m$elm_syntax$ParserFast$keywordFollowedBy, 'of', $stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout),
			$stil4m$elm_syntax$ParserFast$withIndentSetToColumn(
				$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$caseStatements())));
}
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$caseStatements() {
	return A6(
		$stil4m$elm_syntax$ParserFast$map5,
		F5(
			function (firstCasePatternResult, commentsAfterFirstCasePattern, commentsAfterFirstCaseArrowRight, firstCaseExpressionResult, lastToSecondCase) {
				return {
					comments: A2(
						$stil4m$elm_syntax$Rope$prependTo,
						lastToSecondCase.comments,
						A2(
							$stil4m$elm_syntax$Rope$prependTo,
							firstCaseExpressionResult.comments,
							A2(
								$stil4m$elm_syntax$Rope$prependTo,
								commentsAfterFirstCaseArrowRight,
								A2($stil4m$elm_syntax$Rope$prependTo, commentsAfterFirstCasePattern, firstCasePatternResult.comments)))),
					syntax: _Utils_Tuple2(
						_Utils_Tuple2(firstCasePatternResult.syntax, firstCaseExpressionResult.syntax),
						lastToSecondCase.syntax)
				};
			}),
		$stil4m$elm_syntax$Elm$Parser$Patterns$pattern,
		$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
		A2($stil4m$elm_syntax$ParserFast$symbolFollowedBy, '->', $stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout),
		$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$expression(),
		$stil4m$elm_syntax$ParserWithComments$manyWithoutReverse(
			$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$caseStatement()));
}
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$caseStatement() {
	return $stil4m$elm_syntax$Elm$Parser$Layout$onTopIndentationFollowedBy(
		A5(
			$stil4m$elm_syntax$ParserFast$map4,
			F4(
				function (pattern, commentsBeforeArrowRight, commentsAfterArrowRight, expr) {
					return {
						comments: A2(
							$stil4m$elm_syntax$Rope$prependTo,
							expr.comments,
							A2(
								$stil4m$elm_syntax$Rope$prependTo,
								commentsAfterArrowRight,
								A2($stil4m$elm_syntax$Rope$prependTo, commentsBeforeArrowRight, pattern.comments))),
						syntax: _Utils_Tuple2(pattern.syntax, expr.syntax)
					};
				}),
			$stil4m$elm_syntax$Elm$Parser$Patterns$pattern,
			$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
			A2($stil4m$elm_syntax$ParserFast$symbolFollowedBy, '->', $stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout),
			$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$expression()));
}
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$tupledExpressionIfNecessaryFollowedByRecordAccess() {
	return A2(
		$stil4m$elm_syntax$ParserFast$symbolFollowedBy,
		'(',
		A3(
			$stil4m$elm_syntax$ParserFast$oneOf3,
			A2(
				$stil4m$elm_syntax$ParserFast$symbolWithEndLocation,
				')',
				function (end) {
					return {
						comments: $stil4m$elm_syntax$Rope$empty,
						syntax: A2(
							$stil4m$elm_syntax$Elm$Syntax$Node$Node,
							{
								end: end,
								start: {column: end.column - 2, row: end.row}
							},
							$stil4m$elm_syntax$Elm$Syntax$Expression$UnitExpr)
					};
				}),
			$stil4m$elm_syntax$Elm$Parser$Expression$allowedPrefixOperatorFollowedByClosingParensOneOf,
			$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$tupledExpressionInnerAfterOpeningParens()));
}
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$tupledExpressionInnerAfterOpeningParens() {
	return A5(
		$stil4m$elm_syntax$ParserFast$map4WithRange,
		F5(
			function (rangeAfterOpeningParens, commentsBeforeFirstPart, firstPart, commentsAfterFirstPart, tailParts) {
				return {
					comments: A2(
						$stil4m$elm_syntax$Rope$prependTo,
						tailParts.comments,
						A2(
							$stil4m$elm_syntax$Rope$prependTo,
							commentsAfterFirstPart,
							A2($stil4m$elm_syntax$Rope$prependTo, firstPart.comments, commentsBeforeFirstPart))),
					syntax: function () {
						var _v27 = tailParts.syntax;
						if (_v27.$ === 'TupledParenthesizedFollowedByRecordAccesses') {
							var recordAccesses = _v27.a;
							if (!recordAccesses.b) {
								return A2(
									$stil4m$elm_syntax$Elm$Syntax$Node$Node,
									{
										end: rangeAfterOpeningParens.end,
										start: {column: rangeAfterOpeningParens.start.column - 1, row: rangeAfterOpeningParens.start.row}
									},
									$stil4m$elm_syntax$Elm$Syntax$Expression$ParenthesizedExpression(firstPart.syntax));
							} else {
								var _v29 = recordAccesses.a;
								var firstRecordAccessRange = _v29.a;
								var range = {
									end: {column: firstRecordAccessRange.start.column - 1, row: firstRecordAccessRange.start.row},
									start: {column: rangeAfterOpeningParens.start.column - 1, row: rangeAfterOpeningParens.start.row}
								};
								var parenthesizedNode = A2(
									$stil4m$elm_syntax$Elm$Syntax$Node$Node,
									range,
									$stil4m$elm_syntax$Elm$Syntax$Expression$ParenthesizedExpression(firstPart.syntax));
								return A3(
									$elm$core$List$foldl,
									F2(
										function (fieldNode, leftNode) {
											var fieldRange = fieldNode.a;
											var leftRange = leftNode.a;
											return A2(
												$stil4m$elm_syntax$Elm$Syntax$Node$Node,
												{end: fieldRange.end, start: leftRange.start},
												A2($stil4m$elm_syntax$Elm$Syntax$Expression$RecordAccess, leftNode, fieldNode));
										}),
									parenthesizedNode,
									recordAccesses);
							}
						} else {
							var _v30 = _v27.a;
							var secondPart = _v30.a;
							var maybeThirdPart = _v30.b;
							return A2(
								$stil4m$elm_syntax$Elm$Syntax$Node$Node,
								{
									end: rangeAfterOpeningParens.end,
									start: {column: rangeAfterOpeningParens.start.column - 1, row: rangeAfterOpeningParens.start.row}
								},
								function () {
									if (maybeThirdPart.$ === 'Nothing') {
										return $stil4m$elm_syntax$Elm$Syntax$Expression$TupledExpression(
											_List_fromArray(
												[firstPart.syntax, secondPart]));
									} else {
										var thirdPart = maybeThirdPart.a;
										return $stil4m$elm_syntax$Elm$Syntax$Expression$TupledExpression(
											_List_fromArray(
												[firstPart.syntax, secondPart, thirdPart]));
									}
								}());
						}
					}()
				};
			}),
		$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
		$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$expression(),
		$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
		A2(
			$stil4m$elm_syntax$ParserFast$oneOf2,
			A2(
				$stil4m$elm_syntax$ParserFast$symbolFollowedBy,
				')',
				$stil4m$elm_syntax$Elm$Parser$Expression$multiRecordAccessMap(
					function (recordAccesses) {
						return {
							comments: $stil4m$elm_syntax$Rope$empty,
							syntax: $stil4m$elm_syntax$Elm$Parser$Expression$TupledParenthesizedFollowedByRecordAccesses(recordAccesses)
						};
					})),
			A2(
				$stil4m$elm_syntax$ParserFast$symbolFollowedBy,
				',',
				A5(
					$stil4m$elm_syntax$ParserFast$map4,
					F4(
						function (commentsBefore, partResult, commentsAfter, maybeThirdPart) {
							return {
								comments: A2(
									$stil4m$elm_syntax$Rope$prependTo,
									maybeThirdPart.comments,
									A2(
										$stil4m$elm_syntax$Rope$prependTo,
										commentsAfter,
										A2($stil4m$elm_syntax$Rope$prependTo, partResult.comments, commentsBefore))),
								syntax: $stil4m$elm_syntax$Elm$Parser$Expression$TupledTwoOrThree(
									_Utils_Tuple2(partResult.syntax, maybeThirdPart.syntax))
							};
						}),
					$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
					$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$expression(),
					$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
					A2(
						$stil4m$elm_syntax$ParserFast$oneOf2,
						A2(
							$stil4m$elm_syntax$ParserFast$symbol,
							')',
							{comments: $stil4m$elm_syntax$Rope$empty, syntax: $elm$core$Maybe$Nothing}),
						A2(
							$stil4m$elm_syntax$ParserFast$symbolFollowedBy,
							',',
							A2(
								$stil4m$elm_syntax$ParserFast$followedBySymbol,
								')',
								A4(
									$stil4m$elm_syntax$ParserFast$map3,
									F3(
										function (commentsBefore, partResult, commentsAfter) {
											return {
												comments: A2(
													$stil4m$elm_syntax$Rope$prependTo,
													commentsAfter,
													A2($stil4m$elm_syntax$Rope$prependTo, partResult.comments, commentsBefore)),
												syntax: $elm$core$Maybe$Just(partResult.syntax)
											};
										}),
									$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
									$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$expression(),
									$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout))))))));
}
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$recordExpressionFollowedByRecordAccess() {
	return A2(
		$stil4m$elm_syntax$ParserFast$symbolFollowedBy,
		'{',
		A3(
			$stil4m$elm_syntax$ParserFast$map2,
			F2(
				function (leftestResult, recordAccesses) {
					if (!recordAccesses.b) {
						return leftestResult;
					} else {
						return {
							comments: leftestResult.comments,
							syntax: A3(
								$elm$core$List$foldl,
								F2(
									function (fieldNode, leftNode) {
										var fieldRange = fieldNode.a;
										var leftRange = leftNode.a;
										return A2(
											$stil4m$elm_syntax$Elm$Syntax$Node$Node,
											{end: fieldRange.end, start: leftRange.start},
											A2($stil4m$elm_syntax$Elm$Syntax$Expression$RecordAccess, leftNode, fieldNode));
									}),
								leftestResult.syntax,
								recordAccesses)
						};
					}
				}),
			A3(
				$stil4m$elm_syntax$ParserFast$map2WithRange,
				F3(
					function (range, commentsBefore, afterCurly) {
						return {
							comments: A2($stil4m$elm_syntax$Rope$prependTo, afterCurly.comments, commentsBefore),
							syntax: A2(
								$stil4m$elm_syntax$Elm$Syntax$Node$Node,
								$stil4m$elm_syntax$Elm$Parser$Expression$rangeMoveStartLeftByOneColumn(range),
								afterCurly.syntax)
						};
					}),
				$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
				$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$recordContentsCurlyEnd()),
			$stil4m$elm_syntax$Elm$Parser$Expression$multiRecordAccess));
}
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$recordContentsCurlyEnd() {
	return A2(
		$stil4m$elm_syntax$ParserFast$oneOf2,
		A6(
			$stil4m$elm_syntax$ParserFast$map5,
			F5(
				function (nameNode, commentsAfterFunctionName, afterNameBeforeFields, tailFields, commentsBeforeClosingCurly) {
					return {
						comments: A2(
							$stil4m$elm_syntax$Rope$prependTo,
							commentsBeforeClosingCurly,
							A2(
								$stil4m$elm_syntax$Rope$prependTo,
								tailFields.comments,
								A2($stil4m$elm_syntax$Rope$prependTo, afterNameBeforeFields.comments, commentsAfterFunctionName))),
						syntax: function () {
							var _v25 = afterNameBeforeFields.syntax;
							if (_v25.$ === 'RecordUpdateFirstSetter') {
								var firstField = _v25.a;
								return A2(
									$stil4m$elm_syntax$Elm$Syntax$Expression$RecordUpdateExpression,
									nameNode,
									A2($elm$core$List$cons, firstField, tailFields.syntax));
							} else {
								var firstFieldValue = _v25.a;
								return $stil4m$elm_syntax$Elm$Syntax$Expression$RecordExpr(
									A2(
										$elm$core$List$cons,
										A3($stil4m$elm_syntax$Elm$Syntax$Node$combine, $elm$core$Tuple$pair, nameNode, firstFieldValue),
										tailFields.syntax));
							}
						}()
					};
				}),
			$stil4m$elm_syntax$Elm$Parser$Tokens$functionNameNode,
			$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
			A2(
				$stil4m$elm_syntax$ParserFast$oneOf2,
				A2(
					$stil4m$elm_syntax$ParserFast$symbolFollowedBy,
					'|',
					A3(
						$stil4m$elm_syntax$ParserFast$map2,
						F2(
							function (commentsBefore, setterResult) {
								return {
									comments: A2($stil4m$elm_syntax$Rope$prependTo, setterResult.comments, commentsBefore),
									syntax: $stil4m$elm_syntax$Elm$Parser$Expression$RecordUpdateFirstSetter(setterResult.syntax)
								};
							}),
						$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
						$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$recordSetterNodeWithLayout())),
				A2(
					$stil4m$elm_syntax$ParserFast$symbolFollowedBy,
					'=',
					A4(
						$stil4m$elm_syntax$ParserFast$map3,
						F3(
							function (commentsBefore, expressionResult, commentsAfter) {
								return {
									comments: A2(
										$stil4m$elm_syntax$Rope$prependTo,
										commentsAfter,
										A2($stil4m$elm_syntax$Rope$prependTo, expressionResult.comments, commentsBefore)),
									syntax: $stil4m$elm_syntax$Elm$Parser$Expression$FieldsFirstValue(expressionResult.syntax)
								};
							}),
						$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
						$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$expression(),
						$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout))),
			$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$recordFields(),
			A2($stil4m$elm_syntax$ParserFast$followedBySymbol, '}', $stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout)),
		A2(
			$stil4m$elm_syntax$ParserFast$symbol,
			'}',
			{
				comments: $stil4m$elm_syntax$Rope$empty,
				syntax: $stil4m$elm_syntax$Elm$Syntax$Expression$RecordExpr(_List_Nil)
			}));
}
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$recordFields() {
	return $stil4m$elm_syntax$ParserWithComments$many(
		A2(
			$stil4m$elm_syntax$ParserFast$symbolFollowedBy,
			',',
			A3(
				$stil4m$elm_syntax$ParserFast$map2,
				F2(
					function (commentsBefore, setterResult) {
						return {
							comments: A2($stil4m$elm_syntax$Rope$prependTo, setterResult.comments, commentsBefore),
							syntax: setterResult.syntax
						};
					}),
				$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
				$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$recordSetterNodeWithLayout())));
}
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$recordSetterNodeWithLayout() {
	return A6(
		$stil4m$elm_syntax$ParserFast$map5WithRange,
		F6(
			function (range, name, commentsAfterFunctionName, commentsAfterEquals, expressionResult, commentsAfterExpression) {
				return {
					comments: A2(
						$stil4m$elm_syntax$Rope$prependTo,
						commentsAfterExpression,
						A2(
							$stil4m$elm_syntax$Rope$prependTo,
							expressionResult.comments,
							A2($stil4m$elm_syntax$Rope$prependTo, commentsAfterEquals, commentsAfterFunctionName))),
					syntax: A2(
						$stil4m$elm_syntax$Elm$Syntax$Node$Node,
						range,
						_Utils_Tuple2(name, expressionResult.syntax))
				};
			}),
		$stil4m$elm_syntax$Elm$Parser$Tokens$functionNameNode,
		$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
		A2($stil4m$elm_syntax$ParserFast$symbolFollowedBy, '=', $stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout),
		$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$expression(),
		$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout);
}
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$letFunction() {
	return A3(
		$stil4m$elm_syntax$ParserFast$validate,
		function (result) {
			var _v18 = result.syntax;
			var letDeclaration = _v18.b;
			if (letDeclaration.$ === 'LetDestructuring') {
				return true;
			} else {
				var letFunctionDeclaration = letDeclaration.a;
				var _v20 = letFunctionDeclaration.signature;
				if (_v20.$ === 'Nothing') {
					return true;
				} else {
					var _v21 = _v20.a;
					var signature = _v21.b;
					var _v22 = signature.name;
					var signatureName = _v22.b;
					var _v23 = letFunctionDeclaration.declaration;
					var implementation = _v23.b;
					var _v24 = implementation.name;
					var implementationName = _v24.b;
					return _Utils_eq(implementationName, signatureName + '');
				}
			}
		},
		'Expected to find the same name for declaration and signature',
		A7(
			$stil4m$elm_syntax$ParserFast$map6WithStartLocation,
			F7(
				function (startNameStart, startNameNode, commentsAfterStartName, maybeSignature, _arguments, commentsAfterEqual, expressionResult) {
					var allComments = A2(
						$stil4m$elm_syntax$Rope$prependTo,
						expressionResult.comments,
						A2(
							$stil4m$elm_syntax$Rope$prependTo,
							commentsAfterEqual,
							A2(
								$stil4m$elm_syntax$Rope$prependTo,
								_arguments.comments,
								function () {
									if (maybeSignature.$ === 'Nothing') {
										return commentsAfterStartName;
									} else {
										var signature = maybeSignature.a;
										return A2($stil4m$elm_syntax$Rope$prependTo, signature.comments, commentsAfterStartName);
									}
								}())));
					if (maybeSignature.$ === 'Nothing') {
						var _v14 = expressionResult.syntax;
						var expressionRange = _v14.a;
						return {
							comments: allComments,
							syntax: A2(
								$stil4m$elm_syntax$Elm$Syntax$Node$Node,
								{end: expressionRange.end, start: startNameStart},
								$stil4m$elm_syntax$Elm$Syntax$Expression$LetFunction(
									{
										declaration: A2(
											$stil4m$elm_syntax$Elm$Syntax$Node$Node,
											{end: expressionRange.end, start: startNameStart},
											{_arguments: _arguments.syntax, expression: expressionResult.syntax, name: startNameNode}),
										documentation: $elm$core$Maybe$Nothing,
										signature: $elm$core$Maybe$Nothing
									}))
						};
					} else {
						var signature = maybeSignature.a;
						var _v15 = signature.implementationName;
						var implementationNameRange = _v15.a;
						var _v16 = expressionResult.syntax;
						var expressionRange = _v16.a;
						return {
							comments: allComments,
							syntax: A2(
								$stil4m$elm_syntax$Elm$Syntax$Node$Node,
								{end: expressionRange.end, start: startNameStart},
								$stil4m$elm_syntax$Elm$Syntax$Expression$LetFunction(
									{
										declaration: A2(
											$stil4m$elm_syntax$Elm$Syntax$Node$Node,
											{end: expressionRange.end, start: implementationNameRange.start},
											{_arguments: _arguments.syntax, expression: expressionResult.syntax, name: signature.implementationName}),
										documentation: $elm$core$Maybe$Nothing,
										signature: $elm$core$Maybe$Just(
											A3($stil4m$elm_syntax$Elm$Syntax$Node$combine, $stil4m$elm_syntax$Elm$Syntax$Signature$Signature, startNameNode, signature.typeAnnotation))
									}))
						};
					}
				}),
			$stil4m$elm_syntax$Elm$Parser$Tokens$functionNameNode,
			$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
			A6(
				$stil4m$elm_syntax$ParserFast$map4OrSucceed,
				F4(
					function (commentsBeforeTypeAnnotation, typeAnnotationResult, implementationName, afterImplementationName) {
						return $elm$core$Maybe$Just(
							{
								comments: A2(
									$stil4m$elm_syntax$Rope$prependTo,
									afterImplementationName,
									A2(
										$stil4m$elm_syntax$Rope$prependTo,
										implementationName.comments,
										A2($stil4m$elm_syntax$Rope$prependTo, typeAnnotationResult.comments, commentsBeforeTypeAnnotation))),
								implementationName: implementationName.syntax,
								typeAnnotation: typeAnnotationResult.syntax
							});
					}),
				A2($stil4m$elm_syntax$ParserFast$symbolFollowedBy, ':', $stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout),
				$stil4m$elm_syntax$Elm$Parser$TypeAnnotation$typeAnnotation,
				$stil4m$elm_syntax$Elm$Parser$Layout$layoutStrictFollowedBy($stil4m$elm_syntax$Elm$Parser$Tokens$functionNameNode),
				$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
				$elm$core$Maybe$Nothing),
			$stil4m$elm_syntax$Elm$Parser$Expression$parameterPatternsEqual,
			$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
			$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$expression()));
}
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$letDestructuringDeclaration() {
	return A5(
		$stil4m$elm_syntax$ParserFast$map4,
		F4(
			function (pattern, commentsAfterPattern, commentsAfterEquals, expressionResult) {
				var _v11 = pattern.syntax;
				var start = _v11.a.start;
				var _v12 = expressionResult.syntax;
				var end = _v12.a.end;
				return {
					comments: A2(
						$stil4m$elm_syntax$Rope$prependTo,
						expressionResult.comments,
						A2(
							$stil4m$elm_syntax$Rope$prependTo,
							commentsAfterEquals,
							A2($stil4m$elm_syntax$Rope$prependTo, commentsAfterPattern, pattern.comments))),
					syntax: A2(
						$stil4m$elm_syntax$Elm$Syntax$Node$Node,
						{end: end, start: start},
						A2($stil4m$elm_syntax$Elm$Syntax$Expression$LetDestructuring, pattern.syntax, expressionResult.syntax))
				};
			}),
		$stil4m$elm_syntax$Elm$Parser$Patterns$patternNotDirectlyComposing,
		$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
		A2($stil4m$elm_syntax$ParserFast$symbolFollowedBy, '=', $stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout),
		$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$expression());
}
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$lambdaExpression() {
	return A2(
		$stil4m$elm_syntax$ParserFast$symbolFollowedBy,
		'\\',
		A7(
			$stil4m$elm_syntax$ParserFast$map6WithStartLocation,
			F7(
				function (start, commentsAfterBackslash, firstArg, commentsAfterFirstArg, secondUpArgs, commentsAfterArrow, expressionResult) {
					var _v10 = expressionResult.syntax;
					var expressionRange = _v10.a;
					return {
						comments: A2(
							$stil4m$elm_syntax$Rope$prependTo,
							expressionResult.comments,
							A2(
								$stil4m$elm_syntax$Rope$prependTo,
								commentsAfterArrow,
								A2(
									$stil4m$elm_syntax$Rope$prependTo,
									secondUpArgs.comments,
									A2(
										$stil4m$elm_syntax$Rope$prependTo,
										commentsAfterFirstArg,
										A2($stil4m$elm_syntax$Rope$prependTo, firstArg.comments, commentsAfterBackslash))))),
						syntax: A2(
							$stil4m$elm_syntax$Elm$Syntax$Node$Node,
							{
								end: expressionRange.end,
								start: {column: start.column - 1, row: start.row}
							},
							$stil4m$elm_syntax$Elm$Syntax$Expression$LambdaExpression(
								{
									args: A2($elm$core$List$cons, firstArg.syntax, secondUpArgs.syntax),
									expression: expressionResult.syntax
								}))
					};
				}),
			$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
			$stil4m$elm_syntax$Elm$Parser$Patterns$patternNotDirectlyComposing,
			$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
			A2(
				$stil4m$elm_syntax$ParserWithComments$until,
				A2($stil4m$elm_syntax$ParserFast$symbol, '->', _Utils_Tuple0),
				A3(
					$stil4m$elm_syntax$ParserFast$map2,
					F2(
						function (patternResult, commentsAfter) {
							return {
								comments: A2($stil4m$elm_syntax$Rope$prependTo, commentsAfter, patternResult.comments),
								syntax: patternResult.syntax
							};
						}),
					$stil4m$elm_syntax$Elm$Parser$Patterns$patternNotDirectlyComposing,
					$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout)),
			$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
			$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$expression()));
}
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$ifOrUnqualifiedReferenceExpression() {
	return A2(
		$stil4m$elm_syntax$ParserFast$oneOf2,
		$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$ifBlockExpression(),
		$stil4m$elm_syntax$Elm$Parser$Expression$unqualifiedFunctionReferenceExpressionFollowedByRecordAccess);
}
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$ifBlockExpression() {
	return A2(
		$stil4m$elm_syntax$ParserFast$keywordFollowedBy,
		'if',
		A9(
			$stil4m$elm_syntax$ParserFast$map8WithStartLocation,
			F9(
				function (start, commentsAfterIf, condition, commentsBeforeThen, commentsAfterThen, ifTrue, commentsBeforeElse, commentsAfterElse, ifFalse) {
					var _v9 = ifFalse.syntax;
					var ifFalseRange = _v9.a;
					return {
						comments: A2(
							$stil4m$elm_syntax$Rope$prependTo,
							ifFalse.comments,
							A2(
								$stil4m$elm_syntax$Rope$prependTo,
								commentsAfterElse,
								A2(
									$stil4m$elm_syntax$Rope$prependTo,
									commentsBeforeElse,
									A2(
										$stil4m$elm_syntax$Rope$prependTo,
										ifTrue.comments,
										A2(
											$stil4m$elm_syntax$Rope$prependTo,
											commentsAfterThen,
											A2(
												$stil4m$elm_syntax$Rope$prependTo,
												commentsBeforeThen,
												A2($stil4m$elm_syntax$Rope$prependTo, condition.comments, commentsAfterIf))))))),
						syntax: A2(
							$stil4m$elm_syntax$Elm$Syntax$Node$Node,
							{
								end: ifFalseRange.end,
								start: {column: start.column - 2, row: start.row}
							},
							A3($stil4m$elm_syntax$Elm$Syntax$Expression$IfBlock, condition.syntax, ifTrue.syntax, ifFalse.syntax))
					};
				}),
			$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
			$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$expression(),
			$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
			A2($stil4m$elm_syntax$ParserFast$keywordFollowedBy, 'then', $stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout),
			$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$expression(),
			$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
			A2($stil4m$elm_syntax$ParserFast$keywordFollowedBy, 'else', $stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout),
			$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$expression()));
}
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$listOrGlslExpression() {
	return A2(
		$stil4m$elm_syntax$ParserFast$symbolFollowedBy,
		'[',
		$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$expressionAfterOpeningSquareBracket());
}
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$expressionAfterOpeningSquareBracket() {
	return A2(
		$stil4m$elm_syntax$ParserFast$oneOf2,
		$stil4m$elm_syntax$Elm$Parser$Expression$glslExpressionAfterOpeningSquareBracket,
		A3(
			$stil4m$elm_syntax$ParserFast$map2WithRange,
			F3(
				function (range, commentsBefore, elements) {
					return {
						comments: A2($stil4m$elm_syntax$Rope$prependTo, elements.comments, commentsBefore),
						syntax: A2(
							$stil4m$elm_syntax$Elm$Syntax$Node$Node,
							{
								end: range.end,
								start: {column: range.start.column - 1, row: range.start.row}
							},
							elements.syntax)
					};
				}),
			$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
			A2(
				$stil4m$elm_syntax$ParserFast$oneOf2,
				A2(
					$stil4m$elm_syntax$ParserFast$symbol,
					']',
					{
						comments: $stil4m$elm_syntax$Rope$empty,
						syntax: $stil4m$elm_syntax$Elm$Syntax$Expression$ListExpr(_List_Nil)
					}),
				A2(
					$stil4m$elm_syntax$ParserFast$followedBySymbol,
					']',
					A4(
						$stil4m$elm_syntax$ParserFast$map3,
						F3(
							function (head, commentsAfterHead, tail) {
								return {
									comments: A2(
										$stil4m$elm_syntax$Rope$prependTo,
										tail.comments,
										A2($stil4m$elm_syntax$Rope$prependTo, commentsAfterHead, head.comments)),
									syntax: $stil4m$elm_syntax$Elm$Syntax$Expression$ListExpr(
										A2($elm$core$List$cons, head.syntax, tail.syntax))
								};
							}),
						$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$expression(),
						$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
						$stil4m$elm_syntax$ParserWithComments$many(
							A2(
								$stil4m$elm_syntax$ParserFast$symbolFollowedBy,
								',',
								$stil4m$elm_syntax$Elm$Parser$Layout$maybeAroundBothSides(
									$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$expression()))))))));
}
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$expression() {
	return A2(
		$stil4m$elm_syntax$Elm$Parser$Expression$extendedSubExpressionOptimisticLayout,
		$elm$core$Result$Ok,
		function ($) {
			return $.extensionRight;
		});
}
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence9ComposeL() {
	return A2($stil4m$elm_syntax$Elm$Parser$Expression$infixLeft, 9, '<<');
}
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence8QuestionMark() {
	return A2($stil4m$elm_syntax$Elm$Parser$Expression$infixLeft, 8, '<?>');
}
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence7Mul() {
	return A2($stil4m$elm_syntax$Elm$Parser$Expression$infixLeft, 7, '*');
}
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence7Idiv() {
	return A2($stil4m$elm_syntax$Elm$Parser$Expression$infixLeft, 7, '//');
}
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence7Fdiv() {
	return A2($stil4m$elm_syntax$Elm$Parser$Expression$infixLeft, 7, '/');
}
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence6Sub() {
	return A2($stil4m$elm_syntax$Elm$Parser$Expression$infixLeft, 6, '-');
}
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence6Ignore() {
	return A2($stil4m$elm_syntax$Elm$Parser$Expression$infixLeft, 6, '|.');
}
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence6Add() {
	return A2($stil4m$elm_syntax$Elm$Parser$Expression$infixLeft, 6, '+');
}
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence5Keep() {
	return A2($stil4m$elm_syntax$Elm$Parser$Expression$infixLeft, 5, '|=');
}
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence1ApR() {
	return A2($stil4m$elm_syntax$Elm$Parser$Expression$infixLeft, 1, '|>');
}
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence4Neq() {
	return A2($stil4m$elm_syntax$Elm$Parser$Expression$infixNonAssociative, 4, '/=');
}
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence4Lt() {
	return A2($stil4m$elm_syntax$Elm$Parser$Expression$infixNonAssociative, 4, '<');
}
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence4Le() {
	return A2($stil4m$elm_syntax$Elm$Parser$Expression$infixNonAssociative, 4, '<=');
}
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence4Gt() {
	return A2($stil4m$elm_syntax$Elm$Parser$Expression$infixNonAssociative, 4, '>');
}
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence4Ge() {
	return A2($stil4m$elm_syntax$Elm$Parser$Expression$infixNonAssociative, 4, '>=');
}
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence4Eq() {
	return A2($stil4m$elm_syntax$Elm$Parser$Expression$infixNonAssociative, 4, '==');
}
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence9ComposeR() {
	return A2($stil4m$elm_syntax$Elm$Parser$Expression$infixRight, 9, '>>');
}
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence8Pow() {
	return A2($stil4m$elm_syntax$Elm$Parser$Expression$infixRight, 8, '^');
}
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence7Slash() {
	return A2($stil4m$elm_syntax$Elm$Parser$Expression$infixRight, 7, '</>');
}
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence5append() {
	return A2($stil4m$elm_syntax$Elm$Parser$Expression$infixRight, 5, '++');
}
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence5Cons() {
	return A2($stil4m$elm_syntax$Elm$Parser$Expression$infixRight, 5, '::');
}
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence3And() {
	return A2($stil4m$elm_syntax$Elm$Parser$Expression$infixRight, 3, '&&');
}
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence2Or() {
	return A2($stil4m$elm_syntax$Elm$Parser$Expression$infixRight, 2, '||');
}
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence1ApL() {
	return A2($stil4m$elm_syntax$Elm$Parser$Expression$infixRight, 1, '<|');
}
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$negationAfterMinus() {
	return A2(
		$stil4m$elm_syntax$ParserFast$map,
		function (subExpressionResult) {
			var _v6 = subExpressionResult.syntax;
			var subExpressionRange = _v6.a;
			return {
				comments: subExpressionResult.comments,
				syntax: A2(
					$stil4m$elm_syntax$Elm$Syntax$Node$Node,
					{
						end: subExpressionRange.end,
						start: {column: subExpressionRange.start.column - 1, row: subExpressionRange.start.row}
					},
					$stil4m$elm_syntax$Elm$Syntax$Expression$Negation(subExpressionResult.syntax))
			};
		},
		$stil4m$elm_syntax$ParserFast$lazy(
			function (_v7) {
				return $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$subExpression();
			}));
}
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$negationOperation() {
	return A2(
		$stil4m$elm_syntax$ParserFast$symbolBacktrackableFollowedBy,
		'-',
		$stil4m$elm_syntax$ParserFast$offsetSourceAndThen(
			F2(
				function (offset, source) {
					var _v5 = A3($elm$core$String$slice, offset - 2, offset - 1, source);
					switch (_v5) {
						case ' ':
							return $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$negationAfterMinus();
						case '(':
							return $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$negationAfterMinus();
						case ')':
							return $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$negationAfterMinus();
						case '}':
							return $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$negationAfterMinus();
						case '':
							return $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$negationAfterMinus();
						default:
							return $stil4m$elm_syntax$Elm$Parser$Expression$negationWhitespaceProblem;
					}
				})));
}
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$subExpression() {
	return $stil4m$elm_syntax$ParserFast$offsetSourceAndThen(
		F2(
			function (offset, source) {
				var _v4 = A3($elm$core$String$slice, offset, offset + 1, source);
				switch (_v4) {
					case '\"':
						return $stil4m$elm_syntax$Elm$Parser$Expression$literalExpression;
					case '(':
						return $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$tupledExpressionIfNecessaryFollowedByRecordAccess();
					case '[':
						return $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$listOrGlslExpression();
					case '{':
						return $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$recordExpressionFollowedByRecordAccess();
					case 'c':
						return $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$caseOrUnqualifiedReferenceExpression();
					case '\\':
						return $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$lambdaExpression();
					case 'l':
						return $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$letOrUnqualifiedReferenceExpression();
					case 'i':
						return $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$ifOrUnqualifiedReferenceExpression();
					case '.':
						return $stil4m$elm_syntax$Elm$Parser$Expression$recordAccessFunctionExpression;
					case '-':
						return $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$negationOperation();
					case '\'':
						return $stil4m$elm_syntax$Elm$Parser$Expression$charLiteralExpression;
					default:
						return $stil4m$elm_syntax$Elm$Parser$Expression$referenceOrNumberExpression;
				}
			}));
}
function $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$subExpressionMaybeAppliedOptimisticLayout() {
	return A4(
		$stil4m$elm_syntax$ParserFast$map3,
		F3(
			function (leftExpressionResult, commentsBeforeExtension, maybeArgsReverse) {
				return {
					comments: A2(
						$stil4m$elm_syntax$Rope$prependTo,
						maybeArgsReverse.comments,
						A2($stil4m$elm_syntax$Rope$prependTo, commentsBeforeExtension, leftExpressionResult.comments)),
					syntax: function () {
						var _v0 = maybeArgsReverse.syntax;
						if (!_v0.b) {
							return leftExpressionResult.syntax;
						} else {
							var argsReverse = _v0;
							var _v1 = argsReverse.a;
							var lastArgRange = _v1.a;
							var leftNode = leftExpressionResult.syntax;
							var leftRange = leftNode.a;
							return A2(
								$stil4m$elm_syntax$Elm$Syntax$Node$Node,
								{end: lastArgRange.end, start: leftRange.start},
								$stil4m$elm_syntax$Elm$Syntax$Expression$Application(
									A2(
										$elm$core$List$cons,
										leftNode,
										$elm$core$List$reverse(argsReverse))));
						}
					}()
				};
			}),
		$stil4m$elm_syntax$ParserFast$lazy(
			function (_v2) {
				return $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$subExpression();
			}),
		$stil4m$elm_syntax$Elm$Parser$Layout$optimisticLayout,
		$stil4m$elm_syntax$ParserWithComments$manyWithoutReverse(
			A3(
				$stil4m$elm_syntax$ParserFast$map2,
				F2(
					function (arg, commentsAfter) {
						return {
							comments: A2($stil4m$elm_syntax$Rope$prependTo, commentsAfter, arg.comments),
							syntax: arg.syntax
						};
					}),
				$stil4m$elm_syntax$Elm$Parser$Layout$positivelyIndentedFollowedBy(
					$stil4m$elm_syntax$ParserFast$lazy(
						function (_v3) {
							return $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$subExpression();
						})),
				$stil4m$elm_syntax$Elm$Parser$Layout$optimisticLayout)));
}
try {
	var $stil4m$elm_syntax$Elm$Parser$Expression$letOrUnqualifiedReferenceExpression = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$letOrUnqualifiedReferenceExpression();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$letOrUnqualifiedReferenceExpression = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$letOrUnqualifiedReferenceExpression;
	};
	var $stil4m$elm_syntax$Elm$Parser$Expression$letExpression = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$letExpression();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$letExpression = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$letExpression;
	};
	var $stil4m$elm_syntax$Elm$Parser$Expression$letDeclarationsIn = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$letDeclarationsIn();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$letDeclarationsIn = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$letDeclarationsIn;
	};
	var $stil4m$elm_syntax$Elm$Parser$Expression$blockElement = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$blockElement();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$blockElement = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$blockElement;
	};
	var $stil4m$elm_syntax$Elm$Parser$Expression$caseOrUnqualifiedReferenceExpression = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$caseOrUnqualifiedReferenceExpression();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$caseOrUnqualifiedReferenceExpression = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$caseOrUnqualifiedReferenceExpression;
	};
	var $stil4m$elm_syntax$Elm$Parser$Expression$caseExpression = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$caseExpression();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$caseExpression = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$caseExpression;
	};
	var $stil4m$elm_syntax$Elm$Parser$Expression$caseStatements = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$caseStatements();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$caseStatements = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$caseStatements;
	};
	var $stil4m$elm_syntax$Elm$Parser$Expression$caseStatement = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$caseStatement();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$caseStatement = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$caseStatement;
	};
	var $stil4m$elm_syntax$Elm$Parser$Expression$tupledExpressionIfNecessaryFollowedByRecordAccess = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$tupledExpressionIfNecessaryFollowedByRecordAccess();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$tupledExpressionIfNecessaryFollowedByRecordAccess = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$tupledExpressionIfNecessaryFollowedByRecordAccess;
	};
	var $stil4m$elm_syntax$Elm$Parser$Expression$tupledExpressionInnerAfterOpeningParens = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$tupledExpressionInnerAfterOpeningParens();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$tupledExpressionInnerAfterOpeningParens = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$tupledExpressionInnerAfterOpeningParens;
	};
	var $stil4m$elm_syntax$Elm$Parser$Expression$recordExpressionFollowedByRecordAccess = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$recordExpressionFollowedByRecordAccess();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$recordExpressionFollowedByRecordAccess = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$recordExpressionFollowedByRecordAccess;
	};
	var $stil4m$elm_syntax$Elm$Parser$Expression$recordContentsCurlyEnd = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$recordContentsCurlyEnd();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$recordContentsCurlyEnd = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$recordContentsCurlyEnd;
	};
	var $stil4m$elm_syntax$Elm$Parser$Expression$recordFields = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$recordFields();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$recordFields = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$recordFields;
	};
	var $stil4m$elm_syntax$Elm$Parser$Expression$recordSetterNodeWithLayout = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$recordSetterNodeWithLayout();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$recordSetterNodeWithLayout = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$recordSetterNodeWithLayout;
	};
	var $stil4m$elm_syntax$Elm$Parser$Expression$letFunction = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$letFunction();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$letFunction = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$letFunction;
	};
	var $stil4m$elm_syntax$Elm$Parser$Expression$letDestructuringDeclaration = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$letDestructuringDeclaration();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$letDestructuringDeclaration = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$letDestructuringDeclaration;
	};
	var $stil4m$elm_syntax$Elm$Parser$Expression$lambdaExpression = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$lambdaExpression();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$lambdaExpression = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$lambdaExpression;
	};
	var $stil4m$elm_syntax$Elm$Parser$Expression$ifOrUnqualifiedReferenceExpression = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$ifOrUnqualifiedReferenceExpression();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$ifOrUnqualifiedReferenceExpression = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$ifOrUnqualifiedReferenceExpression;
	};
	var $stil4m$elm_syntax$Elm$Parser$Expression$ifBlockExpression = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$ifBlockExpression();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$ifBlockExpression = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$ifBlockExpression;
	};
	var $stil4m$elm_syntax$Elm$Parser$Expression$listOrGlslExpression = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$listOrGlslExpression();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$listOrGlslExpression = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$listOrGlslExpression;
	};
	var $stil4m$elm_syntax$Elm$Parser$Expression$expressionAfterOpeningSquareBracket = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$expressionAfterOpeningSquareBracket();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$expressionAfterOpeningSquareBracket = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$expressionAfterOpeningSquareBracket;
	};
	var $stil4m$elm_syntax$Elm$Parser$Expression$expression = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$expression();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$expression = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$expression;
	};
	var $stil4m$elm_syntax$Elm$Parser$Expression$precedence9ComposeL = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence9ComposeL();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence9ComposeL = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$precedence9ComposeL;
	};
	var $stil4m$elm_syntax$Elm$Parser$Expression$precedence8QuestionMark = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence8QuestionMark();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence8QuestionMark = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$precedence8QuestionMark;
	};
	var $stil4m$elm_syntax$Elm$Parser$Expression$precedence7Mul = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence7Mul();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence7Mul = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$precedence7Mul;
	};
	var $stil4m$elm_syntax$Elm$Parser$Expression$precedence7Idiv = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence7Idiv();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence7Idiv = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$precedence7Idiv;
	};
	var $stil4m$elm_syntax$Elm$Parser$Expression$precedence7Fdiv = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence7Fdiv();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence7Fdiv = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$precedence7Fdiv;
	};
	var $stil4m$elm_syntax$Elm$Parser$Expression$precedence6Sub = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence6Sub();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence6Sub = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$precedence6Sub;
	};
	var $stil4m$elm_syntax$Elm$Parser$Expression$precedence6Ignore = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence6Ignore();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence6Ignore = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$precedence6Ignore;
	};
	var $stil4m$elm_syntax$Elm$Parser$Expression$precedence6Add = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence6Add();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence6Add = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$precedence6Add;
	};
	var $stil4m$elm_syntax$Elm$Parser$Expression$precedence5Keep = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence5Keep();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence5Keep = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$precedence5Keep;
	};
	var $stil4m$elm_syntax$Elm$Parser$Expression$precedence1ApR = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence1ApR();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence1ApR = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$precedence1ApR;
	};
	var $stil4m$elm_syntax$Elm$Parser$Expression$precedence4Neq = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence4Neq();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence4Neq = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$precedence4Neq;
	};
	var $stil4m$elm_syntax$Elm$Parser$Expression$precedence4Lt = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence4Lt();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence4Lt = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$precedence4Lt;
	};
	var $stil4m$elm_syntax$Elm$Parser$Expression$precedence4Le = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence4Le();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence4Le = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$precedence4Le;
	};
	var $stil4m$elm_syntax$Elm$Parser$Expression$precedence4Gt = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence4Gt();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence4Gt = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$precedence4Gt;
	};
	var $stil4m$elm_syntax$Elm$Parser$Expression$precedence4Ge = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence4Ge();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence4Ge = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$precedence4Ge;
	};
	var $stil4m$elm_syntax$Elm$Parser$Expression$precedence4Eq = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence4Eq();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence4Eq = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$precedence4Eq;
	};
	var $stil4m$elm_syntax$Elm$Parser$Expression$precedence9ComposeR = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence9ComposeR();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence9ComposeR = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$precedence9ComposeR;
	};
	var $stil4m$elm_syntax$Elm$Parser$Expression$precedence8Pow = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence8Pow();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence8Pow = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$precedence8Pow;
	};
	var $stil4m$elm_syntax$Elm$Parser$Expression$precedence7Slash = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence7Slash();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence7Slash = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$precedence7Slash;
	};
	var $stil4m$elm_syntax$Elm$Parser$Expression$precedence5append = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence5append();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence5append = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$precedence5append;
	};
	var $stil4m$elm_syntax$Elm$Parser$Expression$precedence5Cons = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence5Cons();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence5Cons = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$precedence5Cons;
	};
	var $stil4m$elm_syntax$Elm$Parser$Expression$precedence3And = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence3And();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence3And = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$precedence3And;
	};
	var $stil4m$elm_syntax$Elm$Parser$Expression$precedence2Or = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence2Or();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence2Or = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$precedence2Or;
	};
	var $stil4m$elm_syntax$Elm$Parser$Expression$precedence1ApL = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence1ApL();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$precedence1ApL = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$precedence1ApL;
	};
	var $stil4m$elm_syntax$Elm$Parser$Expression$negationAfterMinus = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$negationAfterMinus();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$negationAfterMinus = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$negationAfterMinus;
	};
	var $stil4m$elm_syntax$Elm$Parser$Expression$negationOperation = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$negationOperation();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$negationOperation = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$negationOperation;
	};
	var $stil4m$elm_syntax$Elm$Parser$Expression$subExpression = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$subExpression();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$subExpression = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$subExpression;
	};
	var $stil4m$elm_syntax$Elm$Parser$Expression$subExpressionMaybeAppliedOptimisticLayout = $stil4m$elm_syntax$Elm$Parser$Expression$cyclic$subExpressionMaybeAppliedOptimisticLayout();
	$stil4m$elm_syntax$Elm$Parser$Expression$cyclic$subExpressionMaybeAppliedOptimisticLayout = function () {
		return $stil4m$elm_syntax$Elm$Parser$Expression$subExpressionMaybeAppliedOptimisticLayout;
	};
} catch ($) {
	throw 'Some top-level definitions from `Elm.Parser.Expression` are causing infinite recursion:\n\n  ┌─────┐\n  │    letOrUnqualifiedReferenceExpression\n  │     ↓\n  │    letExpression\n  │     ↓\n  │    letDeclarationsIn\n  │     ↓\n  │    blockElement\n  │     ↓\n  │    caseOrUnqualifiedReferenceExpression\n  │     ↓\n  │    caseExpression\n  │     ↓\n  │    caseStatements\n  │     ↓\n  │    caseStatement\n  │     ↓\n  │    tupledExpressionIfNecessaryFollowedByRecordAccess\n  │     ↓\n  │    tupledExpressionInnerAfterOpeningParens\n  │     ↓\n  │    recordExpressionFollowedByRecordAccess\n  │     ↓\n  │    recordContentsCurlyEnd\n  │     ↓\n  │    recordFields\n  │     ↓\n  │    recordSetterNodeWithLayout\n  │     ↓\n  │    letFunction\n  │     ↓\n  │    letDestructuringDeclaration\n  │     ↓\n  │    lambdaExpression\n  │     ↓\n  │    ifOrUnqualifiedReferenceExpression\n  │     ↓\n  │    ifBlockExpression\n  │     ↓\n  │    listOrGlslExpression\n  │     ↓\n  │    expressionAfterOpeningSquareBracket\n  │     ↓\n  │    expression\n  │     ↓\n  │    extendedSubExpressionOptimisticLayout\n  │     ↓\n  │    precedence9ComposeL\n  │     ↓\n  │    precedence8QuestionMark\n  │     ↓\n  │    precedence7Mul\n  │     ↓\n  │    precedence7Idiv\n  │     ↓\n  │    precedence7Fdiv\n  │     ↓\n  │    precedence6Sub\n  │     ↓\n  │    precedence6Ignore\n  │     ↓\n  │    precedence6Add\n  │     ↓\n  │    precedence5Keep\n  │     ↓\n  │    precedence1ApR\n  │     ↓\n  │    infixLeft\n  │     ↓\n  │    precedence4Neq\n  │     ↓\n  │    precedence4Lt\n  │     ↓\n  │    precedence4Le\n  │     ↓\n  │    precedence4Gt\n  │     ↓\n  │    precedence4Ge\n  │     ↓\n  │    precedence4Eq\n  │     ↓\n  │    infixNonAssociative\n  │     ↓\n  │    infixOperatorAndThen\n  │     ↓\n  │    precedence9ComposeR\n  │     ↓\n  │    precedence8Pow\n  │     ↓\n  │    precedence7Slash\n  │     ↓\n  │    precedence5append\n  │     ↓\n  │    precedence5Cons\n  │     ↓\n  │    precedence3And\n  │     ↓\n  │    precedence2Or\n  │     ↓\n  │    precedence1ApL\n  │     ↓\n  │    infixRight\n  │     ↓\n  │    negationAfterMinus\n  │     ↓\n  │    negationOperation\n  │     ↓\n  │    subExpression\n  │     ↓\n  │    subExpressionMaybeAppliedOptimisticLayout\n  └─────┘\n\nThese errors are very tricky, so read https://elm-lang.org/0.19.1/bad-recursion to learn how to fix it!';}
var $stil4m$elm_syntax$ParserFast$map6 = F7(
	function (func, _v0, _v1, _v2, _v3, _v4, _v5) {
		var parseA = _v0.a;
		var parseB = _v1.a;
		var parseC = _v2.a;
		var parseD = _v3.a;
		var parseE = _v4.a;
		var parseF = _v5.a;
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s0) {
				var _v6 = parseA(s0);
				if (_v6.$ === 'Bad') {
					var committed = _v6.a;
					var x = _v6.b;
					return A2($stil4m$elm_syntax$ParserFast$Bad, committed, x);
				} else {
					var a = _v6.a;
					var s1 = _v6.b;
					var _v7 = parseB(s1);
					if (_v7.$ === 'Bad') {
						var x = _v7.b;
						return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
					} else {
						var b = _v7.a;
						var s2 = _v7.b;
						var _v8 = parseC(s2);
						if (_v8.$ === 'Bad') {
							var x = _v8.b;
							return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
						} else {
							var c = _v8.a;
							var s3 = _v8.b;
							var _v9 = parseD(s3);
							if (_v9.$ === 'Bad') {
								var x = _v9.b;
								return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
							} else {
								var d = _v9.a;
								var s4 = _v9.b;
								var _v10 = parseE(s4);
								if (_v10.$ === 'Bad') {
									var x = _v10.b;
									return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
								} else {
									var e = _v10.a;
									var s5 = _v10.b;
									var _v11 = parseF(s5);
									if (_v11.$ === 'Bad') {
										var x = _v11.b;
										return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
									} else {
										var f = _v11.a;
										var s6 = _v11.b;
										return A2(
											$stil4m$elm_syntax$ParserFast$Good,
											A6(func, a, b, c, d, e, f),
											s6);
									}
								}
							}
						}
					}
				}
			});
	});
var $stil4m$elm_syntax$Elm$Parser$Declarations$parameterPatternsEqual = A2(
	$stil4m$elm_syntax$ParserWithComments$until,
	$stil4m$elm_syntax$Elm$Parser$Tokens$equal,
	A3(
		$stil4m$elm_syntax$ParserFast$map2,
		F2(
			function (patternResult, commentsAfterPattern) {
				return {
					comments: A2($stil4m$elm_syntax$Rope$prependTo, commentsAfterPattern, patternResult.comments),
					syntax: patternResult.syntax
				};
			}),
		$stil4m$elm_syntax$Elm$Parser$Patterns$patternNotDirectlyComposing,
		$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout));
var $stil4m$elm_syntax$Elm$Parser$Declarations$functionAfterDocumentation = A7(
	$stil4m$elm_syntax$ParserFast$map6,
	F6(
		function (startName, commentsAfterStartName, maybeSignature, _arguments, commentsAfterEqual, result) {
			return {
				comments: A2(
					$stil4m$elm_syntax$Rope$prependTo,
					result.comments,
					A2(
						$stil4m$elm_syntax$Rope$prependTo,
						commentsAfterEqual,
						A2(
							$stil4m$elm_syntax$Rope$prependTo,
							_arguments.comments,
							function () {
								if (maybeSignature.$ === 'Nothing') {
									return commentsAfterStartName;
								} else {
									var signature = maybeSignature.a;
									return A2($stil4m$elm_syntax$Rope$prependTo, signature.comments, commentsAfterStartName);
								}
							}()))),
				syntax: $stil4m$elm_syntax$Elm$Parser$Declarations$FunctionDeclarationAfterDocumentation(
					{
						_arguments: _arguments.syntax,
						expression: result.syntax,
						signature: A2(
							$elm$core$Maybe$map,
							function ($) {
								return $.syntax;
							},
							maybeSignature),
						startName: startName
					})
			};
		}),
	$stil4m$elm_syntax$Elm$Parser$Tokens$functionNameNode,
	$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
	A6(
		$stil4m$elm_syntax$ParserFast$map4OrSucceed,
		F4(
			function (commentsBeforeTypeAnnotation, typeAnnotationResult, implementationName, afterImplementationName) {
				return $elm$core$Maybe$Just(
					{
						comments: A2(
							$stil4m$elm_syntax$Rope$prependTo,
							afterImplementationName,
							A2(
								$stil4m$elm_syntax$Rope$prependTo,
								implementationName.comments,
								A2($stil4m$elm_syntax$Rope$prependTo, typeAnnotationResult.comments, commentsBeforeTypeAnnotation))),
						syntax: {implementationName: implementationName.syntax, typeAnnotation: typeAnnotationResult.syntax}
					});
			}),
		A2($stil4m$elm_syntax$ParserFast$symbolFollowedBy, ':', $stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout),
		$stil4m$elm_syntax$Elm$Parser$TypeAnnotation$typeAnnotation,
		$stil4m$elm_syntax$Elm$Parser$Layout$layoutStrictFollowedBy($stil4m$elm_syntax$Elm$Parser$Tokens$functionNameNode),
		$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
		$elm$core$Maybe$Nothing),
	$stil4m$elm_syntax$Elm$Parser$Declarations$parameterPatternsEqual,
	$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
	$stil4m$elm_syntax$Elm$Parser$Expression$expression);
var $stil4m$elm_syntax$Elm$Parser$Layout$layoutStrictFollowedByWithComments = function (nextParser) {
	return A3(
		$stil4m$elm_syntax$ParserFast$map2,
		F2(
			function (commentsBefore, after) {
				return {
					comments: A2($stil4m$elm_syntax$Rope$prependTo, after.comments, commentsBefore),
					syntax: after.syntax
				};
			}),
		$stil4m$elm_syntax$Elm$Parser$Layout$optimisticLayout,
		$stil4m$elm_syntax$Elm$Parser$Layout$onTopIndentationFollowedBy(nextParser));
};
var $stil4m$elm_syntax$Elm$Parser$Declarations$PortDeclarationAfterDocumentation = function (a) {
	return {$: 'PortDeclarationAfterDocumentation', a: a};
};
var $stil4m$elm_syntax$Elm$Parser$Declarations$portDeclarationAfterDocumentation = A6(
	$stil4m$elm_syntax$ParserFast$map5,
	F5(
		function (commentsAfterPort, name, commentsAfterName, commentsAfterColon, typeAnnotationResult) {
			var nameRange = name.a;
			return {
				comments: A2(
					$stil4m$elm_syntax$Rope$prependTo,
					commentsAfterColon,
					A2(
						$stil4m$elm_syntax$Rope$prependTo,
						typeAnnotationResult.comments,
						A2($stil4m$elm_syntax$Rope$prependTo, commentsAfterName, commentsAfterPort))),
				syntax: $stil4m$elm_syntax$Elm$Parser$Declarations$PortDeclarationAfterDocumentation(
					{
						name: name,
						startLocation: {column: 1, row: nameRange.start.row},
						typeAnnotation: typeAnnotationResult.syntax
					})
			};
		}),
	A2($stil4m$elm_syntax$ParserFast$keywordFollowedBy, 'port', $stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout),
	$stil4m$elm_syntax$Elm$Parser$Tokens$functionNameNode,
	$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
	A2($stil4m$elm_syntax$ParserFast$symbolFollowedBy, ':', $stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout),
	$stil4m$elm_syntax$Elm$Parser$TypeAnnotation$typeAnnotation);
var $stil4m$elm_syntax$Elm$Syntax$Node$range = function (_v0) {
	var r = _v0.a;
	return r;
};
var $stil4m$elm_syntax$Elm$Parser$Declarations$TypeDeclarationAfterDocumentation = function (a) {
	return {$: 'TypeDeclarationAfterDocumentation', a: a};
};
var $stil4m$elm_syntax$Elm$Parser$Declarations$typeGenericListEquals = A2(
	$stil4m$elm_syntax$ParserWithComments$until,
	$stil4m$elm_syntax$Elm$Parser$Tokens$equal,
	A3(
		$stil4m$elm_syntax$ParserFast$map2,
		F2(
			function (name, commentsAfterName) {
				return {comments: commentsAfterName, syntax: name};
			}),
		$stil4m$elm_syntax$Elm$Parser$Tokens$functionNameNode,
		$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout));
var $stil4m$elm_syntax$ParserFast$ifFollowedByWhileMapWithRangeWithoutLinebreak = F3(
	function (rangeAndConsumedStringToRes, firstIsOkay, afterFirstIsOkay) {
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s0) {
				var firstOffset = A3($stil4m$elm_syntax$ParserFast$isSubCharWithoutLinebreak, firstIsOkay, s0.offset, s0.src);
				if (_Utils_eq(firstOffset, -1)) {
					return A2(
						$stil4m$elm_syntax$ParserFast$Bad,
						false,
						A2($stil4m$elm_syntax$ParserFast$ExpectingCharSatisfyingPredicate, s0.row, s0.col));
				} else {
					var s1 = A6($stil4m$elm_syntax$ParserFast$skipWhileWithoutLinebreakHelp, afterFirstIsOkay, firstOffset, s0.row, s0.col + 1, s0.src, s0.indent);
					return A2(
						$stil4m$elm_syntax$ParserFast$Good,
						A2(
							rangeAndConsumedStringToRes,
							{
								end: {column: s1.col, row: s1.row},
								start: {column: s0.col, row: s0.row}
							},
							A3($elm$core$String$slice, s0.offset, s1.offset, s0.src)),
						s1);
				}
			});
	});
var $stil4m$elm_syntax$Elm$Parser$Tokens$typeNameNode = A3($stil4m$elm_syntax$ParserFast$ifFollowedByWhileMapWithRangeWithoutLinebreak, $stil4m$elm_syntax$Elm$Syntax$Node$Node, $stil4m$elm_syntax$Char$Extra$unicodeIsUpperFast, $stil4m$elm_syntax$Char$Extra$unicodeIsAlphaNumOrUnderscoreFast);
var $stil4m$elm_syntax$Elm$Parser$Declarations$valueConstructorOptimisticLayout = A4(
	$stil4m$elm_syntax$ParserFast$map3,
	F3(
		function (name, commentsAfterName, argumentsReverse) {
			var nameRange = name.a;
			var fullRange = function () {
				var _v0 = argumentsReverse.syntax;
				if (_v0.b) {
					var _v1 = _v0.a;
					var lastArgRange = _v1.a;
					return {end: lastArgRange.end, start: nameRange.start};
				} else {
					return nameRange;
				}
			}();
			return {
				comments: A2($stil4m$elm_syntax$Rope$prependTo, argumentsReverse.comments, commentsAfterName),
				syntax: A2(
					$stil4m$elm_syntax$Elm$Syntax$Node$Node,
					fullRange,
					{
						_arguments: $elm$core$List$reverse(argumentsReverse.syntax),
						name: name
					})
			};
		}),
	$stil4m$elm_syntax$Elm$Parser$Tokens$typeNameNode,
	$stil4m$elm_syntax$Elm$Parser$Layout$optimisticLayout,
	$stil4m$elm_syntax$ParserWithComments$manyWithoutReverse(
		$stil4m$elm_syntax$Elm$Parser$Layout$positivelyIndentedFollowedBy(
			A3(
				$stil4m$elm_syntax$ParserFast$map2,
				F2(
					function (typeAnnotationResult, commentsAfter) {
						return {
							comments: A2($stil4m$elm_syntax$Rope$prependTo, commentsAfter, typeAnnotationResult.comments),
							syntax: typeAnnotationResult.syntax
						};
					}),
				$stil4m$elm_syntax$Elm$Parser$TypeAnnotation$typeAnnotationNoFnExcludingTypedWithArguments,
				$stil4m$elm_syntax$Elm$Parser$Layout$optimisticLayout))));
var $stil4m$elm_syntax$Elm$Parser$Declarations$customTypeDefinitionAfterDocumentationAfterTypePrefix = A7(
	$stil4m$elm_syntax$ParserFast$map6,
	F6(
		function (name, commentsAfterName, parameters, commentsAfterEqual, headVariant, tailVariantsReverse) {
			return {
				comments: A2(
					$stil4m$elm_syntax$Rope$prependTo,
					tailVariantsReverse.comments,
					A2(
						$stil4m$elm_syntax$Rope$prependTo,
						headVariant.comments,
						A2(
							$stil4m$elm_syntax$Rope$prependTo,
							commentsAfterEqual,
							A2($stil4m$elm_syntax$Rope$prependTo, parameters.comments, commentsAfterName)))),
				syntax: $stil4m$elm_syntax$Elm$Parser$Declarations$TypeDeclarationAfterDocumentation(
					{headVariant: headVariant.syntax, name: name, parameters: parameters.syntax, tailVariantsReverse: tailVariantsReverse.syntax})
			};
		}),
	$stil4m$elm_syntax$Elm$Parser$Tokens$typeNameNode,
	$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
	$stil4m$elm_syntax$Elm$Parser$Declarations$typeGenericListEquals,
	$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
	$stil4m$elm_syntax$Elm$Parser$Declarations$valueConstructorOptimisticLayout,
	$stil4m$elm_syntax$ParserWithComments$manyWithoutReverse(
		A2(
			$stil4m$elm_syntax$ParserFast$symbolFollowedBy,
			'|',
			A2(
				$stil4m$elm_syntax$Elm$Parser$Layout$positivelyIndentedPlusFollowedBy,
				1,
				A3(
					$stil4m$elm_syntax$ParserFast$map2,
					F2(
						function (commentsBeforePipe, variantResult) {
							return {
								comments: A2($stil4m$elm_syntax$Rope$prependTo, variantResult.comments, commentsBeforePipe),
								syntax: variantResult.syntax
							};
						}),
					$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
					$stil4m$elm_syntax$Elm$Parser$Declarations$valueConstructorOptimisticLayout)))));
var $stil4m$elm_syntax$Elm$Parser$Declarations$TypeAliasDeclarationAfterDocumentation = function (a) {
	return {$: 'TypeAliasDeclarationAfterDocumentation', a: a};
};
var $stil4m$elm_syntax$Elm$Parser$Declarations$typeAliasDefinitionAfterDocumentationAfterTypePrefix = A7(
	$stil4m$elm_syntax$ParserFast$map6,
	F6(
		function (commentsAfterAlias, name, commentsAfterName, parameters, commentsAfterEquals, typeAnnotationResult) {
			return {
				comments: A2(
					$stil4m$elm_syntax$Rope$prependTo,
					typeAnnotationResult.comments,
					A2(
						$stil4m$elm_syntax$Rope$prependTo,
						commentsAfterEquals,
						A2(
							$stil4m$elm_syntax$Rope$prependTo,
							parameters.comments,
							A2($stil4m$elm_syntax$Rope$prependTo, commentsAfterName, commentsAfterAlias)))),
				syntax: $stil4m$elm_syntax$Elm$Parser$Declarations$TypeAliasDeclarationAfterDocumentation(
					{name: name, parameters: parameters.syntax, typeAnnotation: typeAnnotationResult.syntax})
			};
		}),
	A2($stil4m$elm_syntax$ParserFast$keywordFollowedBy, 'alias', $stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout),
	$stil4m$elm_syntax$Elm$Parser$Tokens$typeNameNode,
	$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
	$stil4m$elm_syntax$Elm$Parser$Declarations$typeGenericListEquals,
	$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
	$stil4m$elm_syntax$Elm$Parser$TypeAnnotation$typeAnnotation);
var $stil4m$elm_syntax$Elm$Parser$Declarations$typeOrTypeAliasDefinitionAfterDocumentation = A3(
	$stil4m$elm_syntax$ParserFast$map2,
	F2(
		function (commentsAfterType, declarationAfterDocumentation) {
			return {
				comments: A2($stil4m$elm_syntax$Rope$prependTo, declarationAfterDocumentation.comments, commentsAfterType),
				syntax: declarationAfterDocumentation.syntax
			};
		}),
	A2($stil4m$elm_syntax$ParserFast$keywordFollowedBy, 'type', $stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout),
	A2($stil4m$elm_syntax$ParserFast$oneOf2, $stil4m$elm_syntax$Elm$Parser$Declarations$typeAliasDefinitionAfterDocumentationAfterTypePrefix, $stil4m$elm_syntax$Elm$Parser$Declarations$customTypeDefinitionAfterDocumentationAfterTypePrefix));
var $stil4m$elm_syntax$Elm$Parser$Declarations$declarationWithDocumentation = A3(
	$stil4m$elm_syntax$ParserFast$validate,
	function (result) {
		var _v11 = result.syntax;
		var decl = _v11.b;
		if (decl.$ === 'FunctionDeclaration') {
			var letFunctionDeclaration = decl.a;
			var _v13 = letFunctionDeclaration.signature;
			if (_v13.$ === 'Nothing') {
				return true;
			} else {
				var _v14 = _v13.a;
				var signature = _v14.b;
				var _v15 = signature.name;
				var signatureName = _v15.b;
				var _v16 = letFunctionDeclaration.declaration;
				var implementation = _v16.b;
				var _v17 = implementation.name;
				var implementationName = _v17.b;
				return _Utils_eq(implementationName, signatureName + '');
			}
		} else {
			return true;
		}
	},
	'Expected to find the same name for declaration and signature',
	A3(
		$stil4m$elm_syntax$ParserFast$map2,
		F2(
			function (documentation, afterDocumentation) {
				var start = $stil4m$elm_syntax$Elm$Syntax$Node$range(documentation).start;
				var _v0 = afterDocumentation.syntax;
				switch (_v0.$) {
					case 'FunctionDeclarationAfterDocumentation':
						var functionDeclarationAfterDocumentation = _v0.a;
						var _v1 = functionDeclarationAfterDocumentation.signature;
						if (_v1.$ === 'Just') {
							var signature = _v1.a;
							var _v2 = signature.implementationName;
							var implementationNameRange = _v2.a;
							var _v3 = functionDeclarationAfterDocumentation.expression;
							var expressionRange = _v3.a;
							return {
								comments: afterDocumentation.comments,
								syntax: A2(
									$stil4m$elm_syntax$Elm$Syntax$Node$Node,
									{end: expressionRange.end, start: start},
									$stil4m$elm_syntax$Elm$Syntax$Declaration$FunctionDeclaration(
										{
											declaration: A2(
												$stil4m$elm_syntax$Elm$Syntax$Node$Node,
												{end: expressionRange.end, start: implementationNameRange.start},
												{_arguments: functionDeclarationAfterDocumentation._arguments, expression: functionDeclarationAfterDocumentation.expression, name: signature.implementationName}),
											documentation: $elm$core$Maybe$Just(documentation),
											signature: $elm$core$Maybe$Just(
												A3($stil4m$elm_syntax$Elm$Syntax$Node$combine, $stil4m$elm_syntax$Elm$Syntax$Signature$Signature, functionDeclarationAfterDocumentation.startName, signature.typeAnnotation))
										}))
							};
						} else {
							var _v4 = functionDeclarationAfterDocumentation.startName;
							var startNameRange = _v4.a;
							var _v5 = functionDeclarationAfterDocumentation.expression;
							var expressionRange = _v5.a;
							return {
								comments: afterDocumentation.comments,
								syntax: A2(
									$stil4m$elm_syntax$Elm$Syntax$Node$Node,
									{end: expressionRange.end, start: start},
									$stil4m$elm_syntax$Elm$Syntax$Declaration$FunctionDeclaration(
										{
											declaration: A2(
												$stil4m$elm_syntax$Elm$Syntax$Node$Node,
												{end: expressionRange.end, start: startNameRange.start},
												{_arguments: functionDeclarationAfterDocumentation._arguments, expression: functionDeclarationAfterDocumentation.expression, name: functionDeclarationAfterDocumentation.startName}),
											documentation: $elm$core$Maybe$Just(documentation),
											signature: $elm$core$Maybe$Nothing
										}))
							};
						}
					case 'TypeDeclarationAfterDocumentation':
						var typeDeclarationAfterDocumentation = _v0.a;
						var end = function () {
							var _v6 = typeDeclarationAfterDocumentation.tailVariantsReverse;
							if (_v6.b) {
								var _v7 = _v6.a;
								var range = _v7.a;
								return range.end;
							} else {
								var _v8 = typeDeclarationAfterDocumentation.headVariant;
								var headVariantRange = _v8.a;
								return headVariantRange.end;
							}
						}();
						return {
							comments: afterDocumentation.comments,
							syntax: A2(
								$stil4m$elm_syntax$Elm$Syntax$Node$Node,
								{end: end, start: start},
								$stil4m$elm_syntax$Elm$Syntax$Declaration$CustomTypeDeclaration(
									{
										constructors: A2(
											$elm$core$List$cons,
											typeDeclarationAfterDocumentation.headVariant,
											$elm$core$List$reverse(typeDeclarationAfterDocumentation.tailVariantsReverse)),
										documentation: $elm$core$Maybe$Just(documentation),
										generics: typeDeclarationAfterDocumentation.parameters,
										name: typeDeclarationAfterDocumentation.name
									}))
						};
					case 'TypeAliasDeclarationAfterDocumentation':
						var typeAliasDeclarationAfterDocumentation = _v0.a;
						var _v9 = typeAliasDeclarationAfterDocumentation.typeAnnotation;
						var typeAnnotationRange = _v9.a;
						return {
							comments: afterDocumentation.comments,
							syntax: A2(
								$stil4m$elm_syntax$Elm$Syntax$Node$Node,
								{end: typeAnnotationRange.end, start: start},
								$stil4m$elm_syntax$Elm$Syntax$Declaration$AliasDeclaration(
									{
										documentation: $elm$core$Maybe$Just(documentation),
										generics: typeAliasDeclarationAfterDocumentation.parameters,
										name: typeAliasDeclarationAfterDocumentation.name,
										typeAnnotation: typeAliasDeclarationAfterDocumentation.typeAnnotation
									}))
						};
					default:
						var portDeclarationAfterName = _v0.a;
						var _v10 = portDeclarationAfterName.typeAnnotation;
						var typeAnnotationRange = _v10.a;
						return {
							comments: A2(
								$stil4m$elm_syntax$Rope$filledPrependTo,
								afterDocumentation.comments,
								$stil4m$elm_syntax$Rope$one(documentation)),
							syntax: A2(
								$stil4m$elm_syntax$Elm$Syntax$Node$Node,
								{end: typeAnnotationRange.end, start: portDeclarationAfterName.startLocation},
								$stil4m$elm_syntax$Elm$Syntax$Declaration$PortDeclaration(
									{name: portDeclarationAfterName.name, typeAnnotation: portDeclarationAfterName.typeAnnotation}))
						};
				}
			}),
		$stil4m$elm_syntax$Elm$Parser$Comments$declarationDocumentation,
		$stil4m$elm_syntax$Elm$Parser$Layout$layoutStrictFollowedByWithComments(
			A3($stil4m$elm_syntax$ParserFast$oneOf3, $stil4m$elm_syntax$Elm$Parser$Declarations$functionAfterDocumentation, $stil4m$elm_syntax$Elm$Parser$Declarations$typeOrTypeAliasDefinitionAfterDocumentation, $stil4m$elm_syntax$Elm$Parser$Declarations$portDeclarationAfterDocumentation))));
var $stil4m$elm_syntax$Elm$Parser$Tokens$functionNameNotInfixNode = A4(
	$stil4m$elm_syntax$ParserFast$ifFollowedByWhileValidateMapWithRangeWithoutLinebreak,
	$stil4m$elm_syntax$Elm$Syntax$Node$Node,
	$stil4m$elm_syntax$Char$Extra$unicodeIsLowerFast,
	$stil4m$elm_syntax$Char$Extra$unicodeIsAlphaNumOrUnderscoreFast,
	function (name) {
		return (name !== 'infix') && $stil4m$elm_syntax$Elm$Parser$Tokens$isNotReserved(name);
	});
var $stil4m$elm_syntax$Elm$Parser$Declarations$functionDeclarationWithoutDocumentation = A3(
	$stil4m$elm_syntax$ParserFast$validate,
	function (result) {
		var _v5 = result.syntax;
		var decl = _v5.b;
		if (decl.$ === 'FunctionDeclaration') {
			var letFunctionDeclaration = decl.a;
			var _v7 = letFunctionDeclaration.signature;
			if (_v7.$ === 'Nothing') {
				return true;
			} else {
				var _v8 = _v7.a;
				var signature = _v8.b;
				var _v9 = signature.name;
				var signatureName = _v9.b;
				var _v10 = letFunctionDeclaration.declaration;
				var implementation = _v10.b;
				var _v11 = implementation.name;
				var implementationName = _v11.b;
				return _Utils_eq(implementationName, signatureName + '');
			}
		} else {
			return true;
		}
	},
	'Expected to find the same name for declaration and signature',
	A7(
		$stil4m$elm_syntax$ParserFast$map6WithStartLocation,
		F7(
			function (startNameStart, startNameNode, commentsAfterStartName, maybeSignature, _arguments, commentsAfterEqual, result) {
				var allComments = A2(
					$stil4m$elm_syntax$Rope$prependTo,
					result.comments,
					A2(
						$stil4m$elm_syntax$Rope$prependTo,
						commentsAfterEqual,
						A2(
							$stil4m$elm_syntax$Rope$prependTo,
							_arguments.comments,
							function () {
								if (maybeSignature.$ === 'Nothing') {
									return commentsAfterStartName;
								} else {
									var signature = maybeSignature.a;
									return A2($stil4m$elm_syntax$Rope$prependTo, signature.comments, commentsAfterStartName);
								}
							}())));
				if (maybeSignature.$ === 'Nothing') {
					var _v1 = result.syntax;
					var expressionRange = _v1.a;
					return {
						comments: allComments,
						syntax: A2(
							$stil4m$elm_syntax$Elm$Syntax$Node$Node,
							{end: expressionRange.end, start: startNameStart},
							$stil4m$elm_syntax$Elm$Syntax$Declaration$FunctionDeclaration(
								{
									declaration: A2(
										$stil4m$elm_syntax$Elm$Syntax$Node$Node,
										{end: expressionRange.end, start: startNameStart},
										{_arguments: _arguments.syntax, expression: result.syntax, name: startNameNode}),
									documentation: $elm$core$Maybe$Nothing,
									signature: $elm$core$Maybe$Nothing
								}))
					};
				} else {
					var signature = maybeSignature.a;
					var _v2 = signature.implementationName;
					var implementationNameRange = _v2.a;
					var _v3 = result.syntax;
					var expressionRange = _v3.a;
					return {
						comments: allComments,
						syntax: A2(
							$stil4m$elm_syntax$Elm$Syntax$Node$Node,
							{end: expressionRange.end, start: startNameStart},
							$stil4m$elm_syntax$Elm$Syntax$Declaration$FunctionDeclaration(
								{
									declaration: A2(
										$stil4m$elm_syntax$Elm$Syntax$Node$Node,
										{end: expressionRange.end, start: implementationNameRange.start},
										{_arguments: _arguments.syntax, expression: result.syntax, name: signature.implementationName}),
									documentation: $elm$core$Maybe$Nothing,
									signature: $elm$core$Maybe$Just(
										A3($stil4m$elm_syntax$Elm$Syntax$Node$combine, $stil4m$elm_syntax$Elm$Syntax$Signature$Signature, startNameNode, signature.typeAnnotation))
								}))
					};
				}
			}),
		$stil4m$elm_syntax$Elm$Parser$Tokens$functionNameNotInfixNode,
		$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
		A6(
			$stil4m$elm_syntax$ParserFast$map4OrSucceed,
			F4(
				function (commentsBeforeTypeAnnotation, typeAnnotationResult, implementationName, afterImplementationName) {
					return $elm$core$Maybe$Just(
						{
							comments: A2(
								$stil4m$elm_syntax$Rope$prependTo,
								afterImplementationName,
								A2(
									$stil4m$elm_syntax$Rope$prependTo,
									implementationName.comments,
									A2($stil4m$elm_syntax$Rope$prependTo, typeAnnotationResult.comments, commentsBeforeTypeAnnotation))),
							implementationName: implementationName.syntax,
							typeAnnotation: typeAnnotationResult.syntax
						});
				}),
			A2($stil4m$elm_syntax$ParserFast$symbolFollowedBy, ':', $stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout),
			$stil4m$elm_syntax$Elm$Parser$TypeAnnotation$typeAnnotation,
			$stil4m$elm_syntax$Elm$Parser$Layout$layoutStrictFollowedBy($stil4m$elm_syntax$Elm$Parser$Tokens$functionNameNode),
			$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
			$elm$core$Maybe$Nothing),
		$stil4m$elm_syntax$Elm$Parser$Declarations$parameterPatternsEqual,
		$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
		$stil4m$elm_syntax$Elm$Parser$Expression$expression));
var $stil4m$elm_syntax$Elm$Syntax$Declaration$InfixDeclaration = function (a) {
	return {$: 'InfixDeclaration', a: a};
};
var $stil4m$elm_syntax$Elm$Parser$Declarations$infixDirection = A3(
	$stil4m$elm_syntax$ParserFast$oneOf3,
	A2(
		$stil4m$elm_syntax$ParserFast$mapWithRange,
		$stil4m$elm_syntax$Elm$Syntax$Node$Node,
		A2($stil4m$elm_syntax$ParserFast$keyword, 'right', $stil4m$elm_syntax$Elm$Syntax$Infix$Right)),
	A2(
		$stil4m$elm_syntax$ParserFast$mapWithRange,
		$stil4m$elm_syntax$Elm$Syntax$Node$Node,
		A2($stil4m$elm_syntax$ParserFast$keyword, 'left', $stil4m$elm_syntax$Elm$Syntax$Infix$Left)),
	A2(
		$stil4m$elm_syntax$ParserFast$mapWithRange,
		$stil4m$elm_syntax$Elm$Syntax$Node$Node,
		A2($stil4m$elm_syntax$ParserFast$keyword, 'non', $stil4m$elm_syntax$Elm$Syntax$Infix$Non)));
var $stil4m$elm_syntax$ParserFast$errorAsOffsetAndInt = {_int: 0, offset: -1};
var $stil4m$elm_syntax$ParserFast$convertIntegerDecimal = F2(
	function (offset, src) {
		var _v0 = A3($elm$core$String$slice, offset, offset + 1, src);
		switch (_v0) {
			case '0':
				return {_int: 0, offset: offset + 1};
			case '1':
				return A3($stil4m$elm_syntax$ParserFast$convert0OrMore0To9s, 1, offset + 1, src);
			case '2':
				return A3($stil4m$elm_syntax$ParserFast$convert0OrMore0To9s, 2, offset + 1, src);
			case '3':
				return A3($stil4m$elm_syntax$ParserFast$convert0OrMore0To9s, 3, offset + 1, src);
			case '4':
				return A3($stil4m$elm_syntax$ParserFast$convert0OrMore0To9s, 4, offset + 1, src);
			case '5':
				return A3($stil4m$elm_syntax$ParserFast$convert0OrMore0To9s, 5, offset + 1, src);
			case '6':
				return A3($stil4m$elm_syntax$ParserFast$convert0OrMore0To9s, 6, offset + 1, src);
			case '7':
				return A3($stil4m$elm_syntax$ParserFast$convert0OrMore0To9s, 7, offset + 1, src);
			case '8':
				return A3($stil4m$elm_syntax$ParserFast$convert0OrMore0To9s, 8, offset + 1, src);
			case '9':
				return A3($stil4m$elm_syntax$ParserFast$convert0OrMore0To9s, 9, offset + 1, src);
			default:
				return $stil4m$elm_syntax$ParserFast$errorAsOffsetAndInt;
		}
	});
var $stil4m$elm_syntax$ParserFast$integerDecimalMapWithRange = function (rangeAndIntToRes) {
	return $stil4m$elm_syntax$ParserFast$Parser(
		function (s0) {
			var s1 = A2($stil4m$elm_syntax$ParserFast$convertIntegerDecimal, s0.offset, s0.src);
			if (_Utils_eq(s1.offset, -1)) {
				return A2(
					$stil4m$elm_syntax$ParserFast$Bad,
					false,
					A2($stil4m$elm_syntax$ParserFast$ExpectingNumber, s0.row, s0.col));
			} else {
				var newColumn = s0.col + (s1.offset - s0.offset);
				return A2(
					$stil4m$elm_syntax$ParserFast$Good,
					A2(
						rangeAndIntToRes,
						{
							end: {column: newColumn, row: s0.row},
							start: {column: s0.col, row: s0.row}
						},
						s1._int),
					{col: newColumn, indent: s0.indent, offset: s1.offset, row: s0.row, src: s0.src});
			}
		});
};
var $stil4m$elm_syntax$ParserFast$map9WithRange = function (func) {
	return function (_v0) {
		return function (_v1) {
			return function (_v2) {
				return function (_v3) {
					return function (_v4) {
						return function (_v5) {
							return function (_v6) {
								return function (_v7) {
									return function (_v8) {
										var parseA = _v0.a;
										var parseB = _v1.a;
										var parseC = _v2.a;
										var parseD = _v3.a;
										var parseE = _v4.a;
										var parseF = _v5.a;
										var parseG = _v6.a;
										var parseH = _v7.a;
										var parseI = _v8.a;
										return $stil4m$elm_syntax$ParserFast$Parser(
											function (s0) {
												var _v9 = parseA(s0);
												if (_v9.$ === 'Bad') {
													var committed = _v9.a;
													var x = _v9.b;
													return A2($stil4m$elm_syntax$ParserFast$Bad, committed, x);
												} else {
													var a = _v9.a;
													var s1 = _v9.b;
													var _v10 = parseB(s1);
													if (_v10.$ === 'Bad') {
														var x = _v10.b;
														return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
													} else {
														var b = _v10.a;
														var s2 = _v10.b;
														var _v11 = parseC(s2);
														if (_v11.$ === 'Bad') {
															var x = _v11.b;
															return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
														} else {
															var c = _v11.a;
															var s3 = _v11.b;
															var _v12 = parseD(s3);
															if (_v12.$ === 'Bad') {
																var x = _v12.b;
																return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
															} else {
																var d = _v12.a;
																var s4 = _v12.b;
																var _v13 = parseE(s4);
																if (_v13.$ === 'Bad') {
																	var x = _v13.b;
																	return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
																} else {
																	var e = _v13.a;
																	var s5 = _v13.b;
																	var _v14 = parseF(s5);
																	if (_v14.$ === 'Bad') {
																		var x = _v14.b;
																		return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
																	} else {
																		var f = _v14.a;
																		var s6 = _v14.b;
																		var _v15 = parseG(s6);
																		if (_v15.$ === 'Bad') {
																			var x = _v15.b;
																			return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
																		} else {
																			var g = _v15.a;
																			var s7 = _v15.b;
																			var _v16 = parseH(s7);
																			if (_v16.$ === 'Bad') {
																				var x = _v16.b;
																				return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
																			} else {
																				var h = _v16.a;
																				var s8 = _v16.b;
																				var _v17 = parseI(s8);
																				if (_v17.$ === 'Bad') {
																					var x = _v17.b;
																					return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
																				} else {
																					var i = _v17.a;
																					var s9 = _v17.b;
																					return A2(
																						$stil4m$elm_syntax$ParserFast$Good,
																						func(
																							{
																								end: {column: s9.col, row: s9.row},
																								start: {column: s0.col, row: s0.row}
																							})(a)(b)(c)(d)(e)(f)(g)(h)(i),
																						s9);
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											});
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var $stil4m$elm_syntax$Elm$Parser$Declarations$infixDeclaration = $stil4m$elm_syntax$ParserFast$map9WithRange(
	function (range) {
		return function (commentsAfterInfix) {
			return function (direction) {
				return function (commentsAfterDirection) {
					return function (precedence) {
						return function (commentsAfterPrecedence) {
							return function (operator) {
								return function (commentsAfterOperator) {
									return function (commentsAfterEqual) {
										return function (fn) {
											return {
												comments: A2(
													$stil4m$elm_syntax$Rope$prependTo,
													commentsAfterEqual,
													A2(
														$stil4m$elm_syntax$Rope$prependTo,
														commentsAfterOperator,
														A2(
															$stil4m$elm_syntax$Rope$prependTo,
															commentsAfterPrecedence,
															A2($stil4m$elm_syntax$Rope$prependTo, commentsAfterDirection, commentsAfterInfix)))),
												syntax: A2(
													$stil4m$elm_syntax$Elm$Syntax$Node$Node,
													range,
													$stil4m$elm_syntax$Elm$Syntax$Declaration$InfixDeclaration(
														{direction: direction, _function: fn, operator: operator, precedence: precedence}))
											};
										};
									};
								};
							};
						};
					};
				};
			};
		};
	})(
	A2($stil4m$elm_syntax$ParserFast$keywordFollowedBy, 'infix', $stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout))($stil4m$elm_syntax$Elm$Parser$Declarations$infixDirection)($stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout)(
	$stil4m$elm_syntax$ParserFast$integerDecimalMapWithRange($stil4m$elm_syntax$Elm$Syntax$Node$Node))($stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout)(
	A2(
		$stil4m$elm_syntax$ParserFast$symbolFollowedBy,
		'(',
		A4(
			$stil4m$elm_syntax$ParserFast$whileWithoutLinebreakAnd2PartUtf16ValidateMapWithRangeBacktrackableFollowedBySymbol,
			F2(
				function (operatorRange, operator) {
					return A2(
						$stil4m$elm_syntax$Elm$Syntax$Node$Node,
						{
							end: {column: operatorRange.end.column + 1, row: operatorRange.end.row},
							start: {column: operatorRange.start.column - 1, row: operatorRange.start.row}
						},
						operator);
				}),
			$stil4m$elm_syntax$Elm$Parser$Tokens$isOperatorSymbolChar,
			$stil4m$elm_syntax$Elm$Parser$Tokens$isAllowedOperatorToken,
			')')))($stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout)(
	A2($stil4m$elm_syntax$ParserFast$symbolFollowedBy, '=', $stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout))($stil4m$elm_syntax$Elm$Parser$Tokens$functionNameNode);
var $stil4m$elm_syntax$ParserFast$oneOf5 = F5(
	function (_v0, _v1, _v2, _v3, _v4) {
		var attemptFirst = _v0.a;
		var attemptSecond = _v1.a;
		var attemptThird = _v2.a;
		var attemptFourth = _v3.a;
		var attemptFifth = _v4.a;
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s) {
				var _v5 = attemptFirst(s);
				if (_v5.$ === 'Good') {
					var firstGood = _v5;
					return firstGood;
				} else {
					var firstBad = _v5;
					var firstCommitted = firstBad.a;
					var firstX = firstBad.b;
					if (firstCommitted) {
						return firstBad;
					} else {
						var _v6 = attemptSecond(s);
						if (_v6.$ === 'Good') {
							var secondGood = _v6;
							return secondGood;
						} else {
							var secondBad = _v6;
							var secondCommitted = secondBad.a;
							var secondX = secondBad.b;
							if (secondCommitted) {
								return secondBad;
							} else {
								var _v7 = attemptThird(s);
								if (_v7.$ === 'Good') {
									var thirdGood = _v7;
									return thirdGood;
								} else {
									var thirdBad = _v7;
									var thirdCommitted = thirdBad.a;
									var thirdX = thirdBad.b;
									if (thirdCommitted) {
										return thirdBad;
									} else {
										var _v8 = attemptFourth(s);
										if (_v8.$ === 'Good') {
											var fourthGood = _v8;
											return fourthGood;
										} else {
											var fourthBad = _v8;
											var fourthCommitted = fourthBad.a;
											var fourthX = fourthBad.b;
											if (fourthCommitted) {
												return fourthBad;
											} else {
												var _v9 = attemptFifth(s);
												if (_v9.$ === 'Good') {
													var fifthGood = _v9;
													return fifthGood;
												} else {
													var fifthBad = _v9;
													var fifthCommitted = fifthBad.a;
													var fifthX = fifthBad.b;
													return fifthCommitted ? fifthBad : A2(
														$stil4m$elm_syntax$ParserFast$Bad,
														false,
														A3(
															$stil4m$elm_syntax$ParserFast$ExpectingOneOf,
															firstX,
															secondX,
															_List_fromArray(
																[thirdX, fourthX, fifthX])));
												}
											}
										}
									}
								}
							}
						}
					}
				}
			});
	});
var $stil4m$elm_syntax$Elm$Parser$Declarations$portDeclarationWithoutDocumentation = A6(
	$stil4m$elm_syntax$ParserFast$map5,
	F5(
		function (commentsAfterPort, name, commentsAfterName, commentsAfterColon, typeAnnotationResult) {
			var nameRange = name.a;
			var _v0 = typeAnnotationResult.syntax;
			var end = _v0.a.end;
			return {
				comments: A2(
					$stil4m$elm_syntax$Rope$prependTo,
					typeAnnotationResult.comments,
					A2(
						$stil4m$elm_syntax$Rope$prependTo,
						commentsAfterColon,
						A2($stil4m$elm_syntax$Rope$prependTo, commentsAfterName, commentsAfterPort))),
				syntax: A2(
					$stil4m$elm_syntax$Elm$Syntax$Node$Node,
					{
						end: end,
						start: {column: 1, row: nameRange.start.row}
					},
					$stil4m$elm_syntax$Elm$Syntax$Declaration$PortDeclaration(
						{name: name, typeAnnotation: typeAnnotationResult.syntax}))
			};
		}),
	A2($stil4m$elm_syntax$ParserFast$keywordFollowedBy, 'port', $stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout),
	$stil4m$elm_syntax$Elm$Parser$Tokens$functionNameNode,
	$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
	A2($stil4m$elm_syntax$ParserFast$symbolFollowedBy, ':', $stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout),
	$stil4m$elm_syntax$Elm$Parser$TypeAnnotation$typeAnnotation);
var $stil4m$elm_syntax$Elm$Parser$Declarations$TypeDeclarationWithoutDocumentation = function (a) {
	return {$: 'TypeDeclarationWithoutDocumentation', a: a};
};
var $stil4m$elm_syntax$Elm$Parser$Declarations$customTypeDefinitionWithoutDocumentationAfterTypePrefix = A7(
	$stil4m$elm_syntax$ParserFast$map6,
	F6(
		function (name, commentsAfterName, parameters, commentsAfterEqual, headVariant, tailVariantsReverse) {
			return {
				comments: A2(
					$stil4m$elm_syntax$Rope$prependTo,
					tailVariantsReverse.comments,
					A2(
						$stil4m$elm_syntax$Rope$prependTo,
						headVariant.comments,
						A2(
							$stil4m$elm_syntax$Rope$prependTo,
							commentsAfterEqual,
							A2($stil4m$elm_syntax$Rope$prependTo, parameters.comments, commentsAfterName)))),
				syntax: $stil4m$elm_syntax$Elm$Parser$Declarations$TypeDeclarationWithoutDocumentation(
					{headVariant: headVariant.syntax, name: name, parameters: parameters.syntax, tailVariantsReverse: tailVariantsReverse.syntax})
			};
		}),
	$stil4m$elm_syntax$Elm$Parser$Tokens$typeNameNode,
	$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
	$stil4m$elm_syntax$Elm$Parser$Declarations$typeGenericListEquals,
	$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
	$stil4m$elm_syntax$Elm$Parser$Declarations$valueConstructorOptimisticLayout,
	$stil4m$elm_syntax$ParserWithComments$manyWithoutReverse(
		A2(
			$stil4m$elm_syntax$ParserFast$symbolFollowedBy,
			'|',
			A2(
				$stil4m$elm_syntax$Elm$Parser$Layout$positivelyIndentedPlusFollowedBy,
				1,
				A3(
					$stil4m$elm_syntax$ParserFast$map2,
					F2(
						function (commentsBeforePipe, variantResult) {
							return {
								comments: A2($stil4m$elm_syntax$Rope$prependTo, variantResult.comments, commentsBeforePipe),
								syntax: variantResult.syntax
							};
						}),
					$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
					$stil4m$elm_syntax$Elm$Parser$Declarations$valueConstructorOptimisticLayout)))));
var $stil4m$elm_syntax$ParserFast$map2WithStartLocation = F3(
	function (func, _v0, _v1) {
		var parseA = _v0.a;
		var parseB = _v1.a;
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s0) {
				var _v2 = parseA(s0);
				if (_v2.$ === 'Bad') {
					var committed = _v2.a;
					var x = _v2.b;
					return A2($stil4m$elm_syntax$ParserFast$Bad, committed, x);
				} else {
					var a = _v2.a;
					var s1 = _v2.b;
					var _v3 = parseB(s1);
					if (_v3.$ === 'Bad') {
						var x = _v3.b;
						return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
					} else {
						var b = _v3.a;
						var s2 = _v3.b;
						return A2(
							$stil4m$elm_syntax$ParserFast$Good,
							A3(
								func,
								{column: s0.col, row: s0.row},
								a,
								b),
							s2);
					}
				}
			});
	});
var $stil4m$elm_syntax$Elm$Parser$Declarations$TypeAliasDeclarationWithoutDocumentation = function (a) {
	return {$: 'TypeAliasDeclarationWithoutDocumentation', a: a};
};
var $stil4m$elm_syntax$Elm$Parser$Declarations$typeAliasDefinitionWithoutDocumentationAfterTypePrefix = A7(
	$stil4m$elm_syntax$ParserFast$map6,
	F6(
		function (commentsAfterAlias, name, commentsAfterName, parameters, commentsAfterEqual, typeAnnotationResult) {
			return {
				comments: A2(
					$stil4m$elm_syntax$Rope$prependTo,
					typeAnnotationResult.comments,
					A2(
						$stil4m$elm_syntax$Rope$prependTo,
						commentsAfterEqual,
						A2(
							$stil4m$elm_syntax$Rope$prependTo,
							parameters.comments,
							A2($stil4m$elm_syntax$Rope$prependTo, commentsAfterName, commentsAfterAlias)))),
				syntax: $stil4m$elm_syntax$Elm$Parser$Declarations$TypeAliasDeclarationWithoutDocumentation(
					{name: name, parameters: parameters.syntax, typeAnnotation: typeAnnotationResult.syntax})
			};
		}),
	A2($stil4m$elm_syntax$ParserFast$keywordFollowedBy, 'alias', $stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout),
	$stil4m$elm_syntax$Elm$Parser$Tokens$typeNameNode,
	$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
	$stil4m$elm_syntax$Elm$Parser$Declarations$typeGenericListEquals,
	$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
	$stil4m$elm_syntax$Elm$Parser$TypeAnnotation$typeAnnotation);
var $stil4m$elm_syntax$Elm$Parser$Declarations$typeOrTypeAliasDefinitionWithoutDocumentation = A3(
	$stil4m$elm_syntax$ParserFast$map2WithStartLocation,
	F3(
		function (start, commentsAfterType, afterStart) {
			var allComments = A2($stil4m$elm_syntax$Rope$prependTo, afterStart.comments, commentsAfterType);
			var _v0 = afterStart.syntax;
			if (_v0.$ === 'TypeDeclarationWithoutDocumentation') {
				var typeDeclarationAfterDocumentation = _v0.a;
				var end = function () {
					var _v1 = typeDeclarationAfterDocumentation.tailVariantsReverse;
					if (_v1.b) {
						var _v2 = _v1.a;
						var range = _v2.a;
						return range.end;
					} else {
						var _v3 = typeDeclarationAfterDocumentation.headVariant;
						var headVariantRange = _v3.a;
						return headVariantRange.end;
					}
				}();
				return {
					comments: allComments,
					syntax: A2(
						$stil4m$elm_syntax$Elm$Syntax$Node$Node,
						{end: end, start: start},
						$stil4m$elm_syntax$Elm$Syntax$Declaration$CustomTypeDeclaration(
							{
								constructors: A2(
									$elm$core$List$cons,
									typeDeclarationAfterDocumentation.headVariant,
									$elm$core$List$reverse(typeDeclarationAfterDocumentation.tailVariantsReverse)),
								documentation: $elm$core$Maybe$Nothing,
								generics: typeDeclarationAfterDocumentation.parameters,
								name: typeDeclarationAfterDocumentation.name
							}))
				};
			} else {
				var typeAliasDeclarationAfterDocumentation = _v0.a;
				var _v4 = typeAliasDeclarationAfterDocumentation.typeAnnotation;
				var typeAnnotationRange = _v4.a;
				return {
					comments: allComments,
					syntax: A2(
						$stil4m$elm_syntax$Elm$Syntax$Node$Node,
						{end: typeAnnotationRange.end, start: start},
						$stil4m$elm_syntax$Elm$Syntax$Declaration$AliasDeclaration(
							{documentation: $elm$core$Maybe$Nothing, generics: typeAliasDeclarationAfterDocumentation.parameters, name: typeAliasDeclarationAfterDocumentation.name, typeAnnotation: typeAliasDeclarationAfterDocumentation.typeAnnotation}))
				};
			}
		}),
	A2($stil4m$elm_syntax$ParserFast$keywordFollowedBy, 'type', $stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout),
	A2($stil4m$elm_syntax$ParserFast$oneOf2, $stil4m$elm_syntax$Elm$Parser$Declarations$typeAliasDefinitionWithoutDocumentationAfterTypePrefix, $stil4m$elm_syntax$Elm$Parser$Declarations$customTypeDefinitionWithoutDocumentationAfterTypePrefix));
var $stil4m$elm_syntax$Elm$Parser$Declarations$declaration = A5($stil4m$elm_syntax$ParserFast$oneOf5, $stil4m$elm_syntax$Elm$Parser$Declarations$functionDeclarationWithoutDocumentation, $stil4m$elm_syntax$Elm$Parser$Declarations$declarationWithDocumentation, $stil4m$elm_syntax$Elm$Parser$Declarations$typeOrTypeAliasDefinitionWithoutDocumentation, $stil4m$elm_syntax$Elm$Parser$Declarations$portDeclarationWithoutDocumentation, $stil4m$elm_syntax$Elm$Parser$Declarations$infixDeclaration);
var $stil4m$elm_syntax$ParserFast$columnAndThen = function (callback) {
	return $stil4m$elm_syntax$ParserFast$Parser(
		function (s) {
			var _v0 = callback(s.col);
			var parse = _v0.a;
			return parse(s);
		});
};
var $stil4m$elm_syntax$Elm$Parser$Layout$problemModuleLevelIndentation = $stil4m$elm_syntax$ParserFast$problem('must be on module-level indentation');
var $stil4m$elm_syntax$Elm$Parser$Layout$moduleLevelIndentationFollowedBy = function (nextParser) {
	return $stil4m$elm_syntax$ParserFast$columnAndThen(
		function (column) {
			return (column === 1) ? nextParser : $stil4m$elm_syntax$Elm$Parser$Layout$problemModuleLevelIndentation;
		});
};
var $stil4m$elm_syntax$Elm$Parser$File$fileDeclarations = $stil4m$elm_syntax$ParserWithComments$many(
	$stil4m$elm_syntax$Elm$Parser$Layout$moduleLevelIndentationFollowedBy(
		A3(
			$stil4m$elm_syntax$ParserFast$map2,
			F2(
				function (declarationParsed, commentsAfter) {
					return {
						comments: A2($stil4m$elm_syntax$Rope$prependTo, commentsAfter, declarationParsed.comments),
						syntax: declarationParsed.syntax
					};
				}),
			$stil4m$elm_syntax$Elm$Parser$Declarations$declaration,
			$stil4m$elm_syntax$Elm$Parser$Layout$optimisticLayout)));
var $stil4m$elm_syntax$Elm$Syntax$Exposing$All = function (a) {
	return {$: 'All', a: a};
};
var $stil4m$elm_syntax$Elm$Syntax$Exposing$Explicit = function (a) {
	return {$: 'Explicit', a: a};
};
var $stil4m$elm_syntax$Elm$Syntax$Exposing$FunctionExpose = function (a) {
	return {$: 'FunctionExpose', a: a};
};
var $stil4m$elm_syntax$Elm$Parser$Expose$functionExpose = $stil4m$elm_syntax$Elm$Parser$Tokens$functionNameMapWithRange(
	F2(
		function (range, name) {
			return {
				comments: $stil4m$elm_syntax$Rope$empty,
				syntax: A2(
					$stil4m$elm_syntax$Elm$Syntax$Node$Node,
					range,
					$stil4m$elm_syntax$Elm$Syntax$Exposing$FunctionExpose(name))
			};
		}));
var $stil4m$elm_syntax$Elm$Syntax$Exposing$InfixExpose = function (a) {
	return {$: 'InfixExpose', a: a};
};
var $stil4m$elm_syntax$Elm$Parser$Tokens$parensEnd = A2($stil4m$elm_syntax$ParserFast$symbol, ')', _Utils_Tuple0);
var $stil4m$elm_syntax$Elm$Parser$Expose$infixExpose = A3(
	$stil4m$elm_syntax$ParserFast$map2WithRange,
	F3(
		function (range, infixName, _v0) {
			return {
				comments: $stil4m$elm_syntax$Rope$empty,
				syntax: A2(
					$stil4m$elm_syntax$Elm$Syntax$Node$Node,
					range,
					$stil4m$elm_syntax$Elm$Syntax$Exposing$InfixExpose(infixName))
			};
		}),
	A2(
		$stil4m$elm_syntax$ParserFast$symbolFollowedBy,
		'(',
		A2(
			$stil4m$elm_syntax$ParserFast$ifFollowedByWhileWithoutLinebreak,
			function (c) {
				switch (c.valueOf()) {
					case ')':
						return false;
					case '\n':
						return false;
					case ' ':
						return false;
					default:
						return true;
				}
			},
			function (c) {
				switch (c.valueOf()) {
					case ')':
						return false;
					case '\n':
						return false;
					case ' ':
						return false;
					default:
						return true;
				}
			})),
	$stil4m$elm_syntax$Elm$Parser$Tokens$parensEnd);
var $stil4m$elm_syntax$Elm$Syntax$Exposing$TypeExpose = function (a) {
	return {$: 'TypeExpose', a: a};
};
var $stil4m$elm_syntax$Elm$Syntax$Exposing$TypeOrAliasExpose = function (a) {
	return {$: 'TypeOrAliasExpose', a: a};
};
var $stil4m$elm_syntax$ParserFast$map2WithRangeOrSucceed = F4(
	function (func, _v0, _v1, fallback) {
		var parseA = _v0.a;
		var parseB = _v1.a;
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s0) {
				var _v2 = parseA(s0);
				if (_v2.$ === 'Bad') {
					var c1 = _v2.a;
					var x = _v2.b;
					return c1 ? A2($stil4m$elm_syntax$ParserFast$Bad, true, x) : A2($stil4m$elm_syntax$ParserFast$Good, fallback, s0);
				} else {
					var a = _v2.a;
					var s1 = _v2.b;
					var _v3 = parseB(s1);
					if (_v3.$ === 'Bad') {
						var x = _v3.b;
						return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
					} else {
						var b = _v3.a;
						var s2 = _v3.b;
						return A2(
							$stil4m$elm_syntax$ParserFast$Good,
							A3(
								func,
								{
									end: {column: s2.col, row: s2.row},
									start: {column: s0.col, row: s0.row}
								},
								a,
								b),
							s2);
					}
				}
			});
	});
var $stil4m$elm_syntax$Elm$Parser$Expose$typeExpose = A4(
	$stil4m$elm_syntax$ParserFast$map3,
	F3(
		function (_v0, commentsBeforeMaybeOpen, maybeOpen) {
			var typeNameRange = _v0.a;
			var typeName = _v0.b;
			return {
				comments: A2($stil4m$elm_syntax$Rope$prependTo, maybeOpen.comments, commentsBeforeMaybeOpen),
				syntax: function () {
					var _v1 = maybeOpen.syntax;
					if (_v1.$ === 'Nothing') {
						return A2(
							$stil4m$elm_syntax$Elm$Syntax$Node$Node,
							typeNameRange,
							$stil4m$elm_syntax$Elm$Syntax$Exposing$TypeOrAliasExpose(typeName));
					} else {
						var openRange = _v1.a;
						return A2(
							$stil4m$elm_syntax$Elm$Syntax$Node$Node,
							{end: openRange.end, start: typeNameRange.start},
							$stil4m$elm_syntax$Elm$Syntax$Exposing$TypeExpose(
								{name: typeName, open: maybeOpen.syntax}));
					}
				}()
			};
		}),
	$stil4m$elm_syntax$Elm$Parser$Tokens$typeNameNode,
	$stil4m$elm_syntax$Elm$Parser$Layout$optimisticLayout,
	A4(
		$stil4m$elm_syntax$ParserFast$map2WithRangeOrSucceed,
		F3(
			function (range, left, right) {
				return {
					comments: A2($stil4m$elm_syntax$Rope$prependTo, right, left),
					syntax: $elm$core$Maybe$Just(range)
				};
			}),
		A2($stil4m$elm_syntax$ParserFast$symbolFollowedBy, '(', $stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout),
		A2(
			$stil4m$elm_syntax$ParserFast$followedBySymbol,
			')',
			A2($stil4m$elm_syntax$ParserFast$symbolFollowedBy, '..', $stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout)),
		{comments: $stil4m$elm_syntax$Rope$empty, syntax: $elm$core$Maybe$Nothing}));
var $stil4m$elm_syntax$Elm$Parser$Expose$exposable = A3($stil4m$elm_syntax$ParserFast$oneOf3, $stil4m$elm_syntax$Elm$Parser$Expose$functionExpose, $stil4m$elm_syntax$Elm$Parser$Expose$typeExpose, $stil4m$elm_syntax$Elm$Parser$Expose$infixExpose);
var $stil4m$elm_syntax$Elm$Parser$Expose$exposingListInner = A2(
	$stil4m$elm_syntax$ParserFast$oneOf2,
	A4(
		$stil4m$elm_syntax$ParserFast$map3,
		F3(
			function (headElement, commentsAfterHeadElement, tailElements) {
				return {
					comments: A2(
						$stil4m$elm_syntax$Rope$prependTo,
						tailElements.comments,
						A2($stil4m$elm_syntax$Rope$prependTo, commentsAfterHeadElement, headElement.comments)),
					syntax: $stil4m$elm_syntax$Elm$Syntax$Exposing$Explicit(
						A2($elm$core$List$cons, headElement.syntax, tailElements.syntax))
				};
			}),
		$stil4m$elm_syntax$Elm$Parser$Expose$exposable,
		$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
		$stil4m$elm_syntax$ParserWithComments$many(
			A2(
				$stil4m$elm_syntax$ParserFast$symbolFollowedBy,
				',',
				$stil4m$elm_syntax$Elm$Parser$Layout$maybeAroundBothSides($stil4m$elm_syntax$Elm$Parser$Expose$exposable)))),
	A2(
		$stil4m$elm_syntax$ParserFast$mapWithRange,
		F2(
			function (range, commentsAfterDotDot) {
				return {
					comments: commentsAfterDotDot,
					syntax: $stil4m$elm_syntax$Elm$Syntax$Exposing$All(range)
				};
			}),
		A2($stil4m$elm_syntax$ParserFast$symbolFollowedBy, '..', $stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout)));
var $stil4m$elm_syntax$Elm$Parser$Expose$exposeDefinition = A4(
	$stil4m$elm_syntax$ParserFast$map3WithRange,
	F4(
		function (range, commentsAfterExposing, commentsBefore, exposingListInnerResult) {
			return {
				comments: A2(
					$stil4m$elm_syntax$Rope$prependTo,
					exposingListInnerResult.comments,
					A2($stil4m$elm_syntax$Rope$prependTo, commentsBefore, commentsAfterExposing)),
				syntax: A2($stil4m$elm_syntax$Elm$Syntax$Node$Node, range, exposingListInnerResult.syntax)
			};
		}),
	A2($stil4m$elm_syntax$ParserFast$symbolFollowedBy, 'exposing', $stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout),
	A2($stil4m$elm_syntax$ParserFast$symbolFollowedBy, '(', $stil4m$elm_syntax$Elm$Parser$Layout$optimisticLayout),
	A2($stil4m$elm_syntax$ParserFast$followedBySymbol, ')', $stil4m$elm_syntax$Elm$Parser$Expose$exposingListInner));
var $stil4m$elm_syntax$ParserFast$map3OrSucceed = F5(
	function (func, _v0, _v1, _v2, fallback) {
		var parseA = _v0.a;
		var parseB = _v1.a;
		var parseC = _v2.a;
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s0) {
				var _v3 = parseA(s0);
				if (_v3.$ === 'Bad') {
					var c1 = _v3.a;
					var x = _v3.b;
					return c1 ? A2($stil4m$elm_syntax$ParserFast$Bad, true, x) : A2($stil4m$elm_syntax$ParserFast$Good, fallback, s0);
				} else {
					var a = _v3.a;
					var s1 = _v3.b;
					var _v4 = parseB(s1);
					if (_v4.$ === 'Bad') {
						var x = _v4.b;
						return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
					} else {
						var b = _v4.a;
						var s2 = _v4.b;
						var _v5 = parseC(s2);
						if (_v5.$ === 'Bad') {
							var x = _v5.b;
							return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
						} else {
							var c = _v5.a;
							var s3 = _v5.b;
							return A2(
								$stil4m$elm_syntax$ParserFast$Good,
								A3(func, a, b, c),
								s3);
						}
					}
				}
			});
	});
function $stil4m$elm_syntax$Elm$Parser$Base$cyclic$moduleNameOrEmpty() {
	return A4(
		$stil4m$elm_syntax$ParserFast$map2OrSucceed,
		F2(
			function (head, tail) {
				return A2($elm$core$List$cons, head, tail);
			}),
		A2($stil4m$elm_syntax$ParserFast$symbolFollowedBy, '.', $stil4m$elm_syntax$Elm$Parser$Tokens$typeName),
		$stil4m$elm_syntax$ParserFast$lazy(
			function (_v0) {
				return $stil4m$elm_syntax$Elm$Parser$Base$cyclic$moduleNameOrEmpty();
			}),
		_List_Nil);
}
try {
	var $stil4m$elm_syntax$Elm$Parser$Base$moduleNameOrEmpty = $stil4m$elm_syntax$Elm$Parser$Base$cyclic$moduleNameOrEmpty();
	$stil4m$elm_syntax$Elm$Parser$Base$cyclic$moduleNameOrEmpty = function () {
		return $stil4m$elm_syntax$Elm$Parser$Base$moduleNameOrEmpty;
	};
} catch ($) {
	throw 'Some top-level definitions from `Elm.Parser.Base` are causing infinite recursion:\n\n  ┌─────┐\n  │    moduleNameOrEmpty\n  └─────┘\n\nThese errors are very tricky, so read https://elm-lang.org/0.19.1/bad-recursion to learn how to fix it!';}
var $stil4m$elm_syntax$Elm$Parser$Base$moduleName = A3(
	$stil4m$elm_syntax$ParserFast$map2WithRange,
	F3(
		function (range, head, tail) {
			return A2(
				$stil4m$elm_syntax$Elm$Syntax$Node$Node,
				range,
				A2($elm$core$List$cons, head, tail));
		}),
	$stil4m$elm_syntax$Elm$Parser$Tokens$typeName,
	$stil4m$elm_syntax$Elm$Parser$Base$moduleNameOrEmpty);
var $stil4m$elm_syntax$Elm$Parser$Tokens$typeNameMapWithRange = function (rangeAndNameToRes) {
	return A3($stil4m$elm_syntax$ParserFast$ifFollowedByWhileMapWithRangeWithoutLinebreak, rangeAndNameToRes, $stil4m$elm_syntax$Char$Extra$unicodeIsUpperFast, $stil4m$elm_syntax$Char$Extra$unicodeIsAlphaNumOrUnderscoreFast);
};
var $stil4m$elm_syntax$Elm$Parser$Imports$importDefinition = A6(
	$stil4m$elm_syntax$ParserFast$map5WithStartLocation,
	F6(
		function (start, commentsAfterImport, mod, commentsAfterModuleName, maybeModuleAlias, maybeExposingList) {
			var commentsBeforeAlias = A2($stil4m$elm_syntax$Rope$prependTo, commentsAfterModuleName, commentsAfterImport);
			if (maybeModuleAlias.$ === 'Nothing') {
				if (maybeExposingList.$ === 'Nothing') {
					var _v2 = mod;
					var modRange = _v2.a;
					return {
						comments: commentsBeforeAlias,
						syntax: A2(
							$stil4m$elm_syntax$Elm$Syntax$Node$Node,
							{end: modRange.end, start: start},
							{exposingList: $elm$core$Maybe$Nothing, moduleAlias: $elm$core$Maybe$Nothing, moduleName: mod})
					};
				} else {
					var exposingListValue = maybeExposingList.a;
					var _v3 = exposingListValue.syntax;
					var exposingRange = _v3.a;
					return {
						comments: A2($stil4m$elm_syntax$Rope$prependTo, exposingListValue.comments, commentsBeforeAlias),
						syntax: A2(
							$stil4m$elm_syntax$Elm$Syntax$Node$Node,
							{end: exposingRange.end, start: start},
							{
								exposingList: $elm$core$Maybe$Just(exposingListValue.syntax),
								moduleAlias: $elm$core$Maybe$Nothing,
								moduleName: mod
							})
					};
				}
			} else {
				var moduleAliasResult = maybeModuleAlias.a;
				if (maybeExposingList.$ === 'Nothing') {
					var _v5 = moduleAliasResult.syntax;
					var aliasRange = _v5.a;
					return {
						comments: A2($stil4m$elm_syntax$Rope$prependTo, moduleAliasResult.comments, commentsBeforeAlias),
						syntax: A2(
							$stil4m$elm_syntax$Elm$Syntax$Node$Node,
							{end: aliasRange.end, start: start},
							{
								exposingList: $elm$core$Maybe$Nothing,
								moduleAlias: $elm$core$Maybe$Just(moduleAliasResult.syntax),
								moduleName: mod
							})
					};
				} else {
					var exposingListValue = maybeExposingList.a;
					var _v6 = exposingListValue.syntax;
					var exposingRange = _v6.a;
					return {
						comments: A2(
							$stil4m$elm_syntax$Rope$prependTo,
							exposingListValue.comments,
							A2($stil4m$elm_syntax$Rope$prependTo, moduleAliasResult.comments, commentsBeforeAlias)),
						syntax: A2(
							$stil4m$elm_syntax$Elm$Syntax$Node$Node,
							{end: exposingRange.end, start: start},
							{
								exposingList: $elm$core$Maybe$Just(exposingListValue.syntax),
								moduleAlias: $elm$core$Maybe$Just(moduleAliasResult.syntax),
								moduleName: mod
							})
					};
				}
			}
		}),
	A2($stil4m$elm_syntax$ParserFast$keywordFollowedBy, 'import', $stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout),
	$stil4m$elm_syntax$Elm$Parser$Base$moduleName,
	$stil4m$elm_syntax$Elm$Parser$Layout$optimisticLayout,
	A5(
		$stil4m$elm_syntax$ParserFast$map3OrSucceed,
		F3(
			function (commentsBefore, moduleAliasNode, commentsAfter) {
				return $elm$core$Maybe$Just(
					{
						comments: A2($stil4m$elm_syntax$Rope$prependTo, commentsAfter, commentsBefore),
						syntax: moduleAliasNode
					});
			}),
		A2($stil4m$elm_syntax$ParserFast$keywordFollowedBy, 'as', $stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout),
		$stil4m$elm_syntax$Elm$Parser$Tokens$typeNameMapWithRange(
			F2(
				function (range, moduleAlias) {
					return A2(
						$stil4m$elm_syntax$Elm$Syntax$Node$Node,
						range,
						_List_fromArray(
							[moduleAlias]));
				})),
		$stil4m$elm_syntax$Elm$Parser$Layout$optimisticLayout,
		$elm$core$Maybe$Nothing),
	A4(
		$stil4m$elm_syntax$ParserFast$map2OrSucceed,
		F2(
			function (exposingResult, commentsAfter) {
				return $elm$core$Maybe$Just(
					{
						comments: A2($stil4m$elm_syntax$Rope$prependTo, commentsAfter, exposingResult.comments),
						syntax: exposingResult.syntax
					});
			}),
		$stil4m$elm_syntax$Elm$Parser$Expose$exposeDefinition,
		$stil4m$elm_syntax$Elm$Parser$Layout$optimisticLayout,
		$elm$core$Maybe$Nothing));
var $stil4m$elm_syntax$Elm$Parser$Layout$endsTopIndented = function (parser) {
	return A3(
		$stil4m$elm_syntax$ParserFast$validateEndColumnIndentation,
		F2(
			function (column, indent) {
				return !(column - indent);
			}),
		'must be on top indentation',
		parser);
};
var $stil4m$elm_syntax$Elm$Parser$Layout$layoutStrict = $stil4m$elm_syntax$Elm$Parser$Layout$endsTopIndented($stil4m$elm_syntax$Elm$Parser$Layout$optimisticLayout);
var $stil4m$elm_syntax$Elm$Parser$Layout$layoutStrictFollowedByComments = function (nextParser) {
	return A3(
		$stil4m$elm_syntax$ParserFast$map2,
		F2(
			function (commentsBefore, afterComments) {
				return A2($stil4m$elm_syntax$Rope$prependTo, afterComments, commentsBefore);
			}),
		$stil4m$elm_syntax$Elm$Parser$Layout$optimisticLayout,
		$stil4m$elm_syntax$Elm$Parser$Layout$onTopIndentationFollowedBy(nextParser));
};
var $stil4m$elm_syntax$Elm$Syntax$Module$EffectModule = function (a) {
	return {$: 'EffectModule', a: a};
};
var $stil4m$elm_syntax$Elm$Parser$Modules$effectWhereClause = A5(
	$stil4m$elm_syntax$ParserFast$map4,
	F4(
		function (fnName, commentsAfterFnName, commentsAfterEqual, typeName_) {
			return {
				comments: A2($stil4m$elm_syntax$Rope$prependTo, commentsAfterEqual, commentsAfterFnName),
				syntax: _Utils_Tuple2(fnName, typeName_)
			};
		}),
	$stil4m$elm_syntax$Elm$Parser$Tokens$functionName,
	$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
	A2($stil4m$elm_syntax$ParserFast$symbolFollowedBy, '=', $stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout),
	$stil4m$elm_syntax$Elm$Parser$Tokens$typeNameNode);
var $stil4m$elm_syntax$List$Extra$find = F2(
	function (predicate, list) {
		find:
		while (true) {
			if (!list.b) {
				return $elm$core$Maybe$Nothing;
			} else {
				var x = list.a;
				var xs = list.b;
				if (predicate(x)) {
					return $elm$core$Maybe$Just(x);
				} else {
					var $temp$predicate = predicate,
						$temp$list = xs;
					predicate = $temp$predicate;
					list = $temp$list;
					continue find;
				}
			}
		}
	});
var $elm$core$Tuple$second = function (_v0) {
	var y = _v0.b;
	return y;
};
var $stil4m$elm_syntax$Elm$Parser$Modules$whereBlock = A2(
	$stil4m$elm_syntax$ParserFast$followedBySymbol,
	'}',
	A2(
		$stil4m$elm_syntax$ParserFast$symbolFollowedBy,
		'{',
		A5(
			$stil4m$elm_syntax$ParserFast$map4,
			F4(
				function (commentsBeforeHead, head, commentsAfterHead, tail) {
					var pairs = A2($elm$core$List$cons, head.syntax, tail.syntax);
					return {
						comments: A2(
							$stil4m$elm_syntax$Rope$prependTo,
							tail.comments,
							A2(
								$stil4m$elm_syntax$Rope$prependTo,
								commentsAfterHead,
								A2($stil4m$elm_syntax$Rope$prependTo, head.comments, commentsBeforeHead))),
						syntax: {
							command: A2(
								$elm$core$Maybe$map,
								$elm$core$Tuple$second,
								A2(
									$stil4m$elm_syntax$List$Extra$find,
									function (_v0) {
										var fnName = _v0.a;
										return fnName === 'command';
									},
									pairs)),
							subscription: A2(
								$elm$core$Maybe$map,
								$elm$core$Tuple$second,
								A2(
									$stil4m$elm_syntax$List$Extra$find,
									function (_v1) {
										var fnName = _v1.a;
										return fnName === 'subscription';
									},
									pairs))
						}
					};
				}),
			$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
			$stil4m$elm_syntax$Elm$Parser$Modules$effectWhereClause,
			$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
			$stil4m$elm_syntax$ParserWithComments$many(
				A2(
					$stil4m$elm_syntax$ParserFast$symbolFollowedBy,
					',',
					$stil4m$elm_syntax$Elm$Parser$Layout$maybeAroundBothSides($stil4m$elm_syntax$Elm$Parser$Modules$effectWhereClause))))));
var $stil4m$elm_syntax$Elm$Parser$Modules$effectWhereClauses = A3(
	$stil4m$elm_syntax$ParserFast$map2,
	F2(
		function (commentsBefore, whereResult) {
			return {
				comments: A2($stil4m$elm_syntax$Rope$prependTo, whereResult.comments, commentsBefore),
				syntax: whereResult.syntax
			};
		}),
	A2($stil4m$elm_syntax$ParserFast$keywordFollowedBy, 'where', $stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout),
	$stil4m$elm_syntax$Elm$Parser$Modules$whereBlock);
var $stil4m$elm_syntax$ParserFast$map7WithRange = F8(
	function (func, _v0, _v1, _v2, _v3, _v4, _v5, _v6) {
		var parseA = _v0.a;
		var parseB = _v1.a;
		var parseC = _v2.a;
		var parseD = _v3.a;
		var parseE = _v4.a;
		var parseF = _v5.a;
		var parseG = _v6.a;
		return $stil4m$elm_syntax$ParserFast$Parser(
			function (s0) {
				var _v7 = parseA(s0);
				if (_v7.$ === 'Bad') {
					var committed = _v7.a;
					var x = _v7.b;
					return A2($stil4m$elm_syntax$ParserFast$Bad, committed, x);
				} else {
					var a = _v7.a;
					var s1 = _v7.b;
					var _v8 = parseB(s1);
					if (_v8.$ === 'Bad') {
						var x = _v8.b;
						return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
					} else {
						var b = _v8.a;
						var s2 = _v8.b;
						var _v9 = parseC(s2);
						if (_v9.$ === 'Bad') {
							var x = _v9.b;
							return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
						} else {
							var c = _v9.a;
							var s3 = _v9.b;
							var _v10 = parseD(s3);
							if (_v10.$ === 'Bad') {
								var x = _v10.b;
								return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
							} else {
								var d = _v10.a;
								var s4 = _v10.b;
								var _v11 = parseE(s4);
								if (_v11.$ === 'Bad') {
									var x = _v11.b;
									return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
								} else {
									var e = _v11.a;
									var s5 = _v11.b;
									var _v12 = parseF(s5);
									if (_v12.$ === 'Bad') {
										var x = _v12.b;
										return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
									} else {
										var f = _v12.a;
										var s6 = _v12.b;
										var _v13 = parseG(s6);
										if (_v13.$ === 'Bad') {
											var x = _v13.b;
											return A2($stil4m$elm_syntax$ParserFast$Bad, true, x);
										} else {
											var g = _v13.a;
											var s7 = _v13.b;
											return A2(
												$stil4m$elm_syntax$ParserFast$Good,
												A8(
													func,
													{
														end: {column: s7.col, row: s7.row},
														start: {column: s0.col, row: s0.row}
													},
													a,
													b,
													c,
													d,
													e,
													f,
													g),
												s7);
										}
									}
								}
							}
						}
					}
				}
			});
	});
var $stil4m$elm_syntax$Elm$Parser$Modules$effectModuleDefinition = A8(
	$stil4m$elm_syntax$ParserFast$map7WithRange,
	F8(
		function (range, commentsAfterEffect, commentsAfterModule, name, commentsAfterName, whereClauses, commentsAfterWhereClauses, exp) {
			return {
				comments: A2(
					$stil4m$elm_syntax$Rope$prependTo,
					exp.comments,
					A2(
						$stil4m$elm_syntax$Rope$prependTo,
						commentsAfterWhereClauses,
						A2(
							$stil4m$elm_syntax$Rope$prependTo,
							whereClauses.comments,
							A2(
								$stil4m$elm_syntax$Rope$prependTo,
								commentsAfterName,
								A2($stil4m$elm_syntax$Rope$prependTo, commentsAfterModule, commentsAfterEffect))))),
				syntax: A2(
					$stil4m$elm_syntax$Elm$Syntax$Node$Node,
					range,
					$stil4m$elm_syntax$Elm$Syntax$Module$EffectModule(
						{command: whereClauses.syntax.command, exposingList: exp.syntax, moduleName: name, subscription: whereClauses.syntax.subscription}))
			};
		}),
	A2($stil4m$elm_syntax$ParserFast$keywordFollowedBy, 'effect', $stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout),
	A2($stil4m$elm_syntax$ParserFast$keywordFollowedBy, 'module', $stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout),
	$stil4m$elm_syntax$Elm$Parser$Base$moduleName,
	$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
	$stil4m$elm_syntax$Elm$Parser$Modules$effectWhereClauses,
	$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
	$stil4m$elm_syntax$Elm$Parser$Expose$exposeDefinition);
var $stil4m$elm_syntax$Elm$Syntax$Module$NormalModule = function (a) {
	return {$: 'NormalModule', a: a};
};
var $stil4m$elm_syntax$Elm$Parser$Modules$normalModuleDefinition = A5(
	$stil4m$elm_syntax$ParserFast$map4WithRange,
	F5(
		function (range, commentsAfterModule, moduleName, commentsAfterModuleName, exposingList) {
			return {
				comments: A2(
					$stil4m$elm_syntax$Rope$prependTo,
					exposingList.comments,
					A2($stil4m$elm_syntax$Rope$prependTo, commentsAfterModuleName, commentsAfterModule)),
				syntax: A2(
					$stil4m$elm_syntax$Elm$Syntax$Node$Node,
					range,
					$stil4m$elm_syntax$Elm$Syntax$Module$NormalModule(
						{exposingList: exposingList.syntax, moduleName: moduleName}))
			};
		}),
	A2($stil4m$elm_syntax$ParserFast$keywordFollowedBy, 'module', $stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout),
	$stil4m$elm_syntax$Elm$Parser$Base$moduleName,
	$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
	$stil4m$elm_syntax$Elm$Parser$Expose$exposeDefinition);
var $stil4m$elm_syntax$Elm$Syntax$Module$PortModule = function (a) {
	return {$: 'PortModule', a: a};
};
var $stil4m$elm_syntax$Elm$Parser$Modules$portModuleDefinition = A6(
	$stil4m$elm_syntax$ParserFast$map5WithRange,
	F6(
		function (range, commentsAfterPort, commentsAfterModule, moduleName, commentsAfterModuleName, exposingList) {
			return {
				comments: A2(
					$stil4m$elm_syntax$Rope$prependTo,
					exposingList.comments,
					A2(
						$stil4m$elm_syntax$Rope$prependTo,
						commentsAfterModuleName,
						A2($stil4m$elm_syntax$Rope$prependTo, commentsAfterModule, commentsAfterPort))),
				syntax: A2(
					$stil4m$elm_syntax$Elm$Syntax$Node$Node,
					range,
					$stil4m$elm_syntax$Elm$Syntax$Module$PortModule(
						{exposingList: exposingList.syntax, moduleName: moduleName}))
			};
		}),
	A2($stil4m$elm_syntax$ParserFast$keywordFollowedBy, 'port', $stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout),
	A2($stil4m$elm_syntax$ParserFast$keywordFollowedBy, 'module', $stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout),
	$stil4m$elm_syntax$Elm$Parser$Base$moduleName,
	$stil4m$elm_syntax$Elm$Parser$Layout$maybeLayout,
	$stil4m$elm_syntax$Elm$Parser$Expose$exposeDefinition);
var $stil4m$elm_syntax$Elm$Parser$Modules$moduleDefinition = A3($stil4m$elm_syntax$ParserFast$oneOf3, $stil4m$elm_syntax$Elm$Parser$Modules$normalModuleDefinition, $stil4m$elm_syntax$Elm$Parser$Modules$portModuleDefinition, $stil4m$elm_syntax$Elm$Parser$Modules$effectModuleDefinition);
var $stil4m$elm_syntax$Elm$Parser$Comments$moduleDocumentation = $stil4m$elm_syntax$Elm$Parser$Comments$declarationDocumentation;
var $stil4m$elm_syntax$Rope$ropeLikelyFilledToListInto = F2(
	function (initialAcc, ropeLikelyFilled) {
		ropeLikelyFilledToListInto:
		while (true) {
			if (ropeLikelyFilled.$ === 'Leaf') {
				var onlyElement = ropeLikelyFilled.a;
				return A2($elm$core$List$cons, onlyElement, initialAcc);
			} else {
				var left = ropeLikelyFilled.a;
				var right = ropeLikelyFilled.b;
				var $temp$initialAcc = A2($stil4m$elm_syntax$Rope$ropeLikelyFilledToListInto, initialAcc, right),
					$temp$ropeLikelyFilled = left;
				initialAcc = $temp$initialAcc;
				ropeLikelyFilled = $temp$ropeLikelyFilled;
				continue ropeLikelyFilledToListInto;
			}
		}
	});
var $stil4m$elm_syntax$Rope$toList = function (rope) {
	if (rope.$ === 'Nothing') {
		return _List_Nil;
	} else {
		var ropeLikelyFilled = rope.a;
		return A2($stil4m$elm_syntax$Rope$ropeLikelyFilledToListInto, _List_Nil, ropeLikelyFilled);
	}
};
var $stil4m$elm_syntax$Elm$Parser$File$file = A5(
	$stil4m$elm_syntax$ParserFast$map4,
	F4(
		function (moduleDefinition, moduleComments, imports, declarations) {
			return {
				comments: $stil4m$elm_syntax$Rope$toList(
					A2(
						$stil4m$elm_syntax$Rope$prependTo,
						declarations.comments,
						A2(
							$stil4m$elm_syntax$Rope$prependTo,
							imports.comments,
							A2($stil4m$elm_syntax$Rope$prependTo, moduleComments, moduleDefinition.comments)))),
				declarations: declarations.syntax,
				imports: imports.syntax,
				moduleDefinition: moduleDefinition.syntax
			};
		}),
	$stil4m$elm_syntax$Elm$Parser$Layout$layoutStrictFollowedByWithComments($stil4m$elm_syntax$Elm$Parser$Modules$moduleDefinition),
	$stil4m$elm_syntax$Elm$Parser$Layout$layoutStrictFollowedByComments(
		A4(
			$stil4m$elm_syntax$ParserFast$map2OrSucceed,
			F2(
				function (moduleDocumentation, commentsAfter) {
					return A2(
						$stil4m$elm_syntax$Rope$filledPrependTo,
						commentsAfter,
						$stil4m$elm_syntax$Rope$one(moduleDocumentation));
				}),
			$stil4m$elm_syntax$Elm$Parser$Comments$moduleDocumentation,
			$stil4m$elm_syntax$Elm$Parser$Layout$layoutStrict,
			$stil4m$elm_syntax$Rope$empty)),
	$stil4m$elm_syntax$ParserWithComments$many($stil4m$elm_syntax$Elm$Parser$Imports$importDefinition),
	$stil4m$elm_syntax$Elm$Parser$File$fileDeclarations);
var $elm$parser$Parser$ExpectingEnd = {$: 'ExpectingEnd'};
var $elm$parser$Parser$ExpectingKeyword = function (a) {
	return {$: 'ExpectingKeyword', a: a};
};
var $elm$parser$Parser$ExpectingNumber = {$: 'ExpectingNumber'};
var $elm$parser$Parser$ExpectingSymbol = function (a) {
	return {$: 'ExpectingSymbol', a: a};
};
var $elm$parser$Parser$Problem = function (a) {
	return {$: 'Problem', a: a};
};
var $elm$parser$Parser$UnexpectedChar = {$: 'UnexpectedChar'};
var $stil4m$elm_syntax$ParserFast$ropeFilledToList = F2(
	function (problemToConvert, soFar) {
		switch (problemToConvert.$) {
			case 'ExpectingOneOf':
				var firstTry = problemToConvert.a;
				var secondTry = problemToConvert.b;
				var thirdTryUp = problemToConvert.c;
				return A2(
					$stil4m$elm_syntax$ParserFast$ropeFilledToList,
					firstTry,
					A2(
						$stil4m$elm_syntax$ParserFast$ropeFilledToList,
						secondTry,
						A3($elm$core$List$foldr, $stil4m$elm_syntax$ParserFast$ropeFilledToList, soFar, thirdTryUp)));
			case 'ExpectingNumber':
				var row = problemToConvert.a;
				var col = problemToConvert.b;
				return A2(
					$elm$core$List$cons,
					{col: col, problem: $elm$parser$Parser$ExpectingNumber, row: row},
					soFar);
			case 'ExpectingSymbol':
				var row = problemToConvert.a;
				var col = problemToConvert.b;
				var symbolString = problemToConvert.c;
				return A2(
					$elm$core$List$cons,
					{
						col: col,
						problem: $elm$parser$Parser$ExpectingSymbol(symbolString),
						row: row
					},
					soFar);
			case 'ExpectingAnyChar':
				var row = problemToConvert.a;
				var col = problemToConvert.b;
				return A2(
					$elm$core$List$cons,
					{
						col: col,
						problem: $elm$parser$Parser$Problem('expecting any char'),
						row: row
					},
					soFar);
			case 'ExpectingKeyword':
				var row = problemToConvert.a;
				var col = problemToConvert.b;
				var keywordString = problemToConvert.c;
				return A2(
					$elm$core$List$cons,
					{
						col: col,
						problem: $elm$parser$Parser$ExpectingKeyword(keywordString),
						row: row
					},
					soFar);
			case 'ExpectingCharSatisfyingPredicate':
				var row = problemToConvert.a;
				var col = problemToConvert.b;
				return A2(
					$elm$core$List$cons,
					{col: col, problem: $elm$parser$Parser$UnexpectedChar, row: row},
					soFar);
			case 'ExpectingStringSatisfyingPredicate':
				var row = problemToConvert.a;
				var col = problemToConvert.b;
				return A2(
					$elm$core$List$cons,
					{
						col: col,
						problem: $elm$parser$Parser$Problem('expected string to pass validation'),
						row: row
					},
					soFar);
			default:
				var row = problemToConvert.a;
				var col = problemToConvert.b;
				var customMessage = problemToConvert.c;
				return A2(
					$elm$core$List$cons,
					{
						col: col,
						problem: $elm$parser$Parser$Problem(customMessage),
						row: row
					},
					soFar);
		}
	});
var $stil4m$elm_syntax$ParserFast$run = F2(
	function (_v0, src) {
		var parse = _v0.a;
		var _v1 = parse(
			{col: 1, indent: 1, offset: 0, row: 1, src: src});
		if (_v1.$ === 'Good') {
			var value = _v1.a;
			var finalState = _v1.b;
			return (!(finalState.offset - $elm$core$String$length(finalState.src))) ? $elm$core$Result$Ok(value) : $elm$core$Result$Err(
				_List_fromArray(
					[
						{col: finalState.col, problem: $elm$parser$Parser$ExpectingEnd, row: finalState.row}
					]));
		} else {
			var deadEnds = _v1.b;
			return $elm$core$Result$Err(
				A2($stil4m$elm_syntax$ParserFast$ropeFilledToList, deadEnds, _List_Nil));
		}
	});
var $stil4m$elm_syntax$Elm$Parser$parseToFile = function (input) {
	return A2($stil4m$elm_syntax$ParserFast$run, $stil4m$elm_syntax$Elm$Parser$File$file, input);
};
var $elm$core$Result$toMaybe = function (result) {
	if (result.$ === 'Ok') {
		var v = result.a;
		return $elm$core$Maybe$Just(v);
	} else {
		return $elm$core$Maybe$Nothing;
	}
};
var $author$project$LanguageService$initLanguageServiceState = function (elmCoreModules) {
	var elmCoreModulesParseResults = A2(
		$elm$core$List$filterMap,
		function (coreModule) {
			return A2(
				$elm$core$Maybe$map,
				function (syntax) {
					return {
						implicitImport: coreModule.implicitImport,
						parseResult: {
							completionItems: $author$project$LanguageService$completionItemsFromModule(
								{fileUri: 'elm-core', syntax: syntax, text: coreModule.moduleText}),
							fileUri: 'elm-core',
							syntax: syntax,
							text: coreModule.moduleText
						}
					};
				},
				$elm$core$Result$toMaybe(
					$stil4m$elm_syntax$Elm$Parser$parseToFile(coreModule.moduleText)));
		},
		elmCoreModules);
	return {coreModulesCache: elmCoreModulesParseResults, documentCache: $elm$core$Dict$empty, elmPackages: _List_Nil};
};
var $author$project$LanguageServiceWorker$initLanguageServiceState = $author$project$LanguageService$initLanguageServiceState($author$project$LanguageServiceWorker$elmCoreModules);
var $elm$json$Json$Decode$Failure = F2(
	function (a, b) {
		return {$: 'Failure', a: a, b: b};
	});
var $elm$json$Json$Decode$Field = F2(
	function (a, b) {
		return {$: 'Field', a: a, b: b};
	});
var $elm$json$Json$Decode$Index = F2(
	function (a, b) {
		return {$: 'Index', a: a, b: b};
	});
var $elm$json$Json$Decode$OneOf = function (a) {
	return {$: 'OneOf', a: a};
};
var $elm$core$String$all = _String_all;
var $elm$json$Json$Encode$encode = _Json_encode;
var $elm$core$String$fromInt = _String_fromNumber;
var $elm$core$String$split = F2(
	function (sep, string) {
		return _List_fromArray(
			A2(_String_split, sep, string));
	});
var $elm$json$Json$Decode$indent = function (str) {
	return A2(
		$elm$core$String$join,
		'\n    ',
		A2($elm$core$String$split, '\n', str));
};
var $elm$core$Char$isLower = function (_char) {
	var code = $elm$core$Char$toCode(_char);
	return (97 <= code) && (code <= 122);
};
var $elm$core$Char$isUpper = function (_char) {
	var code = $elm$core$Char$toCode(_char);
	return (code <= 90) && (65 <= code);
};
var $elm$core$Char$isAlpha = function (_char) {
	return $elm$core$Char$isLower(_char) || $elm$core$Char$isUpper(_char);
};
var $elm$core$Char$isDigit = function (_char) {
	var code = $elm$core$Char$toCode(_char);
	return (code <= 57) && (48 <= code);
};
var $elm$core$Char$isAlphaNum = function (_char) {
	return $elm$core$Char$isLower(_char) || ($elm$core$Char$isUpper(_char) || $elm$core$Char$isDigit(_char));
};
var $elm$core$String$uncons = _String_uncons;
var $elm$json$Json$Decode$errorOneOf = F2(
	function (i, error) {
		return '\n\n(' + ($elm$core$String$fromInt(i + 1) + (') ' + $elm$json$Json$Decode$indent(
			$elm$json$Json$Decode$errorToString(error))));
	});
var $elm$json$Json$Decode$errorToString = function (error) {
	return A2($elm$json$Json$Decode$errorToStringHelp, error, _List_Nil);
};
var $elm$json$Json$Decode$errorToStringHelp = F2(
	function (error, context) {
		errorToStringHelp:
		while (true) {
			switch (error.$) {
				case 'Field':
					var f = error.a;
					var err = error.b;
					var isSimple = function () {
						var _v1 = $elm$core$String$uncons(f);
						if (_v1.$ === 'Nothing') {
							return false;
						} else {
							var _v2 = _v1.a;
							var _char = _v2.a;
							var rest = _v2.b;
							return $elm$core$Char$isAlpha(_char) && A2($elm$core$String$all, $elm$core$Char$isAlphaNum, rest);
						}
					}();
					var fieldName = isSimple ? ('.' + f) : ('[\'' + (f + '\']'));
					var $temp$error = err,
						$temp$context = A2($elm$core$List$cons, fieldName, context);
					error = $temp$error;
					context = $temp$context;
					continue errorToStringHelp;
				case 'Index':
					var i = error.a;
					var err = error.b;
					var indexName = '[' + ($elm$core$String$fromInt(i) + ']');
					var $temp$error = err,
						$temp$context = A2($elm$core$List$cons, indexName, context);
					error = $temp$error;
					context = $temp$context;
					continue errorToStringHelp;
				case 'OneOf':
					var errors = error.a;
					if (!errors.b) {
						return 'Ran into a Json.Decode.oneOf with no possibilities' + function () {
							if (!context.b) {
								return '!';
							} else {
								return ' at json' + A2(
									$elm$core$String$join,
									'',
									$elm$core$List$reverse(context));
							}
						}();
					} else {
						if (!errors.b.b) {
							var err = errors.a;
							var $temp$error = err,
								$temp$context = context;
							error = $temp$error;
							context = $temp$context;
							continue errorToStringHelp;
						} else {
							var starter = function () {
								if (!context.b) {
									return 'Json.Decode.oneOf';
								} else {
									return 'The Json.Decode.oneOf at json' + A2(
										$elm$core$String$join,
										'',
										$elm$core$List$reverse(context));
								}
							}();
							var introduction = starter + (' failed in the following ' + ($elm$core$String$fromInt(
								$elm$core$List$length(errors)) + ' ways:'));
							return A2(
								$elm$core$String$join,
								'\n\n',
								A2(
									$elm$core$List$cons,
									introduction,
									A2($elm$core$List$indexedMap, $elm$json$Json$Decode$errorOneOf, errors)));
						}
					}
				default:
					var msg = error.a;
					var json = error.b;
					var introduction = function () {
						if (!context.b) {
							return 'Problem with the given value:\n\n';
						} else {
							return 'Problem with the value at json' + (A2(
								$elm$core$String$join,
								'',
								$elm$core$List$reverse(context)) + ':\n\n    ');
						}
					}();
					return introduction + ($elm$json$Json$Decode$indent(
						A2($elm$json$Json$Encode$encode, 4, json)) + ('\n\n' + msg));
			}
		}
	});
var $elm$core$Array$branchFactor = 32;
var $elm$core$Array$Array_elm_builtin = F4(
	function (a, b, c, d) {
		return {$: 'Array_elm_builtin', a: a, b: b, c: c, d: d};
	});
var $elm$core$Elm$JsArray$empty = _JsArray_empty;
var $elm$core$Basics$ceiling = _Basics_ceiling;
var $elm$core$Basics$fdiv = _Basics_fdiv;
var $elm$core$Basics$logBase = F2(
	function (base, number) {
		return _Basics_log(number) / _Basics_log(base);
	});
var $elm$core$Array$shiftStep = $elm$core$Basics$ceiling(
	A2($elm$core$Basics$logBase, 2, $elm$core$Array$branchFactor));
var $elm$core$Array$empty = A4($elm$core$Array$Array_elm_builtin, 0, $elm$core$Array$shiftStep, $elm$core$Elm$JsArray$empty, $elm$core$Elm$JsArray$empty);
var $elm$core$Elm$JsArray$initialize = _JsArray_initialize;
var $elm$core$Array$Leaf = function (a) {
	return {$: 'Leaf', a: a};
};
var $elm$core$Basics$apL = F2(
	function (f, x) {
		return f(x);
	});
var $elm$core$Basics$floor = _Basics_floor;
var $elm$core$Elm$JsArray$length = _JsArray_length;
var $elm$core$Basics$max = F2(
	function (x, y) {
		return (_Utils_cmp(x, y) > 0) ? x : y;
	});
var $elm$core$Array$SubTree = function (a) {
	return {$: 'SubTree', a: a};
};
var $elm$core$Elm$JsArray$initializeFromList = _JsArray_initializeFromList;
var $elm$core$Array$compressNodes = F2(
	function (nodes, acc) {
		compressNodes:
		while (true) {
			var _v0 = A2($elm$core$Elm$JsArray$initializeFromList, $elm$core$Array$branchFactor, nodes);
			var node = _v0.a;
			var remainingNodes = _v0.b;
			var newAcc = A2(
				$elm$core$List$cons,
				$elm$core$Array$SubTree(node),
				acc);
			if (!remainingNodes.b) {
				return $elm$core$List$reverse(newAcc);
			} else {
				var $temp$nodes = remainingNodes,
					$temp$acc = newAcc;
				nodes = $temp$nodes;
				acc = $temp$acc;
				continue compressNodes;
			}
		}
	});
var $elm$core$Tuple$first = function (_v0) {
	var x = _v0.a;
	return x;
};
var $elm$core$Array$treeFromBuilder = F2(
	function (nodeList, nodeListSize) {
		treeFromBuilder:
		while (true) {
			var newNodeSize = $elm$core$Basics$ceiling(nodeListSize / $elm$core$Array$branchFactor);
			if (newNodeSize === 1) {
				return A2($elm$core$Elm$JsArray$initializeFromList, $elm$core$Array$branchFactor, nodeList).a;
			} else {
				var $temp$nodeList = A2($elm$core$Array$compressNodes, nodeList, _List_Nil),
					$temp$nodeListSize = newNodeSize;
				nodeList = $temp$nodeList;
				nodeListSize = $temp$nodeListSize;
				continue treeFromBuilder;
			}
		}
	});
var $elm$core$Array$builderToArray = F2(
	function (reverseNodeList, builder) {
		if (!builder.nodeListSize) {
			return A4(
				$elm$core$Array$Array_elm_builtin,
				$elm$core$Elm$JsArray$length(builder.tail),
				$elm$core$Array$shiftStep,
				$elm$core$Elm$JsArray$empty,
				builder.tail);
		} else {
			var treeLen = builder.nodeListSize * $elm$core$Array$branchFactor;
			var depth = $elm$core$Basics$floor(
				A2($elm$core$Basics$logBase, $elm$core$Array$branchFactor, treeLen - 1));
			var correctNodeList = reverseNodeList ? $elm$core$List$reverse(builder.nodeList) : builder.nodeList;
			var tree = A2($elm$core$Array$treeFromBuilder, correctNodeList, builder.nodeListSize);
			return A4(
				$elm$core$Array$Array_elm_builtin,
				$elm$core$Elm$JsArray$length(builder.tail) + treeLen,
				A2($elm$core$Basics$max, 5, depth * $elm$core$Array$shiftStep),
				tree,
				builder.tail);
		}
	});
var $elm$core$Basics$idiv = _Basics_idiv;
var $elm$core$Array$initializeHelp = F5(
	function (fn, fromIndex, len, nodeList, tail) {
		initializeHelp:
		while (true) {
			if (fromIndex < 0) {
				return A2(
					$elm$core$Array$builderToArray,
					false,
					{nodeList: nodeList, nodeListSize: (len / $elm$core$Array$branchFactor) | 0, tail: tail});
			} else {
				var leaf = $elm$core$Array$Leaf(
					A3($elm$core$Elm$JsArray$initialize, $elm$core$Array$branchFactor, fromIndex, fn));
				var $temp$fn = fn,
					$temp$fromIndex = fromIndex - $elm$core$Array$branchFactor,
					$temp$len = len,
					$temp$nodeList = A2($elm$core$List$cons, leaf, nodeList),
					$temp$tail = tail;
				fn = $temp$fn;
				fromIndex = $temp$fromIndex;
				len = $temp$len;
				nodeList = $temp$nodeList;
				tail = $temp$tail;
				continue initializeHelp;
			}
		}
	});
var $elm$core$Basics$remainderBy = _Basics_remainderBy;
var $elm$core$Array$initialize = F2(
	function (len, fn) {
		if (len <= 0) {
			return $elm$core$Array$empty;
		} else {
			var tailLen = len % $elm$core$Array$branchFactor;
			var tail = A3($elm$core$Elm$JsArray$initialize, tailLen, len - tailLen, fn);
			var initialFromIndex = (len - tailLen) - $elm$core$Array$branchFactor;
			return A5($elm$core$Array$initializeHelp, fn, initialFromIndex, len, _List_Nil, tail);
		}
	});
var $elm$core$Result$isOk = function (result) {
	if (result.$ === 'Ok') {
		return true;
	} else {
		return false;
	}
};
var $elm$core$Platform$Cmd$batch = _Platform_batch;
var $elm$core$Platform$Cmd$none = $elm$core$Platform$Cmd$batch(_List_Nil);
var $author$project$LanguageServiceWorker$init = function (_v0) {
	return _Utils_Tuple2($author$project$LanguageServiceWorker$initLanguageServiceState, $elm$core$Platform$Cmd$none);
};
var $author$project$LanguageServiceWorker$RequestEvent = function (a) {
	return {$: 'RequestEvent', a: a};
};
var $elm$json$Json$Decode$value = _Json_decodeValue;
var $author$project$LanguageServiceWorker$receiveRequest = _Platform_incomingPort('receiveRequest', $elm$json$Json$Decode$value);
var $author$project$LanguageServiceWorker$subscriptions = function (_v0) {
	return $author$project$LanguageServiceWorker$receiveRequest($author$project$LanguageServiceWorker$RequestEvent);
};
var $elm$json$Json$Decode$succeed = _Json_succeed;
var $elm$json$Json$Decode$decodeValue = _Json_run;
var $author$project$LanguageServiceInterface$ProvideCompletionItemsResponse = function (a) {
	return {$: 'ProvideCompletionItemsResponse', a: a};
};
var $author$project$LanguageServiceInterface$ProvideDefinitionResponse = function (a) {
	return {$: 'ProvideDefinitionResponse', a: a};
};
var $author$project$LanguageServiceInterface$ProvideHoverResponse = function (a) {
	return {$: 'ProvideHoverResponse', a: a};
};
var $author$project$LanguageServiceInterface$TextDocumentReferencesResponse = function (a) {
	return {$: 'TextDocumentReferencesResponse', a: a};
};
var $author$project$LanguageServiceInterface$TextDocumentRenameResponse = function (a) {
	return {$: 'TextDocumentRenameResponse', a: a};
};
var $author$project$LanguageServiceInterface$TextDocumentSymbolResponse = function (a) {
	return {$: 'TextDocumentSymbolResponse', a: a};
};
var $author$project$LanguageServiceInterface$WorkspaceSummaryResponse = {$: 'WorkspaceSummaryResponse'};
var $elm$core$Basics$compare = _Utils_compare;
var $elm$core$Dict$get = F2(
	function (targetKey, dict) {
		get:
		while (true) {
			if (dict.$ === 'RBEmpty_elm_builtin') {
				return $elm$core$Maybe$Nothing;
			} else {
				var key = dict.b;
				var value = dict.c;
				var left = dict.d;
				var right = dict.e;
				var _v1 = A2($elm$core$Basics$compare, targetKey, key);
				switch (_v1.$) {
					case 'LT':
						var $temp$targetKey = targetKey,
							$temp$dict = left;
						targetKey = $temp$targetKey;
						dict = $temp$dict;
						continue get;
					case 'EQ':
						return $elm$core$Maybe$Just(value);
					default:
						var $temp$targetKey = targetKey,
							$temp$dict = right;
						targetKey = $temp$targetKey;
						dict = $temp$dict;
						continue get;
				}
			}
		}
	});
var $elm$core$Dict$Black = {$: 'Black'};
var $elm$core$Dict$RBNode_elm_builtin = F5(
	function (a, b, c, d, e) {
		return {$: 'RBNode_elm_builtin', a: a, b: b, c: c, d: d, e: e};
	});
var $elm$core$Dict$Red = {$: 'Red'};
var $elm$core$Dict$balance = F5(
	function (color, key, value, left, right) {
		if ((right.$ === 'RBNode_elm_builtin') && (right.a.$ === 'Red')) {
			var _v1 = right.a;
			var rK = right.b;
			var rV = right.c;
			var rLeft = right.d;
			var rRight = right.e;
			if ((left.$ === 'RBNode_elm_builtin') && (left.a.$ === 'Red')) {
				var _v3 = left.a;
				var lK = left.b;
				var lV = left.c;
				var lLeft = left.d;
				var lRight = left.e;
				return A5(
					$elm$core$Dict$RBNode_elm_builtin,
					$elm$core$Dict$Red,
					key,
					value,
					A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Black, lK, lV, lLeft, lRight),
					A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Black, rK, rV, rLeft, rRight));
			} else {
				return A5(
					$elm$core$Dict$RBNode_elm_builtin,
					color,
					rK,
					rV,
					A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, key, value, left, rLeft),
					rRight);
			}
		} else {
			if ((((left.$ === 'RBNode_elm_builtin') && (left.a.$ === 'Red')) && (left.d.$ === 'RBNode_elm_builtin')) && (left.d.a.$ === 'Red')) {
				var _v5 = left.a;
				var lK = left.b;
				var lV = left.c;
				var _v6 = left.d;
				var _v7 = _v6.a;
				var llK = _v6.b;
				var llV = _v6.c;
				var llLeft = _v6.d;
				var llRight = _v6.e;
				var lRight = left.e;
				return A5(
					$elm$core$Dict$RBNode_elm_builtin,
					$elm$core$Dict$Red,
					lK,
					lV,
					A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Black, llK, llV, llLeft, llRight),
					A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Black, key, value, lRight, right));
			} else {
				return A5($elm$core$Dict$RBNode_elm_builtin, color, key, value, left, right);
			}
		}
	});
var $elm$core$Dict$insertHelp = F3(
	function (key, value, dict) {
		if (dict.$ === 'RBEmpty_elm_builtin') {
			return A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, key, value, $elm$core$Dict$RBEmpty_elm_builtin, $elm$core$Dict$RBEmpty_elm_builtin);
		} else {
			var nColor = dict.a;
			var nKey = dict.b;
			var nValue = dict.c;
			var nLeft = dict.d;
			var nRight = dict.e;
			var _v1 = A2($elm$core$Basics$compare, key, nKey);
			switch (_v1.$) {
				case 'LT':
					return A5(
						$elm$core$Dict$balance,
						nColor,
						nKey,
						nValue,
						A3($elm$core$Dict$insertHelp, key, value, nLeft),
						nRight);
				case 'EQ':
					return A5($elm$core$Dict$RBNode_elm_builtin, nColor, nKey, value, nLeft, nRight);
				default:
					return A5(
						$elm$core$Dict$balance,
						nColor,
						nKey,
						nValue,
						nLeft,
						A3($elm$core$Dict$insertHelp, key, value, nRight));
			}
		}
	});
var $elm$core$Dict$insert = F3(
	function (key, value, dict) {
		var _v0 = A3($elm$core$Dict$insertHelp, key, value, dict);
		if ((_v0.$ === 'RBNode_elm_builtin') && (_v0.a.$ === 'Red')) {
			var _v1 = _v0.a;
			var k = _v0.b;
			var v = _v0.c;
			var l = _v0.d;
			var r = _v0.e;
			return A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Black, k, v, l, r);
		} else {
			var x = _v0;
			return x;
		}
	});
var $author$project$LanguageService$addFile = F2(
	function (_v0, stateBefore) {
		var fileUri = _v0.a;
		var fileContent = _v0.b;
		var maybeTextContent = function () {
			var _v4 = fileContent.asText;
			if (_v4.$ === 'Nothing') {
				return $elm$core$Maybe$Nothing;
			} else {
				var asString = _v4.a;
				var parsedFile = function () {
					var _v5 = $stil4m$elm_syntax$Elm$Parser$parseToFile(asString);
					if (_v5.$ === 'Err') {
						return $elm$core$Maybe$Nothing;
					} else {
						var syntax = _v5.a;
						return $elm$core$Maybe$Just(
							{
								completionItems: $author$project$LanguageService$completionItemsFromModule(
									{fileUri: fileUri, syntax: syntax, text: asString}),
								fileUri: fileUri,
								syntax: syntax,
								text: asString
							});
					}
				}();
				return $elm$core$Maybe$Just(
					{parsedFile: parsedFile, text: asString});
			}
		}();
		var maybePreviousCached = A2($elm$core$Dict$get, fileUri, stateBefore.documentCache);
		var parsedFileFromPreviouslyCached = function () {
			if (maybePreviousCached.$ === 'Nothing') {
				return $elm$core$Maybe$Nothing;
			} else {
				var previousCached = maybePreviousCached.a;
				return previousCached.parsedFileLastSuccess;
			}
		}();
		var parsedFileLastSuccess = function () {
			if (maybeTextContent.$ === 'Nothing') {
				return parsedFileFromPreviouslyCached;
			} else {
				var textContent = maybeTextContent.a;
				var _v2 = textContent.parsedFile;
				if (_v2.$ === 'Nothing') {
					return parsedFileFromPreviouslyCached;
				} else {
					var parsedFile = _v2.a;
					return $elm$core$Maybe$Just(parsedFile);
				}
			}
		}();
		var documentCache = A3(
			$elm$core$Dict$insert,
			fileUri,
			{parsedFileLastSuccess: parsedFileLastSuccess, sourceBase64: fileContent.asBase64, textContent: maybeTextContent},
			stateBefore.documentCache);
		return _Utils_Tuple2(
			$author$project$LanguageServiceInterface$WorkspaceSummaryResponse,
			_Utils_update(
				stateBefore,
				{documentCache: documentCache}));
	});
var $stil4m$elm_syntax$Elm$Syntax$Node$value = function (_v0) {
	var v = _v0.b;
	return v;
};
var $stil4m$elm_syntax$Elm$Syntax$Module$moduleName = function (m) {
	switch (m.$) {
		case 'NormalModule':
			var x = m.a;
			return $stil4m$elm_syntax$Elm$Syntax$Node$value(x.moduleName);
		case 'PortModule':
			var x = m.a;
			return $stil4m$elm_syntax$Elm$Syntax$Node$value(x.moduleName);
		default:
			var x = m.a;
			return $stil4m$elm_syntax$Elm$Syntax$Node$value(x.moduleName);
	}
};
var $author$project$LanguageService$handleRequestAddPackage = F3(
	function (packageVersionIdentifer, packageModules, stateBefore) {
		var parsedModules = A2(
			$elm$core$List$filterMap,
			function (_v0) {
				var modulePath = _v0.a;
				var fileContent = _v0.b;
				var _v1 = fileContent.asText;
				if (_v1.$ === 'Nothing') {
					return $elm$core$Maybe$Nothing;
				} else {
					var asString = _v1.a;
					var _v2 = $stil4m$elm_syntax$Elm$Parser$parseToFile(asString);
					if (_v2.$ === 'Err') {
						return $elm$core$Maybe$Nothing;
					} else {
						var syntax = _v2.a;
						var _v3 = syntax.moduleDefinition;
						var moduleDefinition = _v3.b;
						var moduleName = $stil4m$elm_syntax$Elm$Syntax$Module$moduleName(moduleDefinition);
						return $elm$core$Maybe$Just(
							_Utils_Tuple2(
								moduleName,
								_Utils_Tuple3(
									modulePath,
									syntax,
									$author$project$LanguageService$completionItemsFromModule(
										{
											fileUri: A2($elm$core$String$join, '/', modulePath),
											syntax: syntax,
											text: asString
										}))));
					}
				}
			},
			packageModules);
		var state = _Utils_update(
			stateBefore,
			{
				elmPackages: A2(
					$elm$core$List$cons,
					_Utils_Tuple2(packageVersionIdentifer, parsedModules),
					stateBefore.elmPackages)
			});
		return _Utils_Tuple2($author$project$LanguageServiceInterface$WorkspaceSummaryResponse, state);
	});
var $author$project$LanguageService$listCommentsFromDeclaration = function (declaration) {
	switch (declaration.$) {
		case 'FunctionDeclaration':
			var _function = declaration.a;
			var _v1 = _function.documentation;
			if (_v1.$ === 'Nothing') {
				return _List_Nil;
			} else {
				var documentation = _v1.a;
				return _List_fromArray(
					[documentation]);
			}
		case 'AliasDeclaration':
			var typeAlias = declaration.a;
			var _v2 = typeAlias.documentation;
			if (_v2.$ === 'Nothing') {
				return _List_Nil;
			} else {
				var documentation = _v2.a;
				return _List_fromArray(
					[documentation]);
			}
		case 'CustomTypeDeclaration':
			var typeDeclaration = declaration.a;
			var _v3 = typeDeclaration.documentation;
			if (_v3.$ === 'Nothing') {
				return _List_Nil;
			} else {
				var documentation = _v3.a;
				return _List_fromArray(
					[documentation]);
			}
		case 'PortDeclaration':
			return _List_Nil;
		case 'InfixDeclaration':
			return _List_Nil;
		default:
			return _List_Nil;
	}
};
var $author$project$LanguageService$listCommentsInFile = function (parsedModule) {
	var fromDeclarations = A2(
		$elm$core$List$concatMap,
		function (_v0) {
			var declaration = _v0.b;
			return $author$project$LanguageService$listCommentsFromDeclaration(declaration);
		},
		parsedModule.declarations);
	return $elm$core$List$concat(
		_List_fromArray(
			[parsedModule.comments, fromDeclarations]));
};
var $author$project$LanguageService$rangeIntersectsLocation = F2(
	function (location, range) {
		var start = range.start;
		var startColumn = start.column;
		var startRow = start.row;
		var locationRow = location.row;
		var end = range.end;
		var endRow = end.row;
		return (_Utils_cmp(locationRow, startRow) < 0) ? false : ((_Utils_cmp(locationRow, endRow) > 0) ? false : ((_Utils_eq(locationRow, startRow) && _Utils_eq(locationRow, endRow)) ? ((_Utils_cmp(location.column, startColumn) < 0) ? false : ((_Utils_cmp(location.column, end.column) > 0) ? false : true)) : (_Utils_eq(locationRow, startRow) ? ((_Utils_cmp(location.column, startColumn) < 0) ? false : true) : (_Utils_eq(locationRow, endRow) ? ((_Utils_cmp(location.column, end.column) > 0) ? false : true) : true))));
	});
var $author$project$LanguageService$locationIsInComment = F2(
	function (location, parsedModule) {
		return A2(
			$elm$core$List$any,
			function (_v0) {
				var commentRange = _v0.a;
				var comment = _v0.b;
				var range = A2($elm$core$String$startsWith, '--', comment) ? _Utils_update(
					commentRange,
					{
						end: {column: commentRange.end.column + 9999, row: commentRange.end.row}
					}) : commentRange;
				return A2($author$project$LanguageService$rangeIntersectsLocation, location, range);
			},
			$author$project$LanguageService$listCommentsInFile(parsedModule));
	});
var $author$project$LanguageService$monacoCompletionItemFromCompletionItem = function (_v0) {
	var label = _v0.a;
	var insertText = _v0.b;
	var kind = _v0.c;
	var documentation = _v0.d;
	return {documentation: documentation, insertText: insertText, kind: kind, label: label};
};
var $elm$core$Maybe$andThen = F2(
	function (callback, maybeValue) {
		if (maybeValue.$ === 'Just') {
			var value = maybeValue.a;
			return callback(value);
		} else {
			return $elm$core$Maybe$Nothing;
		}
	});
var $author$project$LanguageService$charIsAllowedInDeclarationName = function (_char) {
	return $elm$core$Char$isAlphaNum(_char) || _Utils_eq(
		_char,
		_Utils_chr('_'));
};
var $author$project$LanguageServiceInterface$WorkspaceFileLocation = function (a) {
	return {$: 'WorkspaceFileLocation', a: a};
};
var $author$project$LanguageServiceInterface$ElmPackageFileLocation = F2(
	function (a, b) {
		return {$: 'ElmPackageFileLocation', a: a, b: b};
	});
var $author$project$LanguageService$isItemImplicitlyExposed = F2(
	function (moduleName, _v0) {
		var itemInsertText = _v0.b;
		_v1$6:
		while (true) {
			if (moduleName.b) {
				if (!moduleName.b.b) {
					switch (moduleName.a) {
						case 'Basics':
							return true;
						case 'String':
							if (itemInsertText === 'String') {
								return true;
							} else {
								return false;
							}
						case 'Maybe':
							switch (itemInsertText) {
								case 'Maybe':
									return true;
								case 'Just':
									return true;
								case 'Nothing':
									return true;
								default:
									return false;
							}
						case 'List':
							if (itemInsertText === 'List') {
								return true;
							} else {
								return false;
							}
						case 'Result':
							switch (itemInsertText) {
								case 'Result':
									return true;
								case 'Ok':
									return true;
								case 'Err':
									return true;
								default:
									return false;
							}
						default:
							break _v1$6;
					}
				} else {
					if (((moduleName.a === 'Platform') && (moduleName.b.a === 'Cmd')) && (!moduleName.b.b.b)) {
						var _v6 = moduleName.b;
						return true;
					} else {
						break _v1$6;
					}
				}
			} else {
				break _v1$6;
			}
		}
		return false;
	});
var $author$project$LanguageService$commonImplicitTopLevelImportsNew = function (languageServiceState) {
	return A2(
		$elm$core$List$concatMap,
		function (_v0) {
			var packageVersionIdentifer = _v0.a;
			var packageModules = _v0.b;
			if (packageVersionIdentifer.a === 'elm/core') {
				return A2(
					$elm$core$List$concatMap,
					function (_v2) {
						var moduleName = _v2.a;
						var _v3 = _v2.b;
						var moduleFilePath = _v3.a;
						var moduleCompletionItems = _v3.c;
						return A2(
							$elm$core$List$filterMap,
							function (item) {
								return item.isExposed ? (A2($author$project$LanguageService$isItemImplicitlyExposed, moduleName, item.completionItem) ? $elm$core$Maybe$Just(
									_Utils_Tuple2(
										_Utils_Tuple2(
											A2($author$project$LanguageServiceInterface$ElmPackageFileLocation, packageVersionIdentifer, moduleFilePath),
											item.range),
										item.completionItem)) : $elm$core$Maybe$Nothing) : $elm$core$Maybe$Nothing;
							},
							moduleCompletionItems.fromTopLevel);
					},
					packageModules);
			} else {
				return _List_Nil;
			}
		},
		languageServiceState.elmPackages);
};
var $author$project$LanguageService$commonImplicitTopLevelImportsOld = function (languageServiceState) {
	return A2(
		$elm$core$List$concatMap,
		function (coreModule) {
			var moduleCompletionItems = coreModule.parseResult.completionItems;
			var _v0 = coreModule.parseResult.syntax.moduleDefinition;
			var moduleDefinition = _v0.b;
			var moduleName = $stil4m$elm_syntax$Elm$Syntax$Module$moduleName(moduleDefinition);
			return A2(
				$elm$core$List$filterMap,
				function (item) {
					return item.isExposed ? (A2($author$project$LanguageService$isItemImplicitlyExposed, moduleName, item.completionItem) ? $elm$core$Maybe$Just(
						_Utils_Tuple2(item.range, item.completionItem)) : $elm$core$Maybe$Nothing) : $elm$core$Maybe$Nothing;
				},
				moduleCompletionItems.fromTopLevel);
		},
		languageServiceState.coreModulesCache);
};
var $author$project$LanguageService$commonImplicitTopLevelImports = function (languageServiceState) {
	return _Utils_eq(languageServiceState.elmPackages, _List_Nil) ? A2(
		$elm$core$List$map,
		function (_v0) {
			var range = _v0.a;
			var completionItem = _v0.b;
			return _Utils_Tuple2(
				_Utils_Tuple2(
					$author$project$LanguageServiceInterface$WorkspaceFileLocation('elm/core'),
					range),
				completionItem);
		},
		$author$project$LanguageService$commonImplicitTopLevelImportsOld(languageServiceState)) : $author$project$LanguageService$commonImplicitTopLevelImportsNew(languageServiceState);
};
var $elm$core$List$head = function (list) {
	if (list.b) {
		var x = list.a;
		var xs = list.b;
		return $elm$core$Maybe$Just(x);
	} else {
		return $elm$core$Maybe$Nothing;
	}
};
var $elm$core$List$filter = F2(
	function (isGood, list) {
		return A3(
			$elm$core$List$foldr,
			F2(
				function (x, xs) {
					return isGood(x) ? A2($elm$core$List$cons, x, xs) : xs;
				}),
			_List_Nil,
			list);
	});
var $author$project$Common$listMapFind = F2(
	function (mapItem, list) {
		listMapFind:
		while (true) {
			if (!list.b) {
				return $elm$core$Maybe$Nothing;
			} else {
				var item = list.a;
				var rest = list.b;
				var _v1 = mapItem(item);
				if (_v1.$ === 'Just') {
					var itemOk = _v1.a;
					return $elm$core$Maybe$Just(itemOk);
				} else {
					var $temp$mapItem = mapItem,
						$temp$list = rest;
					mapItem = $temp$mapItem;
					list = $temp$list;
					continue listMapFind;
				}
			}
		}
	});
var $author$project$LanguageService$importExposingsFromFile = F2(
	function (fileOpenedInEditor, languageServiceState) {
		return A2(
			$elm$core$List$concatMap,
			function (_v0) {
				var importSyntax = _v0.b;
				var _v1 = importSyntax.exposingList;
				if (_v1.$ === 'Nothing') {
					return _List_Nil;
				} else {
					var _v2 = _v1.a;
					var exposingList = _v2.b;
					var _v3 = importSyntax.moduleName;
					var canonicalName = _v3.b;
					var _v4 = A2(
						$author$project$Common$listMapFind,
						function (_v5) {
							var fileCache = _v5.b;
							var _v6 = fileCache.parsedFileLastSuccess;
							if (_v6.$ === 'Nothing') {
								return $elm$core$Maybe$Nothing;
							} else {
								var moduleCandidate = _v6.a;
								var _v7 = moduleCandidate.syntax.moduleDefinition;
								var candidateModuleDefinition = _v7.b;
								return _Utils_eq(
									$stil4m$elm_syntax$Elm$Syntax$Module$moduleName(candidateModuleDefinition),
									canonicalName) ? $elm$core$Maybe$Just(moduleCandidate) : $elm$core$Maybe$Nothing;
							}
						},
						$elm$core$Dict$toList(languageServiceState.documentCache));
					if (_v4.$ === 'Nothing') {
						return _List_Nil;
					} else {
						var importedParsedModule = _v4.a;
						var importedModuleItems = A2(
							$elm$core$List$filterMap,
							function (item) {
								return item.isExposed ? $elm$core$Maybe$Just(item.completionItem) : $elm$core$Maybe$Nothing;
							},
							importedParsedModule.completionItems.fromTopLevel);
						if (exposingList.$ === 'All') {
							return importedModuleItems;
						} else {
							var topLevelExposings = exposingList.a;
							return A2(
								$elm$core$List$concatMap,
								function (_v9) {
									var topLevelExpose = _v9.b;
									var exposedName = function () {
										switch (topLevelExpose.$) {
											case 'InfixExpose':
												var name = topLevelExpose.a;
												return name;
											case 'FunctionExpose':
												var name = topLevelExpose.a;
												return name;
											case 'TypeOrAliasExpose':
												var name = topLevelExpose.a;
												return name;
											default:
												var typeExpose = topLevelExpose.a;
												return typeExpose.name;
										}
									}();
									return A2(
										$elm$core$List$filter,
										function (_v10) {
											var insertText = _v10.b;
											return _Utils_eq(insertText, exposedName);
										},
										importedModuleItems);
								},
								topLevelExposings);
						}
					}
				}
			},
			fileOpenedInEditor.syntax.imports);
	});
var $author$project$LanguageService$elmCoreModuleIsImplicitlyImported = function (moduleName) {
	_v0$6:
	while (true) {
		if (moduleName.b && (!moduleName.b.b)) {
			switch (moduleName.a) {
				case 'Basics':
					return true;
				case 'List':
					return true;
				case 'Maybe':
					return true;
				case 'Result':
					return true;
				case 'String':
					return true;
				case 'Platform':
					return true;
				default:
					break _v0$6;
			}
		} else {
			break _v0$6;
		}
	}
	return false;
};
var $author$project$LanguageService$findModuleInPackagesByModuleName = F2(
	function (moduleName, languageServiceState) {
		return A2(
			$author$project$Common$listMapFind,
			function (_v0) {
				var packageVersionIdentifer = _v0.a;
				var packageModules = _v0.b;
				var _v1 = $elm$core$List$head(
					A2(
						$elm$core$List$filterMap,
						function (_v2) {
							var moduleModuleName = _v2.a;
							var _v3 = _v2.b;
							var modulePath = _v3.a;
							var moduleSyntax = _v3.b;
							var moduleCompletionItems = _v3.c;
							return _Utils_eq(moduleModuleName, moduleName) ? $elm$core$Maybe$Just(
								_Utils_Tuple3(
									A2($author$project$LanguageServiceInterface$ElmPackageFileLocation, packageVersionIdentifer, modulePath),
									moduleSyntax,
									moduleCompletionItems)) : $elm$core$Maybe$Nothing;
						},
						packageModules));
				if (_v1.$ === 'Nothing') {
					return $elm$core$Maybe$Nothing;
				} else {
					var moduleCompletionItems = _v1.a;
					return $elm$core$Maybe$Just(moduleCompletionItems);
				}
			},
			languageServiceState.elmPackages);
	});
var $author$project$LanguageService$modulesAvailableForImportFromState = function (languageServiceState) {
	return $elm$core$List$concat(
		_List_fromArray(
			[
				A2(
				$elm$core$List$filterMap,
				function (_v0) {
					var fileCache = _v0.b;
					return fileCache.parsedFileLastSuccess;
				},
				$elm$core$Dict$toList(languageServiceState.documentCache)),
				A2(
				$elm$core$List$map,
				function ($) {
					return $.parseResult;
				},
				languageServiceState.coreModulesCache)
			]));
};
var $author$project$LanguageService$importedModulesFromFile = F2(
	function (fileSyntax, languageServiceState) {
		var parsedModuleFromModuleName = function (canonicalModuleName) {
			var _v11 = A2(
				$author$project$Common$listMapFind,
				function (moduleAvailable) {
					var _v12 = moduleAvailable.syntax.moduleDefinition;
					var moduleDefinition = _v12.b;
					return _Utils_eq(
						$stil4m$elm_syntax$Elm$Syntax$Module$moduleName(moduleDefinition),
						canonicalModuleName) ? $elm$core$Maybe$Just(
						_Utils_Tuple3(
							$author$project$LanguageServiceInterface$WorkspaceFileLocation(moduleAvailable.fileUri),
							moduleAvailable.syntax,
							moduleAvailable.completionItems)) : $elm$core$Maybe$Nothing;
				},
				$author$project$LanguageService$modulesAvailableForImportFromState(languageServiceState));
			if (_v11.$ === 'Just') {
				var fromWorkspace = _v11.a;
				return $elm$core$Maybe$Just(fromWorkspace);
			} else {
				var _v13 = A2($author$project$LanguageService$findModuleInPackagesByModuleName, canonicalModuleName, languageServiceState);
				if (_v13.$ === 'Just') {
					var fromPackage = _v13.a;
					return $elm$core$Maybe$Just(fromPackage);
				} else {
					return $elm$core$Maybe$Nothing;
				}
			}
		};
		var implicitlyImportedModulesOld = A2(
			$elm$core$List$filterMap,
			function (coreModule) {
				if (coreModule.implicitImport) {
					var _v10 = coreModule.parseResult.syntax.moduleDefinition;
					var moduleDefinition = _v10.b;
					var canonicalName = $stil4m$elm_syntax$Elm$Syntax$Module$moduleName(moduleDefinition);
					return $elm$core$Maybe$Just(
						{
							canonicalName: canonicalName,
							fileLocation: $author$project$LanguageServiceInterface$WorkspaceFileLocation(coreModule.parseResult.fileUri),
							importedName: canonicalName,
							parsedModule: $elm$core$Maybe$Just(
								_Utils_Tuple2(coreModule.parseResult.syntax, coreModule.parseResult.completionItems)),
							referencesRanges: _List_Nil
						});
				} else {
					return $elm$core$Maybe$Nothing;
				}
			},
			languageServiceState.coreModulesCache);
		var implicitlyImportedModules = A2(
			$elm$core$List$concatMap,
			function (_v6) {
				var packageVersionIdentifer = _v6.a;
				var packageModules = _v6.b;
				if (packageVersionIdentifer.a === 'elm/core') {
					var implicitlyImported = A2(
						$elm$core$List$filterMap,
						function (_v8) {
							var moduleModuleName = _v8.a;
							var _v9 = _v8.b;
							var modulePath = _v9.a;
							var moduleSyntax = _v9.b;
							var moduleCompletionItems = _v9.c;
							return $author$project$LanguageService$elmCoreModuleIsImplicitlyImported(moduleModuleName) ? $elm$core$Maybe$Just(
								{
									canonicalName: moduleModuleName,
									fileLocation: A2($author$project$LanguageServiceInterface$ElmPackageFileLocation, packageVersionIdentifer, modulePath),
									importedName: moduleModuleName,
									parsedModule: $elm$core$Maybe$Just(
										_Utils_Tuple2(moduleSyntax, moduleCompletionItems)),
									referencesRanges: _List_Nil
								}) : $elm$core$Maybe$Nothing;
						},
						packageModules);
					return implicitlyImported;
				} else {
					return _List_Nil;
				}
			},
			languageServiceState.elmPackages);
		var explicitlyImportedModules = A2(
			$elm$core$List$filterMap,
			function (_v0) {
				var importSyntax = _v0.b;
				var _v1 = importSyntax.moduleName;
				var moduleNameRange = _v1.a;
				var canonicalName = _v1.b;
				var importedName = function () {
					var _v4 = importSyntax.moduleAlias;
					if (_v4.$ === 'Nothing') {
						return canonicalName;
					} else {
						var _v5 = _v4.a;
						var moduleAlias = _v5.b;
						return moduleAlias;
					}
				}();
				var _v2 = parsedModuleFromModuleName(canonicalName);
				if (_v2.$ === 'Just') {
					var _v3 = _v2.a;
					var moduleFileLocation = _v3.a;
					var moduleSyntax = _v3.b;
					var moduleCompletionItems = _v3.c;
					return $elm$core$Maybe$Just(
						{
							canonicalName: canonicalName,
							fileLocation: moduleFileLocation,
							importedName: importedName,
							parsedModule: $elm$core$Maybe$Just(
								_Utils_Tuple2(moduleSyntax, moduleCompletionItems)),
							referencesRanges: _List_fromArray(
								[moduleNameRange])
						});
				} else {
					return $elm$core$Maybe$Nothing;
				}
			},
			fileSyntax.imports);
		return $elm$core$List$concat(
			_List_fromArray(
				[implicitlyImportedModules, implicitlyImportedModulesOld, explicitlyImportedModules]));
	});
var $author$project$Common$listFind = F2(
	function (predicate, list) {
		listFind:
		while (true) {
			if (!list.b) {
				return $elm$core$Maybe$Nothing;
			} else {
				if (list.b.b) {
					var first = list.a;
					var _v1 = list.b;
					var second = _v1.a;
					var rest = _v1.b;
					if (predicate(first)) {
						return $elm$core$Maybe$Just(first);
					} else {
						if (predicate(second)) {
							return $elm$core$Maybe$Just(second);
						} else {
							var $temp$predicate = predicate,
								$temp$list = rest;
							predicate = $temp$predicate;
							list = $temp$list;
							continue listFind;
						}
					}
				} else {
					var first = list.a;
					var rest = list.b;
					if (predicate(first)) {
						return $elm$core$Maybe$Just(first);
					} else {
						var $temp$predicate = predicate,
							$temp$list = rest;
						predicate = $temp$predicate;
						list = $temp$list;
						continue listFind;
					}
				}
			}
		}
	});
var $elm$core$List$member = F2(
	function (x, xs) {
		return A2(
			$elm$core$List$any,
			function (a) {
				return _Utils_eq(a, x);
			},
			xs);
	});
var $author$project$Frontend$MonacoEditor$ModuleCompletionItemKind = {$: 'ModuleCompletionItemKind'};
var $stil4m$elm_syntax$Elm$Syntax$Range$compareLocations = F2(
	function (left, right) {
		return (_Utils_cmp(left.row, right.row) < 0) ? $elm$core$Basics$LT : ((_Utils_cmp(left.row, right.row) > 0) ? $elm$core$Basics$GT : A2($elm$core$Basics$compare, left.column, right.column));
	});
var $stil4m$elm_syntax$Elm$Syntax$Range$combineHelp = F3(
	function (ranges, previousStart, previousEnd) {
		combineHelp:
		while (true) {
			if (!ranges.b) {
				return {end: previousEnd, start: previousStart};
			} else {
				var start = ranges.a.start;
				var end = ranges.a.end;
				var rest = ranges.b;
				var newStart = function () {
					var _v2 = A2($stil4m$elm_syntax$Elm$Syntax$Range$compareLocations, start, previousStart);
					if (_v2.$ === 'LT') {
						return start;
					} else {
						return previousStart;
					}
				}();
				var newEnd = function () {
					var _v1 = A2($stil4m$elm_syntax$Elm$Syntax$Range$compareLocations, end, previousEnd);
					if (_v1.$ === 'GT') {
						return end;
					} else {
						return previousEnd;
					}
				}();
				var $temp$ranges = rest,
					$temp$previousStart = newStart,
					$temp$previousEnd = newEnd;
				ranges = $temp$ranges;
				previousStart = $temp$previousStart;
				previousEnd = $temp$previousEnd;
				continue combineHelp;
			}
		}
	});
var $stil4m$elm_syntax$Elm$Syntax$Range$empty = {
	end: {column: 0, row: 0},
	start: {column: 0, row: 0}
};
var $stil4m$elm_syntax$Elm$Syntax$Range$combine = function (ranges) {
	if (!ranges.b) {
		return $stil4m$elm_syntax$Elm$Syntax$Range$empty;
	} else {
		var head = ranges.a;
		var tail = ranges.b;
		return A3($stil4m$elm_syntax$Elm$Syntax$Range$combineHelp, tail, head.start, head.end);
	}
};
var $author$project$LanguageService$documentationStringFromModuleSyntax = function (parsedModule) {
	var importsAndDeclarationsRanges = $elm$core$List$concat(
		_List_fromArray(
			[
				A2(
				$elm$core$List$map,
				function (_v6) {
					var range = _v6.a;
					return range;
				},
				parsedModule.imports),
				A2(
				$elm$core$List$map,
				function (_v7) {
					var range = _v7.a;
					return range;
				},
				parsedModule.declarations)
			]));
	var importsAndDeclarationsRange = $stil4m$elm_syntax$Elm$Syntax$Range$combine(importsAndDeclarationsRanges);
	var _v0 = parsedModule.moduleDefinition;
	var moduleDefinitionRange = _v0.a;
	var maybeModuleComment = A3(
		$elm$core$List$foldl,
		F2(
			function (comment, maybeComment) {
				var _v3 = comment;
				var commentRange = _v3.a;
				if (maybeComment.$ === 'Nothing') {
					return ((_Utils_cmp(commentRange.start.row, moduleDefinitionRange.start.row) > 0) && (_Utils_cmp(commentRange.start.row, importsAndDeclarationsRange.start.row) < 0)) ? $elm$core$Maybe$Just(comment) : $elm$core$Maybe$Nothing;
				} else {
					var prevComment = maybeComment.a;
					var _v5 = prevComment;
					var prevCommentRange = _v5.a;
					return ((_Utils_cmp(commentRange.start.row, prevCommentRange.end.row) > 0) && (_Utils_cmp(commentRange.start.row, importsAndDeclarationsRange.start.row) < 0)) ? $elm$core$Maybe$Just(comment) : $elm$core$Maybe$Just(prevComment);
				}
			}),
		$elm$core$Maybe$Nothing,
		parsedModule.comments);
	if (maybeModuleComment.$ === 'Nothing') {
		return $elm$core$Maybe$Nothing;
	} else {
		var _v2 = maybeModuleComment.a;
		var commentNode = _v2.b;
		return $elm$core$Maybe$Just(
			$author$project$LanguageService$removeWrappingFromMultilineComment(commentNode));
	}
};
var $author$project$LanguageService$moduleCompletionItemFromModuleSyntax = F2(
	function (_v0, moduleSyntax) {
		var importedModuleNameRestAfterPrefix = _v0.importedModuleNameRestAfterPrefix;
		var importedName = _v0.importedName;
		var documentation = function () {
			var _v4 = $author$project$LanguageService$documentationStringFromModuleSyntax(moduleSyntax);
			if (_v4.$ === 'Nothing') {
				return '';
			} else {
				var documentationString = _v4.a;
				return documentationString;
			}
		}();
		var _v1 = moduleSyntax.moduleDefinition;
		var moduleDefinition = _v1.b;
		var canonicalName = $stil4m$elm_syntax$Elm$Syntax$Module$moduleName(moduleDefinition);
		var insertText = function () {
			if (importedModuleNameRestAfterPrefix.$ === 'Nothing') {
				return A2($elm$core$String$join, '.', canonicalName);
			} else {
				var moduleNameRestAfterPrefix = importedModuleNameRestAfterPrefix.a;
				return A2($elm$core$String$join, '.', moduleNameRestAfterPrefix);
			}
		}();
		var label = function () {
			if (importedName.$ === 'Nothing') {
				return insertText;
			} else {
				var importedName_ = importedName.a;
				return _Utils_eq(importedName_, canonicalName) ? insertText : (A2($elm$core$String$join, '.', canonicalName) + (' as ' + insertText));
			}
		}();
		return A4($author$project$LanguageService$CompletionItem, label, insertText, $author$project$Frontend$MonacoEditor$ModuleCompletionItemKind, documentation);
	});
var $author$project$LanguageService$rangeContainsLocation = F2(
	function (_v0, _v1) {
		var row = _v0.a;
		var column = _v0.b;
		var _v2 = _v1.a;
		var startRow = _v2.a;
		var startColumn = _v2.b;
		var _v3 = _v1.b;
		var endRow = _v3.a;
		var endColumn = _v3.b;
		var startRowInt = startRow - 1;
		var startColumnInt = startColumn - 1;
		var rowInt = row - 1;
		var endRowInt = endRow - 1;
		var endColumnInt = endColumn - 1;
		var columnInt = column - 1;
		return (_Utils_cmp(rowInt, startRowInt) < 0) ? false : ((_Utils_cmp(rowInt, endRowInt) > 0) ? false : ((_Utils_eq(rowInt, startRowInt) && _Utils_eq(rowInt, endRowInt)) ? ((_Utils_cmp(columnInt, startColumnInt) < 0) ? false : ((_Utils_cmp(columnInt, endColumnInt) > 0) ? false : true)) : (_Utils_eq(rowInt, startRowInt) ? ((_Utils_cmp(columnInt, startColumnInt) < 0) ? false : true) : (_Utils_eq(rowInt, endRowInt) ? ((_Utils_cmp(columnInt, endColumnInt) > 0) ? false : true) : true))));
	});
var $elm$core$List$sortBy = _List_sortBy;
var $elm$core$String$fromList = _String_fromList;
var $author$project$LanguageService$listCharSplitByChar = F2(
	function (charSplits, chars) {
		var _v0 = A3(
			$elm$core$List$foldl,
			F2(
				function (_char, _v1) {
					var completed = _v1.a;
					var current = _v1.b;
					return charSplits(_char) ? _Utils_Tuple2(
						A2(
							$elm$core$List$cons,
							$elm$core$List$reverse(current),
							completed),
						_List_Nil) : _Utils_Tuple2(
						completed,
						A2($elm$core$List$cons, _char, current));
				}),
			_Utils_Tuple2(_List_Nil, _List_Nil),
			chars);
		var completed = _v0.a;
		var current = _v0.b;
		return $elm$core$List$reverse(
			A2(
				$elm$core$List$cons,
				$elm$core$List$reverse(current),
				completed));
	});
var $author$project$LanguageService$stringSplitByChar = F2(
	function (charSplits, string) {
		return A2(
			$elm$core$List$map,
			$elm$core$String$fromList,
			A2(
				$author$project$LanguageService$listCharSplitByChar,
				charSplits,
				$elm$core$String$toList(string)));
	});
var $elm$core$Maybe$withDefault = F2(
	function (_default, maybe) {
		if (maybe.$ === 'Just') {
			var value = maybe.a;
			return value;
		} else {
			return _default;
		}
	});
var $author$project$LanguageService$provideCompletionItemsInModule = F2(
	function (request, languageServiceState) {
		var modulesAvailableForImport = $author$project$LanguageService$modulesAvailableForImportFromState(languageServiceState);
		var lineText = A2(
			$elm$core$Maybe$withDefault,
			'',
			$elm$core$List$head(
				A2(
					$elm$core$List$drop,
					request.cursorLineNumber - 1,
					$elm$core$String$lines(request.newText))));
		var lineUntilPosition = A2($elm$core$String$left, request.cursorColumn - 1, lineText);
		var lineUntilPositionWords = A2(
			$author$project$LanguageService$stringSplitByChar,
			function (c) {
				return !($author$project$LanguageService$charIsAllowedInDeclarationName(c) || _Utils_eq(
					c,
					_Utils_chr('.')));
			},
			lineUntilPosition);
		var importedModules = A2($author$project$LanguageService$importedModulesFromFile, request.fileOpenedInEditor.syntax, languageServiceState);
		var importExposings = $elm$core$List$concat(
			_List_fromArray(
				[
					A2($author$project$LanguageService$importExposingsFromFile, request.fileOpenedInEditor, languageServiceState),
					A2(
					$elm$core$List$map,
					$elm$core$Tuple$second,
					$author$project$LanguageService$commonImplicitTopLevelImports(languageServiceState))
				]));
		var currentModuleDeclarations = request.fileOpenedInEditor.completionItems;
		var fromLocals = A2(
			$elm$core$List$filterMap,
			function (_v16) {
				var completionItem = _v16.a;
				var scopeRange = _v16.c;
				return A2(
					$author$project$LanguageService$rangeContainsLocation,
					_Utils_Tuple2(
						request.cursorLineNumber,
						$elm$core$String$length(lineUntilPosition)),
					scopeRange) ? $elm$core$Maybe$Just(completionItem) : $elm$core$Maybe$Nothing;
			},
			currentModuleDeclarations.fromLocals);
		var localDeclarationsAndImportExposings = $elm$core$List$concat(
			_List_fromArray(
				[
					A2(
					$elm$core$List$map,
					function ($) {
						return $.completionItem;
					},
					currentModuleDeclarations.fromTopLevel),
					importExposings,
					fromLocals
				]));
		var completionPrefix = function () {
			var _v15 = $elm$core$List$reverse(lineUntilPositionWords);
			if (!_v15.b) {
				return _List_Nil;
			} else {
				var word = _v15.a;
				return A2(
					$elm$core$List$drop,
					1,
					$elm$core$List$reverse(
						A2($elm$core$String$split, '.', word)));
			}
		}();
		var completionPrefixIsNamespace = function () {
			if (!completionPrefix.b) {
				return true;
			} else {
				var prefixFirstElement = completionPrefix.a;
				var _v13 = $elm$core$String$uncons(prefixFirstElement);
				if (_v13.$ === 'Nothing') {
					return true;
				} else {
					var _v14 = _v13.a;
					var firstChar = _v14.a;
					return $elm$core$Char$isUpper(firstChar);
				}
			}
		}();
		var importedModulesAfterPrefix = A2(
			$elm$core$List$filterMap,
			function (importedModule) {
				if (_Utils_eq(
					A2(
						$elm$core$List$take,
						$elm$core$List$length(completionPrefix),
						importedModule.importedName),
					completionPrefix)) {
					var _v11 = A2(
						$elm$core$List$drop,
						$elm$core$List$length(completionPrefix),
						importedModule.importedName);
					if (!_v11.b) {
						return $elm$core$Maybe$Nothing;
					} else {
						var restAfterPrefix = _v11;
						return $elm$core$Maybe$Just(
							_Utils_Tuple2(restAfterPrefix, importedModule));
					}
				} else {
					return $elm$core$Maybe$Nothing;
				}
			},
			importedModules);
		var fromImports = A2(
			$elm$core$List$filterMap,
			function (_v8) {
				var importedModuleNameRestAfterPrefix = _v8.a;
				var importedModule = _v8.b;
				var _v9 = importedModule.parsedModule;
				if (_v9.$ === 'Nothing') {
					return $elm$core$Maybe$Nothing;
				} else {
					var _v10 = _v9.a;
					var importedModuleParsedSyntax = _v10.a;
					return $elm$core$Maybe$Just(
						A2(
							$author$project$LanguageService$moduleCompletionItemFromModuleSyntax,
							{
								importedModuleNameRestAfterPrefix: $elm$core$Maybe$Just(importedModuleNameRestAfterPrefix),
								importedName: $elm$core$Maybe$Just(importedModule.importedName)
							},
							importedModuleParsedSyntax));
				}
			},
			importedModulesAfterPrefix);
		var localDeclarationsAfterPrefix = function () {
			if (_Utils_eq(completionPrefix, _List_Nil)) {
				return localDeclarationsAndImportExposings;
			} else {
				var _v6 = A2(
					$elm$core$Maybe$andThen,
					function ($) {
						return $.parsedModule;
					},
					A2(
						$author$project$Common$listFind,
						function (importedModule) {
							return _Utils_eq(importedModule.importedName, completionPrefix);
						},
						importedModules));
				if (_v6.$ === 'Nothing') {
					return _List_Nil;
				} else {
					var _v7 = _v6.a;
					var referencedModuleCompletionItems = _v7.b;
					return A2(
						$elm$core$List$filterMap,
						function (item) {
							return item.isExposed ? $elm$core$Maybe$Just(item.completionItem) : $elm$core$Maybe$Nothing;
						},
						referencedModuleCompletionItems.fromTopLevel);
				}
			}
		}();
		var _v0 = request.fileOpenedInEditor.syntax.moduleDefinition;
		var moduleDefinition = _v0.b;
		var fileOpenedInEditorModuleName = $stil4m$elm_syntax$Elm$Syntax$Module$moduleName(moduleDefinition);
		var moduleNamesToNotSuggestForImport = _List_fromArray(
			[fileOpenedInEditorModuleName]);
		var modulesToSuggestForImport = A2(
			$elm$core$List$sortBy,
			function (_v5) {
				var availableModuleName = _v5.b;
				return A2($elm$core$String$join, '.', availableModuleName);
			},
			A2(
				$elm$core$List$filterMap,
				function (availableModule) {
					var availableModuleSyntax = availableModule.syntax;
					var _v4 = availableModuleSyntax.moduleDefinition;
					var availableModuleDefinition = _v4.b;
					var availableModuleName = $stil4m$elm_syntax$Elm$Syntax$Module$moduleName(availableModuleDefinition);
					return A2($elm$core$List$member, availableModuleName, moduleNamesToNotSuggestForImport) ? $elm$core$Maybe$Nothing : $elm$core$Maybe$Just(
						_Utils_Tuple2(availableModule, availableModuleName));
				},
				modulesAvailableForImport));
		if (lineUntilPositionWords.b && (lineUntilPositionWords.a === 'import')) {
			return A2(
				$elm$core$List$map,
				function (_v2) {
					var availableModule = _v2.a;
					return A2(
						$author$project$LanguageService$moduleCompletionItemFromModuleSyntax,
						{importedModuleNameRestAfterPrefix: $elm$core$Maybe$Nothing, importedName: $elm$core$Maybe$Nothing},
						availableModule.syntax);
				},
				modulesToSuggestForImport);
		} else {
			return completionPrefixIsNamespace ? $elm$core$List$concat(
				_List_fromArray(
					[
						fromImports,
						A2(
						$elm$core$List$sortBy,
						function (_v3) {
							var label = _v3.a;
							return label;
						},
						localDeclarationsAfterPrefix)
					])) : _List_Nil;
		}
	});
var $author$project$LanguageService$provideCompletionItems = F2(
	function (request, languageServiceState) {
		var _v0 = A2($elm$core$Dict$get, request.filePathOpenedInEditor, languageServiceState.documentCache);
		if (_v0.$ === 'Nothing') {
			return _List_Nil;
		} else {
			var currentFileCacheItem = _v0.a;
			var cursorIsInCommentInCompleteSyntax = function () {
				var _v3 = currentFileCacheItem.textContent;
				if (_v3.$ === 'Nothing') {
					return false;
				} else {
					var textContent = _v3.a;
					var _v4 = textContent.parsedFile;
					if (_v4.$ === 'Nothing') {
						return false;
					} else {
						var parsedFile = _v4.a;
						return A2(
							$author$project$LanguageService$locationIsInComment,
							{column: request.cursorColumn, row: request.cursorLineNumber},
							parsedFile.syntax);
					}
				}
			}();
			if (cursorIsInCommentInCompleteSyntax) {
				return _List_Nil;
			} else {
				var _v1 = currentFileCacheItem.parsedFileLastSuccess;
				if (_v1.$ === 'Nothing') {
					return _List_Nil;
				} else {
					var fileOpenedInEditor = _v1.a;
					var text = function () {
						var _v2 = currentFileCacheItem.textContent;
						if (_v2.$ === 'Nothing') {
							return fileOpenedInEditor.text;
						} else {
							var textContent = _v2.a;
							return textContent.text;
						}
					}();
					return A2(
						$elm$core$List$map,
						$author$project$LanguageService$monacoCompletionItemFromCompletionItem,
						A2(
							$author$project$LanguageService$provideCompletionItemsInModule,
							{cursorColumn: request.cursorColumn, cursorLineNumber: request.cursorLineNumber, fileOpenedInEditor: fileOpenedInEditor, newText: text},
							languageServiceState));
				}
			}
		}
	});
var $author$project$LanguageService$LocationInFile = F2(
	function (a, b) {
		return {$: 'LocationInFile', a: a, b: b};
	});
var $author$project$Common$assocListGet = F2(
	function (key, list) {
		assocListGet:
		while (true) {
			if (!list.b) {
				return $elm$core$Maybe$Nothing;
			} else {
				var _v1 = list.a;
				var firstKey = _v1.a;
				var firstValue = _v1.b;
				var rest = list.b;
				if (_Utils_eq(firstKey, key)) {
					return $elm$core$Maybe$Just(firstValue);
				} else {
					var $temp$key = key,
						$temp$list = rest;
					key = $temp$key;
					list = $temp$list;
					continue assocListGet;
				}
			}
		}
	});
var $author$project$LanguageService$SyntaxNode = F2(
	function (a, b) {
		return {$: 'SyntaxNode', a: a, b: b};
	});
var $elm$core$List$sum = function (numbers) {
	return A3($elm$core$List$foldl, $elm$core$Basics$add, 0, numbers);
};
var $author$project$LanguageService$listReferencesFromPattern = function (_v0) {
	listReferencesFromPattern:
	while (true) {
		var patternRange = _v0.a;
		var pattern = _v0.b;
		switch (pattern.$) {
			case 'TuplePattern':
				var tuplePattern = pattern.a;
				return A2($elm$core$List$concatMap, $author$project$LanguageService$listReferencesFromPattern, tuplePattern);
			case 'UnConsPattern':
				var head = pattern.a;
				var tail = pattern.b;
				return A2(
					$elm$core$List$concatMap,
					$author$project$LanguageService$listReferencesFromPattern,
					_List_fromArray(
						[head, tail]));
			case 'ListPattern':
				var listPattern = pattern.a;
				return A2($elm$core$List$concatMap, $author$project$LanguageService$listReferencesFromPattern, listPattern);
			case 'VarPattern':
				return _List_Nil;
			case 'NamedPattern':
				var named = pattern.a;
				var _arguments = pattern.b;
				var rangeStartRow = patternRange.start.row;
				var rangeStartOffset = $elm$core$List$sum(
					A2($elm$core$List$map, $elm$core$String$length, named.moduleName)) + $elm$core$List$length(named.moduleName);
				var nameStartColumn = patternRange.start.column + rangeStartOffset;
				var nameEndColumn = nameStartColumn + $elm$core$String$length(named.name);
				var nameRange = A2(
					$author$project$LanguageService$Range,
					_Utils_Tuple2(rangeStartRow, nameStartColumn),
					_Utils_Tuple2(rangeStartRow, nameEndColumn));
				return $elm$core$List$concat(
					_List_fromArray(
						[
							_List_fromArray(
							[
								A2(
								$author$project$LanguageService$SyntaxNode,
								nameRange,
								_Utils_Tuple2(named.moduleName, named.name))
							]),
							A2($elm$core$List$concatMap, $author$project$LanguageService$listReferencesFromPattern, _arguments)
						]));
			case 'ParenthesizedPattern':
				var parenthesized = pattern.a;
				var $temp$_v0 = parenthesized;
				_v0 = $temp$_v0;
				continue listReferencesFromPattern;
			default:
				return _List_Nil;
		}
	}
};
var $author$project$LanguageService$listTypeReferencesFromTypeAnnotation = function (_v0) {
	var typeAnnotation = _v0.b;
	switch (typeAnnotation.$) {
		case 'GenericType':
			return _List_Nil;
		case 'Typed':
			var _v2 = typeAnnotation.a;
			var instantiatedRangeRecord = _v2.a;
			var instantiatedVal = _v2.b;
			var _arguments = typeAnnotation.b;
			var instantiatedRange = $author$project$LanguageService$rangeFromRecordRange(instantiatedRangeRecord);
			return A2(
				$elm$core$List$cons,
				A2($author$project$LanguageService$SyntaxNode, instantiatedRange, instantiatedVal),
				A2($elm$core$List$concatMap, $author$project$LanguageService$listTypeReferencesFromTypeAnnotation, _arguments));
		case 'Unit':
			return _List_Nil;
		case 'Tupled':
			var tupled = typeAnnotation.a;
			return A2($elm$core$List$concatMap, $author$project$LanguageService$listTypeReferencesFromTypeAnnotation, tupled);
		case 'Record':
			var record = typeAnnotation.a;
			return A2(
				$elm$core$List$concatMap,
				function (_v3) {
					var _v4 = _v3.b;
					var value = _v4.b;
					return $author$project$LanguageService$listTypeReferencesFromTypeAnnotation(value);
				},
				record);
		case 'GenericRecord':
			var _v5 = typeAnnotation.b;
			var record = _v5.b;
			return A2(
				$elm$core$List$concatMap,
				function (_v6) {
					var _v7 = _v6.b;
					var value = _v7.b;
					return $author$project$LanguageService$listTypeReferencesFromTypeAnnotation(value);
				},
				record);
		default:
			var input = typeAnnotation.a;
			var _return = typeAnnotation.b;
			return A2(
				$elm$core$List$concatMap,
				$author$project$LanguageService$listTypeReferencesFromTypeAnnotation,
				_List_fromArray(
					[input, _return]));
	}
};
var $author$project$LanguageService$listReferencesForFunction = function (_function) {
	var signatureReferences = function () {
		var _v11 = _function.signature;
		if (_v11.$ === 'Nothing') {
			return _List_Nil;
		} else {
			var _v12 = _v11.a;
			var signature = _v12.b;
			return $author$project$LanguageService$listTypeReferencesFromTypeAnnotation(signature.typeAnnotation);
		}
	}();
	var _v10 = _function.declaration;
	var functionDeclaration = _v10.b;
	var _arguments = A2($elm$core$List$concatMap, $author$project$LanguageService$listReferencesFromPattern, functionDeclaration._arguments);
	var expressionNodes = $author$project$LanguageService$listReferencesInExpression(functionDeclaration.expression);
	return $elm$core$List$concat(
		_List_fromArray(
			[signatureReferences, _arguments, expressionNodes]));
};
var $author$project$LanguageService$listReferencesInExpression = function (_v2) {
	listReferencesInExpression:
	while (true) {
		var expressionRange = _v2.a;
		var expression = _v2.b;
		switch (expression.$) {
			case 'UnitExpr':
				return _List_Nil;
			case 'Application':
				var application = expression.a;
				return A2($elm$core$List$concatMap, $author$project$LanguageService$listReferencesInExpression, application);
			case 'OperatorApplication':
				var leftExpr = expression.c;
				var rightExpr = expression.d;
				return A2(
					$elm$core$List$concatMap,
					$author$project$LanguageService$listReferencesInExpression,
					_List_fromArray(
						[leftExpr, rightExpr]));
			case 'FunctionOrValue':
				var moduleName = expression.a;
				var localName = expression.b;
				return _List_fromArray(
					[
						A2(
						$author$project$LanguageService$SyntaxNode,
						$author$project$LanguageService$rangeFromRecordRange(expressionRange),
						_Utils_Tuple2(moduleName, localName))
					]);
			case 'IfBlock':
				var ifExpr = expression.a;
				var thenExpr = expression.b;
				var elseExpr = expression.c;
				return A2(
					$elm$core$List$concatMap,
					$author$project$LanguageService$listReferencesInExpression,
					_List_fromArray(
						[ifExpr, thenExpr, elseExpr]));
			case 'PrefixOperator':
				return _List_Nil;
			case 'Operator':
				return _List_Nil;
			case 'Integer':
				return _List_Nil;
			case 'Hex':
				return _List_Nil;
			case 'Floatable':
				return _List_Nil;
			case 'Negation':
				var negation = expression.a;
				var $temp$_v2 = negation;
				_v2 = $temp$_v2;
				continue listReferencesInExpression;
			case 'Literal':
				return _List_Nil;
			case 'CharLiteral':
				return _List_Nil;
			case 'TupledExpression':
				var tupled = expression.a;
				return A2($elm$core$List$concatMap, $author$project$LanguageService$listReferencesInExpression, tupled);
			case 'ParenthesizedExpression':
				var parenthesized = expression.a;
				var $temp$_v2 = parenthesized;
				_v2 = $temp$_v2;
				continue listReferencesInExpression;
			case 'LetExpression':
				var letBlock = expression.a;
				return $author$project$LanguageService$listReferencesInLetBlock(letBlock);
			case 'CaseExpression':
				var caseBlock = expression.a;
				return $elm$core$List$concat(
					_List_fromArray(
						[
							$author$project$LanguageService$listReferencesInExpression(caseBlock.expression),
							A2(
							$elm$core$List$concatMap,
							function (_v4) {
								var casePattern = _v4.a;
								var caseBranch = _v4.b;
								return $elm$core$List$concat(
									_List_fromArray(
										[
											$author$project$LanguageService$listReferencesFromPattern(casePattern),
											$author$project$LanguageService$listReferencesInExpression(caseBranch)
										]));
							},
							caseBlock.cases)
						]));
			case 'LambdaExpression':
				var lambda = expression.a;
				var $temp$_v2 = lambda.expression;
				_v2 = $temp$_v2;
				continue listReferencesInExpression;
			case 'RecordExpr':
				var recordExpr = expression.a;
				return A2(
					$elm$core$List$concatMap,
					function (_v5) {
						var _v6 = _v5.b;
						var recordField = _v6.b;
						return $author$project$LanguageService$listReferencesInExpression(recordField);
					},
					recordExpr);
			case 'ListExpr':
				var listExpr = expression.a;
				return A2($elm$core$List$concatMap, $author$project$LanguageService$listReferencesInExpression, listExpr);
			case 'RecordAccess':
				var recordAccess = expression.a;
				var $temp$_v2 = recordAccess;
				_v2 = $temp$_v2;
				continue listReferencesInExpression;
			case 'RecordAccessFunction':
				return _List_Nil;
			case 'RecordUpdateExpression':
				var _v7 = expression.a;
				var recordNameRange = _v7.a;
				var recordName = _v7.b;
				var recordUpdateExpression = expression.b;
				return $elm$core$List$concat(
					_List_fromArray(
						[
							_List_fromArray(
							[
								A2(
								$author$project$LanguageService$SyntaxNode,
								$author$project$LanguageService$rangeFromRecordRange(recordNameRange),
								_Utils_Tuple2(_List_Nil, recordName))
							]),
							A2(
							$elm$core$List$concatMap,
							function (_v8) {
								var _v9 = _v8.b;
								var recordField = _v9.b;
								return $author$project$LanguageService$listReferencesInExpression(recordField);
							},
							recordUpdateExpression)
						]));
			default:
				return _List_Nil;
		}
	}
};
var $author$project$LanguageService$listReferencesInLetBlock = function (letBlock) {
	return $elm$core$List$concat(
		_List_fromArray(
			[
				A2($elm$core$List$concatMap, $author$project$LanguageService$listReferencesInLetDeclaration, letBlock.declarations),
				$author$project$LanguageService$listReferencesInExpression(letBlock.expression)
			]));
};
var $author$project$LanguageService$listReferencesInLetDeclaration = function (declarationNode) {
	var _v0 = declarationNode;
	var declaration = _v0.b;
	if (declaration.$ === 'LetFunction') {
		var _function = declaration.a;
		return $author$project$LanguageService$listReferencesForFunction(_function);
	} else {
		var letDestructuring = declaration.b;
		return $author$project$LanguageService$listReferencesInExpression(letDestructuring);
	}
};
var $author$project$LanguageService$listReferencesFromTypeDeclaration = function (choiceTypeDeclaration) {
	return A2(
		$elm$core$List$concatMap,
		function (_v0) {
			var constructor = _v0.b;
			return A2($elm$core$List$concatMap, $author$project$LanguageService$listTypeReferencesFromTypeAnnotation, constructor._arguments);
		},
		choiceTypeDeclaration.constructors);
};
var $author$project$LanguageService$referencesForAliasDeclaration = function (aliasDeclaration) {
	return $author$project$LanguageService$listTypeReferencesFromTypeAnnotation(aliasDeclaration.typeAnnotation);
};
var $author$project$LanguageService$listReferencesInDeclaration = function (declarationNode) {
	var _v0 = declarationNode;
	var declaration = _v0.b;
	switch (declaration.$) {
		case 'FunctionDeclaration':
			var _function = declaration.a;
			return $author$project$LanguageService$listReferencesForFunction(_function);
		case 'AliasDeclaration':
			var aliasDeclaration = declaration.a;
			return $author$project$LanguageService$referencesForAliasDeclaration(aliasDeclaration);
		case 'CustomTypeDeclaration':
			var choiceTypeDeclaration = declaration.a;
			return $author$project$LanguageService$listReferencesFromTypeDeclaration(choiceTypeDeclaration);
		case 'PortDeclaration':
			return _List_Nil;
		case 'InfixDeclaration':
			return _List_Nil;
		default:
			return _List_Nil;
	}
};
var $author$project$LanguageService$listReferencesInExposingList = function (exposingList) {
	if (exposingList.$ === 'All') {
		return _List_Nil;
	} else {
		var topLevelExposings = exposingList.a;
		return A2(
			$elm$core$List$concatMap,
			function (_v1) {
				var topLevelExposeRangeRecord = _v1.a;
				var topLevelExpose = _v1.b;
				var topLevelExposeRange = $author$project$LanguageService$rangeFromRecordRange(topLevelExposeRangeRecord);
				switch (topLevelExpose.$) {
					case 'InfixExpose':
						return _List_Nil;
					case 'FunctionExpose':
						var functionName = topLevelExpose.a;
						return _List_fromArray(
							[
								A2(
								$author$project$LanguageService$SyntaxNode,
								topLevelExposeRange,
								_Utils_Tuple2(_List_Nil, functionName))
							]);
					case 'TypeOrAliasExpose':
						var typeOrAliasName = topLevelExpose.a;
						return _List_fromArray(
							[
								A2(
								$author$project$LanguageService$SyntaxNode,
								topLevelExposeRange,
								_Utils_Tuple2(_List_Nil, typeOrAliasName))
							]);
					default:
						var typeExpose = topLevelExpose.a;
						var topLevelExposeRangeStartRecord = topLevelExposeRangeRecord.start;
						var rangeStartRow = topLevelExposeRangeStartRecord.row;
						var rangeStartColumn = topLevelExposeRangeStartRecord.column;
						var rangeEndColumn = rangeStartColumn + $elm$core$String$length(typeExpose.name);
						var range = A2(
							$author$project$LanguageService$Range,
							_Utils_Tuple2(rangeStartRow, rangeStartColumn),
							_Utils_Tuple2(rangeStartRow, rangeEndColumn));
						return _List_fromArray(
							[
								A2(
								$author$project$LanguageService$SyntaxNode,
								range,
								_Utils_Tuple2(_List_Nil, typeExpose.name))
							]);
				}
			},
			topLevelExposings);
	}
};
var $author$project$LanguageService$listReferencesInFile = function (fileSyntax) {
	var fromExposing = function () {
		var _v0 = fileSyntax.moduleDefinition;
		switch (_v0.b.$) {
			case 'NormalModule':
				var normalModule = _v0.b.a;
				var _v1 = normalModule.exposingList;
				var exposingList = _v1.b;
				return $author$project$LanguageService$listReferencesInExposingList(exposingList);
			case 'EffectModule':
				var effectModule = _v0.b.a;
				var _v2 = effectModule.exposingList;
				var exposingList = _v2.b;
				return $author$project$LanguageService$listReferencesInExposingList(exposingList);
			default:
				var portModule = _v0.b.a;
				var _v3 = portModule.exposingList;
				var exposingList = _v3.b;
				return $author$project$LanguageService$listReferencesInExposingList(exposingList);
		}
	}();
	var fromDeclarations = A2($elm$core$List$concatMap, $author$project$LanguageService$listReferencesInDeclaration, fileSyntax.declarations);
	return $elm$core$List$concat(
		_List_fromArray(
			[fromExposing, fromDeclarations]));
};
var $author$project$LanguageService$hoverItemsFromParsedModule = F2(
	function (_v0, languageServiceState) {
		var parsedModuleSyntax = _v0.a;
		var currentModuleDeclarations = _v0.b;
		var currentModuleFileLocation = _v0.c;
		var parsedReferences = $author$project$LanguageService$listReferencesInFile(parsedModuleSyntax);
		var localDeclarationsAndImportExposings = $elm$core$List$concat(
			_List_fromArray(
				[
					$elm$core$List$concat(
					_List_fromArray(
						[
							A2(
							$elm$core$List$map,
							function (fromTopLevel) {
								return _Utils_Tuple3(
									_Utils_Tuple2(currentModuleFileLocation, fromTopLevel.range),
									$author$project$LanguageService$TopLevelScope,
									fromTopLevel.completionItem);
							},
							currentModuleDeclarations.fromTopLevel),
							A2(
							$elm$core$List$map,
							function (_v33) {
								var declRange = _v33.a;
								var completionItem = _v33.b;
								return _Utils_Tuple3(declRange, $author$project$LanguageService$TopLevelScope, completionItem);
							},
							$author$project$LanguageService$commonImplicitTopLevelImports(languageServiceState))
						])),
					A2(
					$elm$core$List$map,
					function (_v34) {
						var completionItem = _v34.a;
						var declRange = _v34.b;
						var scopeRange = _v34.c;
						return _Utils_Tuple3(
							_Utils_Tuple2(currentModuleFileLocation, declRange),
							$author$project$LanguageService$LocalScope(scopeRange),
							completionItem);
					},
					currentModuleDeclarations.fromLocals)
				]));
		var localModuleItemsBeforeFiltering = A2(
			$elm$core$List$map,
			function (_v29) {
				var _v30 = _v29.a;
				var declFileLocation = _v30.a;
				var declRange = _v30.b;
				var scope = _v29.b;
				var completionItem = _v29.c;
				var completionItemLabel = completionItem.a;
				var _v31 = function () {
					if (scope.$ === 'TopLevelScope') {
						return _Utils_Tuple2($elm$core$Maybe$Nothing, declRange);
					} else {
						var scopeRange = scope.a;
						return _Utils_Tuple2(
							$elm$core$Maybe$Just(scopeRange),
							declRange);
					}
				}();
				var maybeFilterRange = _v31.a;
				var completionItemRange = _v31.b;
				return _Utils_Tuple2(
					completionItemLabel,
					_Utils_Tuple3(
						maybeFilterRange,
						A2($author$project$LanguageService$LocationInFile, declFileLocation, completionItemRange),
						completionItem));
			},
			localDeclarationsAndImportExposings);
		var importedModules = A2($author$project$LanguageService$importedModulesFromFile, parsedModuleSyntax, languageServiceState);
		var importedModulesCompletionItems = A2(
			$elm$core$List$map,
			function (importedModule) {
				return _Utils_Tuple2(
					importedModule.importedName,
					_Utils_Tuple2(
						importedModule,
						function () {
							var _v27 = importedModule.parsedModule;
							if (_v27.$ === 'Nothing') {
								return {fromLocals: _List_Nil, fromTopLevel: _List_Nil};
							} else {
								var _v28 = _v27.a;
								var importedCompletionItems = _v28.b;
								return importedCompletionItems;
							}
						}()));
			},
			importedModules);
		var getHoverForFunctionOrName = function (_v23) {
			var _v24 = _v23.a;
			var _v25 = _v24.a;
			var startRow = _v25.a;
			var startColumn = _v25.b;
			var _v26 = _v23.b;
			var moduleName = _v26.a;
			var nameInModule = _v26.b;
			if (_Utils_eq(moduleName, _List_Nil)) {
				var _v16 = A2($author$project$Common$assocListGet, nameInModule, localModuleItemsBeforeFiltering);
				if (_v16.$ === 'Nothing') {
					return $elm$core$Maybe$Nothing;
				} else {
					var _v17 = _v16.a;
					var maybeFilterRange = _v17.a;
					var locationUnderFilePath = _v17.b;
					var _v18 = _v17.c;
					var completionItemDocumentation = _v18.d;
					if (maybeFilterRange.$ === 'Nothing') {
						return $elm$core$Maybe$Just(
							_Utils_Tuple2(locationUnderFilePath, completionItemDocumentation));
					} else {
						var filterRange = maybeFilterRange.a;
						return A2(
							$author$project$LanguageService$rangeContainsLocation,
							_Utils_Tuple2(startRow, startColumn),
							filterRange) ? $elm$core$Maybe$Just(
							_Utils_Tuple2(locationUnderFilePath, completionItemDocumentation)) : $elm$core$Maybe$Nothing;
					}
				}
			} else {
				var _v20 = A2($author$project$Common$assocListGet, moduleName, importedModulesCompletionItems);
				if (_v20.$ === 'Nothing') {
					return $elm$core$Maybe$Nothing;
				} else {
					var _v21 = _v20.a;
					var referencedModule = _v21.a;
					var moduleCompletionItems = _v21.b;
					return A2(
						$author$project$Common$listMapFind,
						function (item) {
							var _v22 = item.completionItem;
							var itemInsertText = _v22.b;
							var itemDocumentation = _v22.d;
							return (_Utils_eq(itemInsertText, nameInModule) && item.isExposed) ? $elm$core$Maybe$Just(
								_Utils_Tuple2(
									A2($author$project$LanguageService$LocationInFile, referencedModule.fileLocation, item.range),
									itemDocumentation)) : $elm$core$Maybe$Nothing;
						},
						moduleCompletionItems.fromTopLevel);
				}
			}
		};
		var getForHoversForReferenceNode = function (functionOrNameNode) {
			var _v5 = functionOrNameNode;
			var wholeRange = _v5.a;
			var _v6 = _v5.b;
			var moduleName = _v6.a;
			var nameInModule = _v6.b;
			var _v7 = wholeRange;
			var _v8 = _v7.a;
			var wholeRangeStartLine = _v8.a;
			var wholeRangeStartColumn = _v8.b;
			var _v9 = _v7.b;
			var wholeRangeEndLine = _v9.a;
			var wholeRangeEndColumn = _v9.b;
			var forNameInModuleRange = A2(
				$author$project$LanguageService$Range,
				_Utils_Tuple2(
					wholeRangeStartLine,
					wholeRangeEndColumn - $elm$core$String$length(nameInModule)),
				_Utils_Tuple2(wholeRangeEndLine, wholeRangeEndColumn));
			var forNameInModule = function () {
				var _v14 = getHoverForFunctionOrName(functionOrNameNode);
				if (_v14.$ === 'Nothing') {
					return _List_Nil;
				} else {
					var _v15 = _v14.a;
					var sourceLocation = _v15.a;
					var hover = _v15.b;
					return _List_fromArray(
						[
							_Utils_Tuple3(forNameInModuleRange, sourceLocation, hover)
						]);
				}
			}();
			var rangeModulePart = A2(
				$author$project$LanguageService$Range,
				_Utils_Tuple2(wholeRangeStartLine, wholeRangeStartColumn),
				_Utils_Tuple2(
					wholeRangeEndLine,
					(wholeRangeEndColumn - $elm$core$String$length(nameInModule)) - 1));
			var forModule = function () {
				if (_Utils_eq(moduleName, _List_Nil)) {
					return _List_Nil;
				} else {
					var _v10 = A2(
						$author$project$Common$listFind,
						function (importedModule) {
							return _Utils_eq(importedModule.importedName, moduleName);
						},
						importedModules);
					if (_v10.$ === 'Nothing') {
						return _List_Nil;
					} else {
						var referencedModule = _v10.a;
						var _v11 = referencedModule.parsedModule;
						if (_v11.$ === 'Nothing') {
							return _List_Nil;
						} else {
							var _v12 = _v11.a;
							var referencedModuleParsedSyntax = _v12.a;
							var _v13 = A2(
								$author$project$LanguageService$moduleCompletionItemFromModuleSyntax,
								{
									importedModuleNameRestAfterPrefix: $elm$core$Maybe$Nothing,
									importedName: $elm$core$Maybe$Just(moduleName)
								},
								referencedModuleParsedSyntax);
							var documentation = _v13.d;
							return _List_fromArray(
								[
									_Utils_Tuple3(
									rangeModulePart,
									A2(
										$author$project$LanguageService$LocationInFile,
										referencedModule.fileLocation,
										A2($author$project$LanguageService$DeclarationRange, rangeModulePart, _List_Nil)),
									documentation)
								]);
						}
					}
				}
			}();
			return $elm$core$List$concat(
				_List_fromArray(
					[forModule, forNameInModule]));
		};
		var fromImportSyntax = A2(
			$elm$core$List$concatMap,
			function (importedModule) {
				var _v2 = importedModule.parsedModule;
				if (_v2.$ === 'Nothing') {
					return _List_Nil;
				} else {
					var _v3 = _v2.a;
					var importedModuleParsedSyntax = _v3.a;
					return A2(
						$elm$core$List$map,
						function (range) {
							var _v4 = A2(
								$author$project$LanguageService$moduleCompletionItemFromModuleSyntax,
								{
									importedModuleNameRestAfterPrefix: $elm$core$Maybe$Nothing,
									importedName: $elm$core$Maybe$Just(importedModule.importedName)
								},
								importedModuleParsedSyntax);
							var documentation = _v4.d;
							return _Utils_Tuple2(
								$author$project$LanguageService$rangeFromRecordRange(range),
								documentation);
						},
						importedModule.referencesRanges);
				}
			},
			importedModules);
		var fromDeclarations = A2($elm$core$List$concatMap, getForHoversForReferenceNode, parsedReferences);
		var fromDeclarationsLessSourceLocation = A2(
			$elm$core$List$map,
			function (_v1) {
				var range = _v1.a;
				var documentation = _v1.c;
				return _Utils_Tuple2(range, documentation);
			},
			fromDeclarations);
		var hoverItems = $elm$core$List$concat(
			_List_fromArray(
				[fromImportSyntax, fromDeclarationsLessSourceLocation]));
		return {fromDeclarations: fromDeclarations, hoverItems: hoverItems};
	});
var $author$project$LanguageService$provideDefinitionInternal = F2(
	function (request, languageServiceState) {
		var _v0 = request.fileLocation;
		if (_v0.$ === 'WorkspaceFileLocation') {
			var filePath = _v0.a;
			var _v1 = A2($elm$core$Dict$get, filePath, languageServiceState.documentCache);
			if (_v1.$ === 'Nothing') {
				return _List_Nil;
			} else {
				var currentFileCacheItem = _v1.a;
				var _v2 = currentFileCacheItem.parsedFileLastSuccess;
				if (_v2.$ === 'Nothing') {
					return _List_Nil;
				} else {
					var parsedFileLastSuccess = _v2.a;
					var _v3 = A2(
						$author$project$LanguageService$hoverItemsFromParsedModule,
						_Utils_Tuple3(parsedFileLastSuccess.syntax, parsedFileLastSuccess.completionItems, request.fileLocation),
						languageServiceState);
					var fromDeclarations = _v3.fromDeclarations;
					return A2(
						$elm$core$List$filterMap,
						function (_v4) {
							var refRange = _v4.a;
							var locationUnderFile = _v4.b;
							return A2(
								$author$project$LanguageService$rangeContainsLocation,
								_Utils_Tuple2(request.positionLineNumber, request.positionColumn),
								refRange) ? $elm$core$Maybe$Just(locationUnderFile) : $elm$core$Maybe$Nothing;
						},
						fromDeclarations);
				}
			}
		} else {
			var packageVersionIdentifer = _v0.a;
			var modulePath = _v0.b;
			return _List_Nil;
		}
	});
var $author$project$LanguageService$provideDefinition = F2(
	function (request, languageServiceState) {
		return A2(
			$elm$core$List$map,
			function (_v0) {
				var fileLocation = _v0.a;
				var _v1 = _v0.b;
				var _v2 = _v1.a;
				var _v3 = _v2.a;
				var startRow = _v3.a;
				var startColumn = _v3.b;
				var _v4 = _v2.b;
				var endRow = _v4.a;
				var endColumn = _v4.b;
				return {
					fileLocation: fileLocation,
					range: {endColumn: endColumn, endLineNumber: endRow, startColumn: startColumn, startLineNumber: startRow}
				};
			},
			A2($author$project$LanguageService$provideDefinitionInternal, request, languageServiceState));
	});
var $author$project$LanguageService$provideHover = F2(
	function (request, languageServiceState) {
		var _v0 = request.fileLocation;
		if (_v0.$ === 'WorkspaceFileLocation') {
			var filePath = _v0.a;
			var _v1 = A2($elm$core$Dict$get, filePath, languageServiceState.documentCache);
			if (_v1.$ === 'Nothing') {
				return _List_Nil;
			} else {
				var currentFileCacheItem = _v1.a;
				var _v2 = currentFileCacheItem.parsedFileLastSuccess;
				if (_v2.$ === 'Nothing') {
					return _List_Nil;
				} else {
					var parsedFileLastSuccess = _v2.a;
					var _v3 = A2(
						$author$project$LanguageService$hoverItemsFromParsedModule,
						_Utils_Tuple3(parsedFileLastSuccess.syntax, parsedFileLastSuccess.completionItems, request.fileLocation),
						languageServiceState);
					var hoverItems = _v3.hoverItems;
					return A2(
						$elm$core$List$filterMap,
						function (_v4) {
							var hoverRange = _v4.a;
							var hoverText = _v4.b;
							return A2(
								$author$project$LanguageService$rangeContainsLocation,
								_Utils_Tuple2(request.positionLineNumber, request.positionColumn),
								hoverRange) ? $elm$core$Maybe$Just(hoverText) : $elm$core$Maybe$Nothing;
						},
						hoverItems);
				}
			}
		} else {
			var packageVersionIdentifer = _v0.a;
			var modulePath = _v0.b;
			return _List_Nil;
		}
	});
var $elm$core$Dict$getMin = function (dict) {
	getMin:
	while (true) {
		if ((dict.$ === 'RBNode_elm_builtin') && (dict.d.$ === 'RBNode_elm_builtin')) {
			var left = dict.d;
			var $temp$dict = left;
			dict = $temp$dict;
			continue getMin;
		} else {
			return dict;
		}
	}
};
var $elm$core$Dict$moveRedLeft = function (dict) {
	if (((dict.$ === 'RBNode_elm_builtin') && (dict.d.$ === 'RBNode_elm_builtin')) && (dict.e.$ === 'RBNode_elm_builtin')) {
		if ((dict.e.d.$ === 'RBNode_elm_builtin') && (dict.e.d.a.$ === 'Red')) {
			var clr = dict.a;
			var k = dict.b;
			var v = dict.c;
			var _v1 = dict.d;
			var lClr = _v1.a;
			var lK = _v1.b;
			var lV = _v1.c;
			var lLeft = _v1.d;
			var lRight = _v1.e;
			var _v2 = dict.e;
			var rClr = _v2.a;
			var rK = _v2.b;
			var rV = _v2.c;
			var rLeft = _v2.d;
			var _v3 = rLeft.a;
			var rlK = rLeft.b;
			var rlV = rLeft.c;
			var rlL = rLeft.d;
			var rlR = rLeft.e;
			var rRight = _v2.e;
			return A5(
				$elm$core$Dict$RBNode_elm_builtin,
				$elm$core$Dict$Red,
				rlK,
				rlV,
				A5(
					$elm$core$Dict$RBNode_elm_builtin,
					$elm$core$Dict$Black,
					k,
					v,
					A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, lK, lV, lLeft, lRight),
					rlL),
				A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Black, rK, rV, rlR, rRight));
		} else {
			var clr = dict.a;
			var k = dict.b;
			var v = dict.c;
			var _v4 = dict.d;
			var lClr = _v4.a;
			var lK = _v4.b;
			var lV = _v4.c;
			var lLeft = _v4.d;
			var lRight = _v4.e;
			var _v5 = dict.e;
			var rClr = _v5.a;
			var rK = _v5.b;
			var rV = _v5.c;
			var rLeft = _v5.d;
			var rRight = _v5.e;
			if (clr.$ === 'Black') {
				return A5(
					$elm$core$Dict$RBNode_elm_builtin,
					$elm$core$Dict$Black,
					k,
					v,
					A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, lK, lV, lLeft, lRight),
					A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, rK, rV, rLeft, rRight));
			} else {
				return A5(
					$elm$core$Dict$RBNode_elm_builtin,
					$elm$core$Dict$Black,
					k,
					v,
					A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, lK, lV, lLeft, lRight),
					A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, rK, rV, rLeft, rRight));
			}
		}
	} else {
		return dict;
	}
};
var $elm$core$Dict$moveRedRight = function (dict) {
	if (((dict.$ === 'RBNode_elm_builtin') && (dict.d.$ === 'RBNode_elm_builtin')) && (dict.e.$ === 'RBNode_elm_builtin')) {
		if ((dict.d.d.$ === 'RBNode_elm_builtin') && (dict.d.d.a.$ === 'Red')) {
			var clr = dict.a;
			var k = dict.b;
			var v = dict.c;
			var _v1 = dict.d;
			var lClr = _v1.a;
			var lK = _v1.b;
			var lV = _v1.c;
			var _v2 = _v1.d;
			var _v3 = _v2.a;
			var llK = _v2.b;
			var llV = _v2.c;
			var llLeft = _v2.d;
			var llRight = _v2.e;
			var lRight = _v1.e;
			var _v4 = dict.e;
			var rClr = _v4.a;
			var rK = _v4.b;
			var rV = _v4.c;
			var rLeft = _v4.d;
			var rRight = _v4.e;
			return A5(
				$elm$core$Dict$RBNode_elm_builtin,
				$elm$core$Dict$Red,
				lK,
				lV,
				A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Black, llK, llV, llLeft, llRight),
				A5(
					$elm$core$Dict$RBNode_elm_builtin,
					$elm$core$Dict$Black,
					k,
					v,
					lRight,
					A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, rK, rV, rLeft, rRight)));
		} else {
			var clr = dict.a;
			var k = dict.b;
			var v = dict.c;
			var _v5 = dict.d;
			var lClr = _v5.a;
			var lK = _v5.b;
			var lV = _v5.c;
			var lLeft = _v5.d;
			var lRight = _v5.e;
			var _v6 = dict.e;
			var rClr = _v6.a;
			var rK = _v6.b;
			var rV = _v6.c;
			var rLeft = _v6.d;
			var rRight = _v6.e;
			if (clr.$ === 'Black') {
				return A5(
					$elm$core$Dict$RBNode_elm_builtin,
					$elm$core$Dict$Black,
					k,
					v,
					A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, lK, lV, lLeft, lRight),
					A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, rK, rV, rLeft, rRight));
			} else {
				return A5(
					$elm$core$Dict$RBNode_elm_builtin,
					$elm$core$Dict$Black,
					k,
					v,
					A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, lK, lV, lLeft, lRight),
					A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, rK, rV, rLeft, rRight));
			}
		}
	} else {
		return dict;
	}
};
var $elm$core$Dict$removeHelpPrepEQGT = F7(
	function (targetKey, dict, color, key, value, left, right) {
		if ((left.$ === 'RBNode_elm_builtin') && (left.a.$ === 'Red')) {
			var _v1 = left.a;
			var lK = left.b;
			var lV = left.c;
			var lLeft = left.d;
			var lRight = left.e;
			return A5(
				$elm$core$Dict$RBNode_elm_builtin,
				color,
				lK,
				lV,
				lLeft,
				A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, key, value, lRight, right));
		} else {
			_v2$2:
			while (true) {
				if ((right.$ === 'RBNode_elm_builtin') && (right.a.$ === 'Black')) {
					if (right.d.$ === 'RBNode_elm_builtin') {
						if (right.d.a.$ === 'Black') {
							var _v3 = right.a;
							var _v4 = right.d;
							var _v5 = _v4.a;
							return $elm$core$Dict$moveRedRight(dict);
						} else {
							break _v2$2;
						}
					} else {
						var _v6 = right.a;
						var _v7 = right.d;
						return $elm$core$Dict$moveRedRight(dict);
					}
				} else {
					break _v2$2;
				}
			}
			return dict;
		}
	});
var $elm$core$Dict$removeMin = function (dict) {
	if ((dict.$ === 'RBNode_elm_builtin') && (dict.d.$ === 'RBNode_elm_builtin')) {
		var color = dict.a;
		var key = dict.b;
		var value = dict.c;
		var left = dict.d;
		var lColor = left.a;
		var lLeft = left.d;
		var right = dict.e;
		if (lColor.$ === 'Black') {
			if ((lLeft.$ === 'RBNode_elm_builtin') && (lLeft.a.$ === 'Red')) {
				var _v3 = lLeft.a;
				return A5(
					$elm$core$Dict$RBNode_elm_builtin,
					color,
					key,
					value,
					$elm$core$Dict$removeMin(left),
					right);
			} else {
				var _v4 = $elm$core$Dict$moveRedLeft(dict);
				if (_v4.$ === 'RBNode_elm_builtin') {
					var nColor = _v4.a;
					var nKey = _v4.b;
					var nValue = _v4.c;
					var nLeft = _v4.d;
					var nRight = _v4.e;
					return A5(
						$elm$core$Dict$balance,
						nColor,
						nKey,
						nValue,
						$elm$core$Dict$removeMin(nLeft),
						nRight);
				} else {
					return $elm$core$Dict$RBEmpty_elm_builtin;
				}
			}
		} else {
			return A5(
				$elm$core$Dict$RBNode_elm_builtin,
				color,
				key,
				value,
				$elm$core$Dict$removeMin(left),
				right);
		}
	} else {
		return $elm$core$Dict$RBEmpty_elm_builtin;
	}
};
var $elm$core$Dict$removeHelp = F2(
	function (targetKey, dict) {
		if (dict.$ === 'RBEmpty_elm_builtin') {
			return $elm$core$Dict$RBEmpty_elm_builtin;
		} else {
			var color = dict.a;
			var key = dict.b;
			var value = dict.c;
			var left = dict.d;
			var right = dict.e;
			if (_Utils_cmp(targetKey, key) < 0) {
				if ((left.$ === 'RBNode_elm_builtin') && (left.a.$ === 'Black')) {
					var _v4 = left.a;
					var lLeft = left.d;
					if ((lLeft.$ === 'RBNode_elm_builtin') && (lLeft.a.$ === 'Red')) {
						var _v6 = lLeft.a;
						return A5(
							$elm$core$Dict$RBNode_elm_builtin,
							color,
							key,
							value,
							A2($elm$core$Dict$removeHelp, targetKey, left),
							right);
					} else {
						var _v7 = $elm$core$Dict$moveRedLeft(dict);
						if (_v7.$ === 'RBNode_elm_builtin') {
							var nColor = _v7.a;
							var nKey = _v7.b;
							var nValue = _v7.c;
							var nLeft = _v7.d;
							var nRight = _v7.e;
							return A5(
								$elm$core$Dict$balance,
								nColor,
								nKey,
								nValue,
								A2($elm$core$Dict$removeHelp, targetKey, nLeft),
								nRight);
						} else {
							return $elm$core$Dict$RBEmpty_elm_builtin;
						}
					}
				} else {
					return A5(
						$elm$core$Dict$RBNode_elm_builtin,
						color,
						key,
						value,
						A2($elm$core$Dict$removeHelp, targetKey, left),
						right);
				}
			} else {
				return A2(
					$elm$core$Dict$removeHelpEQGT,
					targetKey,
					A7($elm$core$Dict$removeHelpPrepEQGT, targetKey, dict, color, key, value, left, right));
			}
		}
	});
var $elm$core$Dict$removeHelpEQGT = F2(
	function (targetKey, dict) {
		if (dict.$ === 'RBNode_elm_builtin') {
			var color = dict.a;
			var key = dict.b;
			var value = dict.c;
			var left = dict.d;
			var right = dict.e;
			if (_Utils_eq(targetKey, key)) {
				var _v1 = $elm$core$Dict$getMin(right);
				if (_v1.$ === 'RBNode_elm_builtin') {
					var minKey = _v1.b;
					var minValue = _v1.c;
					return A5(
						$elm$core$Dict$balance,
						color,
						minKey,
						minValue,
						left,
						$elm$core$Dict$removeMin(right));
				} else {
					return $elm$core$Dict$RBEmpty_elm_builtin;
				}
			} else {
				return A5(
					$elm$core$Dict$balance,
					color,
					key,
					value,
					left,
					A2($elm$core$Dict$removeHelp, targetKey, right));
			}
		} else {
			return $elm$core$Dict$RBEmpty_elm_builtin;
		}
	});
var $elm$core$Dict$remove = F2(
	function (key, dict) {
		var _v0 = A2($elm$core$Dict$removeHelp, key, dict);
		if ((_v0.$ === 'RBNode_elm_builtin') && (_v0.a.$ === 'Red')) {
			var _v1 = _v0.a;
			var k = _v0.b;
			var v = _v0.c;
			var l = _v0.d;
			var r = _v0.e;
			return A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Black, k, v, l, r);
		} else {
			var x = _v0;
			return x;
		}
	});
var $author$project$LanguageService$findReferences = F2(
	function (_v0, languageServiceState) {
		var targetDefinitionFilePath = _v0.a;
		var targetDefinitionRange = _v0.b;
		var findReferencesInModule = function (parsedModule) {
			var _v2 = A2(
				$author$project$LanguageService$hoverItemsFromParsedModule,
				_Utils_Tuple3(
					parsedModule.syntax,
					parsedModule.completionItems,
					$author$project$LanguageServiceInterface$WorkspaceFileLocation(parsedModule.fileUri)),
				languageServiceState);
			var fromDeclarations = _v2.fromDeclarations;
			var ranges = A2(
				$elm$core$List$filterMap,
				function (_v3) {
					var range = _v3.a;
					var _v4 = _v3.b;
					var defFilePath = _v4.a;
					var _v5 = _v4.b;
					var defRange = _v5.a;
					return (_Utils_eq(defFilePath, targetDefinitionFilePath) && _Utils_eq(defRange, targetDefinitionRange)) ? $elm$core$Maybe$Just(range) : $elm$core$Maybe$Nothing;
				},
				fromDeclarations);
			return _Utils_eq(ranges, _List_Nil) ? $elm$core$Maybe$Nothing : $elm$core$Maybe$Just(
				_Utils_Tuple2(
					$author$project$LanguageServiceInterface$WorkspaceFileLocation(parsedModule.fileUri),
					ranges));
		};
		var allParsedModules = $elm$core$List$concat(
			_List_fromArray(
				[
					A2(
					$elm$core$List$filterMap,
					function (_v1) {
						var blob = _v1.b;
						return blob.parsedFileLastSuccess;
					},
					$elm$core$Dict$toList(languageServiceState.documentCache)),
					A2(
					$elm$core$List$map,
					function ($) {
						return $.parseResult;
					},
					languageServiceState.coreModulesCache)
				]));
		return A2($elm$core$List$filterMap, findReferencesInModule, allParsedModules);
	});
var $author$project$LanguageService$textDocumentReferencesGroupedByFilePath = F2(
	function (referenceRequest, languageServiceState) {
		var maybeDefinition = $elm$core$List$head(
			A2($author$project$LanguageService$provideDefinitionInternal, referenceRequest, languageServiceState));
		if (maybeDefinition.$ === 'Just') {
			var _v1 = maybeDefinition.a;
			var definitionFileLocation = _v1.a;
			var definitionLocationRange = _v1.b;
			var _v2 = definitionLocationRange;
			var definitionLocationRangeWhole = _v2.a;
			var references = A2(
				$author$project$LanguageService$findReferences,
				_Utils_Tuple2(definitionFileLocation, definitionLocationRangeWhole),
				languageServiceState);
			return $elm$core$Maybe$Just(
				_Utils_Tuple2(
					_Utils_Tuple2(definitionFileLocation, definitionLocationRange),
					references));
		} else {
			var _v3 = referenceRequest.fileLocation;
			if (_v3.$ === 'ElmPackageFileLocation') {
				return $elm$core$Maybe$Nothing;
			} else {
				var filePathOpenedInEditor = _v3.a;
				var _v4 = A2($elm$core$Dict$get, filePathOpenedInEditor, languageServiceState.documentCache);
				if (_v4.$ === 'Nothing') {
					return $elm$core$Maybe$Nothing;
				} else {
					var currentFileCacheItem = _v4.a;
					var _v5 = currentFileCacheItem.parsedFileLastSuccess;
					if (_v5.$ === 'Nothing') {
						return $elm$core$Maybe$Nothing;
					} else {
						var parsedFile = _v5.a;
						var pos = _Utils_Tuple2(referenceRequest.positionLineNumber, referenceRequest.positionColumn);
						var maybeTopLevelDefinitionLocation = A2(
							$author$project$Common$listMapFind,
							function (decl) {
								var _v9 = decl.range;
								var declRangesName = _v9.b;
								return A2(
									$elm$core$List$any,
									function (range) {
										return A2($author$project$LanguageService$rangeContainsLocation, pos, range);
									},
									declRangesName) ? $elm$core$Maybe$Just(
									_Utils_Tuple2(
										$author$project$LanguageServiceInterface$WorkspaceFileLocation(parsedFile.fileUri),
										decl.range)) : $elm$core$Maybe$Nothing;
							},
							parsedFile.completionItems.fromTopLevel);
						if (maybeTopLevelDefinitionLocation.$ === 'Nothing') {
							return $elm$core$Maybe$Nothing;
						} else {
							var syntheticDefinitionLocation = maybeTopLevelDefinitionLocation.a;
							var _v7 = syntheticDefinitionLocation;
							var definitionFileLocation = _v7.a;
							var _v8 = _v7.b;
							var definitionRange = _v8.a;
							var references = A2(
								$author$project$LanguageService$findReferences,
								_Utils_Tuple2(definitionFileLocation, definitionRange),
								languageServiceState);
							return $elm$core$Maybe$Just(
								_Utils_Tuple2(syntheticDefinitionLocation, references));
						}
					}
				}
			}
		}
	});
var $author$project$LanguageService$textDocumentReferences = F2(
	function (referenceRequest, languageServiceState) {
		var _v0 = A2($author$project$LanguageService$textDocumentReferencesGroupedByFilePath, referenceRequest, languageServiceState);
		if (_v0.$ === 'Nothing') {
			return _List_Nil;
		} else {
			var _v1 = _v0.a;
			var references = _v1.b;
			return A2(
				$elm$core$List$concatMap,
				function (_v2) {
					var fileLocation = _v2.a;
					var ranges = _v2.b;
					return A2(
						$elm$core$List$map,
						function (_v3) {
							var _v4 = _v3.a;
							var startRow = _v4.a;
							var startColumn = _v4.b;
							var _v5 = _v3.b;
							var endRow = _v5.a;
							var endColumn = _v5.b;
							return {
								fileLocation: fileLocation,
								range: {endColumn: endColumn, endLineNumber: endRow, startColumn: startColumn, startLineNumber: startRow}
							};
						},
						ranges);
				},
				references);
		}
	});
var $author$project$LanguageService$monacoRangeFromRange = function (_v0) {
	var _v1 = _v0.a;
	var startRow = _v1.a;
	var startColumn = _v1.b;
	var _v2 = _v0.b;
	var endRow = _v2.a;
	var endColumn = _v2.b;
	return {endColumn: endColumn, endLineNumber: endRow, startColumn: startColumn, startLineNumber: startRow};
};
var $author$project$LanguageService$textDocumentRename = F2(
	function (renameParams, languageServiceState) {
		var _v0 = A2(
			$author$project$LanguageService$textDocumentReferencesGroupedByFilePath,
			{
				fileLocation: $author$project$LanguageServiceInterface$WorkspaceFileLocation(renameParams.filePath),
				positionColumn: renameParams.positionColumn,
				positionLineNumber: renameParams.positionLineNumber
			},
			languageServiceState);
		if (_v0.$ === 'Nothing') {
			return _List_Nil;
		} else {
			if (_v0.a.a.a.$ === 'ElmPackageFileLocation') {
				var _v1 = _v0.a;
				var _v2 = _v1.a;
				var _v3 = _v2.a;
				return _List_Nil;
			} else {
				var _v4 = _v0.a;
				var _v5 = _v4.a;
				var declFilePath = _v5.a.a;
				var _v6 = _v5.b;
				var declNamesRanges = _v6.b;
				var referencesGroupedByFilePath = _v4.b;
				var newName = renameParams.newName;
				var otherFilesReferencesEdits = A2(
					$elm$core$List$concatMap,
					function (_v8) {
						var fileLocation = _v8.a;
						var ranges = _v8.b;
						if (fileLocation.$ === 'WorkspaceFileLocation') {
							var filePath = fileLocation.a;
							return _Utils_eq(filePath, declFilePath) ? _List_Nil : _List_fromArray(
								[
									{
									edits: A2(
										$elm$core$List$map,
										function (range) {
											return {
												newText: newName,
												range: $author$project$LanguageService$monacoRangeFromRange(range)
											};
										},
										ranges),
									filePath: filePath
								}
								]);
						} else {
							return _List_Nil;
						}
					},
					referencesGroupedByFilePath);
				var declarationFileReferencesEdits = function () {
					var _v7 = A2(
						$author$project$Common$assocListGet,
						$author$project$LanguageServiceInterface$WorkspaceFileLocation(declFilePath),
						referencesGroupedByFilePath);
					if (_v7.$ === 'Nothing') {
						return _List_Nil;
					} else {
						var ranges = _v7.a;
						return A2(
							$elm$core$List$map,
							function (range) {
								return {
									newText: newName,
									range: $author$project$LanguageService$monacoRangeFromRange(range)
								};
							},
							ranges);
					}
				}();
				var declarationEdits = A2(
					$elm$core$List$map,
					function (range) {
						return {
							newText: newName,
							range: $author$project$LanguageService$monacoRangeFromRange(range)
						};
					},
					declNamesRanges);
				var workspaceEdits = A2(
					$elm$core$List$cons,
					{
						edits: $elm$core$List$concat(
							_List_fromArray(
								[declarationEdits, declarationFileReferencesEdits])),
						filePath: declFilePath
					},
					otherFilesReferencesEdits);
				return workspaceEdits;
			}
		}
	});
var $author$project$LanguageServiceInterface$DocumentSymbol = function (a) {
	return {$: 'DocumentSymbol', a: a};
};
var $author$project$LanguageServiceInterface$SymbolKind_Enum = {$: 'SymbolKind_Enum'};
var $author$project$LanguageServiceInterface$SymbolKind_EnumMember = {$: 'SymbolKind_EnumMember'};
var $author$project$LanguageServiceInterface$SymbolKind_Function = {$: 'SymbolKind_Function'};
var $author$project$LanguageServiceInterface$SymbolKind_Module = {$: 'SymbolKind_Module'};
var $author$project$LanguageServiceInterface$SymbolKind_Struct = {$: 'SymbolKind_Struct'};
var $author$project$LanguageService$textDocumentSymbolFromCompletionItems = function (completionItems) {
	return A2(
		$elm$core$List$map,
		function (completionItem) {
			var _v0 = completionItem.range;
			var itemRangeWhole = _v0.a;
			var monacoRange = $author$project$LanguageService$monacoRangeFromRange(itemRangeWhole);
			var _v1 = completionItem.completionItem;
			var label = _v1.a;
			var completionItemKind = _v1.c;
			var symbolKind = function () {
				switch (completionItemKind.$) {
					case 'ConstructorCompletionItemKind':
						return $author$project$LanguageServiceInterface$SymbolKind_EnumMember;
					case 'EnumCompletionItemKind':
						return $author$project$LanguageServiceInterface$SymbolKind_Enum;
					case 'EnumMemberCompletionItemKind':
						return $author$project$LanguageServiceInterface$SymbolKind_EnumMember;
					case 'FunctionCompletionItemKind':
						return $author$project$LanguageServiceInterface$SymbolKind_Function;
					case 'ModuleCompletionItemKind':
						return $author$project$LanguageServiceInterface$SymbolKind_Module;
					default:
						return $author$project$LanguageServiceInterface$SymbolKind_Struct;
				}
			}();
			return $author$project$LanguageServiceInterface$DocumentSymbol(
				{children: _List_Nil, kind: symbolKind, name: label, range: monacoRange, selectionRange: monacoRange});
		},
		completionItems.fromTopLevel);
};
var $author$project$LanguageService$textDocumentSymbol = F2(
	function (fileUri, languageServiceState) {
		var _v0 = A2($elm$core$Dict$get, fileUri, languageServiceState.documentCache);
		if (_v0.$ === 'Nothing') {
			return _List_Nil;
		} else {
			var currentFileCacheItem = _v0.a;
			var _v1 = currentFileCacheItem.parsedFileLastSuccess;
			if (_v1.$ === 'Nothing') {
				return _List_Nil;
			} else {
				var parsedFileLastSuccess = _v1.a;
				return $author$project$LanguageService$textDocumentSymbolFromCompletionItems(parsedFileLastSuccess.completionItems);
			}
		}
	});
var $author$project$LanguageService$handleRequestInCurrentWorkspace = F2(
	function (request, stateBefore) {
		var _v0 = function () {
			switch (request.$) {
				case 'AddWorkspaceFileRequest':
					var fileUri = request.a;
					var fileContent = request.b;
					return A2(
						$author$project$LanguageService$addFile,
						_Utils_Tuple2(fileUri, fileContent),
						stateBefore);
				case 'DeleteWorkspaceFileRequest':
					var fileUri = request.a;
					var documentCache = A2($elm$core$Dict$remove, fileUri, stateBefore.documentCache);
					return _Utils_Tuple2(
						$author$project$LanguageServiceInterface$WorkspaceSummaryResponse,
						_Utils_update(
							stateBefore,
							{documentCache: documentCache}));
				case 'AddElmPackageVersionRequest':
					var packageVersionIdentifer = request.a;
					var packageModules = request.b;
					return A3($author$project$LanguageService$handleRequestAddPackage, packageVersionIdentifer, packageModules, stateBefore);
				case 'ProvideHoverRequest':
					var provideHoverRequest = request.a;
					return _Utils_Tuple2(
						$author$project$LanguageServiceInterface$ProvideHoverResponse(
							A2($author$project$LanguageService$provideHover, provideHoverRequest, stateBefore)),
						stateBefore);
				case 'ProvideCompletionItemsRequest':
					var provideCompletionItemsRequest = request.a;
					return _Utils_Tuple2(
						$author$project$LanguageServiceInterface$ProvideCompletionItemsResponse(
							A2($author$project$LanguageService$provideCompletionItems, provideCompletionItemsRequest, stateBefore)),
						stateBefore);
				case 'ProvideDefinitionRequest':
					var provideDefinitionRequest = request.a;
					return _Utils_Tuple2(
						$author$project$LanguageServiceInterface$ProvideDefinitionResponse(
							A2($author$project$LanguageService$provideDefinition, provideDefinitionRequest, stateBefore)),
						stateBefore);
				case 'TextDocumentSymbolRequest':
					var filePath = request.a;
					return _Utils_Tuple2(
						$author$project$LanguageServiceInterface$TextDocumentSymbolResponse(
							A2($author$project$LanguageService$textDocumentSymbol, filePath, stateBefore)),
						stateBefore);
				case 'TextDocumentReferencesRequest':
					var referenceRequest = request.a;
					return _Utils_Tuple2(
						$author$project$LanguageServiceInterface$TextDocumentReferencesResponse(
							A2($author$project$LanguageService$textDocumentReferences, referenceRequest, stateBefore)),
						stateBefore);
				default:
					var renameParams = request.a;
					return _Utils_Tuple2(
						$author$project$LanguageServiceInterface$TextDocumentRenameResponse(
							A2($author$project$LanguageService$textDocumentRename, renameParams, stateBefore)),
						stateBefore);
			}
		}();
		var serviceResponse = _v0.a;
		var state = _v0.b;
		return _Utils_Tuple2(
			$elm$core$Result$Ok(serviceResponse),
			state);
	});
var $author$project$FileTree$flatListOfBlobsFromFileTreeNode = function (treeNode) {
	if (treeNode.$ === 'BlobNode') {
		var blob = treeNode.a;
		return _List_fromArray(
			[
				_Utils_Tuple2(_List_Nil, blob)
			]);
	} else {
		var treeEntries = treeNode.a;
		return A2(
			$elm$core$List$concatMap,
			function (_v1) {
				var childName = _v1.a;
				var childContent = _v1.b;
				return A2(
					$elm$core$List$map,
					$elm$core$Tuple$mapFirst(
						$elm$core$List$cons(childName)),
					$author$project$FileTree$flatListOfBlobsFromFileTreeNode(childContent));
			},
			treeEntries);
	}
};
var $elm$core$Dict$fromList = function (assocs) {
	return A3(
		$elm$core$List$foldl,
		F2(
			function (_v0, dict) {
				var key = _v0.a;
				var value = _v0.b;
				return A3($elm$core$Dict$insert, key, value, dict);
			}),
		$elm$core$Dict$empty,
		assocs);
};
var $author$project$LanguageService$updateLanguageServiceState = F2(
	function (fileTree, state) {
		var compileFileCacheEntry = function (_v8) {
			var blobPath = _v8.a;
			var fileTreeBlob = _v8.b;
			var maybePreviousCached = A2($elm$core$Dict$get, blobPath, state.documentCache);
			var buildNewEntry = function (_v7) {
				var textContent = function () {
					var _v5 = fileTreeBlob.asText;
					if (_v5.$ === 'Nothing') {
						return $elm$core$Maybe$Nothing;
					} else {
						var asString = _v5.a;
						var parsedFile = function () {
							var _v6 = $stil4m$elm_syntax$Elm$Parser$parseToFile(asString);
							if (_v6.$ === 'Err') {
								return $elm$core$Maybe$Nothing;
							} else {
								var syntax = _v6.a;
								return $elm$core$Maybe$Just(
									{
										completionItems: $author$project$LanguageService$completionItemsFromModule(
											{fileUri: blobPath, syntax: syntax, text: asString}),
										fileUri: blobPath,
										syntax: syntax,
										text: asString
									});
							}
						}();
						return $elm$core$Maybe$Just(
							{parsedFile: parsedFile, text: asString});
					}
				}();
				var parsedFileFromPreviouslyCached = function () {
					if (maybePreviousCached.$ === 'Nothing') {
						return $elm$core$Maybe$Nothing;
					} else {
						var previousCached = maybePreviousCached.a;
						return previousCached.parsedFileLastSuccess;
					}
				}();
				return {
					parsedFileLastSuccess: function () {
						if (textContent.$ === 'Nothing') {
							return parsedFileFromPreviouslyCached;
						} else {
							var fromTextContent = textContent.a;
							var _v3 = fromTextContent.parsedFile;
							if (_v3.$ === 'Nothing') {
								return parsedFileFromPreviouslyCached;
							} else {
								var parsedFile = _v3.a;
								return $elm$core$Maybe$Just(parsedFile);
							}
						}
					}(),
					sourceBase64: fileTreeBlob.asBase64,
					textContent: textContent
				};
			};
			if (maybePreviousCached.$ === 'Nothing') {
				return buildNewEntry(_Utils_Tuple0);
			} else {
				var previousCached = maybePreviousCached.a;
				return _Utils_eq(previousCached.sourceBase64, fileTreeBlob.asBase64) ? previousCached : buildNewEntry(_Utils_Tuple0);
			}
		};
		var documentCache = $elm$core$Dict$fromList(
			A2(
				$elm$core$List$map,
				function (_v0) {
					var filePath = _v0.a;
					var fileContent = _v0.b;
					var filePathFlat = A2($elm$core$String$join, '/', filePath);
					return _Utils_Tuple2(
						filePathFlat,
						compileFileCacheEntry(
							_Utils_Tuple2(filePathFlat, fileContent)));
				},
				$author$project$FileTree$flatListOfBlobsFromFileTreeNode(fileTree)));
		return _Utils_update(
			state,
			{documentCache: documentCache});
	});
var $author$project$LanguageService$handleRequest = F2(
	function (requestInWorkspace, stateBefore) {
		var languageServiceState = A2($author$project$LanguageService$updateLanguageServiceState, requestInWorkspace.workspace, stateBefore);
		return A2($author$project$LanguageService$handleRequestInCurrentWorkspace, requestInWorkspace.request, languageServiceState);
	});
var $author$project$FileTree$BlobNode = function (a) {
	return {$: 'BlobNode', a: a};
};
var $author$project$FileTree$TreeNode = function (a) {
	return {$: 'TreeNode', a: a};
};
var $elm$json$Json$Decode$field = _Json_decodeField;
var $elm$json$Json$Decode$index = _Json_decodeIndex;
var $elm$json$Json$Decode$list = _Json_decodeList;
var $author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode__generic_List = $elm$json$Json$Decode$list;
var $elm$json$Json$Decode$andThen = _Json_andThen;
var $elm$json$Json$Decode$lazy = function (thunk) {
	return A2(
		$elm$json$Json$Decode$andThen,
		thunk,
		$elm$json$Json$Decode$succeed(_Utils_Tuple0));
};
var $elm$json$Json$Decode$map = _Json_map1;
var $elm$json$Json$Decode$map2 = _Json_map2;
var $elm$json$Json$Decode$oneOf = _Json_oneOf;
var $elm$json$Json$Decode$string = _Json_decodeString;
var $author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_FileTree_FileTreeNode = function (jsonDecode_type_parameter_blobStructure) {
	return $elm$json$Json$Decode$oneOf(
		_List_fromArray(
			[
				A2(
				$elm$json$Json$Decode$field,
				'BlobNode',
				$elm$json$Json$Decode$lazy(
					function (_v0) {
						return A2(
							$elm$json$Json$Decode$map,
							$author$project$FileTree$BlobNode,
							A2($elm$json$Json$Decode$index, 0, jsonDecode_type_parameter_blobStructure));
					})),
				A2(
				$elm$json$Json$Decode$field,
				'TreeNode',
				$elm$json$Json$Decode$lazy(
					function (_v1) {
						return A2(
							$elm$json$Json$Decode$map,
							$author$project$FileTree$TreeNode,
							A2(
								$elm$json$Json$Decode$index,
								0,
								$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode__generic_List(
									A3(
										$elm$json$Json$Decode$map2,
										F2(
											function (item_0, item_1) {
												return _Utils_Tuple2(item_0, item_1);
											}),
										A2($elm$json$Json$Decode$index, 0, $elm$json$Json$Decode$string),
										A2(
											$elm$json$Json$Decode$index,
											1,
											$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_FileTree_FileTreeNode(jsonDecode_type_parameter_blobStructure))))));
					}))
			]));
};
var $author$project$LanguageServiceInterface$AddElmPackageVersionRequest = F2(
	function (a, b) {
		return {$: 'AddElmPackageVersionRequest', a: a, b: b};
	});
var $author$project$LanguageServiceInterface$AddWorkspaceFileRequest = F2(
	function (a, b) {
		return {$: 'AddWorkspaceFileRequest', a: a, b: b};
	});
var $author$project$LanguageServiceInterface$DeleteWorkspaceFileRequest = function (a) {
	return {$: 'DeleteWorkspaceFileRequest', a: a};
};
var $author$project$LanguageServiceInterface$ProvideCompletionItemsRequest = function (a) {
	return {$: 'ProvideCompletionItemsRequest', a: a};
};
var $author$project$LanguageServiceInterface$ProvideDefinitionRequest = function (a) {
	return {$: 'ProvideDefinitionRequest', a: a};
};
var $author$project$LanguageServiceInterface$ProvideHoverRequest = function (a) {
	return {$: 'ProvideHoverRequest', a: a};
};
var $author$project$LanguageServiceInterface$TextDocumentReferencesRequest = function (a) {
	return {$: 'TextDocumentReferencesRequest', a: a};
};
var $author$project$LanguageServiceInterface$TextDocumentRenameRequest = function (a) {
	return {$: 'TextDocumentRenameRequest', a: a};
};
var $author$project$LanguageServiceInterface$TextDocumentSymbolRequest = function (a) {
	return {$: 'TextDocumentSymbolRequest', a: a};
};
var $elm$json$Json$Decode$int = _Json_decodeInt;
var $author$project$LanguageServiceInterface$ElmPackageVersion019Identifer = F2(
	function (a, b) {
		return {$: 'ElmPackageVersion019Identifer', a: a, b: b};
	});
var $author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_LanguageServiceInterface_ElmPackageVersionIdentifer = $elm$json$Json$Decode$oneOf(
	_List_fromArray(
		[
			A2(
			$elm$json$Json$Decode$field,
			'ElmPackageVersion019Identifer',
			$elm$json$Json$Decode$lazy(
				function (_v0) {
					return A3(
						$elm$json$Json$Decode$map2,
						$author$project$LanguageServiceInterface$ElmPackageVersion019Identifer,
						A2($elm$json$Json$Decode$index, 0, $elm$json$Json$Decode$string),
						A2($elm$json$Json$Decode$index, 1, $elm$json$Json$Decode$string));
				}))
		]));
var $author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_LanguageServiceInterface_FileLocation = $elm$json$Json$Decode$oneOf(
	_List_fromArray(
		[
			A2(
			$elm$json$Json$Decode$field,
			'ElmPackageFileLocation',
			$elm$json$Json$Decode$lazy(
				function (_v0) {
					return A3(
						$elm$json$Json$Decode$map2,
						$author$project$LanguageServiceInterface$ElmPackageFileLocation,
						A2($elm$json$Json$Decode$index, 0, $author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_LanguageServiceInterface_ElmPackageVersionIdentifer),
						A2(
							$elm$json$Json$Decode$index,
							1,
							$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode__generic_List($elm$json$Json$Decode$string)));
				})),
			A2(
			$elm$json$Json$Decode$field,
			'WorkspaceFileLocation',
			$elm$json$Json$Decode$lazy(
				function (_v1) {
					return A2(
						$elm$json$Json$Decode$map,
						$author$project$LanguageServiceInterface$WorkspaceFileLocation,
						A2($elm$json$Json$Decode$index, 0, $elm$json$Json$Decode$string));
				}))
		]));
var $elm$json$Json$Decode$null = _Json_decodeNull;
var $author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode__generic_Maybe = function (decoder) {
	return $elm$json$Json$Decode$oneOf(
		_List_fromArray(
			[
				A2(
				$elm$json$Json$Decode$field,
				'Nothing',
				$elm$json$Json$Decode$succeed($elm$core$Maybe$Nothing)),
				A2(
				$elm$json$Json$Decode$field,
				'Just',
				A2(
					$elm$json$Json$Decode$map,
					$elm$core$Maybe$Just,
					A2($elm$json$Json$Decode$index, 0, decoder))),
				A2(
				$elm$json$Json$Decode$field,
				'Just',
				A2($elm$json$Json$Decode$map, $elm$core$Maybe$Just, decoder)),
				$elm$json$Json$Decode$null($elm$core$Maybe$Nothing)
			]));
};
var $author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap = $elm$json$Json$Decode$map2($elm$core$Basics$apR);
var $author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames = F3(
	function (fieldName, alternateNames, decoder) {
		return $elm$json$Json$Decode$oneOf(
			A2(
				$elm$core$List$map,
				function (name) {
					return A2($elm$json$Json$Decode$field, name, decoder);
				},
				A2($elm$core$List$cons, fieldName, alternateNames)));
	});
var $author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_LanguageServiceInterface_Request = $elm$json$Json$Decode$oneOf(
	_List_fromArray(
		[
			A2(
			$elm$json$Json$Decode$field,
			'AddElmPackageVersionRequest',
			$elm$json$Json$Decode$lazy(
				function (_v0) {
					return A3(
						$elm$json$Json$Decode$map2,
						$author$project$LanguageServiceInterface$AddElmPackageVersionRequest,
						A2($elm$json$Json$Decode$index, 0, $author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_LanguageServiceInterface_ElmPackageVersionIdentifer),
						A2(
							$elm$json$Json$Decode$index,
							1,
							$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode__generic_List(
								A3(
									$elm$json$Json$Decode$map2,
									F2(
										function (item_0, item_1) {
											return _Utils_Tuple2(item_0, item_1);
										}),
									A2(
										$elm$json$Json$Decode$index,
										0,
										$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode__generic_List($elm$json$Json$Decode$string)),
									A2(
										$elm$json$Json$Decode$index,
										1,
										A2(
											$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
											A3(
												$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
												'asText',
												_List_fromArray(
													['AsText']),
												$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode__generic_Maybe($elm$json$Json$Decode$string)),
											A2(
												$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
												A3(
													$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
													'asBase64',
													_List_fromArray(
														['AsBase64']),
													$elm$json$Json$Decode$string),
												$elm$json$Json$Decode$succeed(
													F2(
														function (asBase64, asText) {
															return {asBase64: asBase64, asText: asText};
														})))))))));
				})),
			A2(
			$elm$json$Json$Decode$field,
			'AddWorkspaceFileRequest',
			$elm$json$Json$Decode$lazy(
				function (_v1) {
					return A3(
						$elm$json$Json$Decode$map2,
						$author$project$LanguageServiceInterface$AddWorkspaceFileRequest,
						A2($elm$json$Json$Decode$index, 0, $elm$json$Json$Decode$string),
						A2(
							$elm$json$Json$Decode$index,
							1,
							A2(
								$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
								A3(
									$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
									'asText',
									_List_fromArray(
										['AsText']),
									$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode__generic_Maybe($elm$json$Json$Decode$string)),
								A2(
									$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
									A3(
										$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
										'asBase64',
										_List_fromArray(
											['AsBase64']),
										$elm$json$Json$Decode$string),
									$elm$json$Json$Decode$succeed(
										F2(
											function (asBase64, asText) {
												return {asBase64: asBase64, asText: asText};
											}))))));
				})),
			A2(
			$elm$json$Json$Decode$field,
			'DeleteWorkspaceFileRequest',
			$elm$json$Json$Decode$lazy(
				function (_v2) {
					return A2(
						$elm$json$Json$Decode$map,
						$author$project$LanguageServiceInterface$DeleteWorkspaceFileRequest,
						A2($elm$json$Json$Decode$index, 0, $elm$json$Json$Decode$string));
				})),
			A2(
			$elm$json$Json$Decode$field,
			'ProvideCompletionItemsRequest',
			$elm$json$Json$Decode$lazy(
				function (_v3) {
					return A2(
						$elm$json$Json$Decode$map,
						$author$project$LanguageServiceInterface$ProvideCompletionItemsRequest,
						A2(
							$elm$json$Json$Decode$index,
							0,
							A2(
								$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
								A3(
									$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
									'cursorColumn',
									_List_fromArray(
										['CursorColumn']),
									$elm$json$Json$Decode$int),
								A2(
									$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
									A3(
										$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
										'cursorLineNumber',
										_List_fromArray(
											['CursorLineNumber']),
										$elm$json$Json$Decode$int),
									A2(
										$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
										A3(
											$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
											'filePathOpenedInEditor',
											_List_fromArray(
												['FilePathOpenedInEditor']),
											$elm$json$Json$Decode$string),
										$elm$json$Json$Decode$succeed(
											F3(
												function (filePathOpenedInEditor, cursorLineNumber, cursorColumn) {
													return {cursorColumn: cursorColumn, cursorLineNumber: cursorLineNumber, filePathOpenedInEditor: filePathOpenedInEditor};
												})))))));
				})),
			A2(
			$elm$json$Json$Decode$field,
			'ProvideDefinitionRequest',
			$elm$json$Json$Decode$lazy(
				function (_v4) {
					return A2(
						$elm$json$Json$Decode$map,
						$author$project$LanguageServiceInterface$ProvideDefinitionRequest,
						A2(
							$elm$json$Json$Decode$index,
							0,
							A2(
								$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
								A3(
									$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
									'positionColumn',
									_List_fromArray(
										['PositionColumn']),
									$elm$json$Json$Decode$int),
								A2(
									$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
									A3(
										$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
										'positionLineNumber',
										_List_fromArray(
											['PositionLineNumber']),
										$elm$json$Json$Decode$int),
									A2(
										$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
										A3(
											$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
											'fileLocation',
											_List_fromArray(
												['FileLocation']),
											$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_LanguageServiceInterface_FileLocation),
										$elm$json$Json$Decode$succeed(
											F3(
												function (fileLocation, positionLineNumber, positionColumn) {
													return {fileLocation: fileLocation, positionColumn: positionColumn, positionLineNumber: positionLineNumber};
												})))))));
				})),
			A2(
			$elm$json$Json$Decode$field,
			'ProvideHoverRequest',
			$elm$json$Json$Decode$lazy(
				function (_v5) {
					return A2(
						$elm$json$Json$Decode$map,
						$author$project$LanguageServiceInterface$ProvideHoverRequest,
						A2(
							$elm$json$Json$Decode$index,
							0,
							A2(
								$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
								A3(
									$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
									'positionColumn',
									_List_fromArray(
										['PositionColumn']),
									$elm$json$Json$Decode$int),
								A2(
									$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
									A3(
										$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
										'positionLineNumber',
										_List_fromArray(
											['PositionLineNumber']),
										$elm$json$Json$Decode$int),
									A2(
										$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
										A3(
											$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
											'fileLocation',
											_List_fromArray(
												['FileLocation']),
											$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_LanguageServiceInterface_FileLocation),
										$elm$json$Json$Decode$succeed(
											F3(
												function (fileLocation, positionLineNumber, positionColumn) {
													return {fileLocation: fileLocation, positionColumn: positionColumn, positionLineNumber: positionLineNumber};
												})))))));
				})),
			A2(
			$elm$json$Json$Decode$field,
			'TextDocumentReferencesRequest',
			$elm$json$Json$Decode$lazy(
				function (_v6) {
					return A2(
						$elm$json$Json$Decode$map,
						$author$project$LanguageServiceInterface$TextDocumentReferencesRequest,
						A2(
							$elm$json$Json$Decode$index,
							0,
							A2(
								$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
								A3(
									$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
									'positionColumn',
									_List_fromArray(
										['PositionColumn']),
									$elm$json$Json$Decode$int),
								A2(
									$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
									A3(
										$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
										'positionLineNumber',
										_List_fromArray(
											['PositionLineNumber']),
										$elm$json$Json$Decode$int),
									A2(
										$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
										A3(
											$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
											'fileLocation',
											_List_fromArray(
												['FileLocation']),
											$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_LanguageServiceInterface_FileLocation),
										$elm$json$Json$Decode$succeed(
											F3(
												function (fileLocation, positionLineNumber, positionColumn) {
													return {fileLocation: fileLocation, positionColumn: positionColumn, positionLineNumber: positionLineNumber};
												})))))));
				})),
			A2(
			$elm$json$Json$Decode$field,
			'TextDocumentRenameRequest',
			$elm$json$Json$Decode$lazy(
				function (_v7) {
					return A2(
						$elm$json$Json$Decode$map,
						$author$project$LanguageServiceInterface$TextDocumentRenameRequest,
						A2(
							$elm$json$Json$Decode$index,
							0,
							A2(
								$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
								A3(
									$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
									'newName',
									_List_fromArray(
										['NewName']),
									$elm$json$Json$Decode$string),
								A2(
									$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
									A3(
										$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
										'positionColumn',
										_List_fromArray(
											['PositionColumn']),
										$elm$json$Json$Decode$int),
									A2(
										$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
										A3(
											$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
											'positionLineNumber',
											_List_fromArray(
												['PositionLineNumber']),
											$elm$json$Json$Decode$int),
										A2(
											$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
											A3(
												$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
												'filePath',
												_List_fromArray(
													['FilePath']),
												$elm$json$Json$Decode$string),
											$elm$json$Json$Decode$succeed(
												F4(
													function (filePath, positionLineNumber, positionColumn, newName) {
														return {filePath: filePath, newName: newName, positionColumn: positionColumn, positionLineNumber: positionLineNumber};
													}))))))));
				})),
			A2(
			$elm$json$Json$Decode$field,
			'TextDocumentSymbolRequest',
			$elm$json$Json$Decode$lazy(
				function (_v8) {
					return A2(
						$elm$json$Json$Decode$map,
						$author$project$LanguageServiceInterface$TextDocumentSymbolRequest,
						A2($elm$json$Json$Decode$index, 0, $elm$json$Json$Decode$string));
				}))
		]));
var $author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_423741305 = A2(
	$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
	A3(
		$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
		'id',
		_List_fromArray(
			['Id']),
		$elm$json$Json$Decode$string),
	A2(
		$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
		A3(
			$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
			'request',
			_List_fromArray(
				['Request']),
			A2(
				$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
				A3(
					$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
					'request',
					_List_fromArray(
						['Request']),
					$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_LanguageServiceInterface_Request),
				A2(
					$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
					A3(
						$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
						'workspace',
						_List_fromArray(
							['Workspace']),
						$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_FileTree_FileTreeNode(
							A2(
								$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
								A3(
									$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
									'asText',
									_List_fromArray(
										['AsText']),
									$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode__generic_Maybe($elm$json$Json$Decode$string)),
								A2(
									$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_andMap,
									A3(
										$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_field_withAlternateNames,
										'asBase64',
										_List_fromArray(
											['AsBase64']),
										$elm$json$Json$Decode$string),
									$elm$json$Json$Decode$succeed(
										F2(
											function (asBase64, asText) {
												return {asBase64: asBase64, asText: asText};
											})))))),
					$elm$json$Json$Decode$succeed(
						F2(
							function (workspace, request) {
								return {request: request, workspace: workspace};
							}))))),
		$elm$json$Json$Decode$succeed(
			F2(
				function (request, id) {
					return {id: id, request: request};
				}))));
var $author$project$CompilationInterface$GenerateJsonConverters$jsonDecodeLanguageServiceRequestInWorkspace = $author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonDecode_423741305;
var $elm$json$Json$Encode$int = _Json_wrap;
var $elm$json$Json$Encode$list = F2(
	function (func, entries) {
		return _Json_wrap(
			A3(
				$elm$core$List$foldl,
				_Json_addEntry(func),
				_Json_emptyArray(_Utils_Tuple0),
				entries));
	});
var $elm$json$Json$Encode$object = function (pairs) {
	return _Json_wrap(
		A3(
			$elm$core$List$foldl,
			F2(
				function (_v0, obj) {
					var k = _v0.a;
					var v = _v0.b;
					return A3(_Json_addField, k, v, obj);
				}),
			_Json_emptyObject(_Utils_Tuple0),
			pairs));
};
var $author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonEncode_Frontend_MonacoEditor_CompletionItemKind = function (valueToEncode) {
	switch (valueToEncode.$) {
		case 'ConstructorCompletionItemKind':
			return $elm$json$Json$Encode$object(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'ConstructorCompletionItemKind',
						A2($elm$json$Json$Encode$list, $elm$core$Basics$identity, _List_Nil))
					]));
		case 'EnumCompletionItemKind':
			return $elm$json$Json$Encode$object(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'EnumCompletionItemKind',
						A2($elm$json$Json$Encode$list, $elm$core$Basics$identity, _List_Nil))
					]));
		case 'EnumMemberCompletionItemKind':
			return $elm$json$Json$Encode$object(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'EnumMemberCompletionItemKind',
						A2($elm$json$Json$Encode$list, $elm$core$Basics$identity, _List_Nil))
					]));
		case 'FunctionCompletionItemKind':
			return $elm$json$Json$Encode$object(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'FunctionCompletionItemKind',
						A2($elm$json$Json$Encode$list, $elm$core$Basics$identity, _List_Nil))
					]));
		case 'ModuleCompletionItemKind':
			return $elm$json$Json$Encode$object(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'ModuleCompletionItemKind',
						A2($elm$json$Json$Encode$list, $elm$core$Basics$identity, _List_Nil))
					]));
		default:
			return $elm$json$Json$Encode$object(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'StructCompletionItemKind',
						A2($elm$json$Json$Encode$list, $elm$core$Basics$identity, _List_Nil))
					]));
	}
};
var $author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonEncode_LanguageServiceInterface_SymbolKind = function (valueToEncode) {
	switch (valueToEncode.$) {
		case 'SymbolKind_Array':
			return $elm$json$Json$Encode$object(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'SymbolKind_Array',
						A2($elm$json$Json$Encode$list, $elm$core$Basics$identity, _List_Nil))
					]));
		case 'SymbolKind_Boolean':
			return $elm$json$Json$Encode$object(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'SymbolKind_Boolean',
						A2($elm$json$Json$Encode$list, $elm$core$Basics$identity, _List_Nil))
					]));
		case 'SymbolKind_Class':
			return $elm$json$Json$Encode$object(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'SymbolKind_Class',
						A2($elm$json$Json$Encode$list, $elm$core$Basics$identity, _List_Nil))
					]));
		case 'SymbolKind_Constant':
			return $elm$json$Json$Encode$object(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'SymbolKind_Constant',
						A2($elm$json$Json$Encode$list, $elm$core$Basics$identity, _List_Nil))
					]));
		case 'SymbolKind_Enum':
			return $elm$json$Json$Encode$object(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'SymbolKind_Enum',
						A2($elm$json$Json$Encode$list, $elm$core$Basics$identity, _List_Nil))
					]));
		case 'SymbolKind_EnumMember':
			return $elm$json$Json$Encode$object(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'SymbolKind_EnumMember',
						A2($elm$json$Json$Encode$list, $elm$core$Basics$identity, _List_Nil))
					]));
		case 'SymbolKind_File':
			return $elm$json$Json$Encode$object(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'SymbolKind_File',
						A2($elm$json$Json$Encode$list, $elm$core$Basics$identity, _List_Nil))
					]));
		case 'SymbolKind_Function':
			return $elm$json$Json$Encode$object(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'SymbolKind_Function',
						A2($elm$json$Json$Encode$list, $elm$core$Basics$identity, _List_Nil))
					]));
		case 'SymbolKind_Interface':
			return $elm$json$Json$Encode$object(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'SymbolKind_Interface',
						A2($elm$json$Json$Encode$list, $elm$core$Basics$identity, _List_Nil))
					]));
		case 'SymbolKind_Module':
			return $elm$json$Json$Encode$object(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'SymbolKind_Module',
						A2($elm$json$Json$Encode$list, $elm$core$Basics$identity, _List_Nil))
					]));
		case 'SymbolKind_Namespace':
			return $elm$json$Json$Encode$object(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'SymbolKind_Namespace',
						A2($elm$json$Json$Encode$list, $elm$core$Basics$identity, _List_Nil))
					]));
		case 'SymbolKind_Number':
			return $elm$json$Json$Encode$object(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'SymbolKind_Number',
						A2($elm$json$Json$Encode$list, $elm$core$Basics$identity, _List_Nil))
					]));
		case 'SymbolKind_Package':
			return $elm$json$Json$Encode$object(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'SymbolKind_Package',
						A2($elm$json$Json$Encode$list, $elm$core$Basics$identity, _List_Nil))
					]));
		case 'SymbolKind_String':
			return $elm$json$Json$Encode$object(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'SymbolKind_String',
						A2($elm$json$Json$Encode$list, $elm$core$Basics$identity, _List_Nil))
					]));
		default:
			return $elm$json$Json$Encode$object(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'SymbolKind_Struct',
						A2($elm$json$Json$Encode$list, $elm$core$Basics$identity, _List_Nil))
					]));
	}
};
var $author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonEncode__generic_List = $elm$json$Json$Encode$list;
var $elm$json$Json$Encode$string = _Json_wrap;
var $author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonEncode_LanguageServiceInterface_DocumentSymbol = function (valueToEncode) {
	var tagArgument0 = valueToEncode.a;
	return $elm$json$Json$Encode$object(
		_List_fromArray(
			[
				_Utils_Tuple2(
				'DocumentSymbol',
				A2(
					$elm$json$Json$Encode$list,
					$elm$core$Basics$identity,
					_List_fromArray(
						[
							$elm$json$Json$Encode$object(
							_List_fromArray(
								[
									_Utils_Tuple2(
									'name',
									$elm$json$Json$Encode$string(tagArgument0.name)),
									_Utils_Tuple2(
									'kind',
									$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonEncode_LanguageServiceInterface_SymbolKind(tagArgument0.kind)),
									_Utils_Tuple2(
									'range',
									$elm$json$Json$Encode$object(
										_List_fromArray(
											[
												_Utils_Tuple2(
												'startLineNumber',
												$elm$json$Json$Encode$int(tagArgument0.range.startLineNumber)),
												_Utils_Tuple2(
												'startColumn',
												$elm$json$Json$Encode$int(tagArgument0.range.startColumn)),
												_Utils_Tuple2(
												'endLineNumber',
												$elm$json$Json$Encode$int(tagArgument0.range.endLineNumber)),
												_Utils_Tuple2(
												'endColumn',
												$elm$json$Json$Encode$int(tagArgument0.range.endColumn))
											]))),
									_Utils_Tuple2(
									'selectionRange',
									$elm$json$Json$Encode$object(
										_List_fromArray(
											[
												_Utils_Tuple2(
												'startLineNumber',
												$elm$json$Json$Encode$int(tagArgument0.selectionRange.startLineNumber)),
												_Utils_Tuple2(
												'startColumn',
												$elm$json$Json$Encode$int(tagArgument0.selectionRange.startColumn)),
												_Utils_Tuple2(
												'endLineNumber',
												$elm$json$Json$Encode$int(tagArgument0.selectionRange.endLineNumber)),
												_Utils_Tuple2(
												'endColumn',
												$elm$json$Json$Encode$int(tagArgument0.selectionRange.endColumn))
											]))),
									_Utils_Tuple2(
									'children',
									A2(
										$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonEncode__generic_List,
										function (type_arg) {
											return $author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonEncode_LanguageServiceInterface_DocumentSymbol(type_arg);
										},
										tagArgument0.children))
								]))
						])))
			]));
};
var $author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonEncode_LanguageServiceInterface_ElmPackageVersionIdentifer = function (valueToEncode) {
	var tagArgument0 = valueToEncode.a;
	var tagArgument1 = valueToEncode.b;
	return $elm$json$Json$Encode$object(
		_List_fromArray(
			[
				_Utils_Tuple2(
				'ElmPackageVersion019Identifer',
				A2(
					$elm$json$Json$Encode$list,
					$elm$core$Basics$identity,
					_List_fromArray(
						[
							$elm$json$Json$Encode$string(tagArgument0),
							$elm$json$Json$Encode$string(tagArgument1)
						])))
			]));
};
var $author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonEncode_LanguageServiceInterface_FileLocation = function (valueToEncode) {
	if (valueToEncode.$ === 'ElmPackageFileLocation') {
		var tagArgument0 = valueToEncode.a;
		var tagArgument1 = valueToEncode.b;
		return $elm$json$Json$Encode$object(
			_List_fromArray(
				[
					_Utils_Tuple2(
					'ElmPackageFileLocation',
					A2(
						$elm$json$Json$Encode$list,
						$elm$core$Basics$identity,
						_List_fromArray(
							[
								$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonEncode_LanguageServiceInterface_ElmPackageVersionIdentifer(tagArgument0),
								A2(
								$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonEncode__generic_List,
								function (type_arg) {
									return $elm$json$Json$Encode$string(type_arg);
								},
								tagArgument1)
							])))
				]));
	} else {
		var tagArgument0 = valueToEncode.a;
		return $elm$json$Json$Encode$object(
			_List_fromArray(
				[
					_Utils_Tuple2(
					'WorkspaceFileLocation',
					A2(
						$elm$json$Json$Encode$list,
						$elm$core$Basics$identity,
						_List_fromArray(
							[
								$elm$json$Json$Encode$string(tagArgument0)
							])))
				]));
	}
};
var $author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonEncode_LanguageServiceInterface_Response = function (valueToEncode) {
	switch (valueToEncode.$) {
		case 'ProvideCompletionItemsResponse':
			var tagArgument0 = valueToEncode.a;
			return $elm$json$Json$Encode$object(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'ProvideCompletionItemsResponse',
						A2(
							$elm$json$Json$Encode$list,
							$elm$core$Basics$identity,
							_List_fromArray(
								[
									A2(
									$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonEncode__generic_List,
									function (type_arg) {
										return $elm$json$Json$Encode$object(
											_List_fromArray(
												[
													_Utils_Tuple2(
													'label',
													$elm$json$Json$Encode$string(type_arg.label)),
													_Utils_Tuple2(
													'kind',
													$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonEncode_Frontend_MonacoEditor_CompletionItemKind(type_arg.kind)),
													_Utils_Tuple2(
													'documentation',
													$elm$json$Json$Encode$string(type_arg.documentation)),
													_Utils_Tuple2(
													'insertText',
													$elm$json$Json$Encode$string(type_arg.insertText))
												]));
									},
									tagArgument0)
								])))
					]));
		case 'ProvideDefinitionResponse':
			var tagArgument0 = valueToEncode.a;
			return $elm$json$Json$Encode$object(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'ProvideDefinitionResponse',
						A2(
							$elm$json$Json$Encode$list,
							$elm$core$Basics$identity,
							_List_fromArray(
								[
									A2(
									$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonEncode__generic_List,
									function (type_arg) {
										return $elm$json$Json$Encode$object(
											_List_fromArray(
												[
													_Utils_Tuple2(
													'fileLocation',
													$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonEncode_LanguageServiceInterface_FileLocation(type_arg.fileLocation)),
													_Utils_Tuple2(
													'range',
													$elm$json$Json$Encode$object(
														_List_fromArray(
															[
																_Utils_Tuple2(
																'startLineNumber',
																$elm$json$Json$Encode$int(type_arg.range.startLineNumber)),
																_Utils_Tuple2(
																'startColumn',
																$elm$json$Json$Encode$int(type_arg.range.startColumn)),
																_Utils_Tuple2(
																'endLineNumber',
																$elm$json$Json$Encode$int(type_arg.range.endLineNumber)),
																_Utils_Tuple2(
																'endColumn',
																$elm$json$Json$Encode$int(type_arg.range.endColumn))
															])))
												]));
									},
									tagArgument0)
								])))
					]));
		case 'ProvideHoverResponse':
			var tagArgument0 = valueToEncode.a;
			return $elm$json$Json$Encode$object(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'ProvideHoverResponse',
						A2(
							$elm$json$Json$Encode$list,
							$elm$core$Basics$identity,
							_List_fromArray(
								[
									A2(
									$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonEncode__generic_List,
									function (type_arg) {
										return $elm$json$Json$Encode$string(type_arg);
									},
									tagArgument0)
								])))
					]));
		case 'TextDocumentReferencesResponse':
			var tagArgument0 = valueToEncode.a;
			return $elm$json$Json$Encode$object(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'TextDocumentReferencesResponse',
						A2(
							$elm$json$Json$Encode$list,
							$elm$core$Basics$identity,
							_List_fromArray(
								[
									A2(
									$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonEncode__generic_List,
									function (type_arg) {
										return $elm$json$Json$Encode$object(
											_List_fromArray(
												[
													_Utils_Tuple2(
													'fileLocation',
													$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonEncode_LanguageServiceInterface_FileLocation(type_arg.fileLocation)),
													_Utils_Tuple2(
													'range',
													$elm$json$Json$Encode$object(
														_List_fromArray(
															[
																_Utils_Tuple2(
																'startLineNumber',
																$elm$json$Json$Encode$int(type_arg.range.startLineNumber)),
																_Utils_Tuple2(
																'startColumn',
																$elm$json$Json$Encode$int(type_arg.range.startColumn)),
																_Utils_Tuple2(
																'endLineNumber',
																$elm$json$Json$Encode$int(type_arg.range.endLineNumber)),
																_Utils_Tuple2(
																'endColumn',
																$elm$json$Json$Encode$int(type_arg.range.endColumn))
															])))
												]));
									},
									tagArgument0)
								])))
					]));
		case 'TextDocumentRenameResponse':
			var tagArgument0 = valueToEncode.a;
			return $elm$json$Json$Encode$object(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'TextDocumentRenameResponse',
						A2(
							$elm$json$Json$Encode$list,
							$elm$core$Basics$identity,
							_List_fromArray(
								[
									A2(
									$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonEncode__generic_List,
									function (type_arg) {
										return $elm$json$Json$Encode$object(
											_List_fromArray(
												[
													_Utils_Tuple2(
													'filePath',
													$elm$json$Json$Encode$string(type_arg.filePath)),
													_Utils_Tuple2(
													'edits',
													A2(
														$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonEncode__generic_List,
														function (type_arg_) {
															return $elm$json$Json$Encode$object(
																_List_fromArray(
																	[
																		_Utils_Tuple2(
																		'range',
																		$elm$json$Json$Encode$object(
																			_List_fromArray(
																				[
																					_Utils_Tuple2(
																					'startLineNumber',
																					$elm$json$Json$Encode$int(type_arg_.range.startLineNumber)),
																					_Utils_Tuple2(
																					'startColumn',
																					$elm$json$Json$Encode$int(type_arg_.range.startColumn)),
																					_Utils_Tuple2(
																					'endLineNumber',
																					$elm$json$Json$Encode$int(type_arg_.range.endLineNumber)),
																					_Utils_Tuple2(
																					'endColumn',
																					$elm$json$Json$Encode$int(type_arg_.range.endColumn))
																				]))),
																		_Utils_Tuple2(
																		'newText',
																		$elm$json$Json$Encode$string(type_arg_.newText))
																	]));
														},
														type_arg.edits))
												]));
									},
									tagArgument0)
								])))
					]));
		case 'TextDocumentSymbolResponse':
			var tagArgument0 = valueToEncode.a;
			return $elm$json$Json$Encode$object(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'TextDocumentSymbolResponse',
						A2(
							$elm$json$Json$Encode$list,
							$elm$core$Basics$identity,
							_List_fromArray(
								[
									A2(
									$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonEncode__generic_List,
									function (type_arg) {
										return $author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonEncode_LanguageServiceInterface_DocumentSymbol(type_arg);
									},
									tagArgument0)
								])))
					]));
		default:
			return $elm$json$Json$Encode$object(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'WorkspaceSummaryResponse',
						A2($elm$json$Json$Encode$list, $elm$core$Basics$identity, _List_Nil))
					]));
	}
};
var $author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonEncode__generic_Result = F3(
	function (encodeErr, encodeOk, valueToEncode) {
		if (valueToEncode.$ === 'Err') {
			var valueToEncodeError = valueToEncode.a;
			return $elm$json$Json$Encode$object(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'Err',
						A2(
							$elm$json$Json$Encode$list,
							encodeErr,
							_List_fromArray(
								[valueToEncodeError])))
					]));
		} else {
			var valueToEncodeOk = valueToEncode.a;
			return $elm$json$Json$Encode$object(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'Ok',
						A2(
							$elm$json$Json$Encode$list,
							encodeOk,
							_List_fromArray(
								[valueToEncodeOk])))
					]));
		}
	});
var $author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonEncode_3746757247 = function (valueToEncode) {
	return $elm$json$Json$Encode$object(
		_List_fromArray(
			[
				_Utils_Tuple2(
				'response',
				A3(
					$author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonEncode__generic_Result,
					function (type_arg) {
						return $elm$json$Json$Encode$string(type_arg);
					},
					function (type_arg) {
						return $author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonEncode_LanguageServiceInterface_Response(type_arg);
					},
					valueToEncode.response)),
				_Utils_Tuple2(
				'requestId',
				$elm$json$Json$Encode$string(valueToEncode.requestId))
			]));
};
var $author$project$CompilationInterface$GenerateJsonConverters$jsonEncodeLanguageServiceResponse = $author$project$CompilationInterface$GenerateJsonConverters$Generated_JsonConverters$jsonEncode_3746757247;
var $author$project$LanguageServiceWorker$sendResponse = _Platform_outgoingPort('sendResponse', $elm$core$Basics$identity);
var $author$project$LanguageServiceWorker$sendResponseCmd = function (response) {
	return $author$project$LanguageServiceWorker$sendResponse(
		$author$project$CompilationInterface$GenerateJsonConverters$jsonEncodeLanguageServiceResponse(response));
};
var $author$project$LanguageServiceWorker$update = F2(
	function (event, stateBefore) {
		var requestJson = event.a;
		var _v1 = A2($elm$json$Json$Decode$decodeValue, $author$project$CompilationInterface$GenerateJsonConverters$jsonDecodeLanguageServiceRequestInWorkspace, requestJson);
		if (_v1.$ === 'Err') {
			return _Utils_Tuple2(stateBefore, $elm$core$Platform$Cmd$none);
		} else {
			var requestInWorkspace = _v1.a;
			var _v2 = A2($author$project$LanguageService$handleRequest, requestInWorkspace.request, stateBefore);
			var result = _v2.a;
			var state = _v2.b;
			return _Utils_Tuple2(
				state,
				$author$project$LanguageServiceWorker$sendResponseCmd(
					{requestId: requestInWorkspace.id, response: result}));
		}
	});
var $elm$core$Platform$worker = _Platform_worker;
var $author$project$LanguageServiceWorker$main = $elm$core$Platform$worker(
	{init: $author$project$LanguageServiceWorker$init, subscriptions: $author$project$LanguageServiceWorker$subscriptions, update: $author$project$LanguageServiceWorker$update});
_Platform_export({'LanguageServiceWorker':{'init':$author$project$LanguageServiceWorker$main(
	$elm$json$Json$Decode$succeed(_Utils_Tuple0))(0)}});}(this));" }